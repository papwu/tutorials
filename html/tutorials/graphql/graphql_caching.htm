<!DOCTYPE html>
<html lang="en-US">
<head>
<title>GraphQL - Caching - Tutorialspoint</title>
<meta charset="utf-8">
<meta name="description" content="GraphQL - Caching - Caching is the process of storing data in a temporary storage area calledÂ cache. When you return to a page you've recently visited, the browser can get those"/>
<meta name="keywords" content="C, C++, Python, Java, HTML, CSS, JavaScript, SQL, PHP, jQuery, XML, DOM, Bootstrap, Tutorials, Articles, Programming, training, learning, quiz, preferences, examples, code"/>
<link rel="canonical" href="https://www.tutorialspoint.com/graphql/graphql_caching.htm" />
<link rel="shortcut icon" href="/favicon.ico" type="image/x-icon" />
<meta name="viewport" content="width=device-width,initial-scale=1.0,user-scalable=yes">
<script src="/theme/js/script-min-v2.js?v=3"></script>
<link rel="stylesheet" href="/theme/css/style-min-v2.css?v=6">
<script src="//services.bilsyndication.com/adv1/?d=901" defer="" async=""></script>
<script> var vitag = vitag || {};</script>
<script> vitag.outStreamConfig = { enablePC: false, enableMobile: false };</script>  
<style>
.right-menu .mui-btn {
    background-color:#e535ab;
}
a.demo {
    background:#e535ab;
}
li.heading {
    background:#e535ab;
}
.course-box{background:#e535ab}
.home-intro-sub p{color:#e535ab}
</style>
</head>
<body>
<header id="header">
<!-- Top sub-menu Starts Here -->
<div class="mui-appbar mui-container-fulid top-menu">
<div class="mui-container">
<div class="top-menu-item home">
<a href="https://www.tutorialspoint.com/index.htm" target="_blank" title="TutorialsPoint - Home"><i class="fal fa-home"></i> <span>Home</span></a>
</div>
<div class="top-menu-item qa">
<a href="https://www.tutorialspoint.com/about/about_careers.htm" target="_blank" title="Job @ Tutorials Point"><i class="fa fa-suitcase"></i> <span>Jobs</span></a>
</div>
<div class="top-menu-item tools">
<a href="https://www.tutorialspoint.com/online_dev_tools.htm" target="_blank" title="Tools - Online Development and Testing Tools"><i class="fal fa-cogs"></i> <span>Tools</span></a>
</div>
<div class="top-menu-item coding-ground">
<a href="https://www.tutorialspoint.com/codingground.htm" target="_blank" title="Coding Ground - Free Online IDE and Terminal"><i class="fal fa-code"></i> <span>Coding Ground </span></a> 
</div>
<div class="top-menu-item current-affairs">
<a href="https://www.tutorialspoint.com/current_affairs.htm" target="_blank" title="Daily Current Affairs"><i class="fal fa-layer-plus"></i> <span>Current Affairs</span></a>
</div>
<div class="top-menu-item upsc-notes">
<a href="https://www.tutorialspoint.com/upsc_ias_exams.htm" target="_blank" title="UPSC IAS Exams Notes - TutorialsPoint"><i class="fal fa-user-tie"></i> <span>UPSC Notes</span></a>
</div>      
<div class="top-menu-item online-tutoris">
<a href="https://www.tutorialspoint.com/tutor_connect/index.php" target="_blank" title="Top Online Tutors - Tutor Connect"><i class="fal fa-user"></i> <span>Online Tutors</span></a>
</div>
<div class="top-menu-item whiteboard">
<a href="https://www.tutorialspoint.com/whiteboard.htm" target="_blank" title="Free Online Whiteboard"><i class="fal fa-chalkboard"></i> <span>Whiteboard</span></a>
</div>
<div class="top-menu-item net-meeting">
<a href="https://www.tutorialspoint.com/netmeeting.php" target="_blank" title="A free tool for online video conferencing"><i class="fal fa-chalkboard-teacher"></i> <span>Net Meeting</span></a> 
</div>
<div class="top-menu-item articles">
<a href="https://www.tutorix.com" target="_blank" title="Tutorx - The Best Learning App" rel="nofollow"><i class="fal fa-video"></i> <span>Tutorix</span></a> 
</div>        
<div class="social-menu-item">
<a href="https://www.facebook.com/tutorialspointindia" target="_blank" rel="nofollow" data-placement="bottom" title="tutorialspoint @ Facebook"><i class="fab fa-facebook-f"></i></a> 
<a href="https://www.twitter.com/tutorialspoint" target="_blank" rel="nofollow" data-placement="bottom" title="tutorialspoint @ Twitter"><i class="fab fa-twitter"></i></a>
<a href="https://www.linkedin.com/company/tutorialspoint" target="_blank" rel="nofollow" data-placement="bottom" title="tutorialspoint @ Linkedin"><i class="fab fa-linkedin-in"></i></a>
<a href="https://www.youtube.com/channel/UCVLbzhxVTiTLiVKeGV7WEBg" target="_blank" rel="nofollow" data-placement="bottom" title="tutorialspoint YouTube"><i class="fab fa-youtube"></i></a>
</div>        
</div>
</div>
<!-- Top sub-menu Ends Here -->
<!-- Top main-menu Starts Here -->
<div class="mui-appbar mui-container-fulid mui--appbar-line-height mui--z1" id="logo-menu">
<div class="mui-container">
<div class="left-menu">
<a href="https://www.tutorialspoint.com/index.htm" title="Tutorialspoint">
<img class="tp-logo" alt="tutorialspoint" src="/graphql/images/logo.png">
</a>
<div class="mui-dropdown">
<a class="mui-btn mui-btn--primary categories" data-mui-toggle="dropdown"><i class="fa fa-th-large"></i> 
<span>Categories <span class="mui-caret"></span></span></a>            
<ul class="mui-dropdown__menu cat-menu">
<li>
<ul>
<li><a href="/academic_tutorials.htm"><i class="fa fa-caret-right"></i> Academic Tutorials</a></li>
<li><a href="/big_data_tutorials.htm"><i class="fa fa-caret-right"></i> Big Data &amp; Analytics </a></li>
<li><a href="/computer_programming_tutorials.htm"><i class="fa fa-caret-right"></i> Computer Programming </a></li>
<li><a href="/computer_science_tutorials.htm"><i class="fa fa-caret-right"></i> Computer Science </a></li>
<li><a href="/database_tutorials.htm"><i class="fa fa-caret-right"></i> Databases </a></li>
<li><a href="/devops_tutorials.htm"><i class="fa fa-caret-right"></i> DevOps </a></li>
<li><a href="/digital_marketing_tutorials.htm"><i class="fa fa-caret-right"></i> Digital Marketing </a></li>
<li><a href="/engineering_tutorials.htm"><i class="fa fa-caret-right"></i> Engineering Tutorials </a></li>
<li><a href="/upsc_ias_exams.htm"><i class="fa fa-caret-right"></i> Exams Syllabus </a></li>
<li><a href="/famous_monuments.htm"><i class="fa fa-caret-right"></i> Famous Monuments </a></li>
<li><a href="/gate_exams_tutorials.htm"><i class="fa fa-caret-right"></i> GATE Exams Tutorials</a></li>
<li><a href="/latest_technologies.htm"><i class="fa fa-caret-right"></i> Latest Technologies </a></li>
<li><a href="/machine_learning_tutorials.htm"><i class="fa fa-caret-right"></i> Machine Learning </a></li>
<li><a href="/mainframe_tutorials.htm"><i class="fa fa-caret-right"></i> Mainframe Development </a></li>
<li><a href="/management_tutorials.htm"><i class="fa fa-caret-right"></i> Management Tutorials </a></li>
<li><a href="/maths_tutorials.htm"><i class="fa fa-caret-right"></i> Mathematics Tutorials</a></li>
<li><a href="/microsoft_technologies_tutorials.htm"><i class="fa fa-caret-right"></i> Microsoft Technologies </a></li>
<li><a href="/misc_tutorials.htm"><i class="fa fa-caret-right"></i> Misc tutorials </a></li>
<li><a href="/mobile_development_tutorials.htm"><i class="fa fa-caret-right"></i> Mobile Development </a></li>
<li><a href="/java_technology_tutorials.htm"><i class="fa fa-caret-right"></i> Java Technologies </a></li>
<li><a href="/python_technologies_tutorials.htm"><i class="fa fa-caret-right"></i> Python Technologies </a></li>
<li><a href="/sap_tutorials.htm"><i class="fa fa-caret-right"></i> SAP Tutorials </a></li>
<li><a href="/scripting_lnaguage_tutorials.htm"><i class="fa fa-caret-right"></i>Programming Scripts </a></li>
<li><a href="/selected_reading.htm"><i class="fa fa-caret-right"></i> Selected Reading </a></li>
<li><a href="/software_quality_tutorials.htm"><i class="fa fa-caret-right"></i> Software Quality </a></li>
<li><a href="/soft_skill_tutorials.htm"><i class="fa fa-caret-right"></i> Soft Skills </a></li>
<li><a href="/telecom_tutorials.htm"><i class="fa fa-caret-right"></i> Telecom Tutorials </a></li>
<li><a href="/upsc_ias_exams.htm"><i class="fa fa-caret-right"></i> UPSC IAS Exams </a></li>
<li><a href="/web_development_tutorials.htm"><i class="fa fa-caret-right"></i> Web Development </a></li>
<li><a href="/sports_tutorials.htm"><i class="fa fa-caret-right"></i> Sports Tutorials </a></li>
<li><a href="/xml_technologies_tutorials.htm"><i class="fa fa-caret-right"></i> XML Technologies </a></li>
<li><a href="/multi_language_tutorials.htm"><i class="fa fa-caret-right"></i> Multi-Language Tutorials</a></li>
<li><a href="/questions_and_answers.htm"><i class="fa fa-caret-right"></i> Interview Questions</a></li>
</ul>
</li>
</ul>
<div class="clear"></div>
</div> 
</div>
<div class="right-menu">
<div class="toc-toggle">
<a href="javascript:void(0);"><i class="fa fa-bars"></i></a>
</div>
<div class="mobile-search-btn">
<a href="https://www.tutorialspoint.com/search.htm"><i class="fal fa-search"></i></a>
</div>
<div class="search-box">
<form method="get" class="" name="searchform" action="https://www.google.com/search" target="_blank" novalidate="">
<input type="hidden" name="sitesearch" value="www.tutorialspoint.com" class="user-valid valid">
<input class="header-search-box" type="text" id="search-string" name="q" placeholder="Search your favorite tutorials..." onfocus="if (this.value == 'Search your favorite tutorials...') {this.value = '';}" onblur="if (this.value == '') {this.value = 'Search your favorite tutorials...';}" autocomplete="off">
<button><i class="fal fa-search"></i></button>
</form>
</div>
<div class="menu-btn library-btn">
<a href="https://www.tutorialspoint.com/tutorialslibrary.htm"><i class="fal fa-cubes"></i> <span>Library</span></a>
</div>
<div class="menu-btn videos-btn">
<a href="https://www.tutorialspoint.com/videotutorials/index.htm"><i class="fal fa-video"></i> <span>Videos</span></a> 
</div>
<div class="menu-btn videos-btn">
<a href="https://www.tutorialspoint.com/questions/index.php"><i class="fa fa-location-arrow"></i> <span>Q/A</span></a>
</div>
<div class="menu-btn ebooks-btn">
<a href="https://store.tutorialspoint.com"><i class="fal fa-book"></i> <span>eBooks</span></a>
</div>
<div class="mui-dropdown">
<button class="mui-btn mui-btn--primary" data-mui-toggle="dropdown">
<span class="mui-caret"></span>
</button>
<ul class="mui-dropdown__menu">
<li><a href="https://www.tutorialspoint.com/tutorialslibrary.htm"><i class="fal fa-cubes"></i> <span>Library</span></a></li>
<li><a href="https://www.tutorialspoint.com/videotutorials/index.htm"><i class="fal fa-video"></i> <span>Videos</span></a></li>
<li><a href="https://store.tutorialspoint.com"><i class="fal fa-book"></i> <span>eBooks</span></a></li>
</ul>
</div>
</div>
</div>
</div>
<!-- Top main-menu Ends Here -->
</header>
<div class="mui-container-fluid content">
<div class="mui-container">
<!-- Tutorial ToC Starts Here -->
<div class="mui-col-md-3 tutorial-toc">
<div class="mini-logo">
<img src="/graphql/images/graphql-mini-logo.jpg" alt="GraphQL Tutorial" />
</div>
<ul class="toc chapters">
<li class="heading">GraphQL Tutorial</li>
<li><a href="/graphql/index.htm">GraphQL - Home</a></li>
<li><a href="/graphql/graphql_introduction.htm">GraphQL - Introduction</a></li>
<li><a href="/graphql/graphql_environment_setup.htm">GraphQL - Environment Setup</a></li>
<li><a href="/graphql/graphql_architecture.htm">GraphQL - Architecture</a></li>
<li><a href="/graphql/graphql_application_components.htm">GraphQL - Application Components</a></li>
<li><a href="/graphql/graphql_example.htm">GraphQL - Example</a></li>
<li><a href="/graphql/graphql_type_system.htm">GraphQL - Type System</a></li>
<li><a href="/graphql/graphql_schema.htm">GraphQL - Schema</a></li>
<li><a href="/graphql/graphql_resolver.htm">GraphQL - Resolver</a></li>
<li><a href="/graphql/graphql_query.htm">GraphQL - Query</a></li>
<li><a href="/graphql/graphql_mutation.htm">GraphQL - Mutation</a></li>
<li><a href="/graphql/graphql_validation.htm">GraphQL - Validation</a></li>
<li><a href="/graphql/graphql_jquery_integration.htm">GraphQL - JQuery Integration</a></li>
<li><a href="/graphql/graphql_react_integration.htm">GraphQL - React Integration</a></li>
<li><a href="/graphql/graphql_apollo_client.htm">GraphQL - Apollo Client</a></li>
<li><a href="/graphql/graphql_authenticating_client.htm">GraphQL - Authenticating Client</a></li>
<li><a href="/graphql/graphql_caching.htm">GraphQL - Caching</a></li>
</ul>
<ul class="toc chapters">
<li class="heading">GraphQL Useful Resources</li>
<li><a href="/graphql/graphql_quick_guide.htm">GraphQL - Quick Guide</a></li>
<li><a href="/graphql/graphql_useful_resources.htm">GraphQL - Useful Resources</a></li>
<li><a href="/graphql/graphql_discussion.htm">GraphQL - Discussion</a></li>
</ul>
<ul class="toc reading">
<li class="sreading">Selected Reading</li>
<li><a target="_top" href="/upsc_ias_exams.htm">UPSC IAS Exams Notes</a></li>
<li><a target="_top" href="/developers_best_practices/index.htm">Developer's Best Practices</a></li>
<li><a target="_top" href="/questions_and_answers.htm">Questions and Answers</a></li>
<li><a target="_top" href="/effective_resume_writing.htm">Effective Resume Writing</a></li>
<li><a target="_top" href="/hr_interview_questions/index.htm">HR Interview Questions</a></li>
<li><a target="_top" href="/computer_glossary.htm">Computer Glossary</a></li>
<li><a target="_top" href="/computer_whoiswho.htm">Who is Who</a></li>
</ul>
</div>
<!-- Tutorial ToC Ends Here -->
<!-- Tutorial Content Starts Here -->
<div class="mui-col-md-6 tutorial-content">
<h1>GraphQL - Caching</h1>
<hr />
<div class="top-ad-heading">Advertisements</div>
<div style="text-align: center;">
<script><!--
google_ad_client = "pub-7133395778201029";
var width = document.getElementsByClassName("tutorial-content")[0].clientWidth - 40;
google_ad_width = width;
google_ad_height = 150;
google_ad_format = width + "x150_as";
google_ad_type = "image";
google_ad_channel = "";
//--></script>
<script src="https://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</div>
<div class="mui-container-fluid button-borders">
<div class="pre-btn">
<a href="/graphql/graphql_authenticating_client.htm"><i class="fal fa-chevron-circle-left"></i> Previous Page</a>
</div>
<div class="nxt-btn">
<a href="/graphql/graphql_quick_guide.htm">Next Page <i class="fal fa-chevron-circle-right"></i>&nbsp;</a>
</div>
</div>
<div class="clearer"></div>
<p>Caching is the process of storing data in a temporary storage area called <b>cache</b>. When you return to a page you've recently visited, the browser can get those files from the cache rather than the original server. This saves your time, and network from the burden of additional traffic.</p>
<p>Client applications interacting with GraphQL are responsible for caching data at their end. One possible pattern for this is reserving a field, like id, to be a globally unique identifier.</p>
<h2>InMemory Cache</h2>
<p>InMemoryCache is a normalized data store commonly used in GraphQL client applications without use of other library like Redux.</p>
<p>The sample code to use InMemoryCache with ApolloClient is given below &minus;</p>
<pre class="prettyprint notranslate">
import {ApolloClient, HttpLink, InMemoryCache} from 'apollo-boost'
const cache = new InMemoryCache();

const client = new ApolloClient({
   link: new HttpLink(),
   cache
});
</pre>
<p>The InMemoryCache constructor takes an optional config object with properties to customize your cache.</p>
<table class="table table-bordered">
<tr>
<th style="text-align:center; width:12%;">Sr.No.</th>
<th style="text-align:center;">Parameter &amp; Description</th>
</tr>
<tr>
<td class="ts">1</td>
<td><p><b>addTypename</b></p>
<p>A boolean to determine whether to add __typename to the document (default: true)</p></td>
</tr>
<tr>
<td class="ts">2</td>
<td><p><b>dataIdFromObject</b></p>
<p>A function that takes a data object and returns a unique identifier to be used when normalizing the data in the store</p></td>
</tr>
<tr>
<td class="ts">3</td>
<td><p><b>fragmentMatcher</b></p>
<p>By default, the InMemoryCache uses a heuristic fragment matcher</p></td>
</tr>
<tr>
<td class="ts">4</td>
<td><p><b>cacheRedirects</b></p>
<p>A map of functions to redirect a query to another entry in the cache before a request takes place.</p></td>
</tr>
</table>
<h2>Illustration</h2>
<p>We will create a single page application in ReactJS with two tabs – one for the home tab and another for students. The students tab will load data from a GraphQL server API. The application will query for <i>students</i> data when the user navigates from the home tab to the students tab. The resulting data will be cached by the application.</p>
<p>We will also query the server time using <b>getTime</b> field to verify if the page is cached. If data is returned from the cache, the page will display the time of very first request sent to the server. If the data is a result of a fresh request made to the sever, it will always show the latest time from server.</p>
<h2>Setting up the Server</h2>
<p>Following are the steps for setting up the server &minus;</p>
<h3>Step 1 &minus; Download and Install Required Dependencies for the Project</h3>
<p>Create a folder <b>cache-server-app</b>. Change your directory to <b>cache-server-app</b> from the terminal. Follow steps 3 to 5 explained in the Environment Setup chapter.</p>
<h3>Step 2 &minus; Create a Schema</h3>
<p>Add <b>schema.graphql</b> file in the project folder <b>cache-server-app</b> and add the following code &minus;</p>
<pre class="prettyprint notranslate">
type Query {
   students:[Student]
   getTime:String
}

type Student {
   id:ID!
   firstName:String
   lastName:String
   fullName:String
}
</pre>
<h3>Step 3 &minus; Add Resolvers</h3>
<p>Create a file resolvers.js in the project folder, and add the following code &minus;</p>
<pre class="prettyprint notranslate">
const db = require('./db')

const Query = {
      students:() =&gt; db.students.list(),
      getTime:() =&gt; {
      const today = new Date();
      var h = today.getHours();
      var m = today.getMinutes();
      var s = today.getSeconds();
      return `${h}:${m}:${s}`;
   }
}
module.exports = {Query}
</pre>
<h3>Step 4 &minus; Run the Application</h3>
<p>Create a server.js file. Refer step 8 in the Environment Setup Chapter. Execute the command <i>npm start</i> in the terminal. The server will be up and running on 9000 port. Here, we will use GraphiQL as a client to test the application.</p>
<p>Open browser and enter the URL <b>http://localhost:9000/graphiql</b>. Type the following query in the editor &minus;</p>
<pre class="prettyprint notranslate">
{
   getTime
   students {
      id
      firstName
   }
}
</pre>
<p>The sample response shows the students names and the server time.</p>
<pre class="prettyprint notranslate">
{
   "data": {
      "getTime": "22:18:42",
      "students": [
         {
            "id": "S1001",
            "firstName": "Mohtashim"
         },
         {
            "id": "S1002",
            "firstName": "Kannan"
         },
         {
            "id": "S1003",
            "firstName": "Kiran"
         }
      ]
   }
}
</pre>
<h2>Setting up the ReactJS Client</h2>
<p>Open a new terminal for client. The server terminal should be kept running before executing the client application. React application will be running on port number 3000 and server application on port number 9000.</p>
<h3>Step 1 &minus; Create a React Application</h3>
<p>In the client terminal, type the following command &minus;</p>
<pre class="result notranslate">
npx create-react-app hello-world-client
</pre>
<p>This will install everything needed for a typical react application. The <b>npx utility</b> and <b>create-react-app</b> tools create a project with name hello-world-client. Once the installation is completed, open the project in VSCode.</p>
<p>Install router modules for react using following command – <b>npm install react-router-dom</b>.</p>
<h3>Step 2 &minus; Start hello-world-client</h3>
<p>Change the current folder path in the terminal to hello-world-client. Type npm start to launch the project. This will run a development server at port 3000 and will automatically open the browser and load the index page.</p>
<p>This is shown in the screenshot given below &minus;</p>
<img src="/graphql/images/screenshot_browser_launch_project.jpg" alt="Screenshot Browser Launch Project" />
<h3>Step 3 &minus; Install Apollo Client Libraries</h3>
<p>To install an Apollo Client, open a new terminal and be in current project folder path. Type the following command &minus;</p>
<pre class="result notranslate">
npm install apollo-boost graphql
</pre>
<p>This will download the graphql libraries for client side and also the Apollo Boost package. We can cross verify this by typing npm view apollo-boost dependencies. This will have many dependencies as shown below &minus;</p>
<pre class="result notranslate">
{ 
   'apollo-cache': '^1.1.15',
   'apollo-cache-inmemory': '^1.2.8',
   'apollo-client': '^2.4.0',
   'apollo-link': '^1.0.6',
   'apollo-link-error': '^1.0.3',
   'apollo-link-http': '^1.3.1',
   'apollo-link-state': '^0.4.0',
   'graphql-tag': '^2.4.2' 
}
</pre>
<p>We can clearly see that apollo-client library is installed.</p>
<h3>Step 4 &minus; Modify the App Component in index.js File</h3>
<p>For a simple react application, you only need to keep the <b>index.js</b> in <b>src</b> folder and <b>index.html</b> in public folder; all other files that are auto generated can be removed.</p>
<p>The directory structure is given below &minus;</p>
<pre class="result notranslate">
hello-world-client /
   --&gt;node_modules
   --&gt;public
      index.html
   --&gt;src
      index.js
      students.js
   --&gt;package.json
</pre>
<p>Add an additional file students.js which will contain Students Component. Student details are fetched through the Student Component. In the App Component, we are using a HashRouter.</p>
<p>Following is the <b>index.js</b> in react application &minus;</p>
<pre class="prettyprint notranslate">
import React, {Component} from 'react';
import ReactDOM from 'react-dom';
import {HashRouter, Route, Link} from 'react-router-dom'

//components
import Students from './students'
class App extends Component {
   render() {
      return(
         &lt;div&gt;&lt;h1&gt;Home !!&lt;/h1&gt;
         &lt;h2&gt;Welcome to React Application !! &lt;/h2&gt;
         &lt;/div&gt;
      )
   }
}

function getTime() {
   var d = new Date();
   return d.getHours()+":"+d.getMinutes()+":"+d.getSeconds()
}

const routes = &lt;HashRouter&gt;
   &lt;div&gt;
      &lt;h4&gt;Time from react app:{getTime()}&lt;/h4&gt;
      &lt;header&gt;
         &lt;h1&gt;  &lt;Link to="/"&gt;Home&lt;/Link&gt;&ensp;
         &lt;Link to = "/students"&gt;Students&lt;/Link&gt;&ensp; &lt;/h1&gt;
      &lt;/header&gt;
      &lt;Route exact path = "/students" component = {Students}&gt;&lt;/Route&gt;
      &lt;Route exact path = "/" component = {App}&gt;&lt;/Route&gt;
   &lt;/div&gt;
&lt;/HashRouter&gt;

ReactDOM.render(routes, document.querySelector("#root"))
</pre>
<h3>Step 5 &minus; Edit Component Students in Students.js</h3>
<p>In Students Component, we will use the following two approaches to load data &minus;</p>
<ul class="list">
<li><p><b>Fetch API (loadStudents_noCache)</b> &minus; This will trigger a new request everytime the clicks the student tab.</p></li>
<li><p><b>Apollo Client (loadWithApolloclient)</b> &minus; This will fetch data from the cache.</p></li>
</ul>
<p>Add a function <b>loadWithApolloclient</b> which queries for students and time from server. This function will enable caching. Here we use a gql function to parse the query.</p>
<pre class="prettyprint notranslate">
async loadWithApolloclient() {
   const query = gql`{
      getTime
      students {
         id
         firstName
      }
   }`;

   const {data} = await  client.query({query})
   return data;
}
</pre>
<p>The <b>Fetch API</b> is a simple interface for fetching resources. Fetch makes it easier to make web requests and handle responses than with the older XMLHttpRequest. Following method shows loading data directly using fetch api &minus;</p>
<pre class="prettyprint notranslate">
async  loadStudents_noCache() {
      const response = await fetch('http://localhost:9000/graphql', {
      method:'POST',
      headers:{'content-type':'application/json'},
      body:JSON.stringify({query:`{
         getTime
         students {
            id
            firstName
         }
      }`})
   })

   const rsponseBody = await response.json();
   return rsponseBody.data;
}
</pre>
<p>In the constructor of StudentsComponent, call the <b>loadWithApolloClient</b> method. The complete <b>Student.js</b> file is below &minus;</p>
<pre class="prettyprint notranslate">
import React, {Component} from 'react';
import { Link} from 'react-router-dom'

//Apollo Client
import {ApolloClient, HttpLink, InMemoryCache} from 'apollo-boost'
import gql from 'graphql-tag'
const client = new ApolloClient({
   link: new HttpLink({uri:`http://localhost:9000/graphql`}),
   cache:new InMemoryCache()
})

class Students extends Component {
   constructor(props) {
      super(props);
      this.state = {
         students:[{id:1,firstName:'test'}],
         serverTime:''
      }
      this.loadWithApolloclient().then(data =&gt; {
         this.setState({
            students:data.students,
            serverTime:data.getTime
         })
      })
   }
   
   async  loadStudents_noCache() {
      const response = await fetch('http://localhost:9000/graphql', {
         method:'POST',
         headers:{'content-type':'application/json'},
         body:JSON.stringify({query:`{
            getTime
            students {
               id
               firstName
            }
         }`})
      })
      const rsponseBody =  await response.json();
      return rsponseBody.data;
   }
   
   async loadWithApolloclient() {
      console.log("inside apollo client function")
      const query = gql`{
         getTime
         students {
            id
            firstName
         }
      }`;
      const {data} = await  client.query({query})
      return data;
   }
   
   render() {
      return(
         &lt;div&gt;
            &lt;h3&gt;Time from GraphQL server :{this.state.serverTime}&lt;/h3&gt;
            &lt;p&gt;Following Students Found &lt;/p&gt;
            &lt;div&gt;
               &lt;ul&gt;
                  {
                     this.state.students.map(s =&gt; {
                        return(
                           &lt;li key = {s.id}&gt;
                              {s.firstName}
                           &lt;/li&gt;
                        )
                     })
                  }
               &lt;/ul&gt;
            &lt;/div&gt;
         &lt;/div&gt;
      )
   }
}
export default Students
</pre>
<h3>Step 6 &minus; Run the React Application with <i>npm start</i></h3>
<p>You can test the react application by switching from home tab to students tab. Once the students tab is loaded with data from server. It will cache the data. You can test it by switching from home to students tab multiple times. The output will be as shown below &minus;</p>
<img src="/graphql/images/output_react_application_with_npm_start.jpg" alt="Output React Application with NPM Start" />
<p>If you have loaded the students page first by typing the URL, <b>http://localhost:3000/#/students</b>, you can see that the load time for react app and GraphQL would be approximately same. After that if you switch to home view and return to the GraphQL server, the time will not change. This shows the data is cached.</p>
<h3>Step 7 &minus; Change loadWithApolloclient Call to loadStudents_noCache</h3>
<p>If you change the load method to <b>loadStudents_noCache</b> in the constructor of StudentComponent, the output will not cache the data. This shows the difference between caching and non-caching.</p>
<pre class="prettyprint notranslate">
this.loadStudents_noCache().then(data =&gt; {
   this.setState({
      students:data.students,
      serverTime:data.getTime
   })
})
</pre>
<img src="/graphql/images/output_react_application_with_loadwithapolloclient.jpg" alt="Output React Application with loadWithApolloclient" />
<p>From the above output, it is clear that if you switch back and forth between the tabs, the time from graphql server will always be the latest which means the data is not cached.</p>
<div class="mui-container-fluid button-borders show">
<div class="pre-btn">
<a href="/graphql/graphql_authenticating_client.htm"><i class="fal fa-chevron-circle-left"></i> Previous Page</a>
</div>
<div class="nxt-btn">
<a href="/graphql/graphql_quick_guide.htm">Next Page <i class="fal fa-chevron-circle-right"></i>&nbsp;</a>
</div>
</div>
<div class="google-bottom-ads">
<div>Advertisements</div>
<script><!--
var width = 580;
var height = 400;
var format = "580x400_as";
if( window.innerWidth < 468 ){
   width = 300;
   height = 250;
   format = "300x250_as";
}
google_ad_client = "pub-7133395778201029";
google_ad_width = width;
google_ad_height = height;
google_ad_format = format;
google_ad_type = "image";
google_ad_channel ="";
//--></script>
<script src="https://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
<div class="space-bottom"></div>
</div>
</div>
<!-- Tutorial Content Ends Here -->
<!-- Right Column Starts Here -->
<div class="mui-col-md-2 google-right-ads">
<div class="space-top"></div>
<div class="google-right-ad" style="margin: 0px auto !important;margin-top:5px;">
<script><!--
google_ad_client = "pub-2537027957187252";
google_ad_width = 300;
google_ad_height = 250;
google_ad_format = "300x250_as";
google_ad_type = "image";
google_ad_channel ="";
//--></script>
<script src="https://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</div>
<div class="google-right-ad">
<div class="adsbyvli" data-ad-slot="vi_9012177"></div>
<script>(vitag.Init = window.vitag.Init || []).push(function(){viAPItag.display("vi_9012177")})</script>
</div>
<div class="space-bottom"></div>
<div class="google-right-ad">
<div class="adsbyvli" data-ad-slot="vi_9013289"></div>
<script>(vitag.Init = window.vitag.Init || []).push(function(){viAPItag.display("vi_9013289")})</script>
</div>
<div class="space-bottom" style="margin-bottom:15px;"></div>
</div>
<!-- Right Column Ends Here -->
</div>
</div>
<div class="clear"></div>
<footer id="footer">
<div class="mui--text-center">
<div class="mui--text-caption mui--text-light">
<a href="/index.htm" class="logo"><img class="img-responsive" src="/images/logo-black.png" alt="Tutorials Point" title="Tutorials Point"></a>
</div>
<ul class="mui-list--inline mui--text-body2 mui--text-light">
<li><a href="/about/index.htm"><i class="fal fa-globe"></i> About us</a></li>
<li><a href="/about/about_terms_of_use.htm"><i class="fal fa-asterisk"></i> Terms of use</a></li>
<li><a href="/about/about_privacy.htm#cookies"> <i class="fal fa-shield-check"></i> Cookies Policy</a></li>
<li><a href="/about/faq.htm"><i class="fal fa-question-circle"></i> FAQ's</a></li>
<li><a href="/about/about_helping.htm"><i class="fal fa-hands-helping"></i> Helping</a></li>
<li><a href="/about/contact_us.htm"><i class="fal fa-map-marker-alt"></i> Contact</a></li>
</ul>
<div class="mui--text-caption mui--text-light bottom-copyright-text">&copy; Copyright 2019. All Rights Reserved.</div>
</div>
<div id="privacy-banner">
  <div>
    <p>
      We use cookies to provide and improve our services. By using our site, you consent to our Cookies Policy.
      <a id="banner-accept" href="#">Accept</a>
      <a id="banner-learn" href="/about/about_cookies.htm" target="_blank">Learn more</a>
    </p>
  </div>
</div>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-232293-17"></script>
<script>
window.dataLayer = window.dataLayer || [];
function gtag(){dataLayer.push(arguments);}
gtag('js', new Date());
gtag('config', 'UA-232293-6');
</script>
</footer>
</body>
</html>
