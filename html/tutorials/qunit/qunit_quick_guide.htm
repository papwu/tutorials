<!DOCTYPE html>
<html lang="en-US">
<head>
<title>QUnit - Quick Guide - Tutorialspoint</title>
<meta charset="utf-8">
<meta name="description" content="QUnit - Quick Guide - Testing is the process of checking the functionality of the application whether it is working as per the requirements and to ensure that at the developer level,"/>
<meta name="keywords" content="C, C++, Python, Java, HTML, CSS, JavaScript, SQL, PHP, jQuery, XML, DOM, Bootstrap, Tutorials, Articles, Programming, training, learning, quiz, preferences, examples, code"/>
<link rel="canonical" href="https://www.tutorialspoint.com/qunit/qunit_quick_guide.htm" />
<link rel="shortcut icon" href="/favicon.ico" type="image/x-icon" />
<meta name="viewport" content="width=device-width,initial-scale=1.0,user-scalable=yes">
<script src="/theme/js/script-min-v2.js?v=3"></script>
<link rel="stylesheet" href="/theme/css/style-min-v2.css?v=6">
<script src="//services.bilsyndication.com/adv1/?d=901" defer="" async=""></script>
<script> var vitag = vitag || {};</script>
<script> vitag.outStreamConfig = { enablePC: false, enableMobile: false };</script>  
<style>
.right-menu .mui-btn {
    background-color:#9c3393;
}
a.demo {
    background:#9c3393;
}
li.heading {
    background:#9c3393;
}
.course-box{background:#9c3393}
.home-intro-sub p{color:#9c3393}
</style>
</head>
<body>
<header id="header">
<!-- Top sub-menu Starts Here -->
<div class="mui-appbar mui-container-fulid top-menu">
<div class="mui-container">
<div class="top-menu-item home">
<a href="https://www.tutorialspoint.com/index.htm" target="_blank" title="TutorialsPoint - Home"><i class="fal fa-home"></i> <span>Home</span></a>
</div>
<div class="top-menu-item qa">
<a href="https://www.tutorialspoint.com/about/about_careers.htm" target="_blank" title="Job @ Tutorials Point"><i class="fa fa-suitcase"></i> <span>Jobs</span></a>
</div>
<div class="top-menu-item tools">
<a href="https://www.tutorialspoint.com/online_dev_tools.htm" target="_blank" title="Tools - Online Development and Testing Tools"><i class="fal fa-cogs"></i> <span>Tools</span></a>
</div>
<div class="top-menu-item coding-ground">
<a href="https://www.tutorialspoint.com/codingground.htm" target="_blank" title="Coding Ground - Free Online IDE and Terminal"><i class="fal fa-code"></i> <span>Coding Ground </span></a> 
</div>
<div class="top-menu-item current-affairs">
<a href="https://www.tutorialspoint.com/current_affairs.htm" target="_blank" title="Daily Current Affairs"><i class="fal fa-layer-plus"></i> <span>Current Affairs</span></a>
</div>
<div class="top-menu-item upsc-notes">
<a href="https://www.tutorialspoint.com/upsc_ias_exams.htm" target="_blank" title="UPSC IAS Exams Notes - TutorialsPoint"><i class="fal fa-user-tie"></i> <span>UPSC Notes</span></a>
</div>      
<div class="top-menu-item online-tutoris">
<a href="https://www.tutorialspoint.com/tutor_connect/index.php" target="_blank" title="Top Online Tutors - Tutor Connect"><i class="fal fa-user"></i> <span>Online Tutors</span></a>
</div>
<div class="top-menu-item whiteboard">
<a href="https://www.tutorialspoint.com/whiteboard.htm" target="_blank" title="Free Online Whiteboard"><i class="fal fa-chalkboard"></i> <span>Whiteboard</span></a>
</div>
<div class="top-menu-item net-meeting">
<a href="https://www.tutorialspoint.com/netmeeting.php" target="_blank" title="A free tool for online video conferencing"><i class="fal fa-chalkboard-teacher"></i> <span>Net Meeting</span></a> 
</div>
<div class="top-menu-item articles">
<a href="https://www.tutorix.com" target="_blank" title="Tutorx - The Best Learning App" rel="nofollow"><i class="fal fa-video"></i> <span>Tutorix</span></a> 
</div>        
<div class="social-menu-item">
<a href="https://www.facebook.com/tutorialspointindia" target="_blank" rel="nofollow" data-placement="bottom" title="tutorialspoint @ Facebook"><i class="fab fa-facebook-f"></i></a> 
<a href="https://www.twitter.com/tutorialspoint" target="_blank" rel="nofollow" data-placement="bottom" title="tutorialspoint @ Twitter"><i class="fab fa-twitter"></i></a>
<a href="https://www.linkedin.com/company/tutorialspoint" target="_blank" rel="nofollow" data-placement="bottom" title="tutorialspoint @ Linkedin"><i class="fab fa-linkedin-in"></i></a>
<a href="https://www.youtube.com/channel/UCVLbzhxVTiTLiVKeGV7WEBg" target="_blank" rel="nofollow" data-placement="bottom" title="tutorialspoint YouTube"><i class="fab fa-youtube"></i></a>
</div>        
</div>
</div>
<!-- Top sub-menu Ends Here -->
<!-- Top main-menu Starts Here -->
<div class="mui-appbar mui-container-fulid mui--appbar-line-height mui--z1" id="logo-menu">
<div class="mui-container">
<div class="left-menu">
<a href="https://www.tutorialspoint.com/index.htm" title="Tutorialspoint">
<img class="tp-logo" alt="tutorialspoint" src="/qunit/images/logo.png">
</a>
<div class="mui-dropdown">
<a class="mui-btn mui-btn--primary categories" data-mui-toggle="dropdown"><i class="fa fa-th-large"></i> 
<span>Categories <span class="mui-caret"></span></span></a>            
<ul class="mui-dropdown__menu cat-menu">
<li>
<ul>
<li><a href="/academic_tutorials.htm"><i class="fa fa-caret-right"></i> Academic Tutorials</a></li>
<li><a href="/big_data_tutorials.htm"><i class="fa fa-caret-right"></i> Big Data &amp; Analytics </a></li>
<li><a href="/computer_programming_tutorials.htm"><i class="fa fa-caret-right"></i> Computer Programming </a></li>
<li><a href="/computer_science_tutorials.htm"><i class="fa fa-caret-right"></i> Computer Science </a></li>
<li><a href="/database_tutorials.htm"><i class="fa fa-caret-right"></i> Databases </a></li>
<li><a href="/devops_tutorials.htm"><i class="fa fa-caret-right"></i> DevOps </a></li>
<li><a href="/digital_marketing_tutorials.htm"><i class="fa fa-caret-right"></i> Digital Marketing </a></li>
<li><a href="/engineering_tutorials.htm"><i class="fa fa-caret-right"></i> Engineering Tutorials </a></li>
<li><a href="/upsc_ias_exams.htm"><i class="fa fa-caret-right"></i> Exams Syllabus </a></li>
<li><a href="/famous_monuments.htm"><i class="fa fa-caret-right"></i> Famous Monuments </a></li>
<li><a href="/gate_exams_tutorials.htm"><i class="fa fa-caret-right"></i> GATE Exams Tutorials</a></li>
<li><a href="/latest_technologies.htm"><i class="fa fa-caret-right"></i> Latest Technologies </a></li>
<li><a href="/machine_learning_tutorials.htm"><i class="fa fa-caret-right"></i> Machine Learning </a></li>
<li><a href="/mainframe_tutorials.htm"><i class="fa fa-caret-right"></i> Mainframe Development </a></li>
<li><a href="/management_tutorials.htm"><i class="fa fa-caret-right"></i> Management Tutorials </a></li>
<li><a href="/maths_tutorials.htm"><i class="fa fa-caret-right"></i> Mathematics Tutorials</a></li>
<li><a href="/microsoft_technologies_tutorials.htm"><i class="fa fa-caret-right"></i> Microsoft Technologies </a></li>
<li><a href="/misc_tutorials.htm"><i class="fa fa-caret-right"></i> Misc tutorials </a></li>
<li><a href="/mobile_development_tutorials.htm"><i class="fa fa-caret-right"></i> Mobile Development </a></li>
<li><a href="/java_technology_tutorials.htm"><i class="fa fa-caret-right"></i> Java Technologies </a></li>
<li><a href="/python_technologies_tutorials.htm"><i class="fa fa-caret-right"></i> Python Technologies </a></li>
<li><a href="/sap_tutorials.htm"><i class="fa fa-caret-right"></i> SAP Tutorials </a></li>
<li><a href="/scripting_lnaguage_tutorials.htm"><i class="fa fa-caret-right"></i>Programming Scripts </a></li>
<li><a href="/selected_reading.htm"><i class="fa fa-caret-right"></i> Selected Reading </a></li>
<li><a href="/software_quality_tutorials.htm"><i class="fa fa-caret-right"></i> Software Quality </a></li>
<li><a href="/soft_skill_tutorials.htm"><i class="fa fa-caret-right"></i> Soft Skills </a></li>
<li><a href="/telecom_tutorials.htm"><i class="fa fa-caret-right"></i> Telecom Tutorials </a></li>
<li><a href="/upsc_ias_exams.htm"><i class="fa fa-caret-right"></i> UPSC IAS Exams </a></li>
<li><a href="/web_development_tutorials.htm"><i class="fa fa-caret-right"></i> Web Development </a></li>
<li><a href="/sports_tutorials.htm"><i class="fa fa-caret-right"></i> Sports Tutorials </a></li>
<li><a href="/xml_technologies_tutorials.htm"><i class="fa fa-caret-right"></i> XML Technologies </a></li>
<li><a href="/multi_language_tutorials.htm"><i class="fa fa-caret-right"></i> Multi-Language Tutorials</a></li>
<li><a href="/questions_and_answers.htm"><i class="fa fa-caret-right"></i> Interview Questions</a></li>
</ul>
</li>
</ul>
<div class="clear"></div>
</div> 
</div>
<div class="right-menu">
<div class="toc-toggle">
<a href="javascript:void(0);"><i class="fa fa-bars"></i></a>
</div>
<div class="mobile-search-btn">
<a href="https://www.tutorialspoint.com/search.htm"><i class="fal fa-search"></i></a>
</div>
<div class="search-box">
<form method="get" class="" name="searchform" action="https://www.google.com/search" target="_blank" novalidate="">
<input type="hidden" name="sitesearch" value="www.tutorialspoint.com" class="user-valid valid">
<input class="header-search-box" type="text" id="search-string" name="q" placeholder="Search your favorite tutorials..." onfocus="if (this.value == 'Search your favorite tutorials...') {this.value = '';}" onblur="if (this.value == '') {this.value = 'Search your favorite tutorials...';}" autocomplete="off">
<button><i class="fal fa-search"></i></button>
</form>
</div>
<div class="menu-btn library-btn">
<a href="https://www.tutorialspoint.com/tutorialslibrary.htm"><i class="fal fa-cubes"></i> <span>Library</span></a>
</div>
<div class="menu-btn videos-btn">
<a href="https://www.tutorialspoint.com/videotutorials/index.htm"><i class="fal fa-video"></i> <span>Videos</span></a> 
</div>
<div class="menu-btn videos-btn">
<a href="https://www.tutorialspoint.com/questions/index.php"><i class="fa fa-location-arrow"></i> <span>Q/A</span></a>
</div>
<div class="menu-btn ebooks-btn">
<a href="https://store.tutorialspoint.com"><i class="fal fa-book"></i> <span>eBooks</span></a>
</div>
<div class="mui-dropdown">
<button class="mui-btn mui-btn--primary" data-mui-toggle="dropdown">
<span class="mui-caret"></span>
</button>
<ul class="mui-dropdown__menu">
<li><a href="https://www.tutorialspoint.com/tutorialslibrary.htm"><i class="fal fa-cubes"></i> <span>Library</span></a></li>
<li><a href="https://www.tutorialspoint.com/videotutorials/index.htm"><i class="fal fa-video"></i> <span>Videos</span></a></li>
<li><a href="https://store.tutorialspoint.com"><i class="fal fa-book"></i> <span>eBooks</span></a></li>
</ul>
</div>
</div>
</div>
</div>
<!-- Top main-menu Ends Here -->
</header>
<div class="mui-container-fluid content">
<div class="mui-container">
<!-- Tutorial ToC Starts Here -->
<div class="mui-col-md-3 tutorial-toc">
<div class="mini-logo">
<img src="/qunit/images/qunit-mini-logo.jpg" alt="QUnit Tutorial" />
</div>
<ul class="toc chapters">
<li class="heading">QUnit Tutorial</li>
<li><a href="/qunit/index.htm">QUnit - Home</a></li>
<li><a href="/qunit/qunit_overview.htm">QUnit - Overview</a></li>
<li><a href="/qunit/qunit_environment.htm">QUnit - Environment Setup</a></li>
<li><a href="/qunit/qunit_basic_usage.htm">QUnit - Basic Usage</a></li>
<li><a href="/qunit/qunit_api.htm">QUnit - API</a></li>
<li><a href="/qunit/qunit_using_assertions.htm">QUnit - Using Assertions</a></li>
<li><a href="/qunit/qunit_execution_procedure.htm">QUnit - Execution Procedure</a></li>
<li><a href="/qunit/qunit_skip_test.htm">QUnit - Skip Test</a></li>
<li><a href="/qunit/qunit_only_test.htm">QUnit - Only Test</a></li>
<li><a href="/qunit/qunit_async_call.htm">QUnit - Async Call</a></li>
<li><a href="/qunit/qunit_expect_assertions.htm">QUnit - Expect Assertions</a></li>
<li><a href="/qunit/qunit_callbacks.htm">QUnit - Callbacks</a></li>
<li><a href="/qunit/qunit_nested_modules.htm">QUnit - Nested Modules</a></li>
</ul>
<ul class="toc chapters">
<li class="heading">QUnit Useful Resources</li>
<li><a href="/qunit/qunit_quick_guide.htm">QUnit - Quick Guide</a></li>
<li><a href="/qunit/qunit_useful_resources.htm">QUnit - Useful Resources</a></li>
<li><a href="/qunit/qunit_discussion.htm">QUnit - Discussion</a></li>
</ul>
<ul class="toc reading">
<li class="sreading">Selected Reading</li>
<li><a target="_top" href="/upsc_ias_exams.htm">UPSC IAS Exams Notes</a></li>
<li><a target="_top" href="/developers_best_practices/index.htm">Developer's Best Practices</a></li>
<li><a target="_top" href="/questions_and_answers.htm">Questions and Answers</a></li>
<li><a target="_top" href="/effective_resume_writing.htm">Effective Resume Writing</a></li>
<li><a target="_top" href="/hr_interview_questions/index.htm">HR Interview Questions</a></li>
<li><a target="_top" href="/computer_glossary.htm">Computer Glossary</a></li>
<li><a target="_top" href="/computer_whoiswho.htm">Who is Who</a></li>
</ul>
</div>
<!-- Tutorial ToC Ends Here -->
<!-- Tutorial Content Starts Here -->
<div class="mui-col-md-6 tutorial-content">
<h1>QUnit - Quick Guide</h1>
<hr />
<div class="top-ad-heading">Advertisements</div>
<div style="text-align: center;">
<script><!--
google_ad_client = "pub-7133395778201029";
var width = document.getElementsByClassName("tutorial-content")[0].clientWidth - 40;
google_ad_width = width;
google_ad_height = 150;
google_ad_format = width + "x150_as";
google_ad_type = "image";
google_ad_channel = "";
//--></script>
<script src="https://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</div>
<div class="mui-container-fluid button-borders">
<div class="pre-btn">
<a href="/qunit/qunit_nested_modules.htm"><i class="fal fa-chevron-circle-left"></i> Previous Page</a>
</div>
<div class="nxt-btn">
<a href="/qunit/qunit_useful_resources.htm">Next Page <i class="fal fa-chevron-circle-right"></i>&nbsp;</a>
</div>
</div>
<div class="clearer"></div>
<h1>QUnit - Overview</h1>
<p>Testing is the process of checking the functionality of the application whether it is working as per the requirements and to ensure that at the developer level, unit testing comes into picture. Unit testing is the testing of a single entity (class or method). Unit testing is very essential for every software organization to offer quality products to their clients.</p>
<p>Unit testing can be done in two ways as mentioned in the following table.</p>
<table class="table table-bordered">
<tr>
<th style="text-align:center;">Manual testing</th>
<th style="text-align:center;">Automated testing</th>
</tr>
<tr>
<td>Executing the test cases manually without any tool support is known as manual testing.</td>
<td>Taking tool support and executing the test cases using automation tool is known as automation testing.</td>
</tr>
<tr>
<td>Time consuming and tedious. Since the test cases are executed by human resources, it is very slow and tedious.</td>
<td>Fast Automation. Runs test cases significantly faster than human resources.</td>
</tr>
<tr>
<td>Huge investment in human resources. As test cases need to be executed manually, more number of testers are required.</td>
<td>Less investment in human resources. Test cases are executed using automation tool hence, less number of testers are required.</td>
</tr>
<tr>
<td>Less reliable, as tests may not be performed with precision each time due to human errors.</td>
<td>More reliable. Automation tests perform precisely the same operation each time they are run.</td>
</tr>
<tr>
<td>Non-programmable. No programming can be done to write sophisticated tests, which fetch hidden information.</td>
<td>Programmable. Testers can program sophisticated tests to bring out hidden information.</td>
</tr>
</table>
<h2>What is QUnit?</h2>
<p>QUnit is a unit testing framework for JavaScript programming language. It is important in the test driven development, and is used by jQuery, jQuery UI, and jQuery Mobile projects. QUnit is capable of testing any generic JavaScript codebase.</p>
<p>QUnit promotes the idea of "first testing then coding", which emphasizes on setting up the test data for a piece of code, which can be tested first and then implemented. This approach is like "test a little, code a little, test a little, code a little..." which increases the programmer’s productivity and the stability of program code reducing the programmer’s stress and the time spent on debugging.</p>
<h2>Features of QUnit</h2>
<p>QUnit is an open source framework used for writing and running tests. Following are its most prominent features &minus;</p>
<ul class="list">
<li><p>QUnit provides Assertions for testing expected results.</p></li>
<li><p>QUnit provides Test fixtures for running tests.</p></li>
<li><p>QUnit tests allow to write code faster, which increases the quality.</p></li>
<li><p>QUnit is elegantly simple. It is less complex and takes less time.</p></li>
<li><p>QUnit tests can be run automatically and they check their own results and provide immediate feedback. There's no need to manually comb through a report of test results.</p></li>
<li><p>QUnit tests can be organized into test suites containing test cases and even other test suites.</p></li>
<li><p>QUnit shows test progress in a bar that is green if the test is going fine, and it turns red when a test fails.</p></li>
</ul>
<h2>What is a Unit Test Case?</h2>
<p>A Unit Test Case is a part of code which ensures that another part of the code (method) works as expected. To achieve the desired results quickly, test framework is required. QUnit is a perfect unit test framework for JavaScript programming language.</p>
<p>A formal written unit test case is characterized by a known input and by an expected output, which is worked out before the test is executed. The known input should test a precondition and the expected output should test a post-condition.</p>
<p>There must be at least two unit test cases for each requirement: one positive test and one negative test. If a requirement has sub-requirements, each sub-requirement must have at least two test cases as positive and negative.</p>
<h1>QUnit - Environment Setup</h1>
<p>There are two ways to use QUnit.</p>
<ul class="list">
<li><p><b>Local Installation</b> &minus; You can download QUnit library on your local machine and include it in your HTML code.</p></li>
<li><p><b>CDN Based Version</b> &minus; You can include QUnit library into your HTML code directly from Content Delivery Network (CDN).</p></li>
</ul>
<h2>Local Installation</h2>
<ul class="list">
<li><p>Go to the <a rel="nofollow" target="_blank" href="https://code.jquery.com/qunit/">https://code.jquery.com/qunit/</a> to download the latest version available.</p></li>
<li><p>Place the downloaded <b>qunit-git.js</b> and <b>qunit-git.css</b> file in a directory of your website, e.g. /jquery.</p></li>
</ul>
<h3>Example</h3>
<p>You can include <b>qunit-git.js</b> and <b>qunit-git.css</b> files in your HTML file as follows &minus;</p>
<div class="demo-view">
<a href="http://tpcg.io/ckytGw" target="_blank" rel="nofollow" class="demo"><i class="fa-external-link"></i> Live Demo</a>
</div>
<pre class="prettyprint notranslate">
&lt;html&gt; 
   &lt;head&gt; 
      &lt;meta charset = "utf-8"&gt; 
      &lt;title&gt;QUnit basic example&lt;/title&gt; 
      &lt;link rel = "stylesheet" href = "/jquery/qunit-git.css"&gt; 
      &lt;script src = "/jquery/qunit-git.js"&gt;&lt;/script&gt; 
   &lt;/head&gt; 
   
   &lt;body&gt; 
      &lt;div id = "qunit"&gt;&lt;/div&gt; 
      &lt;div id = "qunit-fixture"&gt;&lt;/div&gt;  
      &lt;script&gt; 
         QUnit.test( "My First Test", function( assert ) { 
            var value = "1"; 
            assert.equal( value, "1", "Value should be 1" ); 
         }); 
      &lt;/script&gt; 
   &lt;/body&gt; 
&lt;/html&gt;
</pre>
<p>This will produce following result &minus;</p>
<iframe onLoad="resizeFrame(this)" class="result" src="/qunit/src/first_application.htm" height="260px" width="600px"></iframe>
<h2>CDN Based Version</h2>
<p>You can include QUnit library into your HTML code directly from Content Delivery Network (CDN).</p>
<blockquote>We are using jQuery CDN version of the library throughout this tutorial.</blockquote>
<h3>Example</h3>
<p>Let us rewrite the above example using QUnit library from jQuery CDN.</p>
<div class="demo-view">
<a href="http://tpcg.io/e0iFIa" target="_blank" rel="nofollow" class="demo"><i class="fa-external-link"></i> Live Demo</a>
</div>
<pre class="prettyprint notranslate">
&lt;html&gt;
   &lt;head&gt;
      &lt;meta charset = "utf-8"&gt;
      &lt;title&gt;QUnit basic example&lt;/title&gt;
      &lt;link rel = "stylesheet" href = "https://code.jquery.com/qunit/qunit-1.22.0.css"&gt;
      &lt;script src = "https://code.jquery.com/qunit/qunit-1.22.0.js"&gt;&lt;/script&gt;
   &lt;/head&gt;
   
   &lt;body&gt;
      &lt;div id = "qunit"&gt;&lt;/div&gt;
      &lt;div id = "qunit-fixture"&gt;&lt;/div&gt; 
      &lt;script&gt;
         QUnit.test( "My First Test", function( assert ) {
            var value = "1";
            assert.equal( value, "1", "Value should be 1" );
         });
      &lt;/script&gt;
   &lt;/body&gt;
&lt;/html&gt;
</pre>
<p>This will produce following result &minus;</p>
<iframe onLoad="resizeFrame(this)" class="result" src="/qunit/src/first_application.htm" height="260px" width="600px"></iframe>
<h1>QUnit - Basic Usage</h1>
<p>Now we'll show you a step-by-step process to get a kickstart in QUnit using a basic example.</p>
<h2>Import qunit.js</h2>
<p>qunit.js of Qunit library represents the test runner and test framework.</p>
<pre class="result notranslate">
&lt;script src = "https://code.jquery.com/qunit/qunit-1.22.0.js"&gt;&lt;/script&gt; 
</pre>
<h2>Import qunit.css</h2>
<p>qunit.css of Qunit library styles the test suite page to display the test results.</p>
<pre class="result notranslate">
&lt;link rel = "stylesheet" href = "https://code.jquery.com/qunit/qunit-1.22.0.css"&gt;
</pre>
<h2>Add Fixture</h2>
<p>Add two div elements with <b>id = "qunit"</b> and <b>"qunit-fixture"</b>. These div elements are required and provide the fixture for tests.</p>
<pre class="result notranslate">
&lt;div id = "qunit"&gt;&lt;/div&gt;
&lt;div id = "qunit-fixture"&gt;&lt;/div&gt;
</pre>
<h2>Create a Function to Test</h2>
<pre class="prettyprint notranslate">
function square(x) {
   return x * x;
}
</pre>
<h2>Create a Test Case</h2>
<p>Make a call to the QUnit.test function, with two arguments.</p>
<ul class="list">
<li><p><b>Name</b> &minus; The name of the test to display the test results.</p></li>
<li><p><b>Function</b> &minus; Function testing code, having one or more assertions.</p></li>
</ul>
<pre class="prettyprint notranslate">
QUnit.test( "TestSquare", function( assert ) {
   var result = square(2);
   assert.equal( result, "4", "square(2) should be 4." );
});
</pre>
<h2>Run the Test</h2>
<p>Now let us see the complete code in action.</p>
<div class="demo-view">
<a href="http://tpcg.io/duD3Ca" target="_blank" rel="nofollow" class="demo"><i class="fa-external-link"></i> Live Demo</a>
</div>
<pre class="prettyprint notranslate">
&lt;html&gt;
   &lt;head&gt;
      &lt;meta charset = "utf-8"&gt;
      &lt;title&gt;QUnit basic example&lt;/title&gt;
      &lt;link rel = "stylesheet" href = "https://code.jquery.com/qunit/qunit-1.22.0.css"&gt;
      &lt;script src = "https://code.jquery.com/qunit/qunit-1.22.0.js"&gt;&lt;/script&gt;
   &lt;/head&gt;
   
   &lt;body&gt;
      &lt;div id = "qunit"&gt;&lt;/div&gt;
      &lt;div id = "qunit-fixture"&gt;&lt;/div&gt; 
      
      &lt;script&gt;
         function square(x) {
            return x * x;
         }
         QUnit.test( "TestSquare", function( assert ) {
            var result = square(2);
            assert.equal( result, "4", "square(2) should be 4." );
         });
      &lt;/script&gt;
   &lt;/body&gt;
&lt;/html&gt;
</pre>
<p>Load the page in the browser. The test runner calls <b>QUnit.test()</b> when the page gets loaded and adds the test to a queue. Execution of test case is deferred and controlled by the test runner.</p>
<h2>Verify the Output</h2>
<p>You should see the following result &minus;</p>
<iframe onLoad="resizeFrame(this)" class="result" src="/qunit/src/basic_usage.htm" height="260px" width="600px"></iframe>
<ul class="list">
<li><p><b>Header</b> &minus; Test suite header displays the page title, a green bar when all tests are passed. Otherwise, a red bar when at least one test has failed, a bar with a three checkboxes to filter the test results, and a blue bar with the navigator.userAgent text to display the browser details.</p></li>
<li><p><b>Hide passed tests checkbox</b> &minus; To hide the passed test cases and showcase only the failed test cases.</p></li>
<li><p><b>Check for globals checkbox</b> &minus; To show the list of all properties on the window object, before and after each test, then check for differences. Modification to the properties will fail the test.</p></li>
<li><p><b>No try-catch checkbox</b> &minus; To run test cases outside of a try-catch block so that in case of a test throwing an exception, the testrunner will die and show native exception.</p></li>
<li><p><b>Summary</b> &minus; Shows the total time taken to run the test cases. Total test cases run and failed assertions.</p></li>
<li><p><b>Contents</b> &minus; Shows the test results. Each test result has the name of the test followed by failed, passed, and total assertions. Each entry can be clicked to get further details.</p></li>
</ul>
<h1>QUnit - API</h1>
<h2>Important APIs of QUnit</h2>
<p>Some of the important Category of QUnit are &minus;</p>
<table class="table table-bordered">
<tr>
<th style="text-align:center;">Sr.No.</th>
<th style="text-align:center;">Category</th>
<th style="text-align:center;">Functionality</th>
</tr>
<tr>
<td class="ts">1</td>
<td style="text-align:center;">Assert</td>
<td>A set of assert methods.</td>
</tr>
<tr>
<td class="ts">2</td>
<td style="text-align:center;">Async Control</td>
<td style="vertical-align:middle;">For asynchronous operations.</td>
</tr>
<tr>
<td class="ts">3</td>
<td class="ts">Callbacks</td>
<td>When integrating QUnit into other tools such as CI servers, these callbacks can be used as an API to read the test results.</td>
</tr>
<tr>
<td class="ts">4</td>
<td class="ts">Configuration and Utilities</td>
<td>These methods and properties are used as utility helpers and to configure QUnit. For example, to adjust the runtime behavior directly, extend the QUnit API via custom assertions, etc.</td>
</tr>
<tr>
<td style="text-align:center;">5</td>
<td style="text-align:center;">Test</td>
<td>For testing operations.</td>
</tr>
</table>
<h2>Category: Assert</h2>
<p>It provides a set of assert methods.</p>
<table class="table table-bordered">
<tr>
<th style="text-align:center;">Sr.No.</th>
<th style="text-align:center;">Methods &amp; Description</th>
</tr>
<tr>
<td class="ts">1</td>
<td><p><b>async()</b></p>
<p>Instruct QUnit to wait for an asynchronous operation.</p></td>
</tr>
<tr>
<td class="ts">2</td>
<td><p><b>deepEqual()</b></p>
<p>A deep recursive comparison, working on primitive types, arrays, objects, regular expressions, dates, and functions.</p></td>
</tr>
<tr>
<td class="ts">3</td>
<td><p><b>equal()</b></p>
<p>A non-strict comparison, roughly equivalent to JUnit's assertEquals.</p></td>
</tr>
<tr>
<td class="ts">4</td>
<td><p><b>expect()</b></p>
<p>Specify how many assertions are expected to run within a test.</p></td>
</tr>
<tr>
<td class="ts">5</td>
<td><p><b>notDeepEqual()</b></p>
<p>An inverted deep recursive comparison, working on primitive types, arrays, objects, regular expressions, dates, and functions.</p></td>
</tr>
<tr>
<td class="ts">6</td>
<td><p><b>notEqual()</b></p>
<p>A non-strict comparison, checking for inequality.</p></td>
</tr>
<tr>
<td class="ts">7</td>
<td><p><b>notOk()</b></p>
<p>A boolean check, inverse of ok() and CommonJS's assert.ok(), and equivalent to JUnit's assertFalse(). Passes if the first argument is false.</p></td>
</tr>
<tr>
<td class="ts">8</td>
<td><p><b>notPropEqual()</b></p>
<p>A strict comparison of an object's own properties, checking for inequality.</p></td>
</tr>
<tr>
<td class="ts">9</td>
<td><p><b>notStrictEqual()</b></p>
<p>A strict comparison, checking for inequality.</p></td>
</tr>
<tr>
<td class="ts">10</td>
<td><p><b>ok()</b></p>
<p>A boolean check, equivalent to CommonJS's assert.ok() and JUnit's assertTrue(). Passes if the first argument is true.</p></td>
</tr>
<tr>
<td class="ts">11</td>
<td><p><b>propEqual()</b></p>
<p>A strict type and value comparison of an object's own properties.</p></td>
</tr>
<tr>
<td class="ts">12</td>
<td><p><b>push()</b></p>
<p>Report the result of a custom assertion.</p></td>
</tr>
<tr>
<td class="ts">13</td>
<td><p><b>strictEqual()</b></p>
<p>A strict type and value comparison.</p></td>
</tr>
<tr>
<td class="ts">14</td>
<td><p><b>throws()</b></p>
<p>Test if a callback throws an exception, and optionally compare the thrown error.</p></td>
</tr>
</table>
<h2>Category: Async Control</h2>
<p>It provides a set of asynchronous operations.</p>
<table class="table table-bordered">
<tr>
<th style="text-align:center;">Sr.No.</th>
<th style="text-align:center;">Methods &amp; Description</th>
</tr>
<tr>
<td class="ts">1</td>
<td><p><b>async()</b></p>
<p>Instruct QUnit to wait for an asynchronous operation.</p></td>
</tr>
<tr>
<td class="ts">2</td>
<td><p><b>QUnit.asyncTest()</b></p>
<p>DEPRECATED: Add an asynchronous test to run. The test must include a call to QUnit.start().</p></td>
</tr>
<tr>
<td class="ts">3</td>
<td><p><b>QUnit.start()</b></p>
<p>PARTIALLY DEPRECATED: Start running the tests again after the testrunner was stopped. See QUnit.stop() and QUnit.config.autostart.</p></td>
</tr>
<tr>
<td class="ts">4</td>
<td><p><b>QUnit.stop()</b></p>
<p>DEPRECATED: Increase the number of QUnit.start() calls the testrunner should wait for before continuing.</p></td>
</tr>
<tr>
<td class="ts">5</td>
<td><p><b>QUnit.test()</b></p>
<p>Add a test to run.</p></td>
</tr>
</table>
<h2>Category: Callbacks</h2>
<p>When integrating QUnit into other tools like CI servers, these callbacks can be used as an API to read the test results.</p>
<table class="table table-bordered">
<tr>
<th style="text-align:center;">Sr.No.</th>
<th style="text-align:center;">Methods &amp; Description</th>
</tr>
<tr>
<td class="ts">1</td>
<td><p><b>QUnit.begin()</b></p>
<p>Register a callback to fire whenever the test suite begins.</p></td>
</tr>
<tr>
<td class="ts">2</td>
<td><p><b>QUnit.done()</b></p>
<p>Register a callback to fire whenever the test suite ends.</p></td>
</tr>
<tr>
<td class="ts">3</td>
<td><p><b>QUnit.log()</b></p>
<p>Register a callback to fire whenever an assertion completes.</p></td>
</tr>
<tr>
<td class="ts">4</td>
<td><p><b>QUnit.moduleDone()</b></p>
<p>Register a callback to fire whenever a module ends.</p></td>
</tr>
<tr>
<td class="ts">5</td>
<td><p><b>QUnit.moduleStart()</b></p>
<p>Register a callback to fire whenever a module begins.</p></td>
</tr>
<tr>
<td class="ts">6</td>
<td><p><b>QUnit.testDone()</b></p>
<p>Register a callback to fire whenever a test ends.</p></td>
</tr>
<tr>
<td class="ts">7</td>
<td><p><b>QUnit.testStart()</b></p>
<p>Register a callback to fire whenever a test begins.</p></td>
</tr>
</table>
<h2>Category: Configuration and Utilities</h2>
<p>These methods and properties are used as utility helpers and to configure QUnit. For example, to adjust the runtime behavior directly, extend the QUnit API via custom assertions, etc.</p>
<table class="table table-bordered">
<tr>
<th style="text-align:center;">Sr.No.</th>
<th style="text-align:center;">Methods &amp; Description</th>
</tr>
<tr>
<td class="ts">1</td>
<td><p><b>QUnit.assert</b></p>
<p>Namespace for QUnit assertions.</p></td>
</tr>
<tr>
<td class="ts">2</td>
<td><p><b>QUnit.config</b></p>
<p>Configuration for QUnit.</p></td>
</tr>
<tr>
<td class="ts">3</td>
<td><p><b>QUnit.dump.parse()</b></p>
<p>Advanced and extensible data dumping for JavaScript.</p></td>
</tr>
<tr>
<td class="ts">4</td>
<td><p><b>QUnit.extend()</b></p>
<p>Copy the properties defined by the mixin object into the target object.</p></td>
</tr>
<tr>
<td class="ts">5</td>
<td><p><b>QUnit.init()</b></p>
<p>DEPRECATED: Re-initialize the test runner.</p></td>
</tr>
<tr>
<td class="ts">6</td>
<td><p><b>QUnit.push()</b></p>
<p>DEPRECATED: Report the result of a custom assertion.</p></td>
</tr>
<tr>
<td class="ts">7</td>
<td><p><b>QUnit.reset()</b></p>
<p>DEPRECATED: Reset the test fixture in the DOM.</p></td>
</tr>
<tr>
<td class="ts">8</td>
<td><p><b>QUnit.stack()</b></p>
<p>Returns a single line string representing the stacktrace (call stack).</p></td>
</tr>
</table>
<h2>Category: Test</h2>
<p>It provides a set of testing operations.</p>
<table class="table table-bordered">
<tr>
<th style="text-align:center;">Sr.No.</th>
<th style="text-align:center;">Methods &amp; Description</th>
</tr>
<tr>
<td class="ts">1</td>
<td><p><b>QUnit.assert</b></p>
<p>Namespace for QUnit assertions.</p></td>
</tr>
<tr>
<td class="ts">2</td>
<td><p><b>QUnit.asyncTest()</b></p>
<p>DEPRECATED: Add an asynchronous test to run. The test must include a call to QUnit.start().</p></td>
</tr>
<tr>
<td class="ts">3</td>
<td><p><b>QUnit.module()</b></p>
<p>Group related tests under a single label.</p></td>
</tr>
<tr>
<td class="ts">4</td>
<td><p><b>QUnit.only()</b></p>
<p>Adds a test to exclusively run, preventing all other tests from running.</p></td>
</tr>
<tr>
<td class="ts">5</td>
<td><p><b>QUnit.skip()</b></p>
<p>Adds a test like object to be skipped.</p></td>
</tr>
<tr>
<td class="ts">6</td>
<td><p><b>QUnit.test()</b></p>
<p>Adds a test to run.</p></td>
</tr>
</table>
<h1>QUnit - Using Assertions</h1>
<p>All the assertions are in the Assert Category.</p>
<p>This category provides a set of assertion methods useful for writing tests. Only failed assertions are recorded.</p>
<table class="table table-bordered">
<tr>
<th style="text-align:center;">Sr.No.</th>
<th style="text-align:center;">Methods &amp; Description</th>
</tr>
<tr>
<td class="ts">1</td>
<td><p><b>async()</b></p>
<p>Instruct QUnit to wait for an asynchronous operation.</p></td>
</tr>
<tr>
<td class="ts">2</td>
<td><p><b>deepEqual()</b></p>
<p>A deep recursive comparison, working on primitive types, arrays, objects, regular expressions, dates, and functions.</p></td>
</tr>
<tr>
<td class="ts">3</td>
<td><p><b>equal()</b></p>
<p>A non-strict comparison, roughly equivalent to JUnit's assertEquals.</p></td>
</tr>
<tr>
<td class="ts">4</td>
<td><p><b>expect()</b></p>
<p>Specify how many assertions are expected to run within a test.</p></td>
</tr>
<tr>
<td class="ts">5</td>
<td><p><b>notDeepEqual()</b></p>
<p>An inverted deep recursive comparison, working on primitive types, arrays, objects, regular expressions, dates, and functions.</p></td>
</tr>
<tr>
<td class="ts">6</td>
<td><p><b>notEqual()</b></p>
<p>A non-strict comparison, checking for inequality.</p></td>
</tr>
<tr>
<td class="ts">7</td>
<td><p><b>notOk()</b></p>
<p>A boolean check, inverse of ok() and CommonJS's assert.ok(), and equivalent to JUnit's assertFalse(). Passes if the first argument is false.</p></td>
</tr>
<tr>
<td class="ts">8</td>
<td><p><b>notPropEqual()</b></p>
<p>A strict comparison of an object's own properties, checking for inequality.</p></td>
</tr>
<tr>
<td class="ts">9</td>
<td><p><b>notStrictEqual()</b></p>
<p>A strict comparison, checking for inequality.</p></td>
</tr>
<tr>
<td class="ts">10</td>
<td><p><b>ok()</b></p>
<p>A boolean check, equivalent to CommonJS's assert.ok() and JUnit's assertTrue(). Passes if the first argument is true.</p></td>
</tr>
<tr>
<td class="ts">11</td>
<td><p><b>propEqual()</b></p>
<p>A strict type and value comparison of an object's own properties.</p></td>
</tr>
<tr>
<td class="ts">12</td>
<td><p><b>push()</b></p>
<p>Report the result of a custom assertion.</p></td>
</tr>
<tr>
<td class="ts">13</td>
<td><p><b>strictEqual()</b></p>
<p>A strict type and value comparison.</p></td>
</tr>
<tr>
<td class="ts">14</td>
<td><p><b>throws()</b></p>
<p>Test if a callback throws an exception, and optionally compare the thrown error.</p></td>
</tr>
</table>
<p>Let's try to cover most of the above mentioned methods in an example.</p>
<div class="demo-view">
<a href="http://tpcg.io/9aUAo3" target="_blank" rel="nofollow" class="demo"><i class="fa-external-link"></i> Live Demo</a>
</div>
<pre class="prettyprint notranslate">
&lt;html&gt;
   &lt;head&gt;
      &lt;meta charset = "utf-8"&gt;
      &lt;title&gt;QUnit basic example&lt;/title&gt;
      &lt;link rel = "stylesheet" href = "https://code.jquery.com/qunit/qunit-1.22.0.css"&gt;
      &lt;script src = "https://code.jquery.com/qunit/qunit-1.22.0.js"&gt;&lt;/script&gt;
   &lt;/head&gt;
   
   &lt;body&gt;
      &lt;div id = "qunit"&gt;&lt;/div&gt;
      &lt;div id = "qunit-fixture"&gt;&lt;/div&gt; 
      &lt;script&gt;
         QUnit.test( "TestSuite", function( assert ) {
            //test data
            var str1 = "abc";
            var str2 = "abc";
            var str3 = null;
            var val1 = 5;
            var val2 = 6;
            var expectedArray = ["one", "two", "three"];
            var resultArray =  ["one", "two", "three"];

            //Check that two objects are equal
            assert.equal(str1, str2, "Strings passed are equal.");
			
            //Check that two objects are not equal
            assert.notEqual(str1,str3, "Strings passed are not equal.");

            //Check that a condition is true
            assert.ok(val1 &lt; val2, val1 + " is less than " + val2);
			
            //Check that a condition is false
            assert.notOk(val1 &gt; val2, val2 + " is not less than " + val1);

            //Check whether two arrays are equal to each other.
            assert.deepEqual(expectedArray, resultArray ,"Arrays passed are equal.");
			
            //Check whether two arrays are equal to each other.
            assert.notDeepEqual(expectedArray, ["one", "two"],
               "Arrays passed are not equal.");			
         });
      &lt;/script&gt;
   &lt;/body&gt;
&lt;/html&gt;
</pre>
<h2>Verify the Output</h2>
<p>You should see the following result &minus;</p>
<iframe onLoad="resizeFrame(this)" class="result" src="/qunit/src/using_assertions.htm" width="600px" height="260px"></iframe>
<h1>QUnit - Execution Procedure</h1>
<p>This chapter explains the execution procedure of methods in QUnit, that states which method is called first and which one after that. Following is the execution procedure of the QUnit test API methods with an example.</p>
<div class="demo-view">
<a href="http://tpcg.io/asjN6H" target="_blank" rel="nofollow" class="demo"><i class="fa-external-link"></i> Live Demo</a>
</div>
<pre class="prettyprint notranslate">
&lt;html&gt;
   &lt;head&gt;
      &lt;meta charset = "utf-8"&gt;
      &lt;title&gt;QUnit basic example&lt;/title&gt;
      &lt;link rel = "stylesheet" href = "https://code.jquery.com/qunit/qunit-1.22.0.css"&gt;
      &lt;script src = "https://code.jquery.com/qunit/qunit-1.22.0.js"&gt;&lt;/script&gt;
   &lt;/head&gt;
   
   &lt;body&gt;
      &lt;div id = "qunit"&gt;&lt;/div&gt;
      &lt;div id = "qunit-fixture"&gt;&lt;/div&gt; 
      &lt;script&gt;
         QUnit.module( "Module A", {
            beforeEach: function( assert ) {
               assert.ok( true, "before test case" );
            }, afterEach: function( assert ) {
               assert.ok( true, "after test case" );
            }
         });
         
         QUnit.test( "test case 1", function( assert ) {
            assert.ok( true, "Module A: in test case 1" );
         });
         
         QUnit.test( "test case 2", function( assert ) {
            assert.ok( true, "Module A: in test case 2" );
         });
		 		 
         QUnit.module( "Module B" );		
         QUnit.test( "test case 1", function( assert ) {
            assert.ok( true, "Module B: in test case 1" );
         });
         
         QUnit.test( "test case 2", function( assert ) {
            assert.ok( true, "Module B: in test case 2" );
         });		 
      &lt;/script&gt;
   &lt;/body&gt;
&lt;/html&gt;
</pre>
<h2>Verify the Output</h2>
<p>You should see the following result &minus;</p>
<iframe onLoad="resizeFrame(this)" class="result" src="/qunit/src/execution_procedure.htm" height="335px" width="600px"></iframe>
<p>This is how the QUnit execution procedure is.</p>
<ul class="list">
<li><p>The module is used to group test cases.</p></li>
<li><p><b>beforeEach()</b> method executes for each test case however before executing the test case.</p></li>
<li><p><b>afterEach()</b> method executes for each test case however after the execution of test case.</p></li>
<li><p>In between <b>beforeEach()</b> and <b>afterEach()</b> each test case executes.</p></li>
<li><p>Calling <b>QUnit.module()</b> again, simply reset any beforeEach/afterEach functions defined by another module previously.</p></li>
</ul>
<h1>QUnit - Skip Test</h1>
<p>Sometimes it happens that our code is not ready and the test case written to test that method/code fails if run. <b>QUnit.skip</b> helps in this regards. A test method written using Skip method will not be executed. Let's see the Skip method in action.</p>
<div class="demo-view">
<a href="http://tpcg.io/IEp3P1" target="_blank" rel="nofollow" class="demo"><i class="fa-external-link"></i> Live Demo</a>
</div>
<pre class="prettyprint notranslate">
&lt;html&gt;
   &lt;head&gt;
      &lt;meta charset = "utf-8"&gt;
      &lt;title&gt;QUnit basic example&lt;/title&gt;
      &lt;link rel = "stylesheet" href = "https://code.jquery.com/qunit/qunit-1.22.0.css"&gt;
      &lt;script src = "https://code.jquery.com/qunit/qunit-1.22.0.js"&gt;&lt;/script&gt;
   &lt;/head&gt;
   
   &lt;body&gt;
      &lt;div id = "qunit"&gt;&lt;/div&gt;
      &lt;div id = "qunit-fixture"&gt;&lt;/div&gt; 
      &lt;script&gt;
         QUnit.module( "Module A", {
            beforeEach: function( assert ) {
               assert.ok( true, "before test case" );
            }, afterEach: function( assert ) {
               assert.ok( true, "after test case" );
            }
         });
         
         QUnit.test( "test case 1", function( assert ) {
            assert.ok( true, "Module A: in test case 1" );
         });
         
         QUnit.skip( "test case 2", function( assert ) {
            assert.ok( true, "Module A: in test case 2" );
         });
		 		 
         QUnit.module( "Module B" );		
         QUnit.test( "test case 1", function( assert ) {
            assert.ok( true, "Module B: in test case 1" );
         });
         
         QUnit.skip( "test case 2", function( assert ) {
            assert.ok( true, "Module B: in test case 2" );
         });		 
      &lt;/script&gt;
   &lt;/body&gt;
&lt;/html&gt;
</pre>
<h2>Verify the Output</h2>
<p>You should see the following result &minus;</p>
<iframe onLoad="resizeFrame(this)" class="result" src="/qunit/src/skip_test.htm" height="335px" width="600px"></iframe>
<h1>QUnit - Only Test</h1>
<p>Sometimes it happens that our code is not ready and the test case written to test that method/code fails, if run. <b>QUnit.only</b> helps in this regards. A test method written using only method will be executed while other tests will not run. If more than one only methods are specified, then only the first one will execute. Let's see only method in action.</p>
<div class="demo-view">
<a href="http://tpcg.io/wjyjG0" target="_blank" rel="nofollow" class="demo"><i class="fa-external-link"></i> Live Demo</a>
</div>
<pre class="prettyprint notranslate">
&lt;html&gt;
   &lt;head&gt;
      &lt;meta charset = "utf-8"&gt;
      &lt;title&gt;QUnit basic example&lt;/title&gt;
      &lt;link rel = "stylesheet" href = "https://code.jquery.com/qunit/qunit-1.22.0.css"&gt;
      &lt;script src = "https://code.jquery.com/qunit/qunit-1.22.0.js"&gt;&lt;/script&gt;
   &lt;/head&gt;
   
   &lt;body&gt;
      &lt;div id = "qunit"&gt;&lt;/div&gt;
      &lt;div id = "qunit-fixture"&gt;&lt;/div&gt; 
      &lt;script&gt;
         QUnit.module( "Module A", {
            beforeEach: function( assert ) {
               assert.ok( true, "before test case" );
            }, afterEach: function( assert ) {
               assert.ok( true, "after test case" );
            }
         });
         
         QUnit.test( "test case 1", function( assert ) {
            assert.ok( true, "Module A: in test case 1" );
         });
         
         QUnit.only( "test case 2", function( assert ) {
            assert.ok( true, "Module A: in test case 2" );
         });
		      
         QUnit.test( "test case 3", function( assert ) {
            assert.ok( true, "Module A: in test case 3" );
         });
		 
         QUnit.test( "test case 4", function( assert ) {
            assert.ok( true, "Module A: in test case 4" );
         });	 
      &lt;/script&gt;
   &lt;/body&gt;
&lt;/html&gt;
</pre>
<h2>Verify the Output</h2>
<p>You should see the following result &minus;</p>
<iframe onLoad="resizeFrame(this)" class="result" src="/qunit/src/only_test.htm" height="255px" width="600px"></iframe>
<h1>QUnit - Async Call</h1>
<p>For every asynchronous operation in <b>QUnit.test()</b> callback, use <b>assert.async()</b>, which returns a "done" function that should be called when the operation has completed. assert.async() accepts call counts as a parameter. The callback returned from assert.async() will throw an Error, if it is invoked more than the accepted call count, if provided. Each <b>done()</b> call adds up to the call count. After every call gets completed, the test is done.</p>
<div class="demo-view">
<a href="http://tpcg.io/xMCV3I" target="_blank" rel="nofollow" class="demo"><i class="fa-external-link"></i> Live Demo</a>
</div>
<pre class="prettyprint notranslate">
&lt;html&gt;
   &lt;head&gt;
      &lt;meta charset = "utf-8"&gt;
      &lt;title&gt;QUnit basic example&lt;/title&gt;
      &lt;link rel = "stylesheet" href = "https://code.jquery.com/qunit/qunit-1.22.0.css"&gt;
      &lt;script src = "https://code.jquery.com/qunit/qunit-1.22.0.js"&gt;&lt;/script&gt;
   &lt;/head&gt;
   
   &lt;body&gt;
      &lt;div id = "qunit"&gt;&lt;/div&gt;
      &lt;div id = "qunit-fixture"&gt;&lt;/div&gt; 
      &lt;script&gt;
         QUnit.test( "multiple call test()", function( assert ) {
            var done = assert.async( 3 );
            
            setTimeout(function() {
               assert.ok( true, "first callback." );
               done();
            }, 500 );

            setTimeout(function() {
               assert.ok( true, "second callback." );
               done();
            }, 500 );

            setTimeout(function() {
               assert.ok( true, "third callback." );
               done();
            }, 500 );
         });		 
      &lt;/script&gt;
   &lt;/body&gt;
&lt;/html&gt;
</pre>
<h2>Verify the Output</h2>
<p>You should see the following result &minus;</p>
<iframe onLoad="resizeFrame(this)" class="result" src="/qunit/src/async_call.htm" height="255px" width="600px"></iframe>
<h1>QUnit - Expect Assertions</h1>
<p>We can use <b>assert.expect()</b> function to check the number of assertions made in the test. In the following example, we're expecting three assertions to be made in the test.</p>
<div class="demo-view">
<a href="http://tpcg.io/Mssrym" target="_blank" rel="nofollow" class="demo"><i class="fa-external-link"></i> Live Demo</a>
</div>
<pre class="prettyprint notranslate">
&lt;html&gt;
   &lt;head&gt;
      &lt;meta charset = "utf-8"&gt;
      &lt;title&gt;QUnit basic example&lt;/title&gt;
      &lt;link rel = "stylesheet" href = "https://code.jquery.com/qunit/qunit-1.22.0.css"&gt;
      &lt;script src = "https://code.jquery.com/qunit/qunit-1.22.0.js"&gt;&lt;/script&gt;
   &lt;/head&gt;
   
   &lt;body&gt;
      &lt;div id = "qunit"&gt;&lt;/div&gt;
      &lt;div id = "qunit-fixture"&gt;&lt;/div&gt; 
      &lt;script&gt;
         QUnit.test( "multiple call test()", function( assert ) {
            assert.expect( 3 );
            var done = assert.async( 3 );
            
            setTimeout(function() {
               assert.ok( true, "first callback." );
               done();
            }, 500 );

            setTimeout(function() {
               assert.ok( true, "second callback." );
               done();
            }, 500 );

            setTimeout(function() {
               assert.ok( true, "third callback." );
               done();
            }, 500 );
         });		 
      &lt;/script&gt;
   &lt;/body&gt;
&lt;/html&gt;
</pre>
<h2>Verify the Output</h2>
<p>You should see the following result &minus;</p>
<iframe onLoad="resizeFrame(this)" class="result" src="/qunit/src/expect_assertions.htm" width="600px" height="255px"></iframe>
<h1>QUnit - Callbacks</h1>
<p>When integrating QUnit into other tools like CI servers, these callbacks can be used as an API to read test results. Following is the execution procedure of the QUnit callback API method with an example.</p>
<div class="demo-view">
<a href="http://tpcg.io/snzqfi" target="_blank" rel="nofollow" class="demo"><i class="fa-external-link"></i> Live Demo</a>
</div>
<pre class="prettyprint notranslate">
&lt;html&gt;
   &lt;head&gt;
      &lt;meta charset = "utf-8"&gt;
      &lt;title&gt;QUnit basic example&lt;/title&gt;
      &lt;link rel = "stylesheet" href = "https://code.jquery.com/qunit/qunit-1.22.0.css"&gt;
      &lt;script src = "https://code.jquery.com/qunit/qunit-1.22.0.js"&gt;&lt;/script&gt;
   &lt;/head&gt;
   
   &lt;body&gt;
      &lt;div id = "qunit"&gt;&lt;/div&gt;
      &lt;div id = "qunit-fixture"&gt;&lt;/div&gt; 
      &lt;script&gt;
         //Register a callback to fire whenever a testsuite starts.
         QUnit.begin(function( details ) {
            var data = document.getElementById("console").innerHTML;
            document.getElementById("console").innerHTML = "&lt;br/&gt;" + 
               "QUnit.begin- Test Suite Begins " + "&lt;br/&gt;" + 
               "Total Test: " + details.totalTests;
         });

         //Register a callback to fire whenever a test suite ends.		 
         QUnit.done(function( details ) {
            var data = document.getElementById("console").innerHTML;
            document.getElementById("console").innerHTML = data + "&lt;br/&gt;&lt;br/&gt;" + 
               "QUnit.done - Test Suite Finised" +  "&lt;br/&gt;" + "Total: " +  
               details.total + " Failed: " + details.failed + " Passed: 
               " + details.passed;
         });
		 
         //Register a callback to fire whenever a module starts.
            QUnit.moduleStart(function( details ) {
               var data = document.getElementById("console").innerHTML;
               document.getElementById("console").innerHTML = data + "&lt;br/&gt;&lt;br/&gt;" + 
                  "QUnit.moduleStart - Module Begins " +  "&lt;br/&gt;" + details.name;
         });
		 
         //Register a callback to fire whenever a module ends.	  
         QUnit.moduleDone(function( details ) {
            var data = document.getElementById("console").innerHTML;
            document.getElementById("console").innerHTML = data + "&lt;br/&gt;&lt;br/&gt;" + 
               "QUnit.moduleDone - Module Finished " +  "&lt;br/&gt;" + details.name + 
               " Failed/total: " + details.failed +"/" + details.total ;
         });
		 
         //Register a callback to fire whenever a test starts.
         QUnit.testStart(function( details ) {
            var data = document.getElementById("console").innerHTML;
            document.getElementById("console").innerHTML = data + "&lt;br/&gt;&lt;br/&gt;" + 
               "QUnit.testStart - Test Begins " +  "&lt;br/&gt;" + details.module +" 
               " + details.name;
         });
		 
         //Register a callback to fire whenever a test ends.
         QUnit.testDone(function( details ) {
            var data = document.getElementById("console").innerHTML;
            document.getElementById("console").innerHTML = data + "&lt;br/&gt;&lt;br/&gt;" + 
               "QUnit.testDone - Test Finished " +  "&lt;br/&gt;" + details.module +" " 
               + details.name + "Failed/total: " + details.failed +" " + details.total+ 
               " "+ details.duration;
         });
		 
         QUnit.module( "Module A", {
            beforeEach: function( assert ) {
               assert.ok( true, "before test case" );
            }, afterEach: function( assert ) {
               assert.ok( true, "after test case" );
            }
         });
         
         QUnit.test( "test case 1", function( assert ) {
            assert.ok( true, "Module A: in test case 1" );
         });
         
         QUnit.test( "test case 2", function( assert ) {
            assert.ok( true, "Module A: in test case 2" );
         });
		 		 
         QUnit.module( "Module B" );		
         QUnit.test( "test case 1", function( assert ) {
            assert.ok( true, "Module B: in test case 1" );
         });
         
         QUnit.test( "test case 2", function( assert ) {
            assert.ok( true, "Module B: in test case 2" );
         });	 
      &lt;/script&gt;

      &lt;div id = "console" &gt;&lt;/div&gt;
   &lt;/body&gt;
&lt;/html&gt;
</pre>
<h2>Verify the Output</h2>
<p>You should see the following result &minus;</p>
<iframe onLoad="resizeFrame(this)" class="result" src="/qunit/src/callbacks.htm" width="600px" height="350px"></iframe>
<h1>QUnit - Nested Modules</h1>
<p>Modules with grouped test functions are used to define nested modules. QUnit run tests on the parent module before going deep on the nested ones, even if they're declared first. The <b>beforeEach</b> and <b>afterEach</b> callbacks on a nested module call will stack in LIFO (Last In, First Out) Mode to the parent hooks. You can specify the code to run before and after each test using the argument and hooks.</p>
<p>Hooks can also be used to create properties that will be shared on the context of each test. Any additional properties on the hooks object will be added to that context. The hooks argument is optional if you call QUnit.module with a callback argument.</p>
<p>The module's callback is invoked having the context as the test environment, with the environment's properties copied to the module's tests, hooks, and nested modules.</p>
<div class="demo-view">
<a href="http://tpcg.io/Nj7zon" target="_blank" rel="nofollow" class="demo"><i class="fa-external-link"></i> Live Demo</a>
</div>
<pre class="prettyprint notranslate">
&lt;html&gt;
   &lt;head&gt;
      &lt;meta charset = "utf-8"&gt;
      &lt;title&gt;QUnit basic example&lt;/title&gt;
      &lt;link rel = "stylesheet" href = "https://code.jquery.com/qunit/qunit-1.22.0.css"&gt;
      &lt;script src = "https://code.jquery.com/qunit/qunit-1.22.0.js"&gt;&lt;/script&gt;
   &lt;/head&gt;
   
   &lt;body&gt;
      &lt;div id = "qunit"&gt;&lt;/div&gt;
      &lt;div id = "qunit-fixture"&gt;&lt;/div&gt; 
      &lt;script&gt;
         QUnit.module( "parent module", function( hooks ) {
            hooks.beforeEach( function( assert ) {
               assert.ok( true, "beforeEach called" );
            });

            hooks.afterEach( function( assert ) {
               assert.ok( true, "afterEach called" );
            });

            QUnit.test( "hook test 1", function( assert ) {
               assert.expect( 2 );
            });

            QUnit.module( "nested hook module", function( hooks ) {
               // This will run after the parent module's beforeEach hook
               hooks.beforeEach( function( assert ) {
                  assert.ok( true, "nested beforeEach called" );
               });

               // This will run before the parent module's afterEach
               hooks.afterEach( function( assert ) {
                  assert.ok( true, "nested afterEach called" );
               });

               QUnit.test( "hook test 2", function( assert ) {
                  assert.expect( 4 );
               });
            });
         });
      &lt;/script&gt;

      &lt;div id = "console" &gt;&lt;/div&gt;
   &lt;/body&gt;
&lt;/html&gt;
</pre>
<h2>Verify the Output</h2>
<p>You should see the following result &minus;</p>
<iframe onLoad="resizeFrame(this)" class="result" src="/qunit/src/nested_modules.htm" height="305px" width="600px"></iframe>
<div class="mui-container-fluid button-borders show">
<div class="pre-btn">
<a href="/qunit/qunit_nested_modules.htm"><i class="fal fa-chevron-circle-left"></i> Previous Page</a>
</div>
<div class="nxt-btn">
<a href="/qunit/qunit_useful_resources.htm">Next Page <i class="fal fa-chevron-circle-right"></i>&nbsp;</a>
</div>
</div>
<div class="google-bottom-ads">
<div>Advertisements</div>
<script><!--
var width = 580;
var height = 400;
var format = "580x400_as";
if( window.innerWidth < 468 ){
   width = 300;
   height = 250;
   format = "300x250_as";
}
google_ad_client = "pub-7133395778201029";
google_ad_width = width;
google_ad_height = height;
google_ad_format = format;
google_ad_type = "image";
google_ad_channel ="";
//--></script>
<script src="https://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
<div class="space-bottom"></div>
</div>
</div>
<!-- Tutorial Content Ends Here -->
<!-- Right Column Starts Here -->
<div class="mui-col-md-2 google-right-ads">
<div class="space-top"></div>
<div class="google-right-ad" style="margin: 0px auto !important;margin-top:5px;">
<script><!--
google_ad_client = "pub-2537027957187252";
google_ad_width = 300;
google_ad_height = 250;
google_ad_format = "300x250_as";
google_ad_type = "image";
google_ad_channel ="";
//--></script>
<script src="https://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</div>
<div class="google-right-ad">
<div class="adsbyvli" data-ad-slot="vi_9012177"></div>
<script>(vitag.Init = window.vitag.Init || []).push(function(){viAPItag.display("vi_9012177")})</script>
</div>
<div class="space-bottom"></div>
<div class="google-right-ad">
<div class="adsbyvli" data-ad-slot="vi_9013289"></div>
<script>(vitag.Init = window.vitag.Init || []).push(function(){viAPItag.display("vi_9013289")})</script>
</div>
<div class="space-bottom" style="margin-bottom:15px;"></div>
</div>
<!-- Right Column Ends Here -->
</div>
</div>
<div class="clear"></div>
<footer id="footer">
<div class="mui--text-center">
<div class="mui--text-caption mui--text-light">
<a href="/index.htm" class="logo"><img class="img-responsive" src="/images/logo-black.png" alt="Tutorials Point" title="Tutorials Point"></a>
</div>
<ul class="mui-list--inline mui--text-body2 mui--text-light">
<li><a href="/about/index.htm"><i class="fal fa-globe"></i> About us</a></li>
<li><a href="/about/about_terms_of_use.htm"><i class="fal fa-asterisk"></i> Terms of use</a></li>
<li><a href="/about/about_privacy.htm#cookies"> <i class="fal fa-shield-check"></i> Cookies Policy</a></li>
<li><a href="/about/faq.htm"><i class="fal fa-question-circle"></i> FAQ's</a></li>
<li><a href="/about/about_helping.htm"><i class="fal fa-hands-helping"></i> Helping</a></li>
<li><a href="/about/contact_us.htm"><i class="fal fa-map-marker-alt"></i> Contact</a></li>
</ul>
<div class="mui--text-caption mui--text-light bottom-copyright-text">&copy; Copyright 2019. All Rights Reserved.</div>
</div>
<div id="privacy-banner">
  <div>
    <p>
      We use cookies to provide and improve our services. By using our site, you consent to our Cookies Policy.
      <a id="banner-accept" href="#">Accept</a>
      <a id="banner-learn" href="/about/about_cookies.htm" target="_blank">Learn more</a>
    </p>
  </div>
</div>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-232293-17"></script>
<script>
window.dataLayer = window.dataLayer || [];
function gtag(){dataLayer.push(arguments);}
gtag('js', new Date());
gtag('config', 'UA-232293-6');
</script>
</footer>
</body>
</html>
