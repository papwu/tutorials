<!DOCTYPE html>
<html lang="en-US">
<head>
<title>HTTP - Header Fields - Tutorialspoint</title>
<meta charset="utf-8">
<meta name="description" content="HTTP - Header Fields - HTTP header fields provide required information about the request or response, or about the object sent in the message body. There are four types of HTTP messag"/>
<meta name="keywords" content="C, C++, Python, Java, HTML, CSS, JavaScript, SQL, PHP, jQuery, XML, DOM, Bootstrap, Tutorials, Articles, Programming, training, learning, quiz, preferences, examples, code"/>
<link rel="canonical" href="https://www.tutorialspoint.com/http/http_header_fields.htm" />
<link rel="shortcut icon" href="/favicon.ico" type="image/x-icon" />
<meta name="viewport" content="width=device-width,initial-scale=1.0,user-scalable=yes">
<script src="/theme/js/script-min-v2.js?v=3"></script>
<link rel="stylesheet" href="/theme/css/style-min-v2.css?v=6">
<script src="//services.bilsyndication.com/adv1/?d=901" defer="" async=""></script>
<script> var vitag = vitag || {};</script>
<script> vitag.outStreamConfig = { enablePC: false, enableMobile: false };</script>  
<style>
.right-menu .mui-btn {
    background-color:#0585f1;
}
a.demo {
    background:#0585f1;
}
li.heading {
    background:#0585f1;
}
.course-box{background:#0585f1}
.home-intro-sub p{color:#0585f1}
</style>
</head>
<body>
<header id="header">
<!-- Top sub-menu Starts Here -->
<div class="mui-appbar mui-container-fulid top-menu">
<div class="mui-container">
<div class="top-menu-item home">
<a href="https://www.tutorialspoint.com/index.htm" target="_blank" title="TutorialsPoint - Home"><i class="fal fa-home"></i> <span>Home</span></a>
</div>
<div class="top-menu-item qa">
<a href="https://www.tutorialspoint.com/about/about_careers.htm" target="_blank" title="Job @ Tutorials Point"><i class="fa fa-suitcase"></i> <span>Jobs</span></a>
</div>
<div class="top-menu-item tools">
<a href="https://www.tutorialspoint.com/online_dev_tools.htm" target="_blank" title="Tools - Online Development and Testing Tools"><i class="fal fa-cogs"></i> <span>Tools</span></a>
</div>
<div class="top-menu-item coding-ground">
<a href="https://www.tutorialspoint.com/codingground.htm" target="_blank" title="Coding Ground - Free Online IDE and Terminal"><i class="fal fa-code"></i> <span>Coding Ground </span></a> 
</div>
<div class="top-menu-item current-affairs">
<a href="https://www.tutorialspoint.com/current_affairs.htm" target="_blank" title="Daily Current Affairs"><i class="fal fa-layer-plus"></i> <span>Current Affairs</span></a>
</div>
<div class="top-menu-item upsc-notes">
<a href="https://www.tutorialspoint.com/upsc_ias_exams.htm" target="_blank" title="UPSC IAS Exams Notes - TutorialsPoint"><i class="fal fa-user-tie"></i> <span>UPSC Notes</span></a>
</div>      
<div class="top-menu-item online-tutoris">
<a href="https://www.tutorialspoint.com/tutor_connect/index.php" target="_blank" title="Top Online Tutors - Tutor Connect"><i class="fal fa-user"></i> <span>Online Tutors</span></a>
</div>
<div class="top-menu-item whiteboard">
<a href="https://www.tutorialspoint.com/whiteboard.htm" target="_blank" title="Free Online Whiteboard"><i class="fal fa-chalkboard"></i> <span>Whiteboard</span></a>
</div>
<div class="top-menu-item net-meeting">
<a href="https://www.tutorialspoint.com/netmeeting.php" target="_blank" title="A free tool for online video conferencing"><i class="fal fa-chalkboard-teacher"></i> <span>Net Meeting</span></a> 
</div>
<div class="top-menu-item articles">
<a href="https://www.tutorix.com" target="_blank" title="Tutorx - The Best Learning App" rel="nofollow"><i class="fal fa-video"></i> <span>Tutorix</span></a> 
</div>        
<div class="social-menu-item">
<a href="https://www.facebook.com/tutorialspointindia" target="_blank" rel="nofollow" data-placement="bottom" title="tutorialspoint @ Facebook"><i class="fab fa-facebook-f"></i></a> 
<a href="https://www.twitter.com/tutorialspoint" target="_blank" rel="nofollow" data-placement="bottom" title="tutorialspoint @ Twitter"><i class="fab fa-twitter"></i></a>
<a href="https://www.linkedin.com/company/tutorialspoint" target="_blank" rel="nofollow" data-placement="bottom" title="tutorialspoint @ Linkedin"><i class="fab fa-linkedin-in"></i></a>
<a href="https://www.youtube.com/channel/UCVLbzhxVTiTLiVKeGV7WEBg" target="_blank" rel="nofollow" data-placement="bottom" title="tutorialspoint YouTube"><i class="fab fa-youtube"></i></a>
</div>        
</div>
</div>
<!-- Top sub-menu Ends Here -->
<!-- Top main-menu Starts Here -->
<div class="mui-appbar mui-container-fulid mui--appbar-line-height mui--z1" id="logo-menu">
<div class="mui-container">
<div class="left-menu">
<a href="https://www.tutorialspoint.com/index.htm" title="Tutorialspoint">
<img class="tp-logo" alt="tutorialspoint" src="/http/images/logo.png">
</a>
<div class="mui-dropdown">
<a class="mui-btn mui-btn--primary categories" data-mui-toggle="dropdown"><i class="fa fa-th-large"></i> 
<span>Categories <span class="mui-caret"></span></span></a>            
<ul class="mui-dropdown__menu cat-menu">
<li>
<ul>
<li><a href="/academic_tutorials.htm"><i class="fa fa-caret-right"></i> Academic Tutorials</a></li>
<li><a href="/big_data_tutorials.htm"><i class="fa fa-caret-right"></i> Big Data &amp; Analytics </a></li>
<li><a href="/computer_programming_tutorials.htm"><i class="fa fa-caret-right"></i> Computer Programming </a></li>
<li><a href="/computer_science_tutorials.htm"><i class="fa fa-caret-right"></i> Computer Science </a></li>
<li><a href="/database_tutorials.htm"><i class="fa fa-caret-right"></i> Databases </a></li>
<li><a href="/devops_tutorials.htm"><i class="fa fa-caret-right"></i> DevOps </a></li>
<li><a href="/digital_marketing_tutorials.htm"><i class="fa fa-caret-right"></i> Digital Marketing </a></li>
<li><a href="/engineering_tutorials.htm"><i class="fa fa-caret-right"></i> Engineering Tutorials </a></li>
<li><a href="/upsc_ias_exams.htm"><i class="fa fa-caret-right"></i> Exams Syllabus </a></li>
<li><a href="/famous_monuments.htm"><i class="fa fa-caret-right"></i> Famous Monuments </a></li>
<li><a href="/gate_exams_tutorials.htm"><i class="fa fa-caret-right"></i> GATE Exams Tutorials</a></li>
<li><a href="/latest_technologies.htm"><i class="fa fa-caret-right"></i> Latest Technologies </a></li>
<li><a href="/machine_learning_tutorials.htm"><i class="fa fa-caret-right"></i> Machine Learning </a></li>
<li><a href="/mainframe_tutorials.htm"><i class="fa fa-caret-right"></i> Mainframe Development </a></li>
<li><a href="/management_tutorials.htm"><i class="fa fa-caret-right"></i> Management Tutorials </a></li>
<li><a href="/maths_tutorials.htm"><i class="fa fa-caret-right"></i> Mathematics Tutorials</a></li>
<li><a href="/microsoft_technologies_tutorials.htm"><i class="fa fa-caret-right"></i> Microsoft Technologies </a></li>
<li><a href="/misc_tutorials.htm"><i class="fa fa-caret-right"></i> Misc tutorials </a></li>
<li><a href="/mobile_development_tutorials.htm"><i class="fa fa-caret-right"></i> Mobile Development </a></li>
<li><a href="/java_technology_tutorials.htm"><i class="fa fa-caret-right"></i> Java Technologies </a></li>
<li><a href="/python_technologies_tutorials.htm"><i class="fa fa-caret-right"></i> Python Technologies </a></li>
<li><a href="/sap_tutorials.htm"><i class="fa fa-caret-right"></i> SAP Tutorials </a></li>
<li><a href="/scripting_lnaguage_tutorials.htm"><i class="fa fa-caret-right"></i>Programming Scripts </a></li>
<li><a href="/selected_reading.htm"><i class="fa fa-caret-right"></i> Selected Reading </a></li>
<li><a href="/software_quality_tutorials.htm"><i class="fa fa-caret-right"></i> Software Quality </a></li>
<li><a href="/soft_skill_tutorials.htm"><i class="fa fa-caret-right"></i> Soft Skills </a></li>
<li><a href="/telecom_tutorials.htm"><i class="fa fa-caret-right"></i> Telecom Tutorials </a></li>
<li><a href="/upsc_ias_exams.htm"><i class="fa fa-caret-right"></i> UPSC IAS Exams </a></li>
<li><a href="/web_development_tutorials.htm"><i class="fa fa-caret-right"></i> Web Development </a></li>
<li><a href="/sports_tutorials.htm"><i class="fa fa-caret-right"></i> Sports Tutorials </a></li>
<li><a href="/xml_technologies_tutorials.htm"><i class="fa fa-caret-right"></i> XML Technologies </a></li>
<li><a href="/multi_language_tutorials.htm"><i class="fa fa-caret-right"></i> Multi-Language Tutorials</a></li>
<li><a href="/questions_and_answers.htm"><i class="fa fa-caret-right"></i> Interview Questions</a></li>
</ul>
</li>
</ul>
<div class="clear"></div>
</div> 
</div>
<div class="right-menu">
<div class="toc-toggle">
<a href="javascript:void(0);"><i class="fa fa-bars"></i></a>
</div>
<div class="mobile-search-btn">
<a href="https://www.tutorialspoint.com/search.htm"><i class="fal fa-search"></i></a>
</div>
<div class="search-box">
<form method="get" class="" name="searchform" action="https://www.google.com/search" target="_blank" novalidate="">
<input type="hidden" name="sitesearch" value="www.tutorialspoint.com" class="user-valid valid">
<input class="header-search-box" type="text" id="search-string" name="q" placeholder="Search your favorite tutorials..." onfocus="if (this.value == 'Search your favorite tutorials...') {this.value = '';}" onblur="if (this.value == '') {this.value = 'Search your favorite tutorials...';}" autocomplete="off">
<button><i class="fal fa-search"></i></button>
</form>
</div>
<div class="menu-btn library-btn">
<a href="https://www.tutorialspoint.com/tutorialslibrary.htm"><i class="fal fa-cubes"></i> <span>Library</span></a>
</div>
<div class="menu-btn videos-btn">
<a href="https://www.tutorialspoint.com/videotutorials/index.htm"><i class="fal fa-video"></i> <span>Videos</span></a> 
</div>
<div class="menu-btn videos-btn">
<a href="https://www.tutorialspoint.com/questions/index.php"><i class="fa fa-location-arrow"></i> <span>Q/A</span></a>
</div>
<div class="menu-btn ebooks-btn">
<a href="https://store.tutorialspoint.com"><i class="fal fa-book"></i> <span>eBooks</span></a>
</div>
<div class="mui-dropdown">
<button class="mui-btn mui-btn--primary" data-mui-toggle="dropdown">
<span class="mui-caret"></span>
</button>
<ul class="mui-dropdown__menu">
<li><a href="https://www.tutorialspoint.com/tutorialslibrary.htm"><i class="fal fa-cubes"></i> <span>Library</span></a></li>
<li><a href="https://www.tutorialspoint.com/videotutorials/index.htm"><i class="fal fa-video"></i> <span>Videos</span></a></li>
<li><a href="https://store.tutorialspoint.com"><i class="fal fa-book"></i> <span>eBooks</span></a></li>
</ul>
</div>
</div>
</div>
</div>
<!-- Top main-menu Ends Here -->
</header>
<div class="mui-container-fluid content">
<div class="mui-container">
<!-- Tutorial ToC Starts Here -->
<div class="mui-col-md-3 tutorial-toc">
<div class="mini-logo">
<img src="/http/images/http-mini-logo.jpg" alt="HTTP Tutorial" />
</div>
<ul class="toc chapters">
<li class="heading">HTTP Tutorial</li>
<li><a target="_top" href="/http/index.htm">HTTP - Home</a></li>
<li><a target="_top" href="/http/http_overview.htm">HTTP - Overview</a></li>
<li><a target="_top" href="/http/http_parameters.htm">HTTP - Parameters</a></li>
<li><a target="_top" href="/http/http_messages.htm">HTTP - Messages</a></li>
<li><a target="_top" href="/http/http_requests.htm">HTTP - Requests</a></li>
<li><a target="_top" href="/http/http_responses.htm">HTTP - Responses</a></li>
<li><a target="_top" href="/http/http_methods.htm">HTTP - Methods</a></li>
<li><a target="_top" href="/http/http_status_codes.htm">HTTP - Status Codes</a></li>
<li><a target="_top" href="/http/http_header_fields.htm">HTTP - Header Fields</a></li>
<li><a target="_top" href="/http/http_caching.htm">HTTP  - Caching</a></li>
<li><a target="_top" href="/http/http_url_encoding.htm">HTTP  - URL Encoding</a></li>
<li><a target="_top" href="/http/http_security.htm">HTTP - Security</a></li>
<li><a target="_top" href="/http/http_message_examples.htm">HTTP - Message Examples</a></li>
</ul>
<ul class="toc chapters">
<li class="heading">HTTP Useful Resources</li>
<li><a target="_top" href="/http/http_quick_guide.htm">HTTP - Quick Guide</a></li>
<li><a target="_top" href="/http/http_useful_resources.htm">HTTP - Useful Resources</a></li>
<li><a target="_top" href="/http/http_discussion.htm">HTTP - Discussion</a></li>
</ul>
<ul class="toc reading">
<li class="sreading">Selected Reading</li>
<li><a target="_top" href="/upsc_ias_exams.htm">UPSC IAS Exams Notes</a></li>
<li><a target="_top" href="/developers_best_practices/index.htm">Developer's Best Practices</a></li>
<li><a target="_top" href="/questions_and_answers.htm">Questions and Answers</a></li>
<li><a target="_top" href="/effective_resume_writing.htm">Effective Resume Writing</a></li>
<li><a target="_top" href="/hr_interview_questions/index.htm">HR Interview Questions</a></li>
<li><a target="_top" href="/computer_glossary.htm">Computer Glossary</a></li>
<li><a target="_top" href="/computer_whoiswho.htm">Who is Who</a></li>
</ul>
</div>
<!-- Tutorial ToC Ends Here -->
<!-- Tutorial Content Starts Here -->
<div class="mui-col-md-6 tutorial-content">
<h1>HTTP - Header Fields</h1>
<hr />
<div class="top-ad-heading">Advertisements</div>
<div style="text-align: center;">
<script><!--
google_ad_client = "pub-7133395778201029";
var width = document.getElementsByClassName("tutorial-content")[0].clientWidth - 40;
google_ad_width = width;
google_ad_height = 150;
google_ad_format = width + "x150_as";
google_ad_type = "image";
google_ad_channel = "";
//--></script>
<script src="https://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</div>
<div class="mui-container-fluid button-borders">
<div class="pre-btn">
<a href="/http/http_status_codes.htm"><i class="fal fa-chevron-circle-left"></i> Previous Page</a>
</div>
<div class="nxt-btn">
<a href="/http/http_caching.htm">Next Page <i class="fal fa-chevron-circle-right"></i>&nbsp;</a>
</div>
</div>
<div class="clearer"></div>
<p>HTTP header fields provide required information about the request or response, or about the object sent in the message body. There are four types of HTTP message headers:</p>
<ul class="list">
<li><p><b>General-header:</b> These header fields have general applicability for both request and response messages.</p></li>
<li><p><b>Client Request-header:</b> These header fields have  applicability only for request messages.</p></li>
<li><p><b>Server Response-header:</b> These header fields have  applicability only for response messages.</p></li>
<li><p><b>Entity-header:</b> These header fields define meta information about the entity-body or, if no body is present, about the resource identified by the request.</p></li>
</ul>
<h2>General Headers</h2>
<h3>Cache-Control</h3>
<p>The Cache-Control general-header field is used to specify directives that MUST be obeyed by all the caching system. The syntax is as follows:</p>
<pre class="result notranslate">
Cache-Control : cache-request-directive|cache-response-directive
</pre>
<p>An HTTP client or server can use the <b>Cache-control</b> general header to specify parameters for the cache or to request certain kinds of documents from the cache. The caching directives are specified in a comma-separated list. For example:</p>
<pre class="result notranslate">
Cache-control: no-cache
</pre>
<p>The following table lists the important cache request directives that can be used by the client in its HTTP request:</p>
<table class="table table-bordered">
<tr>
<th>S.N.</th>
<th>Cache Request Directive and Description</th>
</tr>
<tr>
<td>1</td>
<td><b>no-cache</b><p>A cache must not use the response to satisfy a subsequent request without successful revalidation with the origin server. </p></td>
</tr>
<tr>
<td>2</td>
<td><b>no-store</b><p>The cache should not store anything about the client request or server response.</p></td>
</tr>
<tr>
<td>3</td>
<td><b>max-age = seconds</b><p>Indicates that the client is willing to accept a response whose age is not greater than the specified time in seconds.</p></td>
</tr>
<tr>
<td>4</td>
<td><b>max-stale [ = seconds ]</b><p>Indicates that the client is willing to accept a response that has exceeded its expiration time. If seconds are given, it must not be expired by more than that time.</p></td>
</tr>
<tr>
<td>5</td>
<td><b>min-fresh = seconds</b><p>Indicates that the client is willing to accept a response whose freshness lifetime is not less than its current age plus the specified time in seconds.</p></td>
</tr>
<tr>
<td>6</td>
<td><b>no-transform</b><p>Does not convert the entity-body.</p></td>
</tr>
<tr>
<td>7</td>
<td><b>only-if-cached</b><p>Does not retrieve new data. The cache can send a document only if it is in the cache, and should not contact the origin-server to see if a newer copy exists.</p></td>
</tr>
</table>
<p>The following important cache response directives that can be used by the server in its HTTP response:</p>
<table class="table table-bordered">
<tr>
<th>S.N.</th>
<th>Cache Response Directive and Description</th>
</tr>
<tr>
<td>1</td>
<td><b>public</b><p>Indicates that the response may be cached by any cache.</p></td>
</tr>
<tr>
<td>2</td>
<td><b>private</b><p>Indicates that all or part of the response message is intended for a single user and must not be cached by a shared cache.</p></td>
</tr>
<tr>
<td>3</td>
<td><b>no-cache</b><p>A cache must not use the response to satisfy a subsequent request without successful re-validation with the origin server.</p></td>
</tr>
<tr>
<td>4</td>
<td><b>no-store</b><p>The cache should not store anything about the client request or server response.</p></td>
</tr>
<tr>
<td>5</td>
<td><b>no-transform</b><p>Does not convert the entity-body.</p></td>
</tr>
<tr>
<td>6</td>
<td><b>must-revalidate</b><p>The cache must verify the status of the stale documents before using it and expired ones should not be used.</p></td>
</tr>
<tr>
<td>7</td>
<td><b>proxy-revalidate</b><p>The proxy-revalidate directive has the same meaning as the must- revalidate directive, except that it does not apply to non-shared user agent caches.</p></td>
</tr>
<tr>
<td>8</td>
<td><b>max-age = seconds</b><p>Indicates that the client is willing to accept a response whose age is not greater than the specified time in seconds.</p></td>
</tr>
<tr>
<td>9</td>
<td><b>s-maxage = seconds</b><p>The maximum age specified by this directive overrides the maximum age specified by either the max-age directive or the Expires header. The s-maxage directive is always ignored by a private cache.</p></td>
</tr>
</table>
<h3>Connection</h3>
<p>The Connection general-header field allows the sender to specify options that are desired for that particular connection and must not be communicated by proxies over further connections. Following is the simple syntax for using connection header:</p>
<pre class="result notranslate">
Connection : "Connection"
</pre>
<p>HTTP/1.1 defines the "close" connection option for the sender to signal that the connection will be closed after completion of the response. For example:</p>
<pre class="result notranslate">
Connection: close
</pre>
<p>By default, HTTP 1.1 uses persistent connections, where the  connection does not automatically close after a transaction. HTTP 1.0, on the other hand, does not have persistent connections by default. If a 1.0 client wishes to use persistent connections, it uses the <b>keep-alive</b> parameter as follows:</p>
<pre class="result notranslate">
Connection: keep-alive
</pre>
<h3>Date</h3>
<p>All HTTP date/time stamps MUST be represented in Greenwich Mean Time (GMT), without exception. HTTP applications are allowed to use any of the following three representations of date/time stamps:</p>
<pre class="result notranslate">
Sun, 06 Nov 1994 08:49:37 GMT  ; RFC 822, updated by RFC 1123
Sunday, 06-Nov-94 08:49:37 GMT ; RFC 850, obsoleted by RFC 1036
Sun Nov  6 08:49:37 1994       ; ANSI C's asctime() format
</pre>
<p>Here the first format is the most preferred one.</p>
<h3>Pragma</h3>
<p>The Pragma general-header field is used to include implementation specific directives that might apply to any recipient along the request/response chain. For example:</p>
<pre class="result notranslate">
Pragma: no-cache
</pre>
<p>The only directive defined in HTTP/1.0 is the no-cache directive and is maintained in HTTP 1.1 for backward compatibility. No new Pragma directives will be defined in the future.</p>
<h3>Trailer</h3>
<p>The Trailer general field value indicates that the given set of header fields is present in the trailer of a message encoded with chunked transfer-coding. Following is the syntax of Trailer header field:</p>
<pre class="result notranslate">
Trailer : field-name
</pre>
<p>Message header fields listed in the Trailer header field must not include the following header fields:</p>
<ul class="list">
<li><p>Transfer-Encoding</p></li>
<li><p>Content-Length</p></li>
<li><p>Trailer</p></li>
</ul>
<h3>Transfer-Encoding</h3>
<p>The <i>Transfer-Encoding</i> general-header field indicates what type of transformation has been applied to the message body in order to safely transfer it between the sender and the recipient. This is not the same as content-encoding because transfer-encodings are a property of the message, not of the entity-body. The syntax of Transfer-Encoding header field is as follows:</p>
<pre class="result notranslate">
Transfer-Encoding: chunked
</pre>
<p>All transfer-coding values are case-insensitive.</p>
<h3>Upgrade</h3>
<p>The <i>Upgrade</i> general-header allows the client to specify what additional communication protocols it supports and would like to use if the server finds it appropriate to switch protocols. For example:</p>
<pre class="result notranslate">
Upgrade: HTTP/2.0, SHTTP/1.3, IRC/6.9, RTA/x11
</pre>
<p>The Upgrade header field is intended to provide a simple mechanism for transition from HTTP/1.1 to some other, incompatible protocol.</p>
<h3>Via</h3>
<p>The <i>Via</i> general-header must be used by gateways and proxies to indicate the intermediate protocols and recipients.  For example, a request message could be sent from an HTTP/1.0 user agent to an internal proxy code-named "fred", which uses HTTP/1.1 to forward the request to a public proxy at nowhere.com, which completes the request by forwarding it to the origin server at www.ics.uci.edu. The request received by www.ics.uci.edu would then have the following Via header field:</p>
<pre class="result notranslate">
Via: 1.0 fred, 1.1 nowhere.com (Apache/1.1)
</pre>
<p>The Upgrade header field is intended to provide a simple mechanism for transition from HTTP/1.1 to some other, incompatible protocol.</p>
<h3>Warning</h3>
<p>The <i>Warning</i> general-header is used to carry additional information about the status or transformation of a message which might not be reflected in the message. A response may carry more than one Warning header.</p>
<pre class="result notranslate">
Warning : warn-code SP warn-agent SP warn-text SP warn-date
</pre>
<h2>Client Request Headers</h2>
<h3>Accept</h3>
<p>The <i>Accept</i> request-header field can be used to specify certain media types which are acceptable for the response. The general syntax is as follows:</p>
<pre class="result notranslate">
Accept: type/subtype [q=qvalue]
</pre>
<p>Multiple media types can be listed separated by commas and  the optional qvalue represents an acceptable quality level for accept types on a scale of 0 to 1. Following is an example:</p>
<pre class="result notranslate">
Accept: text/plain; q=0.5, text/html, text/x-dvi; q=0.8, text/x-c
</pre>
<p>This would be interpreted as <b>text/html</b> and <b>text/x-c</b> and are the preferred media types, but if they do not exist, then send the <b>text/x-dvi</b> entity, and if that does not exist, send the <b>text/plain</b> entity.</p>
<h3>Accept-Charset</h3>
<p>The <i>Accept-Charset</i> request-header field can be used to indicate what character sets are acceptable for the response. Following is the general syntax:</p>
<pre class="result notranslate">
Accept-Charset: character_set [q=qvalue]
</pre>
<p>Multiple character sets can be listed separated by commas and  the optional qvalue represents an acceptable quality level for nonpreferred character sets on a scale of 0 to 1. Following is an example:</p>
<pre class="result notranslate">
Accept-Charset: iso-8859-5, unicode-1-1; q=0.8
</pre>
<p>The special value "*", if present in the <b>Accept-Charset</b> field, matches every character set and if no <b>Accept-Charset</b> header is present, the default is that any character set is acceptable.</p>
<h3>Accept-Encoding</h3>
<p>The <i>Accept-Encoding</i> request-header field is similar to Accept, but restricts the content-codings that are acceptable in the response. The general syntax is:</p>
<pre class="result notranslate">
Accept-Encoding: encoding types
</pre>
<p>Examples are as follows:</p>
<pre class="result notranslate">
Accept-Encoding: compress, gzip
Accept-Encoding:
Accept-Encoding: *
Accept-Encoding: compress;q=0.5, gzip;q=1.0
Accept-Encoding: gzip;q=1.0, identity; q=0.5, *;q=0
</pre>
<h3>Accept-Language</h3>
<p>The <i>Accept-Language</i> request-header field is similar to Accept, but restricts the set of natural languages that are preferred as a response to the request. The general syntax is:</p>
<pre class="result notranslate">
Accept-Language: language [q=qvalue]
</pre>
<p>Multiple languages can be listed separated by commas and  the optional qvalue represents an acceptable quality level for non preferred languages on a scale of 0 to 1. Following is an example:</p>
<pre class="result notranslate">
Accept-Language: da, en-gb;q=0.8, en;q=0.7
</pre>
<h3>Authorization</h3>
<p>The <i>Authorization</i> request-header field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested. The general syntax is:</p>
<pre class="result notranslate">
Authorization : credentials
</pre>
<p>The HTTP/1.0 specification defines the BASIC authorization scheme, where the authorization parameter is the string of <b>username:password</b> encoded in base 64. Following is an example:</p>
<pre class="result notranslate">
Authorization: BASIC Z3Vlc3Q6Z3Vlc3QxMjM=
</pre>
<p>The value decodes into is <b>guest:guest123</b> where <b>guest</b> is user ID and <b>guest123</b> is the password.</p>
<h3>Cookie</h3>
<p>The <i>Cookie</i> request-header  field value contains a name/value pair of information stored for that URL. Following is the general syntax:</p>
<pre class="result notranslate">
Cookie: name=value
</pre>
<p>Multiple cookies can be specified separated by semicolons as follows:</p>
<pre class="result notranslate">
Cookie: name1=value1;name2=value2;name3=value3
</pre>
<h3>Expect</h3>
<p>The <i>Expect</i> request-header field is used to indicate that a particular set of server behaviors is required by the client. The general syntax is:</p>
<pre class="result notranslate">
Expect : 100-continue | expectation-extension
</pre>
<p>If a server receives a request containing an Expect field that includes an expectation-extension that it does not support, it must respond with a 417 (Expectation Failed) status.</p>
<h3>From</h3>
<p>The <i>From</i> request-header field contains an Internet e-mail address for the human user who controls the requesting user agent. Following is a simple example:</p>
<pre class="result notranslate">
From: webmaster@w3.org
</pre>
<p>This header field may be used for logging purposes and as a means for identifying the source of invalid or unwanted requests.</p>
<h3>Host</h3>
<p>The <i>Host</i> request-header field is used to specify the Internet host and the port number of the resource being requested. The general syntax is:</p>
<pre class="result notranslate">
Host : "Host" ":" host [ ":" port ] ;
</pre>
<p>A <b>host</b> without any trailing port information implies the default port, which is 80. For example, a request on the origin server for <i>http://www.w3.org/pub/WWW/</i> would be:</p>
<pre class="result notranslate">
GET /pub/WWW/ HTTP/1.1
Host: www.w3.org
</pre>
<h3>If-Match</h3>
<p>The <i>If-Match</i> request-header field is used with a method to make it conditional. This header requests the server to perform the requested method only if the given value in this tag matches the given entity tags represented by <b>ETag</b>. The general syntax is:</p>
<pre class="result notranslate">
If-Match : entity-tag
</pre>
<p>An asterisk (*) matches any entity, and the transaction continues only if the entity exists. Following are possible examples:</p>
<pre class="result notranslate">
If-Match: "xyzzy"
If-Match: "xyzzy", "r2d2xxxx", "c3piozzzz"
If-Match: *
</pre>
<p>If none of the entity tags match, or if "*" is given and no current entity exists, the server must not perform the requested method, and must return a 412 (Precondition Failed) response.</p>
<h3>If-Modified-Since</h3>
<p>The <i>If-Modified-Since</i> request-header field is used with a method to make it conditional. If the requested URL has not been modified since the time specified in this field, an entity will not be returned from the server; instead, a 304 (not modified) response will be returned without any message-body. The general syntax of if-modified-since is:</p>
<pre class="result notranslate">
If-Modified-Since : HTTP-date
</pre>
<p>An example of the field is:</p>
<pre class="result notranslate">
If-Modified-Since: Sat, 29 Oct 1994 19:43:31 GMT
</pre>
<p>If none of the entity tags match, or if "*" is given and no current entity exists, the server must not perform the requested method, and must return a 412 (Precondition Failed) response.</p>
<h3>If-None-Match</h3>
<p>The <i>If-None-Match</i> request-header field is used with a method to make it conditional. This header requests the server to perform the requested method only if one of the given value in this tag matches the given entity tags represented by <b>ETag</b>. The general syntax is:</p>
<pre class="result notranslate">
If-None-Match : entity-tag
</pre>
<p>An asterisk (*) matches any entity, and the transaction continues only if the entity does not exist. Following are the possible examples:</p>
<pre class="result notranslate">
If-None-Match: "xyzzy"
If-None-Match: "xyzzy", "r2d2xxxx", "c3piozzzz"
If-None-Match: *
</pre>
<h3>If-Range</h3>
<p>The <i>If-Range</i> request-header field can be used with a conditional GET to request only the portion of the entity that is missing, if it has not been changed, and the entire entity if it has been changed. The general syntax is as follows:</p>
<pre class="result notranslate">
If-Range : entity-tag | HTTP-date
</pre>
<p>Either an entity tag or a date can be used to identify the partial entity already received.  For example:</p>
<pre class="result notranslate">
If-Range: Sat, 29 Oct 1994 19:43:31 GMT
</pre>
<p>Here if the document has not been modified since the given date, the server returns the byte range given by the Range header, otherwise it returns all of the new document.</p>
<h3>If-Unmodified-Since</h3>
<p>The <i>If-Unmodified-Since</i> request-header field is used with a method to make it conditional. The general syntax is:</p>
<pre class="result notranslate">
If-Unmodified-Since : HTTP-date
</pre>
<p>If the requested resource has not been modified since the time specified in this field, the server should perform the requested operation as if the If-Unmodified-Since header were not present. For example:</p>
<pre class="result notranslate">
If-Unmodified-Since: Sat, 29 Oct 1994 19:43:31 GMT
</pre>
<p>If the request results in anything other than a 2xx or 412 status, the <i>If-Unmodified-Since</i> header should be ignored.</p>
<h3>Max-Forwards</h3>
<p>The <i>Max-Forwards</i> request-header field provides a mechanism with the TRACE and OPTIONS methods to limit the number of proxies or gateways that can forward the request to the next inbound server. Here is the general syntax:</p>
<pre class="result notranslate">
Max-Forwards : n
</pre>
<p>The Max-Forwards value is a decimal integer indicating the remaining number of times this request message may be forwarded. This is useful for debugging with the TRACE method, avoiding infinite loops.  For example:</p>
<pre class="result notranslate">
Max-Forwards : 5
</pre>
<p>The Max-Forwards header field may be ignored for all other methods defined in the HTTP specification.</p>
<h3>Proxy-Authorization</h3>
<p>The <i>Proxy-Authorization</i> request-header field allows the client to identify itself (or its user) to a proxy which requires authentication. Here is the general syntax:</p>
<pre class="result notranslate">
Proxy-Authorization : credentials
</pre>
<p>The Proxy-Authorization field value consists of credentials containing the authentication information of the user agent for the proxy and/or realm of the resource being requested.</p>
<h3>Range</h3>
<p>The <i>Range</i> request-header field specifies the partial range(s) of the content requested from the document. The general syntax is:</p>
<pre class="result notranslate">
Range: bytes-unit=first-byte-pos "-" [last-byte-pos]
</pre>
<p>The first-byte-pos value in a byte-range-spec gives the byte-offset of the first byte in a range. The last-byte-pos value gives the byte-offset of the last byte in the range; that is, the byte positions specified are inclusive. You can specify a byte-unit as bytes. Byte offsets start at zero.  Some simple examples are as follows:</p>
<pre class="result notranslate">
- The first 500 bytes 
Range: bytes=0-499

- The second 500 bytes
Range: bytes=500-999

- The final 500 bytes
Range: bytes=-500

- The first and last bytes only
Range: bytes=0-0,-1
</pre>
<p>Multiple ranges can be listed, separated by commas. If the first digit in the comma-separated byte range(s) is missing, the range is assumed to count from the end of the document. If the second digit is missing, the range is byte n to the end of the document.</p>
<h3>Referer</h3>
<p>The <i>Referer</i> request-header field allows the client to specify the address (URI) of the resource from which the URL has been requested. The general syntax is as follows:</p>
<pre class="result notranslate">
Referer : absoluteURI | relativeURI
</pre>
<p>Following is a simple example:</p>
<pre class="result notranslate">
Referer: http://www.tutorialspoint.org/http/index.htm
</pre>
<p>If the field value is a relative URI, it should be interpreted relative to the <i>Request-URI</i>.</p>
<h3>TE</h3>
<p>The <i>TE</i> request-header field indicates what extension <i>transfer-coding</i> it is willing to accept in the response and whether or not it is willing to accept trailer fields in a chunked <i>transfer-coding</i>. Following is the general syntax:</p>
<pre class="result notranslate">
TE   : t-codings
</pre>
<p>The presence of the keyword "trailers" indicates that the client is willing to accept trailer fields in a chunked transfer-coding and it is specified either of the ways:</p>
<pre class="result notranslate">
TE: deflate
TE:
TE: trailers, deflate;q=0.5
</pre>
<p>If the TE field-value is empty or if no TE field is present, then only transfer-coding is <i>chunked</i>. A message with no transfer-coding is always acceptable.</p>
<h3>User-Agent</h3>
<p>The <i>User-Agent</i> request-header field contains information about the user agent originating the request. Following is the general syntax:</p>
<pre class="replace notranslate">
User-Agent : product | comment
</pre>
<p>Example:</p>
<pre class="result notranslate">
User-Agent: Mozilla/4.0 (compatible; MSIE5.01; Windows NT)
</pre>
<h2>Server Response Headers</h2>
<h3>Accept-Ranges</h3>
<p>The <i>Accept-Ranges</i> response-header field allows the server to indicate its acceptance of range requests for a resource. The general syntax is:</p>
<pre class="result notranslate">
Accept-Ranges  : range-unit | none
</pre>
<p>For example a  server that accepts byte-range requests may send:</p>
<pre class="result notranslate">
Accept-Ranges: bytes
</pre>
<p> Servers that do not accept any kind of range request for a resource may send:</p>
<pre class="result notranslate">
Accept-Ranges: none
</pre>
<p>This will advise the client not to attempt a range request.</p>
<h3>Age</h3>
<p>The <i>Age</i> response-header field conveys the sender's estimate of the amount of time since the response (or its revalidation) was generated at the origin server. The general syntax is:</p>
<pre class="result notranslate">
Age : delta-seconds
</pre>
<p>Age values are non-negative decimal integers, representing time in seconds. Following is a simple example:</p>
<pre class="result notranslate">
Age: 1030
</pre>
<p>An HTTP/1.1 server that includes a cache must include an Age header field in every response generated from its own cache.</p>
<h3>ETag</h3>
<p>The <i>ETag</i> response-header field provides the current value of the entity tag for the requested variant. The general syntax is:</p>
<pre class="result notranslate">
ETag :  entity-tag
</pre>
<p>Here are some simple examples:</p>
<pre class="result notranslate">
ETag: "xyzzy"
ETag: W/"xyzzy"
ETag: ""
</pre>
<h3>Location</h3>
<p>The <i>Location</i> response-header field is used to redirect the recipient to a location other than the Request-URI for completion. The general syntax is:</p>
<pre class="result notranslate">
Location : absoluteURI
</pre>
<p>Following is a simple example:</p>
<pre class="result notranslate">
Location: http://www.tutorialspoint.org/http/index.htm
</pre>
<p>The Content-Location header field differs from Location in that the Content-Location identifies the original location of the entity enclosed in the request.</p>
<h3>Proxy-Authenticate</h3>
<p>The <i>Proxy-Authenticate</i> response-header field must be included as a part of a 407 (Proxy Authentication Required) response. The general syntax is:</p>
<pre class="result notranslate">
Proxy-Authenticate  : challenge
</pre>
<h3>Retry-After</h3>
<p>The <i>Retry-After</i> response-header field can be used with a 503 (Service Unavailable) response to indicate how long the service is expected to be unavailable to the requesting client. The general syntax is:</p>
<pre class="result notranslate">
Retry-After : HTTP-date | delta-seconds
</pre>
<p>Examples:</p>
<pre class="result notranslate">
Retry-After: Fri, 31 Dec 1999 23:59:59 GMT
Retry-After: 120
</pre>
<p>In the latter example, the delay is 2 minutes.</p>
<h3>Server</h3>
<p>The <i>Server</i> response-header field contains information about the software used by the origin server to handle the request. The general syntax is:</p>
<pre class="result notranslate">
Server : product | comment
</pre>
<p>Following is a simple example:</p>
<pre class="result notranslate">
Server: Apache/2.2.14 (Win32)
</pre>
<p>If the response is being forwarded through a proxy, the proxy application must not modify the Server response-header.</p>
<h3>Set-Cookie</h3>
<p>The <i>Set-Cookie</i> response-header field contains a name/value pair of information to retain for this URL. The general syntax is:</p>
<pre class="result notranslate">
Set-Cookie: NAME=VALUE; OPTIONS
</pre>
<p>Set-Cookie response header comprises the token Set-Cookie, followed by a comma-separated list of one or more cookies. Here are the possible values you can specify as options:</p>
<table class="table table-bordered">
<tr>
<th>S.N.</th>
<th>Options and Description</th>
</tr>
<tr>
<td>1</td>
<td><b>Comment=comment</b><p>This option can be used to specify any comment associated with the cookie.</p></td>
</tr>
<tr>
<td>2</td>
<td><b> Domain=domain</b><p> The Domain attribute specifies the domain for which the cookie is valid.</p></td>
</tr>
<tr>
<td>3</td>
<td><b>Expires=Date-time</b><p>The date the cookie will expire. If it is blank, the cookie will expire when the visitor quits the browser.</p></td>
</tr>
<tr>
<td>4</td>
<td><b> Path=path</b><p>The Path attribute specifies the subset of URLs to which this cookie applies.</p></td>
</tr>
<tr>
<td>5</td>
<td><b>Secure</b><p>It instructs the user agent to return the cookie only under a secure connection.</p></td>
</tr>
</table>
<p>Following is an example of a simple cookie header generated by the server:</p>
<pre class="result notranslate">
Set-Cookie: name1=value1,name2=value2; Expires=Wed, 09 Jun 2021 10:18:14 GMT
</pre>
<h3>Vary</h3>
<p>The <i>Vary</i> response-header field specifies that the entity has multiple sources and may therefore vary according to the specified list of request header(s). Following is the general syntax:</p>
<pre class="result notranslate">
Vary : field-name
</pre>
<p>You can specify multiple headers separated by commas and a value of asterisk "*" signals that unspecified parameters are not limited to the request-headers. Following is a simple example:</p>
<pre class="result notranslate">
Vary: Accept-Language, Accept-Encoding
</pre>
<p>Here field names are case-insensitive.</p>
<h3>WWW-Authenticate</h3>
<p>The <i>WWW-Authenticate</i> response-header field must be included in 401 (Unauthorized) response messages. The field value consists of at least one challenge that indicates the authentication scheme(s) and parameters applicable to the Request-URI. The general syntax is:</p>
<pre class="result notranslate">
WWW-Authenticate : challenge
</pre>
<p>WWW- Authenticate field value might contain more than one challenge, or if more than one WWW-Authenticate header field is provided, the contents of a challenge itself can contain a comma-separated list of authentication parameters. Following is a simple example:</p>
<pre class="result notranslate">
WWW-Authenticate: BASIC realm="Admin"
</pre>
<h2>Entity Headers</h2>
<h3>Allow</h3>
<p>The <i>Allow</i> entity-header field lists the set of methods supported by the resource identified by the Request-URI. The general syntax is:</p>
<pre class="result notranslate">
Allow : Method
</pre>
<p>You can specify multiple methods separated by commas. Following is a simple example:</p>
<pre class="result notranslate">
Allow: GET, HEAD, PUT
</pre>
<p>This field cannot prevent a client from trying other methods.</p>
<h3>Content-Encoding</h3>
<p>The <i>Content-Encoding</i> entity-header field is used as a modifier to the media-type. The general syntax is:</p>
<pre class="result notranslate">
Content-Encoding : content-coding
</pre>
<p>The content-coding is a characteristic of the entity identified by the Request-URI. Following is a simple example:</p>
<pre class="result notranslate">
Content-Encoding: gzip
</pre>
<p>If the content-coding of an entity in a request message is not acceptable to the origin server, the server should respond with a status code of 415 (Unsupported Media Type).</p>
<h3>Content-Language</h3>
<p>The <i>Content-Language</i> entity-header field describes the natural language(s) of the intended audience for the enclosed entity. Following is the general syntax:</p>
<pre class="result notranslate">
Content-Language : language-tag
</pre>
<p>Multiple languages may be listed for content that is intended for multiple audiences. Following is a simple example:</p>
<pre class="result notranslate">
Content-Language: mi, en
</pre>
<p>The primary purpose of Content-Language is to allow a user to identify and differentiate entities according to the user's own preferred language.</p>
<h3>Content-Length</h3>
<p>The <i>Content-Length</i> entity-header field indicates the size of the entity-body, in decimal number of OCTETs, sent to the recipient or, in the case of the HEAD method, the size of the entity-body that would have been sent, had the request been a GET. The general syntax is:</p>
<pre class="result notranslate">
Content-Length : DIGITS
</pre>
<p>Following is a simple example:</p>
<pre class="result notranslate">
Content-Length: 3495
</pre>
<p>Any Content-Length greater than or equal to zero is a valid value.</p>
<h3>Content-Location</h3>
<p>The <i>Content-Location</i> entity-header field may be used to supply the resource location for the entity enclosed in the message when that entity is accessible from a location separate from the requested resource's URI. The general syntax is:</p>
<pre class="result notranslate">
Content-Location:  absoluteURI | relativeURI 
</pre>
<p>Following is a simple example:</p>
<pre class="result notranslate">
Content-Location: http://www.tutorialspoint.org/http/index.htm
</pre>
<p>The value of Content-Location also defines the base URI for the entity. </p>
<h3>Content-MD5</h3>
<p>The <i>Content-MD5</i> entity-header field may be used to supply an MD5 digest of the entity for checking the integrity
of the message upon receipt. The general syntax is:</p>
<pre class="result notranslate">
Content-MD5  : md5-digest using base64 of 128 bit MD5 digest as per RFC 1864
</pre>
<p>Following is a simple example:</p>
<pre class="result notranslate">
Content-MD5  : 8c2d46911f3f5a326455f0ed7a8ed3b3
</pre>
<p>The MD5 digest is computed based on the content of the entity-body, including any content-coding that has been applied, but not including any transfer-encoding applied to the message-body.</p>
<h3>Content-Range</h3>
<p>The <i>Content-Range</i> entity-header field  is sent with a partial entity-body to specify where in the full entity-body the partial body should be applied. The general syntax is:</p>
<pre class="result notranslate">
Content-Range : bytes-unit SP first-byte-pos "-" last-byte-pos
</pre>
<p>Examples of byte-content-range-spec values, assuming that the entity contains a total of 1234 bytes:</p>
<pre class="result notranslate">
- The first 500 bytes:
Content-Range : bytes 0-499/1234

- The second 500 bytes:
Content-Range : bytes 500-999/1234

- All except for the first 500 bytes:
Content-Range : bytes 500-1233/1234

- The last 500 bytes:
Content-Range : bytes 734-1233/1234
</pre>
<p>When an HTTP message includes the content of a single range,  this content is transmitted with a Content-Range header, and a Content-Length header showing the number of bytes actually transferred. For example,</p>
<pre class="result notranslate">
HTTP/1.1 206 Partial content
Date: Wed, 15 Nov 1995 06:25:24 GMT
Last-Modified: Wed, 15 Nov 1995 04:58:08 GMT
Content-Range: bytes 21010-47021/47022
Content-Length: 26012
Content-Type: image/gif
</pre>
<h3>Content-Type</h3>
<p>The <i>Content-Type</i> entity-header field indicates the media type of the entity-body sent to the recipient or, in the case of the HEAD method, the media type that would have been sent, had the request been a GET. The general syntax is:</p>
<pre class="result notranslate">
Content-Type : media-type
</pre>
<p>Following is an example:</p>
<pre class="result notranslate">
Content-Type: text/html; charset=ISO-8859-4
</pre>
<h3>Expires</h3>
<p>The <i>Expires</i> entity-header field gives the date/time after which the response is considered stale. The general syntax is:</p>
<pre class="result notranslate">
Expires : HTTP-date
</pre>
<p>Following is an example:</p>
<pre class="result notranslate">
Expires: Thu, 01 Dec 1994 16:00:00 GMT
</pre>
<h3>Last-Modified</h3>
<p>The <i>Last-Modified</i> entity-header field indicates the date and time at which the origin server believes the variant was last modified. The general syntax is:</p>
<pre class="result notranslate">
Last-Modified: HTTP-date
</pre>
<p>Following is an example:</p>
<pre class="result notranslate">
Last-Modified: Tue, 15 Nov 1994 12:45:26 GMT
</pre>
<div class="mui-container-fluid button-borders show">
<div class="pre-btn">
<a href="/http/http_status_codes.htm"><i class="fal fa-chevron-circle-left"></i> Previous Page</a>
</div>
<div class="nxt-btn">
<a href="/http/http_caching.htm">Next Page <i class="fal fa-chevron-circle-right"></i>&nbsp;</a>
</div>
</div>
<div class="google-bottom-ads">
<div>Advertisements</div>
<script><!--
var width = 580;
var height = 400;
var format = "580x400_as";
if( window.innerWidth < 468 ){
   width = 300;
   height = 250;
   format = "300x250_as";
}
google_ad_client = "pub-7133395778201029";
google_ad_width = width;
google_ad_height = height;
google_ad_format = format;
google_ad_type = "image";
google_ad_channel ="";
//--></script>
<script src="https://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
<div class="space-bottom"></div>
</div>
</div>
<!-- Tutorial Content Ends Here -->
<!-- Right Column Starts Here -->
<div class="mui-col-md-2 google-right-ads">
<div class="space-top"></div>
<div class="google-right-ad" style="margin: 0px auto !important;margin-top:5px;">
<script><!--
google_ad_client = "pub-2537027957187252";
google_ad_width = 300;
google_ad_height = 250;
google_ad_format = "300x250_as";
google_ad_type = "image";
google_ad_channel ="";
//--></script>
<script src="https://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</div>
<div class="google-right-ad">
<div class="adsbyvli" data-ad-slot="vi_9012177"></div>
<script>(vitag.Init = window.vitag.Init || []).push(function(){viAPItag.display("vi_9012177")})</script>
</div>
<div class="space-bottom"></div>
<div class="google-right-ad">
<div class="adsbyvli" data-ad-slot="vi_9013289"></div>
<script>(vitag.Init = window.vitag.Init || []).push(function(){viAPItag.display("vi_9013289")})</script>
</div>
<div class="space-bottom" style="margin-bottom:15px;"></div>
</div>
<!-- Right Column Ends Here -->
</div>
</div>
<div class="clear"></div>
<footer id="footer">
<div class="mui--text-center">
<div class="mui--text-caption mui--text-light">
<a href="/index.htm" class="logo"><img class="img-responsive" src="/images/logo-black.png" alt="Tutorials Point" title="Tutorials Point"></a>
</div>
<ul class="mui-list--inline mui--text-body2 mui--text-light">
<li><a href="/about/index.htm"><i class="fal fa-globe"></i> About us</a></li>
<li><a href="/about/about_terms_of_use.htm"><i class="fal fa-asterisk"></i> Terms of use</a></li>
<li><a href="/about/about_privacy.htm#cookies"> <i class="fal fa-shield-check"></i> Cookies Policy</a></li>
<li><a href="/about/faq.htm"><i class="fal fa-question-circle"></i> FAQ's</a></li>
<li><a href="/about/about_helping.htm"><i class="fal fa-hands-helping"></i> Helping</a></li>
<li><a href="/about/contact_us.htm"><i class="fal fa-map-marker-alt"></i> Contact</a></li>
</ul>
<div class="mui--text-caption mui--text-light bottom-copyright-text">&copy; Copyright 2019. All Rights Reserved.</div>
</div>
<div id="privacy-banner">
  <div>
    <p>
      We use cookies to provide and improve our services. By using our site, you consent to our Cookies Policy.
      <a id="banner-accept" href="#">Accept</a>
      <a id="banner-learn" href="/about/about_cookies.htm" target="_blank">Learn more</a>
    </p>
  </div>
</div>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-232293-17"></script>
<script>
window.dataLayer = window.dataLayer || [];
function gtag(){dataLayer.push(arguments);}
gtag('js', new Date());
gtag('config', 'UA-232293-6');
</script>
</footer>
</body>
</html>
