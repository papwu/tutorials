<!DOCTYPE html>
<html lang="en-US">
<head>
<title>KnockoutJS - Components</title>
<meta charset="utf-8">
<meta name="description" content="KnockoutJS - Components - Components are a huge way of organizing the UI code for structuring a large application and promoting code reusability."/>
<meta name="keywords" content="C, C++, Python, Java, HTML, CSS, JavaScript, SQL, PHP, jQuery, XML, DOM, Bootstrap, Tutorials, Articles, Programming, training, learning, quiz, preferences, examples, code"/>
<link rel="canonical" href="https://www.tutorialspoint.com/knockoutjs/knockoutjs_components.htm" />
<link rel="shortcut icon" href="/favicon.ico" type="image/x-icon" />
<meta name="viewport" content="width=device-width,initial-scale=1.0,user-scalable=yes">
<script src="/theme/js/script-min-v2.js?v=3"></script>
<link rel="stylesheet" href="/theme/css/style-min-v2.css?v=6">
<script src="//services.bilsyndication.com/adv1/?d=901" defer="" async=""></script>
<script> var vitag = vitag || {};</script>
<script> vitag.outStreamConfig = { enablePC: false, enableMobile: false };</script>  
<style>
.right-menu .mui-btn {
    background-color:#f42b00;
}
a.demo {
    background:#f42b00;
}
li.heading {
    background:#f42b00;
}
.course-box{background:#f42b00}
.home-intro-sub p{color:#f42b00}
</style>
</head>
<body>
<header id="header">
<!-- Top sub-menu Starts Here -->
<div class="mui-appbar mui-container-fulid top-menu">
<div class="mui-container">
<div class="top-menu-item home">
<a href="https://www.tutorialspoint.com/index.htm" target="_blank" title="TutorialsPoint - Home"><i class="fal fa-home"></i> <span>Home</span></a>
</div>
<div class="top-menu-item qa">
<a href="https://www.tutorialspoint.com/about/about_careers.htm" target="_blank" title="Job @ Tutorials Point"><i class="fa fa-suitcase"></i> <span>Jobs</span></a>
</div>
<div class="top-menu-item tools">
<a href="https://www.tutorialspoint.com/online_dev_tools.htm" target="_blank" title="Tools - Online Development and Testing Tools"><i class="fal fa-cogs"></i> <span>Tools</span></a>
</div>
<div class="top-menu-item coding-ground">
<a href="https://www.tutorialspoint.com/codingground.htm" target="_blank" title="Coding Ground - Free Online IDE and Terminal"><i class="fal fa-code"></i> <span>Coding Ground </span></a> 
</div>
<div class="top-menu-item current-affairs">
<a href="https://www.tutorialspoint.com/current_affairs.htm" target="_blank" title="Daily Current Affairs"><i class="fal fa-layer-plus"></i> <span>Current Affairs</span></a>
</div>
<div class="top-menu-item upsc-notes">
<a href="https://www.tutorialspoint.com/upsc_ias_exams.htm" target="_blank" title="UPSC IAS Exams Notes - TutorialsPoint"><i class="fal fa-user-tie"></i> <span>UPSC Notes</span></a>
</div>      
<div class="top-menu-item online-tutoris">
<a href="https://www.tutorialspoint.com/tutor_connect/index.php" target="_blank" title="Top Online Tutors - Tutor Connect"><i class="fal fa-user"></i> <span>Online Tutors</span></a>
</div>
<div class="top-menu-item whiteboard">
<a href="https://www.tutorialspoint.com/whiteboard.htm" target="_blank" title="Free Online Whiteboard"><i class="fal fa-chalkboard"></i> <span>Whiteboard</span></a>
</div>
<div class="top-menu-item net-meeting">
<a href="https://www.tutorialspoint.com/netmeeting.php" target="_blank" title="A free tool for online video conferencing"><i class="fal fa-chalkboard-teacher"></i> <span>Net Meeting</span></a> 
</div>
<div class="top-menu-item articles">
<a href="https://www.tutorix.com" target="_blank" title="Tutorx - The Best Learning App" rel="nofollow"><i class="fal fa-video"></i> <span>Tutorix</span></a> 
</div>        
<div class="social-menu-item">
<a href="https://www.facebook.com/tutorialspointindia" target="_blank" rel="nofollow" data-placement="bottom" title="tutorialspoint @ Facebook"><i class="fab fa-facebook-f"></i></a> 
<a href="https://www.twitter.com/tutorialspoint" target="_blank" rel="nofollow" data-placement="bottom" title="tutorialspoint @ Twitter"><i class="fab fa-twitter"></i></a>
<a href="https://www.linkedin.com/company/tutorialspoint" target="_blank" rel="nofollow" data-placement="bottom" title="tutorialspoint @ Linkedin"><i class="fab fa-linkedin-in"></i></a>
<a href="https://www.youtube.com/channel/UCVLbzhxVTiTLiVKeGV7WEBg" target="_blank" rel="nofollow" data-placement="bottom" title="tutorialspoint YouTube"><i class="fab fa-youtube"></i></a>
</div>        
</div>
</div>
<!-- Top sub-menu Ends Here -->
<!-- Top main-menu Starts Here -->
<div class="mui-appbar mui-container-fulid mui--appbar-line-height mui--z1" id="logo-menu">
<div class="mui-container">
<div class="left-menu">
<a href="https://www.tutorialspoint.com/index.htm" title="Tutorialspoint">
<img class="tp-logo" alt="tutorialspoint" src="/knockoutjs/images/logo.png">
</a>
<div class="mui-dropdown">
<a class="mui-btn mui-btn--primary categories" data-mui-toggle="dropdown"><i class="fa fa-th-large"></i> 
<span>Categories <span class="mui-caret"></span></span></a>            
<ul class="mui-dropdown__menu cat-menu">
<li>
<ul>
<li><a href="/academic_tutorials.htm"><i class="fa fa-caret-right"></i> Academic Tutorials</a></li>
<li><a href="/big_data_tutorials.htm"><i class="fa fa-caret-right"></i> Big Data &amp; Analytics </a></li>
<li><a href="/computer_programming_tutorials.htm"><i class="fa fa-caret-right"></i> Computer Programming </a></li>
<li><a href="/computer_science_tutorials.htm"><i class="fa fa-caret-right"></i> Computer Science </a></li>
<li><a href="/database_tutorials.htm"><i class="fa fa-caret-right"></i> Databases </a></li>
<li><a href="/devops_tutorials.htm"><i class="fa fa-caret-right"></i> DevOps </a></li>
<li><a href="/digital_marketing_tutorials.htm"><i class="fa fa-caret-right"></i> Digital Marketing </a></li>
<li><a href="/engineering_tutorials.htm"><i class="fa fa-caret-right"></i> Engineering Tutorials </a></li>
<li><a href="/upsc_ias_exams.htm"><i class="fa fa-caret-right"></i> Exams Syllabus </a></li>
<li><a href="/famous_monuments.htm"><i class="fa fa-caret-right"></i> Famous Monuments </a></li>
<li><a href="/gate_exams_tutorials.htm"><i class="fa fa-caret-right"></i> GATE Exams Tutorials</a></li>
<li><a href="/latest_technologies.htm"><i class="fa fa-caret-right"></i> Latest Technologies </a></li>
<li><a href="/machine_learning_tutorials.htm"><i class="fa fa-caret-right"></i> Machine Learning </a></li>
<li><a href="/mainframe_tutorials.htm"><i class="fa fa-caret-right"></i> Mainframe Development </a></li>
<li><a href="/management_tutorials.htm"><i class="fa fa-caret-right"></i> Management Tutorials </a></li>
<li><a href="/maths_tutorials.htm"><i class="fa fa-caret-right"></i> Mathematics Tutorials</a></li>
<li><a href="/microsoft_technologies_tutorials.htm"><i class="fa fa-caret-right"></i> Microsoft Technologies </a></li>
<li><a href="/misc_tutorials.htm"><i class="fa fa-caret-right"></i> Misc tutorials </a></li>
<li><a href="/mobile_development_tutorials.htm"><i class="fa fa-caret-right"></i> Mobile Development </a></li>
<li><a href="/java_technology_tutorials.htm"><i class="fa fa-caret-right"></i> Java Technologies </a></li>
<li><a href="/python_technologies_tutorials.htm"><i class="fa fa-caret-right"></i> Python Technologies </a></li>
<li><a href="/sap_tutorials.htm"><i class="fa fa-caret-right"></i> SAP Tutorials </a></li>
<li><a href="/scripting_lnaguage_tutorials.htm"><i class="fa fa-caret-right"></i>Programming Scripts </a></li>
<li><a href="/selected_reading.htm"><i class="fa fa-caret-right"></i> Selected Reading </a></li>
<li><a href="/software_quality_tutorials.htm"><i class="fa fa-caret-right"></i> Software Quality </a></li>
<li><a href="/soft_skill_tutorials.htm"><i class="fa fa-caret-right"></i> Soft Skills </a></li>
<li><a href="/telecom_tutorials.htm"><i class="fa fa-caret-right"></i> Telecom Tutorials </a></li>
<li><a href="/upsc_ias_exams.htm"><i class="fa fa-caret-right"></i> UPSC IAS Exams </a></li>
<li><a href="/web_development_tutorials.htm"><i class="fa fa-caret-right"></i> Web Development </a></li>
<li><a href="/sports_tutorials.htm"><i class="fa fa-caret-right"></i> Sports Tutorials </a></li>
<li><a href="/xml_technologies_tutorials.htm"><i class="fa fa-caret-right"></i> XML Technologies </a></li>
<li><a href="/multi_language_tutorials.htm"><i class="fa fa-caret-right"></i> Multi-Language Tutorials</a></li>
<li><a href="/questions_and_answers.htm"><i class="fa fa-caret-right"></i> Interview Questions</a></li>
</ul>
</li>
</ul>
<div class="clear"></div>
</div> 
</div>
<div class="right-menu">
<div class="toc-toggle">
<a href="javascript:void(0);"><i class="fa fa-bars"></i></a>
</div>
<div class="mobile-search-btn">
<a href="https://www.tutorialspoint.com/search.htm"><i class="fal fa-search"></i></a>
</div>
<div class="search-box">
<form method="get" class="" name="searchform" action="https://www.google.com/search" target="_blank" novalidate="">
<input type="hidden" name="sitesearch" value="www.tutorialspoint.com" class="user-valid valid">
<input class="header-search-box" type="text" id="search-string" name="q" placeholder="Search your favorite tutorials..." onfocus="if (this.value == 'Search your favorite tutorials...') {this.value = '';}" onblur="if (this.value == '') {this.value = 'Search your favorite tutorials...';}" autocomplete="off">
<button><i class="fal fa-search"></i></button>
</form>
</div>
<div class="menu-btn library-btn">
<a href="https://www.tutorialspoint.com/tutorialslibrary.htm"><i class="fal fa-cubes"></i> <span>Library</span></a>
</div>
<div class="menu-btn videos-btn">
<a href="https://www.tutorialspoint.com/videotutorials/index.htm"><i class="fal fa-video"></i> <span>Videos</span></a> 
</div>
<div class="menu-btn videos-btn">
<a href="https://www.tutorialspoint.com/questions/index.php"><i class="fa fa-location-arrow"></i> <span>Q/A</span></a>
</div>
<div class="menu-btn ebooks-btn">
<a href="https://store.tutorialspoint.com"><i class="fal fa-book"></i> <span>eBooks</span></a>
</div>
<div class="mui-dropdown">
<button class="mui-btn mui-btn--primary" data-mui-toggle="dropdown">
<span class="mui-caret"></span>
</button>
<ul class="mui-dropdown__menu">
<li><a href="https://www.tutorialspoint.com/tutorialslibrary.htm"><i class="fal fa-cubes"></i> <span>Library</span></a></li>
<li><a href="https://www.tutorialspoint.com/videotutorials/index.htm"><i class="fal fa-video"></i> <span>Videos</span></a></li>
<li><a href="https://store.tutorialspoint.com"><i class="fal fa-book"></i> <span>eBooks</span></a></li>
</ul>
</div>
</div>
</div>
</div>
<!-- Top main-menu Ends Here -->
</header>
<div class="mui-container-fluid content">
<div class="mui-container">
<!-- Tutorial ToC Starts Here -->
<div class="mui-col-md-3 tutorial-toc">
<div class="mini-logo">
<img src="/knockoutjs/images/knockoutjs-mini-logo.jpg" alt="KnockoutJS Tutorial" />
</div>
<ul class="toc chapters">
<li class="heading">KnockoutJS Tutorial</li>
<li><a href="/knockoutjs/index.htm">KnockoutJS - Home</a></li>
<li><a href="/knockoutjs/knockoutjs_overview.htm">KnockoutJS - Overview</a></li>
<li><a href="/knockoutjs/knockoutjs_environment_setup.htm">KnockoutJS - Environment Setup</a></li>
<li><a href="/knockoutjs/knockoutjs_application.htm">KnockoutJS - Application</a></li>
<li><a href="/knockoutjs/knockoutjs_mvvm_framework.htm">KnockoutJS - MVVM Framework</a></li>
<li><a href="/knockoutjs/knockoutjs_observables.htm">KnockoutJS - Observables</a></li>
<li><a href="/knockoutjs/knockoutjs_computed_observables.htm">Computed Observables</a></li>
<li><a href="/knockoutjs/knockoutjs_declarative_bindings.htm">KnockoutJS - Declarative Bindings</a></li>
<li><a href="/knockoutjs/knockoutjs_dependency_tracking.htm">KnockoutJS - Dependency Tracking</a></li>
<li><a href="/knockoutjs/knockoutjs_templating.htm">KnockoutJS - Templating</a></li>
<li><a href="/knockoutjs/knockoutjs_components.htm">KnockoutJS - Components</a></li>
</ul>
<ul class="toc chapters">
<li class="heading">KnockoutJS Resources</li>
<li><a href="/knockoutjs/knockoutjs_quick_guide.htm" >KnockoutJS - Quick Guide</a></li>
<li><a href="/knockoutjs/knockoutjs_resources.htm" >KnockoutJS - Resources</a></li>
<li><a href="/knockoutjs/knockoutjs_discussion.htm" >KnockoutJS - Discussion</a></li>
</ul>
<ul class="toc reading">
<li class="sreading">Selected Reading</li>
<li><a target="_top" href="/upsc_ias_exams.htm">UPSC IAS Exams Notes</a></li>
<li><a target="_top" href="/developers_best_practices/index.htm">Developer's Best Practices</a></li>
<li><a target="_top" href="/questions_and_answers.htm">Questions and Answers</a></li>
<li><a target="_top" href="/effective_resume_writing.htm">Effective Resume Writing</a></li>
<li><a target="_top" href="/hr_interview_questions/index.htm">HR Interview Questions</a></li>
<li><a target="_top" href="/computer_glossary.htm">Computer Glossary</a></li>
<li><a target="_top" href="/computer_whoiswho.htm">Who is Who</a></li>
</ul>
</div>
<!-- Tutorial ToC Ends Here -->
<!-- Tutorial Content Starts Here -->
<div class="mui-col-md-6 tutorial-content">
<h1>KnockoutJS - Components</h1>
<hr />
<div class="top-ad-heading">Advertisements</div>
<div style="text-align: center;">
<script><!--
google_ad_client = "pub-7133395778201029";
var width = document.getElementsByClassName("tutorial-content")[0].clientWidth - 40;
google_ad_width = width;
google_ad_height = 150;
google_ad_format = width + "x150_as";
google_ad_type = "image";
google_ad_channel = "";
//--></script>
<script src="https://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</div>
<div class="mui-container-fluid button-borders">
<div class="pre-btn">
<a href="/knockoutjs/knockoutjs_templating.htm"><i class="fal fa-chevron-circle-left"></i> Previous Page</a>
</div>
<div class="nxt-btn">
<a href="/knockoutjs/knockoutjs_quick_guide.htm">Next Page <i class="fal fa-chevron-circle-right"></i>&nbsp;</a>
</div>
</div>
<div class="clearer"></div>
<p>Components are a huge way of organizing the UI code for structuring a large application and promoting code reusability.</p>
<p>It is inherited or nested from other component. For loading and configuration, it defines its own conventions or logic.</p>
<p>It is packaged to reuse throughout the application or the project. Represents the complete sections of application or small controls/widgets. It can be loaded or preloaded on demand.</p>
<h2>Component Registration</h2>
<p>Components can register using the <b>ko.components.register()</b> API. It helps to load and represent the components in KO. Component name with configuration is expected for registration. The configuration specifies how to determine the viewModel and template.</p>
<p><b>Syntax</b></p>
<p>Components can be registered as follows &minus;</p>
<pre class="prettyprint notranslate">
ko.components.register('component-name', {
   viewModel: {...},    //function code
   template: {....)	//function code
});
</pre>
<ul class="list">
<li><p>The <b>component-name</b> can be any nonempty string.</p></li>
<li><p><b>viewModel</b> is optional, and can take any of the viewModel formats listed in the next sections.</p></li>
<li><p><b>template</b> is required, and can take any of the template formats listed in the next sections.</p></li>
</ul>
<h3>Stating a ViewModel</h3>
<p>Following table lists the viewModel formats that can be used to register the components.</p>
<table class="table table-bordered">
<tr>
<th style="text-align:center;">Sr.No.</th>
<th style="text-align:center;">viewModel Forms &amp; Description</th>
</tr>
<tr>
<td class="ts">1</td>
<td><p><b>constructor function</b></p>
<p>It creates a separate viewModel object for each component. The object or function is used to bind in components view.</p>
<pre class="prettyprint notranslate">
function SomeComponentViewModel(params) {
   this.someProperty = params.something;
}
ko.components.register('component name', {
   viewModel: SomeComponentViewModel,
   template: ...
});
</pre>
</td>
</tr>
<tr>
<td class="ts">2</td>
<td><p><b>shared object instance</b></p>
<p>The viewModel object instance is shared. The instance property is passed to use the object directly.</p>
<pre class="prettyprint notranslate">
var sharedViewModelInstance = { ... };

ko.components.register('component name', {
   viewModel: { instance: sharedViewModelInstance },
   template: ...
});
</pre>
</td>
</tr>
<tr><td class="ts">3</td>
<td><p><b>createViewModel</b></p>
<p>It calls a function which acts as a factory and can be used as view model that can return an object.</p>
<pre class="prettyprint notranslate">ko.components.register('component name', {  
   viewModel: {  
      createViewModel: function (params, componentInfo) {  
         ...       //function code  
         ...
      }  
   },  
   template: ....  
});
</pre>
</td>
</tr>
<tr><td class="ts">4</td>
<td><p><b>AMD module</b></p>
<p>It is a module format for defining modules where module and dependencies both are loaded asynchronously.</p>
<pre class="prettyprint notranslate">ko.components.register('component name', {
   viewModel: { require: 'some/module/name' },
   template: ...
});

define(['knockout'], function(ko) {
   function MyViewModel() {
      // ...
   }

   return MyViewModel;
});
</pre>
</td>
</tr>
</table>
<h3>Stating a Template</h3>
<p>Following table lists the template formats that can be used to register the components.</p>
<table class="table table-bordered">
<tr>
<th style="text-align:center;">Sr.No.</th>
<th style="text-align:center;">Template Forms</th>
</tr>
<tr>
<td class="ts">1</td>
<td><p><b>element ID</b></p>
<pre class="prettyprint notranslate">ko.components.register('component name', {
   template: { element: 'component-template' },
   viewModel: ...
});</pre>
</td>
</tr>
<tr>
<td class="ts">2</td>
<td><p><b>element instance</b></p>
<pre class="prettyprint notranslate">
var elemInstance = document.getElementById('component-template');

ko.components.register('component name', {
   template: { element: elemInstance },
   viewModel: ...
});</pre>
</td>
</tr>
<tr>
<td class="ts">3</td>
<td><p><b>string of markup</b></p>
<pre class="prettyprint notranslate">ko.components.register('component name', {
   template: '&lt;input data-bind = "value: yourName" /&gt;\
      &lt;button data-bind = "click: addEmp"&gt;Add Emp &lt;/button&gt;',
   viewModel: ...
});</pre>
</td>
</tr>
<tr>
<td class="ts">4</td>
<td><p><b>DOM nodes</b></p>
<pre class="prettyprint notranslate">var emp = [
   document.getElementById('node 1'),
   document.getElementById('node 2'),
];

ko.components.register('component name', {
   template: emp,
   viewModel: ...
});
</pre>
</td>
</tr>
<tr><td class="ts">5</td>
<td><p><b>document fragement</b></p>
<pre class="prettyprint notranslate">ko.components.register('component name', {
   template: someDocumentFragmentInstance,
   viewModel: ...
});</pre>
</td>
</tr>
<tr>
<td class="ts">6</td>
<td><p><b>AMD module</b></p>
<pre class="prettyprint notranslate">ko.components.register('component name', {
   template: { require: 'some/template' },
   viewModel: ...
});
</pre>
</td>
</tr>
</table>
<h3>Components Registered as a Single AMD Module</h3>
<p>The AMD module can register a component by itself without using viewModel/template pair.</p>
<pre class="prettyprint notranslate">
ko.components.register('component name',{ require: 'some/module'});
</pre>
<h2>Component Binding</h2>
<p>There are two ways of component binding.</p>
<ul class="list">
<li><p><b>Full syntax</b> &minus; It passes the parameter and object to the component. It can pass using the following properties.</p>
<ul class="list">
<li><p><b>name</b> &minus; It adds the component name.</p></li>
<li><p><b>params</b> &minus; It can pass multiple parameters in object on the component.</p></li>
</ul>
</li>
</ul>
<pre class="prettyprint notranslate">
&lt;div data-bind='component: {
   name: "tutorials point",
   params: { mode: "detailed-list", items: productsList }
}'&gt;
&lt;/div&gt;
</pre>
<ul class="list">
<li><p><b>Shorthand syntax</b> &minus; It passes the string as a component name and it does not include parameter in it.</p></li>
</ul>
<pre class="result notranslate">
&lt;div data-bind = 'component: "component name"'&gt;&lt;/div&gt;
</pre>
<ul class="list">
<li><p><b>Template-only components</b> &minus; Components can only define template without specifing the viewModel.</p></li>
</ul>
<pre class="prettyprint notranslate">
ko.components.register('component name', {
   template:'&lt;input data-bind = "value: someName" /&gt;,
});
</pre>
<ul class="list">
<li><p><b>Using Component without a container element</b> &minus; Components can be used without using extra container element. This can be done using <b>containerless flow</b> control which is similar as the comment tag.</p></li>
</ul>
<pre class="result notranslate">
&lt;!--ko.component: ""--&gt;
&lt;!--/ko--&gt;
</pre>
<h2>Custom Element</h2>
<p>Custom element is a way for rendering a component. Here, you can directly write a selfdescriptive markup element name instead of defining a placeholder, where the components are binded through it.</p>
<pre class="prettyprint notranslate">
&lt;products-list params = "name: userName, type: userType"&gt;&lt;/products-list&gt;
</pre>
<h3>Passing Parameter</h3>
<p><b>params</b> attribute is used to pass the parameter to component viewModel. It is similar to data-bind attribute. The contents of the params attribute are interpreted like a JavaScript object literal (just like a data-bind attribute), so you can pass arbitrary values of any type. It can pass the parameter in following ways &minus;</p>
<ul class="list">
<li><p><b>Communication between parent and child components</b> &minus; The component is not instantiated by itself so the viewmodel properties are referred from outside of the component and thus would be received by child component viewmodel. For example, you can see in the following syntax that <b>ModelValue</b> is the parent viewmodel, which is received by child viewModel constructor <b>ModelProperty</b>.</p></li>
<li><p><b>Passing observable expressions</b> &minus; It has three values in params parameter.</p>
<ul class="list">
<li><p><b>simpleExpression</b> &minus; It is a numeric value. It does not involve any observables.</p></li>
<li><p><b>simpleObservable</b> &minus; It is an instance that is defined on parent viewModel. The parent viewModel will automatically get the changes on observable done by child viewModel.</p></li>
<li><p><b>observableExpression</b> &minus; Expression reads the observable when the expression is evaluated by itself. When the observable value changes, then the result of expression can also changs over time.</p></li>
</ul>
</li>
</ul>
<p>We can pass the parameters as follows &minus;</p>
<pre class="prettyprint notranslate">
&lt;some-component
   params = 'simpleExpression: 1 + 1,
      simpleObservable: myObservable,
      observableExpression: myObservable() + 1'&gt;
&lt;/some-component&gt;
</pre>
<p>We can pass the parameters in viewModel as follows &minus;</p>
<pre class="prettyprint notranslate">
&lt;some-component
   params = 'objectValue:{a: 3, b: 2},
      dateValue: new date(),
      stringValue: "Hi",
      numericValue:123,
      boolValue: true/false,
      ModelProperty: ModelValue'&gt;
&lt;/some-component&gt;
</pre>
<h3>Passing Markup into Components</h3>
<p>The received markup is used to create a component and is selected as a part of the output. Following nodes are passed as part of the output in the component template.</p>
<pre class="prettyprint notranslate">
template: { nodes: $componentTemplateNodes }
</pre>
<h3>Controlling custom element tag names</h3>
<p>The names which you register in the components using <b>ko.components.register</b>, the same name corresponds to the custom element tag names. We can change the custom element tag names by overriding it to control using <b>getComponentNameForNode</b>.</p>
<pre class="prettyprint notranslate">
ko.components.getComponentNameForNode = function(node) {
   ...
   ...   //function code
   ...
}
</pre>
<h3>Registering Custom Elements</h3>
<p>The custom elements can be made available immediately, if the default component loader is used and hence the component is registered using <b>ko.components.register</b>. If we are not using the <b>ko.components.register</b> and implementing the custom component loader, then the custom element can be used by defining any element name of choice. There is no need to specify configuration when you are using <b>ko.components.register</b> as the custom component loader does not use it anymore.</p>
<pre class="result notranslate">
ko.components.register('custom-element', { ......... });
</pre>
<p><b>Example</b></p>
<div class="demo-view">
<a href="http://tpcg.io/mGE3O2" target="_blank" rel="nofollow" class="demo"><i class="fa-external-link"></i> Live Demo</a>
</div>
<pre class="prettyprint notranslate">
&lt;!DOCTYPE html&gt;
   &lt;head&gt;
      &lt;title&gt;KnockoutJS Components&lt;/title&gt;
      &lt;script src = "https://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js"&gt;&lt;/script&gt;
      &lt;script src = "https://cdnjs.cloudflare.com/ajax/libs/knockout/3.2.0/knockout-min.js"&gt;&lt;/script&gt;
   &lt;/head&gt;
   
   &lt;body&gt;
      &lt;!--params attribute is used to pass the parameter to component viewModel.--&gt;
      &lt;click params = "a: a, b: b"&gt;&lt;/click&gt;

      &lt;!--template is used for a component by specifying its ID --&gt;
      &lt;template id = "click-l"&gt;
         &lt;div data-bind = "text: a"&gt;&lt;/div&gt;

         &lt;!--Use data-bind attribute to bind click:function() to ViewModel. --&gt;
         &lt;button data-bind = "click:function(){callback(1)}"&gt;Increase&lt;/button&gt;
         &lt;button data-bind = "click:function(){callback(-1)}"&gt;Decrease&lt;/button&gt;
      &lt;/template&gt;

      &lt;script&gt;
         //Here components are registered
         ko.components.register('click', {
            
            viewModel: function(params) {
               self = this;
               this.a = params.a;
               this.b = params.b;

               this.callback = function(num) {
                  self.b(parseInt(num));
                  self.a( self.a() + parseInt(num) );
               };
            },
            template: { element: 'click-l' }
         });

         //keeps an eye on variable for any modification in data
         function viewModel() {
            this.a = ko.observable(2);
            this.b = ko.observable(0);
         }

         ko.applyBindings(new viewModel() );
      &lt;/script&gt;
      
   &lt;/body&gt;
&lt;/html&gt;
</pre>
<p><b>Output</b></p>
<p>Let's carry out the following steps to see how the above code works &minus;</p>
<ul class="list">
<li><p>Save the above code in <b>component_register.htm</b> file.</p></li>
<li><p>Open this HTML file in a browser.</p></li>
</ul>
<iframe onload="resizeFrame(this)" class="result" src="/knockoutjs/src/component_register.htm" height="150px" width="660px"></iframe>
<h2>Component Loaders</h2>
<p>Component loaders are used to pass the template/viewModel pair asynchronously for the given component name.</p>
<h3>The default component loader</h3>
<p>The default component loader depends on the explicitly registered configuration. Each component is registered before using the component.</p>
<pre class="prettyprint notranslate">
ko.components.defaultLoader
</pre>
<h3>Component Loader Utility Functions</h3>
<p>The default component loader can read and write using the following functions.</p>
<table class="table table-bordered">
<tr>
<th style="text-align:center;">Sr.No.</th>
<th style="text-align:center;"> Utility functions &amp; Description</th>
</tr>
<tr>
<td class="ts">1</td>
<td><p><b>ko.components.register(name, configuration)</b></p>
<p>Component is registered.</p></td>
</tr>
<tr>
<td class="ts">2</td>
<td><p><b>ko.components.isRegistered(name)</b></p>
<p>If the particular component name is already registered, then it returns as true else false.</p>
</td>
</tr>
<tr><td class="ts">3</td>
<td><p><b>ko.components.unregister(name)</b></p>
<p>The component name is removed from the registry.</p></td>
</tr>
<tr>
<td class="ts">4</td>
<td><p><b>ko.components.get(name, callback)</b></p>
<p>This function goes turn by turn to each registered loader to find who has passed the viewModel/template definition for component name as first. Then it returns viewModel/template declaration by invoking <b>callback</b>. If the registered loader could not find anything about the component, then it invokes <b>callback(null)</b>.</p></td>
</tr>
<tr>
<td class="ts">5</td>
<td><p><b>ko.components.clearCachedDefinition(name)</b></p>
<p>This function can be called when we want to clear the given component cache entry. If the component is needed next time, again the loaders will be consulted.</p>
</td>
</tr>
</table>
<h3>Implementing a custom component loader</h3>
<p>The custom component loader can be implemented in the following ways &minus;</p>
<ul class="list">
<li><p><b>getConfig(name, callback)</b> &minus; Depending on the names, we can pass configurations programatically. We can call callback(componentConfig) to pass the configurations, where the object componentConfig can be used by the loadComponent or any other loader.</p></li>
<li><p><b>loadComponent(name, componentConfig, callback)</b> &minus; This function resolves the viewModel and the template portion of config depending upon the way it is configured. We can call callback(result) to pass the viewmodel/template pair, where the object result is defined by the following properties.</p>
<ul class="list">
<li><p><b>template</b> &minus; Required. Return array of DOM nodes.</p></li>
<li><p><b>createViewModel(params, componentInfo)</b> &minus; Optional. Returns the viewModel Object depending on how the viewModel property was configured.</p></li>
</ul>
</li>
<li><p><b>loadTemplate(name, templateConfig, callback)</b> &minus; DOM nodes is passed in a template using custom logic. The object templateConfig is a property of the template from an object componentConfig. callback(domNodeArray) is called to pass an array of DOM nodes.</p></li>
<li><p><b>loadViewModel(name, templateConfig, callback)</b> &minus; viewModel factory is passed in a viewModel configuration using custom logic.</p></li>
</ul>
<div class="mui-container-fluid button-borders show">
<div class="pre-btn">
<a href="/knockoutjs/knockoutjs_templating.htm"><i class="fal fa-chevron-circle-left"></i> Previous Page</a>
</div>
<div class="nxt-btn">
<a href="/knockoutjs/knockoutjs_quick_guide.htm">Next Page <i class="fal fa-chevron-circle-right"></i>&nbsp;</a>
</div>
</div>
<div class="google-bottom-ads">
<div>Advertisements</div>
<script><!--
var width = 580;
var height = 400;
var format = "580x400_as";
if( window.innerWidth < 468 ){
   width = 300;
   height = 250;
   format = "300x250_as";
}
google_ad_client = "pub-7133395778201029";
google_ad_width = width;
google_ad_height = height;
google_ad_format = format;
google_ad_type = "image";
google_ad_channel ="";
//--></script>
<script src="https://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
<div class="space-bottom"></div>
</div>
</div>
<!-- Tutorial Content Ends Here -->
<!-- Right Column Starts Here -->
<div class="mui-col-md-2 google-right-ads">
<div class="space-top"></div>
<div class="google-right-ad" style="margin: 0px auto !important;margin-top:5px;">
<script><!--
google_ad_client = "pub-2537027957187252";
google_ad_width = 300;
google_ad_height = 250;
google_ad_format = "300x250_as";
google_ad_type = "image";
google_ad_channel ="";
//--></script>
<script src="https://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</div>
<div class="google-right-ad">
<div class="adsbyvli" data-ad-slot="vi_9012177"></div>
<script>(vitag.Init = window.vitag.Init || []).push(function(){viAPItag.display("vi_9012177")})</script>
</div>
<div class="space-bottom"></div>
<div class="google-right-ad">
<div class="adsbyvli" data-ad-slot="vi_9013289"></div>
<script>(vitag.Init = window.vitag.Init || []).push(function(){viAPItag.display("vi_9013289")})</script>
</div>
<div class="space-bottom" style="margin-bottom:15px;"></div>
</div>
<!-- Right Column Ends Here -->
</div>
</div>
<div class="clear"></div>
<footer id="footer">
<div class="mui--text-center">
<div class="mui--text-caption mui--text-light">
<a href="/index.htm" class="logo"><img class="img-responsive" src="/images/logo-black.png" alt="Tutorials Point" title="Tutorials Point"></a>
</div>
<ul class="mui-list--inline mui--text-body2 mui--text-light">
<li><a href="/about/index.htm"><i class="fal fa-globe"></i> About us</a></li>
<li><a href="/about/about_terms_of_use.htm"><i class="fal fa-asterisk"></i> Terms of use</a></li>
<li><a href="/about/about_privacy.htm#cookies"> <i class="fal fa-shield-check"></i> Cookies Policy</a></li>
<li><a href="/about/faq.htm"><i class="fal fa-question-circle"></i> FAQ's</a></li>
<li><a href="/about/about_helping.htm"><i class="fal fa-hands-helping"></i> Helping</a></li>
<li><a href="/about/contact_us.htm"><i class="fal fa-map-marker-alt"></i> Contact</a></li>
</ul>
<div class="mui--text-caption mui--text-light bottom-copyright-text">&copy; Copyright 2019. All Rights Reserved.</div>
</div>
<div id="privacy-banner">
  <div>
    <p>
      We use cookies to provide and improve our services. By using our site, you consent to our Cookies Policy.
      <a id="banner-accept" href="#">Accept</a>
      <a id="banner-learn" href="/about/about_cookies.htm" target="_blank">Learn more</a>
    </p>
  </div>
</div>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-232293-17"></script>
<script>
window.dataLayer = window.dataLayer || [];
function gtag(){dataLayer.push(arguments);}
gtag('js', new Date());
gtag('config', 'UA-232293-6');
</script>
</footer>
</body>
</html>
