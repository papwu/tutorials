<!DOCTYPE html>
<html lang="en-US">
<head>
<title>KnockoutJS - Computed Observables</title>
<meta charset="utf-8">
<meta name="description" content="KnockoutJS - Computed Observables - Computed Observable is a function which is dependent on one or more Observables and automatically updates whenever its underlying Observables (dependencies) cha"/>
<meta name="keywords" content="C, C++, Python, Java, HTML, CSS, JavaScript, SQL, PHP, jQuery, XML, DOM, Bootstrap, Tutorials, Articles, Programming, training, learning, quiz, preferences, examples, code"/>
<link rel="canonical" href="https://www.tutorialspoint.com/knockoutjs/knockoutjs_computed_observables.htm" />
<link rel="shortcut icon" href="/favicon.ico" type="image/x-icon" />
<meta name="viewport" content="width=device-width,initial-scale=1.0,user-scalable=yes">
<script src="/theme/js/script-min-v2.js?v=3"></script>
<link rel="stylesheet" href="/theme/css/style-min-v2.css?v=6">
<script src="//services.bilsyndication.com/adv1/?d=901" defer="" async=""></script>
<script> var vitag = vitag || {};</script>
<script> vitag.outStreamConfig = { enablePC: false, enableMobile: false };</script>  
<style>
.right-menu .mui-btn {
    background-color:#f42b00;
}
a.demo {
    background:#f42b00;
}
li.heading {
    background:#f42b00;
}
.course-box{background:#f42b00}
.home-intro-sub p{color:#f42b00}
</style>
</head>
<body>
<header id="header">
<!-- Top sub-menu Starts Here -->
<div class="mui-appbar mui-container-fulid top-menu">
<div class="mui-container">
<div class="top-menu-item home">
<a href="https://www.tutorialspoint.com/index.htm" target="_blank" title="TutorialsPoint - Home"><i class="fal fa-home"></i> <span>Home</span></a>
</div>
<div class="top-menu-item qa">
<a href="https://www.tutorialspoint.com/about/about_careers.htm" target="_blank" title="Job @ Tutorials Point"><i class="fa fa-suitcase"></i> <span>Jobs</span></a>
</div>
<div class="top-menu-item tools">
<a href="https://www.tutorialspoint.com/online_dev_tools.htm" target="_blank" title="Tools - Online Development and Testing Tools"><i class="fal fa-cogs"></i> <span>Tools</span></a>
</div>
<div class="top-menu-item coding-ground">
<a href="https://www.tutorialspoint.com/codingground.htm" target="_blank" title="Coding Ground - Free Online IDE and Terminal"><i class="fal fa-code"></i> <span>Coding Ground </span></a> 
</div>
<div class="top-menu-item current-affairs">
<a href="https://www.tutorialspoint.com/current_affairs.htm" target="_blank" title="Daily Current Affairs"><i class="fal fa-layer-plus"></i> <span>Current Affairs</span></a>
</div>
<div class="top-menu-item upsc-notes">
<a href="https://www.tutorialspoint.com/upsc_ias_exams.htm" target="_blank" title="UPSC IAS Exams Notes - TutorialsPoint"><i class="fal fa-user-tie"></i> <span>UPSC Notes</span></a>
</div>      
<div class="top-menu-item online-tutoris">
<a href="https://www.tutorialspoint.com/tutor_connect/index.php" target="_blank" title="Top Online Tutors - Tutor Connect"><i class="fal fa-user"></i> <span>Online Tutors</span></a>
</div>
<div class="top-menu-item whiteboard">
<a href="https://www.tutorialspoint.com/whiteboard.htm" target="_blank" title="Free Online Whiteboard"><i class="fal fa-chalkboard"></i> <span>Whiteboard</span></a>
</div>
<div class="top-menu-item net-meeting">
<a href="https://www.tutorialspoint.com/netmeeting.php" target="_blank" title="A free tool for online video conferencing"><i class="fal fa-chalkboard-teacher"></i> <span>Net Meeting</span></a> 
</div>
<div class="top-menu-item articles">
<a href="https://www.tutorix.com" target="_blank" title="Tutorx - The Best Learning App" rel="nofollow"><i class="fal fa-video"></i> <span>Tutorix</span></a> 
</div>        
<div class="social-menu-item">
<a href="https://www.facebook.com/tutorialspointindia" target="_blank" rel="nofollow" data-placement="bottom" title="tutorialspoint @ Facebook"><i class="fab fa-facebook-f"></i></a> 
<a href="https://www.twitter.com/tutorialspoint" target="_blank" rel="nofollow" data-placement="bottom" title="tutorialspoint @ Twitter"><i class="fab fa-twitter"></i></a>
<a href="https://www.linkedin.com/company/tutorialspoint" target="_blank" rel="nofollow" data-placement="bottom" title="tutorialspoint @ Linkedin"><i class="fab fa-linkedin-in"></i></a>
<a href="https://www.youtube.com/channel/UCVLbzhxVTiTLiVKeGV7WEBg" target="_blank" rel="nofollow" data-placement="bottom" title="tutorialspoint YouTube"><i class="fab fa-youtube"></i></a>
</div>        
</div>
</div>
<!-- Top sub-menu Ends Here -->
<!-- Top main-menu Starts Here -->
<div class="mui-appbar mui-container-fulid mui--appbar-line-height mui--z1" id="logo-menu">
<div class="mui-container">
<div class="left-menu">
<a href="https://www.tutorialspoint.com/index.htm" title="Tutorialspoint">
<img class="tp-logo" alt="tutorialspoint" src="/knockoutjs/images/logo.png">
</a>
<div class="mui-dropdown">
<a class="mui-btn mui-btn--primary categories" data-mui-toggle="dropdown"><i class="fa fa-th-large"></i> 
<span>Categories <span class="mui-caret"></span></span></a>            
<ul class="mui-dropdown__menu cat-menu">
<li>
<ul>
<li><a href="/academic_tutorials.htm"><i class="fa fa-caret-right"></i> Academic Tutorials</a></li>
<li><a href="/big_data_tutorials.htm"><i class="fa fa-caret-right"></i> Big Data &amp; Analytics </a></li>
<li><a href="/computer_programming_tutorials.htm"><i class="fa fa-caret-right"></i> Computer Programming </a></li>
<li><a href="/computer_science_tutorials.htm"><i class="fa fa-caret-right"></i> Computer Science </a></li>
<li><a href="/database_tutorials.htm"><i class="fa fa-caret-right"></i> Databases </a></li>
<li><a href="/devops_tutorials.htm"><i class="fa fa-caret-right"></i> DevOps </a></li>
<li><a href="/digital_marketing_tutorials.htm"><i class="fa fa-caret-right"></i> Digital Marketing </a></li>
<li><a href="/engineering_tutorials.htm"><i class="fa fa-caret-right"></i> Engineering Tutorials </a></li>
<li><a href="/upsc_ias_exams.htm"><i class="fa fa-caret-right"></i> Exams Syllabus </a></li>
<li><a href="/famous_monuments.htm"><i class="fa fa-caret-right"></i> Famous Monuments </a></li>
<li><a href="/gate_exams_tutorials.htm"><i class="fa fa-caret-right"></i> GATE Exams Tutorials</a></li>
<li><a href="/latest_technologies.htm"><i class="fa fa-caret-right"></i> Latest Technologies </a></li>
<li><a href="/machine_learning_tutorials.htm"><i class="fa fa-caret-right"></i> Machine Learning </a></li>
<li><a href="/mainframe_tutorials.htm"><i class="fa fa-caret-right"></i> Mainframe Development </a></li>
<li><a href="/management_tutorials.htm"><i class="fa fa-caret-right"></i> Management Tutorials </a></li>
<li><a href="/maths_tutorials.htm"><i class="fa fa-caret-right"></i> Mathematics Tutorials</a></li>
<li><a href="/microsoft_technologies_tutorials.htm"><i class="fa fa-caret-right"></i> Microsoft Technologies </a></li>
<li><a href="/misc_tutorials.htm"><i class="fa fa-caret-right"></i> Misc tutorials </a></li>
<li><a href="/mobile_development_tutorials.htm"><i class="fa fa-caret-right"></i> Mobile Development </a></li>
<li><a href="/java_technology_tutorials.htm"><i class="fa fa-caret-right"></i> Java Technologies </a></li>
<li><a href="/python_technologies_tutorials.htm"><i class="fa fa-caret-right"></i> Python Technologies </a></li>
<li><a href="/sap_tutorials.htm"><i class="fa fa-caret-right"></i> SAP Tutorials </a></li>
<li><a href="/scripting_lnaguage_tutorials.htm"><i class="fa fa-caret-right"></i>Programming Scripts </a></li>
<li><a href="/selected_reading.htm"><i class="fa fa-caret-right"></i> Selected Reading </a></li>
<li><a href="/software_quality_tutorials.htm"><i class="fa fa-caret-right"></i> Software Quality </a></li>
<li><a href="/soft_skill_tutorials.htm"><i class="fa fa-caret-right"></i> Soft Skills </a></li>
<li><a href="/telecom_tutorials.htm"><i class="fa fa-caret-right"></i> Telecom Tutorials </a></li>
<li><a href="/upsc_ias_exams.htm"><i class="fa fa-caret-right"></i> UPSC IAS Exams </a></li>
<li><a href="/web_development_tutorials.htm"><i class="fa fa-caret-right"></i> Web Development </a></li>
<li><a href="/sports_tutorials.htm"><i class="fa fa-caret-right"></i> Sports Tutorials </a></li>
<li><a href="/xml_technologies_tutorials.htm"><i class="fa fa-caret-right"></i> XML Technologies </a></li>
<li><a href="/multi_language_tutorials.htm"><i class="fa fa-caret-right"></i> Multi-Language Tutorials</a></li>
<li><a href="/questions_and_answers.htm"><i class="fa fa-caret-right"></i> Interview Questions</a></li>
</ul>
</li>
</ul>
<div class="clear"></div>
</div> 
</div>
<div class="right-menu">
<div class="toc-toggle">
<a href="javascript:void(0);"><i class="fa fa-bars"></i></a>
</div>
<div class="mobile-search-btn">
<a href="https://www.tutorialspoint.com/search.htm"><i class="fal fa-search"></i></a>
</div>
<div class="search-box">
<form method="get" class="" name="searchform" action="https://www.google.com/search" target="_blank" novalidate="">
<input type="hidden" name="sitesearch" value="www.tutorialspoint.com" class="user-valid valid">
<input class="header-search-box" type="text" id="search-string" name="q" placeholder="Search your favorite tutorials..." onfocus="if (this.value == 'Search your favorite tutorials...') {this.value = '';}" onblur="if (this.value == '') {this.value = 'Search your favorite tutorials...';}" autocomplete="off">
<button><i class="fal fa-search"></i></button>
</form>
</div>
<div class="menu-btn library-btn">
<a href="https://www.tutorialspoint.com/tutorialslibrary.htm"><i class="fal fa-cubes"></i> <span>Library</span></a>
</div>
<div class="menu-btn videos-btn">
<a href="https://www.tutorialspoint.com/videotutorials/index.htm"><i class="fal fa-video"></i> <span>Videos</span></a> 
</div>
<div class="menu-btn videos-btn">
<a href="https://www.tutorialspoint.com/questions/index.php"><i class="fa fa-location-arrow"></i> <span>Q/A</span></a>
</div>
<div class="menu-btn ebooks-btn">
<a href="https://store.tutorialspoint.com"><i class="fal fa-book"></i> <span>eBooks</span></a>
</div>
<div class="mui-dropdown">
<button class="mui-btn mui-btn--primary" data-mui-toggle="dropdown">
<span class="mui-caret"></span>
</button>
<ul class="mui-dropdown__menu">
<li><a href="https://www.tutorialspoint.com/tutorialslibrary.htm"><i class="fal fa-cubes"></i> <span>Library</span></a></li>
<li><a href="https://www.tutorialspoint.com/videotutorials/index.htm"><i class="fal fa-video"></i> <span>Videos</span></a></li>
<li><a href="https://store.tutorialspoint.com"><i class="fal fa-book"></i> <span>eBooks</span></a></li>
</ul>
</div>
</div>
</div>
</div>
<!-- Top main-menu Ends Here -->
</header>
<div class="mui-container-fluid content">
<div class="mui-container">
<!-- Tutorial ToC Starts Here -->
<div class="mui-col-md-3 tutorial-toc">
<div class="mini-logo">
<img src="/knockoutjs/images/knockoutjs-mini-logo.jpg" alt="KnockoutJS Tutorial" />
</div>
<ul class="toc chapters">
<li class="heading">KnockoutJS Tutorial</li>
<li><a href="/knockoutjs/index.htm">KnockoutJS - Home</a></li>
<li><a href="/knockoutjs/knockoutjs_overview.htm">KnockoutJS - Overview</a></li>
<li><a href="/knockoutjs/knockoutjs_environment_setup.htm">KnockoutJS - Environment Setup</a></li>
<li><a href="/knockoutjs/knockoutjs_application.htm">KnockoutJS - Application</a></li>
<li><a href="/knockoutjs/knockoutjs_mvvm_framework.htm">KnockoutJS - MVVM Framework</a></li>
<li><a href="/knockoutjs/knockoutjs_observables.htm">KnockoutJS - Observables</a></li>
<li><a href="/knockoutjs/knockoutjs_computed_observables.htm">Computed Observables</a></li>
<li><a href="/knockoutjs/knockoutjs_declarative_bindings.htm">KnockoutJS - Declarative Bindings</a></li>
<li><a href="/knockoutjs/knockoutjs_dependency_tracking.htm">KnockoutJS - Dependency Tracking</a></li>
<li><a href="/knockoutjs/knockoutjs_templating.htm">KnockoutJS - Templating</a></li>
<li><a href="/knockoutjs/knockoutjs_components.htm">KnockoutJS - Components</a></li>
</ul>
<ul class="toc chapters">
<li class="heading">KnockoutJS Resources</li>
<li><a href="/knockoutjs/knockoutjs_quick_guide.htm" >KnockoutJS - Quick Guide</a></li>
<li><a href="/knockoutjs/knockoutjs_resources.htm" >KnockoutJS - Resources</a></li>
<li><a href="/knockoutjs/knockoutjs_discussion.htm" >KnockoutJS - Discussion</a></li>
</ul>
<ul class="toc reading">
<li class="sreading">Selected Reading</li>
<li><a target="_top" href="/upsc_ias_exams.htm">UPSC IAS Exams Notes</a></li>
<li><a target="_top" href="/developers_best_practices/index.htm">Developer's Best Practices</a></li>
<li><a target="_top" href="/questions_and_answers.htm">Questions and Answers</a></li>
<li><a target="_top" href="/effective_resume_writing.htm">Effective Resume Writing</a></li>
<li><a target="_top" href="/hr_interview_questions/index.htm">HR Interview Questions</a></li>
<li><a target="_top" href="/computer_glossary.htm">Computer Glossary</a></li>
<li><a target="_top" href="/computer_whoiswho.htm">Who is Who</a></li>
</ul>
</div>
<!-- Tutorial ToC Ends Here -->
<!-- Tutorial Content Starts Here -->
<div class="mui-col-md-6 tutorial-content">
<h1>KnockoutJS - Computed Observables</h1>
<hr />
<div class="top-ad-heading">Advertisements</div>
<div style="text-align: center;">
<script><!--
google_ad_client = "pub-7133395778201029";
var width = document.getElementsByClassName("tutorial-content")[0].clientWidth - 40;
google_ad_width = width;
google_ad_height = 150;
google_ad_format = width + "x150_as";
google_ad_type = "image";
google_ad_channel = "";
//--></script>
<script src="https://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</div>
<div class="mui-container-fluid button-borders">
<div class="pre-btn">
<a href="/knockoutjs/knockoutjs_observables.htm"><i class="fal fa-chevron-circle-left"></i> Previous Page</a>
</div>
<div class="nxt-btn">
<a href="/knockoutjs/knockoutjs_declarative_bindings.htm">Next Page <i class="fal fa-chevron-circle-right"></i>&nbsp;</a>
</div>
</div>
<div class="clearer"></div>
<p>Computed Observable is a function which is dependent on one or more Observables and automatically updates whenever its underlying Observables (dependencies) change.</p>
<p>Computed Observables can be chained.</p>
<h3>Syntax</h3>
<pre class="result notranslate">
this.varName = ko.computed(function(){
   ...
   ... //  function code
   ...
},this);
</pre>
<h3>Example</h3>
<p>Let us look at the following example which demonstrates the use of Computed Observables.</p>
<div class="demo-view">
<a href="http://tpcg.io/UpCV6R" target="_blank" rel="nofollow" class="demo"><i class="fa-external-link"></i> Live Demo</a>
</div>
<pre class="prettyprint notranslate">
&lt;!DOCTYPE html&gt;
   &lt;head &gt;
      &lt;title&gt;KnockoutJS Computed Observables&lt;/title&gt;
      &lt;script src = "https://ajax.aspnetcdn.com/ajax/knockout/knockout-3.1.0.js"&gt;&lt;/script&gt;
   &lt;/head&gt;

   &lt;body&gt;
      &lt;p&gt;Enter first number: &lt;input data-bind = "value: a" /&gt;&lt;/p&gt;
      &lt;p&gt;Enter second number: &lt;input data-bind = "value: b"/&gt;&lt;/p&gt;
      &lt;p&gt;Average := &lt;span data-bind="text: totalAvg"&gt;&lt;/span&gt;&lt;/p&gt;

      &lt;script&gt;
         function MyViewModel() {
            this.a = ko.observable(10);
            this.b = ko.observable(40);

            this.totalAvg = ko.computed(function() {

               if(typeof(this.a()) !== "number" || typeof(this.b()) !== "number") {
                  this.a(Number(this.a()));   //convert string to Number
                  this.b(Number(this.b()));   //convert string to Number
               }

               total = (this.a() + this.b())/2 ;
               return total;
            },this);
         }

         ko.applyBindings(new MyViewModel());
      &lt;/script&gt;

   &lt;/body&gt;
&lt;/html&gt;
</pre>
<p>In the following lines, first two are for accepting input values. Third line prints the average of these two numbers.</p>
<pre class="prettyprint notranslate">
&lt;p&gt;Enter first number: &lt;input data-bind = "value: a" /&gt;&lt;/p&gt;
&lt;p&gt;Enter second number: &lt;input data-bind = "value: b"/&gt;&lt;/p&gt;
&lt;p&gt;Average := &lt;span data-bind = "text: totalAvg"&gt;&lt;/span&gt;&lt;/p&gt;
</pre>
<p>In the following lines, type of Observables <b>a</b> and <b>b</b> is number when they are initialized for the first time inside ViewModel. However, in KO every input accepted from UI is by default in the String format. So they need to be converted to Number so as to perform arithmetic operation on them.</p>
<pre class="prettyprint notranslate">
this.totalAvg = ko.computed(function() {
   
   if(typeof(this.a()) !== "number" || typeof(this.b()) !== "number") {
      this.a(Number(this.a()));   //convert string to Number
      this.b(Number(this.b()));   //convert string to Number
   }
   
   total = (this.a() + this.b())/2 ;
   return total;
},this);
</pre>
<p>In the following line, the calculated average is displayed in the UI. Note that data-bind type of totalAvg is just text.</p>
<pre class="prettyprint notranslate">
&lt;p&gt;Average := &lt;span data-bind = "text: totalAvg"&gt;&lt;/span&gt;&lt;/p&gt;
</pre>
<h3>Output</h3>
<p>Let's carry out the following steps to see how the above code works &minus;</p>
<ul class="list">
<li><p>Save the above code in <b>computed-observable.htm</b> file.</p></li>
<li><p>Open this HTML file in a browser.</p></li>
<li><p>Enter any 2 numbers in the text boxes and observe that the average is calculated.</p></li>
</ul>
<iframe onload="resizeFrame(this)" class="result" src="/knockoutjs/src/computed-observable.htm" height="130px" width="660px"></iframe>
<h3>Managing 'This'</h3>
<p>Note that in the above example, the second parameter is provided as <b>this</b> to Computed function. It is not possible to refer to Observables <b>a()</b> and <b>b()</b> without providing <b>this</b>.</p>
<p>To overcome this, <b>self</b> variable is used which holds the reference of <b>this</b>. Doing so, there is no need to track <b>this</b> throughout the code. Instead, <b>self</b> can be used.</p>
<p>Following ViewModel code is rewritten for the above example using self.</p>
<pre class="prettyprint notranslate">
function MyViewModel(){
   self = this;
   self.a = ko.observable(10);
   self.b = ko.observable(40);

   this.totalAvg = ko.computed(function() {
      
      if(typeof(self.a()) !== "number" || typeof(self.b()) !== "number") {
         self.a(Number(self.a()));   //convert string to Number
         self.b(Number(self.b()));   //convert string to Number
      }
      
      total = (self.a() + self.b())/2 ;
      return total;
   });
}
</pre>
<h2>Pure Computed Observables</h2>
<p>A Computed Observable should be declared as <b>Pure</b> Computed Observable if that Observable is simply calculating and returning the value and not directly modifying the other objects or state. Pure Computed Observables helps Knockout to manage reevaluation and memory usage efficiently.</p>
<h3>Notifying subscribers explicitly</h3>
<p>When a Computed Observable is returning primitive data type value (String, Boolean, Null, and Number) then its subscribers are notified if and only if the actual value change takes place. It means if an Observable has received the value same as the previous value, then its subscribers are not notified.</p>
<p>You can make Computed Observables always explicitly notify the observers, even though the new value is the same as the old by using the <b>notify</b> syntax as follows.</p>
<pre class="result notranslate">
myViewModel.property = ko.pureComputed(function() {
   return ...;    // code logic goes here
}).extend({ notify: 'always' });
</pre>
<h3>Limiting Change Notifications</h3>
<p>Too many expensive updates can result in performance issues. You can limit the number of notifications to be received from Observable using <b>rateLimit</b> attribute as follows.</p>
<pre class="prettyprint notranslate">
// make sure there are updates no more than once per 100-millisecond period
myViewModel.property.extend({ rateLimit: 100 });
</pre>
<h3>Finding Out If a Property is Computed Observable</h3>
<p>In certain situations, it might be necessary to find out if a property is a Computed Observable. Following functions can be used to identify the types of Observables.</p>
<table class="table table-bordered">
<tr>
<th style="text-align:center;">Sr.No.</th>
<th style="text-align:center;">Function</th>
</tr>
<tr>
<td class="ts">1</td>
<td><p><b>ko.isComputed</b></p>
<p>Returns <b>true</b> if the property is Computed Observable.</p></td>
</tr>
<tr>
<td class="ts">2</td>
<td><p><b>ko.isObservable</b></p>
<p>Returns <b>true</b> if the property is Observable, Observable array, or Computed Observable.</p></td>
</tr>
<tr>
<td class="ts">3</td>
<td><p><b>ko.isWritableObservable</b></p>
<p>Returns <b>true</b> if Observable, Observable array, or Writable Computed Observable. (This is also called as ko.isWriteableObservable)</p></td>
</tr>
</table>
<h2>Writable Computed Observables</h2>
<p>Computed Observable is derived from one or multiple other Observables, so it is read only. However, it is possible that one can make Computed Observable writable. For this you need to provide callback function that works on written values.</p>
<p>These writable Computed Observables work just like regular Observables. In addition, they require custom logic to be built for interfering read and write actions.</p>
<p>One can assign values to many Observables or Computed Observable properties using the chaining syntax as follows.</p>
<pre class="result notranslate">
myViewModel.fullName('Tom Smith').age(45)
</pre>
<h3>Example</h3>
<p>Following example demonstrates the use of Writable Computable Observable.</p>
<div class="demo-view">
<a href="http://tpcg.io/wo1ozT" target="_blank" rel="nofollow" class="demo"><i class="fa-external-link"></i> Live Demo</a>
</div>
<pre class="prettyprint notranslate">
&lt;!DOCTYPE html&gt;
   &lt;head &gt;
      &lt;title&gt;KnockoutJS Writable Computed Observable&lt;/title&gt;
      &lt;script src = "https://ajax.aspnetcdn.com/ajax/knockout/knockout-3.3.0.js"&gt;&lt;/script&gt;
   &lt;/head&gt;

   &lt;body&gt;
      &lt;p&gt;Enter your birth Date: &lt;input type = "date" data-bind = "value: rawDate" &gt;&lt;/p&gt;
      &lt;p&gt;&lt;span data-bind = "text: yourAge"&gt;&lt;/span&gt;&lt;/p&gt;

      &lt;script&gt;
         function MyViewModel() {
            this.yourAge = ko.observable();
            today = new Date();
            rawDate = ko.observable();

            this.rawDate = ko.pureComputed ({

               read: function() {
                  return this.yourAge;
               },

               write: function(value) {
                  var b = Date.parse(value);    // convert birth date into milliseconds
                  var t = Date.parse(today);    // convert todays date into milliseconds
                  diff = t - b;                 // take difference
                  var y = Math.floor(diff/31449600000);     // difference is converted
                                                            // into years. 31449600000
                                                            //milliseconds form a year.

                  var m = Math.floor((diff % 31449600000)/604800000/4.3);  // calculating
                                                                           // months.
                                                                           // 604800000
                                                                           // milliseconds
                                                                           // form a week.

                  this.yourAge("You are " + y + " year(s) " + m +" months old.");
               },
               owner: this
            });
         }

         ko.applyBindings(new MyViewModel());
      &lt;/script&gt;

   &lt;/body&gt;
&lt;/html&gt;
</pre>
<p>In the above code, <b>rawDate</b> is pureComputed property accepted from UI. <b>yourAge</b> Observable is derived from <b>rawDate</b>.</p>
<p>Dates in JavaScript are manipulated in milliseconds. Hence, both the dates (today date and birth date) are converted into milliseconds and then the difference between them is converted back in years and months.</p>
<h3>Output</h3>
<p>Let's carry out the following steps to see how the above code works &minus;</p>
<ul class="list">
<li><p>Save the above code in <b>writable_computed_observable.htm</b> file.</p></li>
<li><p>Open this HTML file in a browser.</p></li>
<li><p>Enter any birth date and observe that the age is calculated.</p></li>
</ul>
<iframe onload="resizeFrame(this)" class="result" src="/knockoutjs/src/writable_computed_observable.htm" height="100px" width="660px"></iframe>
<div class="mui-container-fluid button-borders show">
<div class="pre-btn">
<a href="/knockoutjs/knockoutjs_observables.htm"><i class="fal fa-chevron-circle-left"></i> Previous Page</a>
</div>
<div class="nxt-btn">
<a href="/knockoutjs/knockoutjs_declarative_bindings.htm">Next Page <i class="fal fa-chevron-circle-right"></i>&nbsp;</a>
</div>
</div>
<div class="google-bottom-ads">
<div>Advertisements</div>
<script><!--
var width = 580;
var height = 400;
var format = "580x400_as";
if( window.innerWidth < 468 ){
   width = 300;
   height = 250;
   format = "300x250_as";
}
google_ad_client = "pub-7133395778201029";
google_ad_width = width;
google_ad_height = height;
google_ad_format = format;
google_ad_type = "image";
google_ad_channel ="";
//--></script>
<script src="https://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
<div class="space-bottom"></div>
</div>
</div>
<!-- Tutorial Content Ends Here -->
<!-- Right Column Starts Here -->
<div class="mui-col-md-2 google-right-ads">
<div class="space-top"></div>
<div class="google-right-ad" style="margin: 0px auto !important;margin-top:5px;">
<script><!--
google_ad_client = "pub-2537027957187252";
google_ad_width = 300;
google_ad_height = 250;
google_ad_format = "300x250_as";
google_ad_type = "image";
google_ad_channel ="";
//--></script>
<script src="https://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</div>
<div class="google-right-ad">
<div class="adsbyvli" data-ad-slot="vi_9012177"></div>
<script>(vitag.Init = window.vitag.Init || []).push(function(){viAPItag.display("vi_9012177")})</script>
</div>
<div class="space-bottom"></div>
<div class="google-right-ad">
<div class="adsbyvli" data-ad-slot="vi_9013289"></div>
<script>(vitag.Init = window.vitag.Init || []).push(function(){viAPItag.display("vi_9013289")})</script>
</div>
<div class="space-bottom" style="margin-bottom:15px;"></div>
</div>
<!-- Right Column Ends Here -->
</div>
</div>
<div class="clear"></div>
<footer id="footer">
<div class="mui--text-center">
<div class="mui--text-caption mui--text-light">
<a href="/index.htm" class="logo"><img class="img-responsive" src="/images/logo-black.png" alt="Tutorials Point" title="Tutorials Point"></a>
</div>
<ul class="mui-list--inline mui--text-body2 mui--text-light">
<li><a href="/about/index.htm"><i class="fal fa-globe"></i> About us</a></li>
<li><a href="/about/about_terms_of_use.htm"><i class="fal fa-asterisk"></i> Terms of use</a></li>
<li><a href="/about/about_privacy.htm#cookies"> <i class="fal fa-shield-check"></i> Cookies Policy</a></li>
<li><a href="/about/faq.htm"><i class="fal fa-question-circle"></i> FAQ's</a></li>
<li><a href="/about/about_helping.htm"><i class="fal fa-hands-helping"></i> Helping</a></li>
<li><a href="/about/contact_us.htm"><i class="fal fa-map-marker-alt"></i> Contact</a></li>
</ul>
<div class="mui--text-caption mui--text-light bottom-copyright-text">&copy; Copyright 2019. All Rights Reserved.</div>
</div>
<div id="privacy-banner">
  <div>
    <p>
      We use cookies to provide and improve our services. By using our site, you consent to our Cookies Policy.
      <a id="banner-accept" href="#">Accept</a>
      <a id="banner-learn" href="/about/about_cookies.htm" target="_blank">Learn more</a>
    </p>
  </div>
</div>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-232293-17"></script>
<script>
window.dataLayer = window.dataLayer || [];
function gtag(){dataLayer.push(arguments);}
gtag('js', new Date());
gtag('config', 'UA-232293-6');
</script>
</footer>
</body>
</html>
