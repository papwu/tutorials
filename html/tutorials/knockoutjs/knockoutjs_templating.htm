<!DOCTYPE html>
<html lang="en-US">
<head>
<title>KnockoutJS - Templating</title>
<meta charset="utf-8">
<meta name="description" content="KnockoutJS - Templating - Template is a set of DOM elements which can be used repetitively. Templating makes it easy to build complex applications due to its property of minimizing dupli"/>
<meta name="keywords" content="C, C++, Python, Java, HTML, CSS, JavaScript, SQL, PHP, jQuery, XML, DOM, Bootstrap, Tutorials, Articles, Programming, training, learning, quiz, preferences, examples, code"/>
<link rel="canonical" href="https://www.tutorialspoint.com/knockoutjs/knockoutjs_templating.htm" />
<link rel="shortcut icon" href="/favicon.ico" type="image/x-icon" />
<meta name="viewport" content="width=device-width,initial-scale=1.0,user-scalable=yes">
<script src="/theme/js/script-min-v2.js?v=3"></script>
<link rel="stylesheet" href="/theme/css/style-min-v2.css?v=6">
<script src="//services.bilsyndication.com/adv1/?d=901" defer="" async=""></script>
<script> var vitag = vitag || {};</script>
<script> vitag.outStreamConfig = { enablePC: false, enableMobile: false };</script>  
<style>
.right-menu .mui-btn {
    background-color:#f42b00;
}
a.demo {
    background:#f42b00;
}
li.heading {
    background:#f42b00;
}
.course-box{background:#f42b00}
.home-intro-sub p{color:#f42b00}
</style>
</head>
<body>
<header id="header">
<!-- Top sub-menu Starts Here -->
<div class="mui-appbar mui-container-fulid top-menu">
<div class="mui-container">
<div class="top-menu-item home">
<a href="https://www.tutorialspoint.com/index.htm" target="_blank" title="TutorialsPoint - Home"><i class="fal fa-home"></i> <span>Home</span></a>
</div>
<div class="top-menu-item qa">
<a href="https://www.tutorialspoint.com/about/about_careers.htm" target="_blank" title="Job @ Tutorials Point"><i class="fa fa-suitcase"></i> <span>Jobs</span></a>
</div>
<div class="top-menu-item tools">
<a href="https://www.tutorialspoint.com/online_dev_tools.htm" target="_blank" title="Tools - Online Development and Testing Tools"><i class="fal fa-cogs"></i> <span>Tools</span></a>
</div>
<div class="top-menu-item coding-ground">
<a href="https://www.tutorialspoint.com/codingground.htm" target="_blank" title="Coding Ground - Free Online IDE and Terminal"><i class="fal fa-code"></i> <span>Coding Ground </span></a> 
</div>
<div class="top-menu-item current-affairs">
<a href="https://www.tutorialspoint.com/current_affairs.htm" target="_blank" title="Daily Current Affairs"><i class="fal fa-layer-plus"></i> <span>Current Affairs</span></a>
</div>
<div class="top-menu-item upsc-notes">
<a href="https://www.tutorialspoint.com/upsc_ias_exams.htm" target="_blank" title="UPSC IAS Exams Notes - TutorialsPoint"><i class="fal fa-user-tie"></i> <span>UPSC Notes</span></a>
</div>      
<div class="top-menu-item online-tutoris">
<a href="https://www.tutorialspoint.com/tutor_connect/index.php" target="_blank" title="Top Online Tutors - Tutor Connect"><i class="fal fa-user"></i> <span>Online Tutors</span></a>
</div>
<div class="top-menu-item whiteboard">
<a href="https://www.tutorialspoint.com/whiteboard.htm" target="_blank" title="Free Online Whiteboard"><i class="fal fa-chalkboard"></i> <span>Whiteboard</span></a>
</div>
<div class="top-menu-item net-meeting">
<a href="https://www.tutorialspoint.com/netmeeting.php" target="_blank" title="A free tool for online video conferencing"><i class="fal fa-chalkboard-teacher"></i> <span>Net Meeting</span></a> 
</div>
<div class="top-menu-item articles">
<a href="https://www.tutorix.com" target="_blank" title="Tutorx - The Best Learning App" rel="nofollow"><i class="fal fa-video"></i> <span>Tutorix</span></a> 
</div>        
<div class="social-menu-item">
<a href="https://www.facebook.com/tutorialspointindia" target="_blank" rel="nofollow" data-placement="bottom" title="tutorialspoint @ Facebook"><i class="fab fa-facebook-f"></i></a> 
<a href="https://www.twitter.com/tutorialspoint" target="_blank" rel="nofollow" data-placement="bottom" title="tutorialspoint @ Twitter"><i class="fab fa-twitter"></i></a>
<a href="https://www.linkedin.com/company/tutorialspoint" target="_blank" rel="nofollow" data-placement="bottom" title="tutorialspoint @ Linkedin"><i class="fab fa-linkedin-in"></i></a>
<a href="https://www.youtube.com/channel/UCVLbzhxVTiTLiVKeGV7WEBg" target="_blank" rel="nofollow" data-placement="bottom" title="tutorialspoint YouTube"><i class="fab fa-youtube"></i></a>
</div>        
</div>
</div>
<!-- Top sub-menu Ends Here -->
<!-- Top main-menu Starts Here -->
<div class="mui-appbar mui-container-fulid mui--appbar-line-height mui--z1" id="logo-menu">
<div class="mui-container">
<div class="left-menu">
<a href="https://www.tutorialspoint.com/index.htm" title="Tutorialspoint">
<img class="tp-logo" alt="tutorialspoint" src="/knockoutjs/images/logo.png">
</a>
<div class="mui-dropdown">
<a class="mui-btn mui-btn--primary categories" data-mui-toggle="dropdown"><i class="fa fa-th-large"></i> 
<span>Categories <span class="mui-caret"></span></span></a>            
<ul class="mui-dropdown__menu cat-menu">
<li>
<ul>
<li><a href="/academic_tutorials.htm"><i class="fa fa-caret-right"></i> Academic Tutorials</a></li>
<li><a href="/big_data_tutorials.htm"><i class="fa fa-caret-right"></i> Big Data &amp; Analytics </a></li>
<li><a href="/computer_programming_tutorials.htm"><i class="fa fa-caret-right"></i> Computer Programming </a></li>
<li><a href="/computer_science_tutorials.htm"><i class="fa fa-caret-right"></i> Computer Science </a></li>
<li><a href="/database_tutorials.htm"><i class="fa fa-caret-right"></i> Databases </a></li>
<li><a href="/devops_tutorials.htm"><i class="fa fa-caret-right"></i> DevOps </a></li>
<li><a href="/digital_marketing_tutorials.htm"><i class="fa fa-caret-right"></i> Digital Marketing </a></li>
<li><a href="/engineering_tutorials.htm"><i class="fa fa-caret-right"></i> Engineering Tutorials </a></li>
<li><a href="/upsc_ias_exams.htm"><i class="fa fa-caret-right"></i> Exams Syllabus </a></li>
<li><a href="/famous_monuments.htm"><i class="fa fa-caret-right"></i> Famous Monuments </a></li>
<li><a href="/gate_exams_tutorials.htm"><i class="fa fa-caret-right"></i> GATE Exams Tutorials</a></li>
<li><a href="/latest_technologies.htm"><i class="fa fa-caret-right"></i> Latest Technologies </a></li>
<li><a href="/machine_learning_tutorials.htm"><i class="fa fa-caret-right"></i> Machine Learning </a></li>
<li><a href="/mainframe_tutorials.htm"><i class="fa fa-caret-right"></i> Mainframe Development </a></li>
<li><a href="/management_tutorials.htm"><i class="fa fa-caret-right"></i> Management Tutorials </a></li>
<li><a href="/maths_tutorials.htm"><i class="fa fa-caret-right"></i> Mathematics Tutorials</a></li>
<li><a href="/microsoft_technologies_tutorials.htm"><i class="fa fa-caret-right"></i> Microsoft Technologies </a></li>
<li><a href="/misc_tutorials.htm"><i class="fa fa-caret-right"></i> Misc tutorials </a></li>
<li><a href="/mobile_development_tutorials.htm"><i class="fa fa-caret-right"></i> Mobile Development </a></li>
<li><a href="/java_technology_tutorials.htm"><i class="fa fa-caret-right"></i> Java Technologies </a></li>
<li><a href="/python_technologies_tutorials.htm"><i class="fa fa-caret-right"></i> Python Technologies </a></li>
<li><a href="/sap_tutorials.htm"><i class="fa fa-caret-right"></i> SAP Tutorials </a></li>
<li><a href="/scripting_lnaguage_tutorials.htm"><i class="fa fa-caret-right"></i>Programming Scripts </a></li>
<li><a href="/selected_reading.htm"><i class="fa fa-caret-right"></i> Selected Reading </a></li>
<li><a href="/software_quality_tutorials.htm"><i class="fa fa-caret-right"></i> Software Quality </a></li>
<li><a href="/soft_skill_tutorials.htm"><i class="fa fa-caret-right"></i> Soft Skills </a></li>
<li><a href="/telecom_tutorials.htm"><i class="fa fa-caret-right"></i> Telecom Tutorials </a></li>
<li><a href="/upsc_ias_exams.htm"><i class="fa fa-caret-right"></i> UPSC IAS Exams </a></li>
<li><a href="/web_development_tutorials.htm"><i class="fa fa-caret-right"></i> Web Development </a></li>
<li><a href="/sports_tutorials.htm"><i class="fa fa-caret-right"></i> Sports Tutorials </a></li>
<li><a href="/xml_technologies_tutorials.htm"><i class="fa fa-caret-right"></i> XML Technologies </a></li>
<li><a href="/multi_language_tutorials.htm"><i class="fa fa-caret-right"></i> Multi-Language Tutorials</a></li>
<li><a href="/questions_and_answers.htm"><i class="fa fa-caret-right"></i> Interview Questions</a></li>
</ul>
</li>
</ul>
<div class="clear"></div>
</div> 
</div>
<div class="right-menu">
<div class="toc-toggle">
<a href="javascript:void(0);"><i class="fa fa-bars"></i></a>
</div>
<div class="mobile-search-btn">
<a href="https://www.tutorialspoint.com/search.htm"><i class="fal fa-search"></i></a>
</div>
<div class="search-box">
<form method="get" class="" name="searchform" action="https://www.google.com/search" target="_blank" novalidate="">
<input type="hidden" name="sitesearch" value="www.tutorialspoint.com" class="user-valid valid">
<input class="header-search-box" type="text" id="search-string" name="q" placeholder="Search your favorite tutorials..." onfocus="if (this.value == 'Search your favorite tutorials...') {this.value = '';}" onblur="if (this.value == '') {this.value = 'Search your favorite tutorials...';}" autocomplete="off">
<button><i class="fal fa-search"></i></button>
</form>
</div>
<div class="menu-btn library-btn">
<a href="https://www.tutorialspoint.com/tutorialslibrary.htm"><i class="fal fa-cubes"></i> <span>Library</span></a>
</div>
<div class="menu-btn videos-btn">
<a href="https://www.tutorialspoint.com/videotutorials/index.htm"><i class="fal fa-video"></i> <span>Videos</span></a> 
</div>
<div class="menu-btn videos-btn">
<a href="https://www.tutorialspoint.com/questions/index.php"><i class="fa fa-location-arrow"></i> <span>Q/A</span></a>
</div>
<div class="menu-btn ebooks-btn">
<a href="https://store.tutorialspoint.com"><i class="fal fa-book"></i> <span>eBooks</span></a>
</div>
<div class="mui-dropdown">
<button class="mui-btn mui-btn--primary" data-mui-toggle="dropdown">
<span class="mui-caret"></span>
</button>
<ul class="mui-dropdown__menu">
<li><a href="https://www.tutorialspoint.com/tutorialslibrary.htm"><i class="fal fa-cubes"></i> <span>Library</span></a></li>
<li><a href="https://www.tutorialspoint.com/videotutorials/index.htm"><i class="fal fa-video"></i> <span>Videos</span></a></li>
<li><a href="https://store.tutorialspoint.com"><i class="fal fa-book"></i> <span>eBooks</span></a></li>
</ul>
</div>
</div>
</div>
</div>
<!-- Top main-menu Ends Here -->
</header>
<div class="mui-container-fluid content">
<div class="mui-container">
<!-- Tutorial ToC Starts Here -->
<div class="mui-col-md-3 tutorial-toc">
<div class="mini-logo">
<img src="/knockoutjs/images/knockoutjs-mini-logo.jpg" alt="KnockoutJS Tutorial" />
</div>
<ul class="toc chapters">
<li class="heading">KnockoutJS Tutorial</li>
<li><a href="/knockoutjs/index.htm">KnockoutJS - Home</a></li>
<li><a href="/knockoutjs/knockoutjs_overview.htm">KnockoutJS - Overview</a></li>
<li><a href="/knockoutjs/knockoutjs_environment_setup.htm">KnockoutJS - Environment Setup</a></li>
<li><a href="/knockoutjs/knockoutjs_application.htm">KnockoutJS - Application</a></li>
<li><a href="/knockoutjs/knockoutjs_mvvm_framework.htm">KnockoutJS - MVVM Framework</a></li>
<li><a href="/knockoutjs/knockoutjs_observables.htm">KnockoutJS - Observables</a></li>
<li><a href="/knockoutjs/knockoutjs_computed_observables.htm">Computed Observables</a></li>
<li><a href="/knockoutjs/knockoutjs_declarative_bindings.htm">KnockoutJS - Declarative Bindings</a></li>
<li><a href="/knockoutjs/knockoutjs_dependency_tracking.htm">KnockoutJS - Dependency Tracking</a></li>
<li><a href="/knockoutjs/knockoutjs_templating.htm">KnockoutJS - Templating</a></li>
<li><a href="/knockoutjs/knockoutjs_components.htm">KnockoutJS - Components</a></li>
</ul>
<ul class="toc chapters">
<li class="heading">KnockoutJS Resources</li>
<li><a href="/knockoutjs/knockoutjs_quick_guide.htm" >KnockoutJS - Quick Guide</a></li>
<li><a href="/knockoutjs/knockoutjs_resources.htm" >KnockoutJS - Resources</a></li>
<li><a href="/knockoutjs/knockoutjs_discussion.htm" >KnockoutJS - Discussion</a></li>
</ul>
<ul class="toc reading">
<li class="sreading">Selected Reading</li>
<li><a target="_top" href="/upsc_ias_exams.htm">UPSC IAS Exams Notes</a></li>
<li><a target="_top" href="/developers_best_practices/index.htm">Developer's Best Practices</a></li>
<li><a target="_top" href="/questions_and_answers.htm">Questions and Answers</a></li>
<li><a target="_top" href="/effective_resume_writing.htm">Effective Resume Writing</a></li>
<li><a target="_top" href="/hr_interview_questions/index.htm">HR Interview Questions</a></li>
<li><a target="_top" href="/computer_glossary.htm">Computer Glossary</a></li>
<li><a target="_top" href="/computer_whoiswho.htm">Who is Who</a></li>
</ul>
</div>
<!-- Tutorial ToC Ends Here -->
<!-- Tutorial Content Starts Here -->
<div class="mui-col-md-6 tutorial-content">
<h1>KnockoutJS - Templating</h1>
<hr />
<div class="top-ad-heading">Advertisements</div>
<div style="text-align: center;">
<script><!--
google_ad_client = "pub-7133395778201029";
var width = document.getElementsByClassName("tutorial-content")[0].clientWidth - 40;
google_ad_width = width;
google_ad_height = 150;
google_ad_format = width + "x150_as";
google_ad_type = "image";
google_ad_channel = "";
//--></script>
<script src="https://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</div>
<div class="mui-container-fluid button-borders">
<div class="pre-btn">
<a href="/knockoutjs/knockoutjs_dependency_tracking.htm"><i class="fal fa-chevron-circle-left"></i> Previous Page</a>
</div>
<div class="nxt-btn">
<a href="/knockoutjs/knockoutjs_components.htm">Next Page <i class="fal fa-chevron-circle-right"></i>&nbsp;</a>
</div>
</div>
<div class="clearer"></div>
<p><b>Template</b> is a set of DOM elements which can be used repetitively. Templating makes it easy to build complex applications due to its property of minimizing duplication of DOM elements.</p>
<p>There are 2 ways of creating templates.</p>
<ul class="list">
<li><p><b>Native templating</b> &minus; This method supports the control flow bindings such as foreach, with, and if. These bindings capture HTML markup existing in the element and use it as template for random items. No external library is required for this templating.</p></li>
<li><p><b>String-based templating</b> &minus; KO connects to the third party engine to pass ViewModel values into it and injects the resulting markup into the document. For example,   JQuery.tmpl and Underscore Engine.</p></li>
</ul>
<p><b>Syntax</b></p>
<pre class="result notranslate">
template: &lt;parameter-value&gt;

&lt;script type = "text/html" id = "template-name"&gt;
   ...
   ...   // DOM elemets to be processed
   ...
&lt;/script&gt;
</pre>
<p>Note that <b>type</b> is provided as <b>text/html</b> in the script block to notify KO that, it is not an executable block rather just a template block which needs to be rendered.</p>
<p><b>Parameters</b></p>
<p>Combination of the following properties can be sent as parameter-value to template.</p>
<ul class="list">
<li><p><b>name</b> &minus; This represents the name of the template.</p></li>
<li><p><b>nodes</b> &minus; This represents an array of DOM nodes to be used as the template. This parameter is ignored if the name parameter is passed.</p></li>
<li><p><b>data</b> &minus; This is nothing but data to be shown via the template.</p></li>
<li><p><b>if</b> &minus; Template will be served if the given condition results in true or true-like value.</p></li>
<li><p><b>foreach</b> &minus; To serve template in foreach format.</p></li>
<li><p><b>as</b> &minus; This is just to create an alias in foreach element.</p></li>
<li><p><b>afterAdd, afterRender, beforeRemove</b> &minus; These are all to represent callable functions to be executed depending on the operation performed.</p></li>
</ul>
<h2>Observations</h2>
<h3>Rendering a named Template</h3>
<p>Templates are defined implicitly by HTML markup inside DOM when used with control flow bindings. However if you want to, you can factor out templates into a separate element and then reference them by name.</p>
<p><b>Example</b></p>
<div class="demo-view">
<a href="http://tpcg.io/Z3Mnt1" target="_blank" rel="nofollow" class="demo"><i class="fa-external-link"></i> Live Demo</a>
</div>
<pre class="prettyprint notranslate">
&lt;!DOCTYPE html&gt;
   &lt;head&gt;
      &lt;title&gt;KnockoutJS Templating - Named Template&lt;/title&gt;
      &lt;script src = "https://ajax.aspnetcdn.com/ajax/knockout/knockout-3.3.0.js"
         type = "text/javascript"&gt;&lt;/script&gt;
   &lt;/head&gt;

   &lt;body&gt;
      &lt;h2&gt;Friends List&lt;/h2&gt;
      Here are the Friends from your contact page:
      &lt;div data-bind = "template: { name: 'friend-template', data: friend1 }"&gt;&lt;/div&gt;
      &lt;div data-bind = "template: { name: 'friend-template', data: friend2 }"&gt;&lt;/div&gt;

      &lt;script type = "text/html" id = "friend-template"&gt;
         &lt;h3 data-bind = "text: name"&gt;&lt;/h3&gt;
         &lt;p&gt;Contact Number: &lt;span data-bind = "text: contactNumber"&gt;&lt;/span&gt;&lt;/p&gt;
         &lt;p&gt;Email-id: &lt;span data-bind = "text: email"&gt;&lt;/span&gt;&lt;/p&gt;
      &lt;/script&gt;

      &lt;script type = "text/javascript"&gt;
         function MyViewModel() {
            this.friend1 = { 
               name: 'Smith', 
               contactNumber: 4556750345, 
               email: 'smith123@gmail.com' 
            };
            
            this.friend2 = { 
               name: 'Jack', 
               contactNumber: 6789358001, 
               email: 'jack123@yahoo.com' 
            };
         }

         var vm = new MyViewModel();
         ko.applyBindings(vm);
      &lt;/script&gt;
      
   &lt;/body&gt;
&lt;/html&gt;
</pre>
<p><b>Output</b></p>
<p>Let's carry out the following steps to see how the above code works &minus;</p>
<ul class="list">
<li><p>Save the above code in <b>template-named.htm</b> file.</p></li>
<li><p>Open this HTML file in a browser.</p></li>
<li><p>Here, friend-template is used 2 times.</p></li>
</ul>
<iframe onload="resizeFrame(this)" class="result" src="/knockoutjs/src/templating/template-named.htm" height="330px" width="660px"></iframe>
<h3>Using "foreach" in Template</h3>
<p>Following is an example of using <b>foreach</b> parameter along with the template name.</p>
<p><b>Example</b></p>
<div class="demo-view">
<a href="http://tpcg.io/3bHiwD" target="_blank" rel="nofollow" class="demo"><i class="fa-external-link"></i> Live Demo</a>
</div>
<pre class="prettyprint notranslate">
&lt;!DOCTYPE html&gt;
   &lt;head&gt;
      &lt;title&gt;KnockoutJS Templating - foreach used with Template&lt;/title&gt;
      &lt;script src = "https://ajax.aspnetcdn.com/ajax/knockout/knockout-3.3.0.js"
         type = "text/javascript"&gt;&lt;/script&gt;
   &lt;/head&gt;

   &lt;body&gt;
      &lt;h2&gt;Friends List&lt;/h2&gt;
      Here are the Friends from your contact page:
      &lt;div data-bind = "template: { name: 'friend-template', foreach: friends }"&gt;&lt;/div&gt;

      &lt;script type = "text/html" id = "friend-template"&gt;
         &lt;h3 data-bind = "text: name"&gt;&lt;/h3&gt;
         &lt;p&gt;Contact Number: &lt;span data-bind = "text: contactNumber"&gt;&lt;/span&gt;&lt;/p&gt;
         &lt;p&gt;Email-id: &lt;span data-bind = "text: email"&gt;&lt;/span&gt;&lt;/p&gt;
      &lt;/script&gt;

      &lt;script type = "text/javascript"&gt;
         function MyViewModel() {
            this.friends = [
               { name: 'Smith', contactNumber: 4556750345, email: 'smith123@gmail.com' },
               { name: 'Jack', contactNumber: 6789358001, email: 'jack123@yahoo.com' },
               { name: 'Lisa', contactNumber: 4567893131, email: 'lisa343@yahoo.com' }
            ]
         }

         var vm = new MyViewModel();
         ko.applyBindings(vm);
      &lt;/script&gt;
      
   &lt;/body&gt;
&lt;/html&gt;
</pre>
<p><b>Output</b></p>
<p>Let's carry out the following steps to see how the above code works &minus;</p>
<ul class="list">
<li><p>Save the above code in <b>template-foreach.htm</b> file.</p></li>
<li><p>Open this HTML file in a browser.</p></li>
<li><p>Here, foreach control is used in template binding.</p></li>
</ul>
<iframe onload="resizeFrame(this)" class="result" src="/knockoutjs/src/templating/template-foreach.htm" height="440px" width="660px"></iframe>
<h3>Creating alias Using as Keyword for foreach Items</h3>
<p>Following is how an alias can be created for a foreach item &minus;</p>
<pre class="prettyprint notranslate">
&lt;div data-bind = "template: { 
   name: 'friend-template', 
   foreach: friends, 
   as: 'frnz' 
}"&gt;&lt;/div&gt;
</pre>
<p>It becomes easy to refer to parent objects from inside of foreach loops by creating alias. This feature is useful when the code is complex and nested at multiple levels.</p>
<p><b>Example</b></p>
<div class="demo-view">
<a href="http://tpcg.io/IIIpNy" target="_blank" rel="nofollow" class="demo"><i class="fa-external-link"></i> Live Demo</a>
</div>
<pre class="prettyprint notranslate">
&lt;!DOCTYPE html&gt;
   &lt;head&gt;
      &lt;title&gt;KnockoutJS Templating - using alias in Template&lt;/title&gt;
      &lt;script src = "https://ajax.aspnetcdn.com/ajax/knockout/knockout-3.3.0.js"
         type = "text/javascript"&gt;&lt;/script&gt;
   &lt;/head&gt;

   &lt;body&gt;
      &lt;h2&gt;Friends List&lt;/h2&gt;
      Here are the Friends from your contact page:
      &lt;ul data-bind = "template: { 
         name: 'friend-template', 
         foreach: friends, 
         as: 'frnz' 
      }"&gt;&lt;/ul&gt;

      &lt;script type = "text/html" id = "friend-template"&gt;
         &lt;li&gt;
            &lt;h3 data-bind = "text: name"&gt;&lt;/h3&gt;
            &lt;span&gt;Contact Numbers&lt;/span&gt;
            &lt;ul data-bind = "template: { 
               name : 'contacts-template', 
               foreach:contactNumber, 
               as: 'cont'
            } "&gt;&lt;/ul&gt;
            &lt;p&gt;Email-id: &lt;span data-bind = "text: email"&gt;&lt;/span&gt;&lt;/p&gt;
         &lt;/li&gt;
      &lt;/script&gt;

      &lt;script type = "text/html" id = "contacts-template"&gt;
         &lt;li&gt;
            &lt;p&gt;&lt;span data-bind = "text: cont"&gt;&lt;/span&gt;&lt;/p&gt;
         &lt;/li&gt;
      &lt;/script&gt;

      &lt;script type = "text/javascript"&gt;
         function MyViewModel() {
            this.friends = ko.observableArray ( [
               { 
                  name: 'Smith', 
                  contactNumber: [ 4556750345, 4356787934 ], 
                  email: 'smith123@gmail.com' 
               },
               
               { 
                  name: 'Jack', 
                  contactNumber: [ 6789358001, 3456895445 ], 
                  email: 'jack123@yahoo.com' 
               },
               
               { 
                  name: 'Lisa', 
                  contactNumber: [ 4567893131, 9876456783, 1349873445 ],  
                  email: 'lisa343@yahoo.com' 
               }
            ]);
         }

         var vm = new MyViewModel();
         ko.applyBindings(vm);
      &lt;/script&gt;
      
   &lt;/body&gt;
&lt;/html&gt;
</pre>
<p><b>Output</b></p>
<p>Let's carry out the following steps to see how the above code works &minus;</p>
<ul class="list">
<li><p>Save the above code in <b>template-as-alias.htm</b> file.</p></li>
<li><p>Open this HTML file in a browser.</p></li>
<li><p>Alias is used instead of full name of arrays.</p></li>
</ul>
<iframe onload="resizeFrame(this)" class="result" src="/knockoutjs/src/templating/template-as-alias.htm" height="680px" width="660px"></iframe>
<h3>Using afterAdd, beforeRemove, and afterRender</h3>
<p>There are situations wherein extra custom logic needs to be run on DOM elements created by the template. In such case, following callbacks can be used. Consider that you are using foreach element then &minus;</p>
<p><b>afterAdd</b> &minus; This function is invoked when a new item is added to the array mentioned in foreach.</p></li>
<p><b>beforeRemove</b> &minus; This function is invoked just before removing the item from an array mentioned in foreach.</p>
<p><b>afterRender</b> &minus; Function mentioned here is invoked every time foreach is rendered and new entries are added to the array.</p>
<p><b>Example</b></p>
<div class="demo-view">
<a href="http://tpcg.io/4r2JBm" target="_blank" rel="nofollow" class="demo"><i class="fa-external-link"></i> Live Demo</a>
</div>
<pre class="prettyprint notranslate">
&lt;!DOCTYPE html&gt;
   &lt;head&gt;
      &lt;title&gt;KnockoutJS Templating - Use of afterRender Template&lt;/title&gt;
      &lt;script src = "https://ajax.aspnetcdn.com/ajax/knockout/knockout-3.3.0.js"
         type = "text/javascript"&gt;&lt;/script&gt;
      &lt;script src = "https://code.jquery.com/jquery-2.1.3.min.js"
         type = "text/javascript"&gt;&lt;/script&gt;
   &lt;/head&gt;

   &lt;body&gt;
      &lt;h2&gt;Friends List&lt;/h2&gt;
      Here are the Friends from your contact page:
      &lt;div data-bind = "template: { 
         name: 'friend-template', 
         foreach: friends , 
         afterRender: afterProcess
      }"&gt;&lt;/div&gt;

      &lt;script type = "text/html" id = "friend-template"&gt;
         &lt;h3 data-bind = "text: name"&gt;&lt;/h3&gt;
         &lt;p&gt;Contact Number: &lt;span data-bind = "text: contactNumber"&gt;&lt;/span&gt;&lt;/p&gt;
         &lt;p&gt;Email-id: &lt;span data-bind = "text: email"&gt;&lt;/span&gt;&lt;/p&gt;
         &lt;button data-bind = "click: $root.removeContact"&gt;remove &lt;/button&gt;
      &lt;/script&gt;

      &lt;script type = "text/javascript"&gt;
         function MyViewModel() {
            self = this;
            this.friends = ko.observableArray ([
               { name: 'Smith', contactNumber: 4556750345, email: 'smith123@gmail.com' },
               { name: 'Jack', contactNumber: 6789358001, email: 'jack123@yahoo.com' },
            ])

            this.afterProcess = function(elements, data){
               $(elements).css({color: 'magenta' });
            }

            self.removeContact = function() {
               self.friends.remove(this);
            }
         }

         var vm = new MyViewModel();
         ko.applyBindings(vm);
      &lt;/script&gt;
   &lt;/body&gt;
&lt;/html&gt;
</pre>
<p><b>Output</b></p>
<p>Let's carry out the following steps to see how the above code works &minus;</p>
<ul class="list">
<li><p>Save the above code in <b>template-afterrender.htm</b> file.</p></li>
<li><p>Open this HTML file in a browser.</p></li>
<li><p>Here, afterProcess function is executed every time foreach is rendered.</p></li>
</ul>
<iframe onload="resizeFrame(this)" class="result" src="/knockoutjs/src/templating/template-afterrender.htm" height="400px" width="660px"></iframe>
<h3>Choosing Template Dynamically</h3>
<p>If there are multiple templates available, then one can be chosen dynamically by making the name as <b>observable</b> parameter. Hence, the template value will be re-evaluated as the name parameter changes and in turn data will be re-rendered.</p>
<p><b>Example</b></p>
<div class="demo-view">
<a href="http://tpcg.io/FWIYhe" target="_blank" rel="nofollow" class="demo"><i class="fa-external-link"></i> Live Demo</a>
</div>
<pre class="prettyprint notranslate">
&lt;!DOCTYPE html&gt;
   &lt;head&gt;
      &lt;title&gt;KnockoutJS Templating - Dynamic Template&lt;/title&gt;
      &lt;script src = "https://ajax.aspnetcdn.com/ajax/knockout/knockout-3.3.0.js"
         type = "text/javascript"&gt;&lt;/script&gt;
   &lt;/head&gt;
   
   &lt;body&gt;
      &lt;h2&gt;Friends List&lt;/h2&gt;
      Here are the Friends from your contact page:
      &lt;div data-bind = "template: { 
         name: whichTemplate, 
         foreach: friends 
      }"&gt;&lt;/div&gt;

      &lt;script type = "text/html" id = "only-phon"&gt;
         &lt;h3 data-bind = "text: name"&gt;&lt;/h3&gt;
         &lt;p&gt;Contact Number: &lt;span data-bind = "text: contactNumber"&gt;&lt;/span&gt;&lt;/p&gt;
      &lt;/script&gt;

      &lt;script type = "text/html" id = "only-email"&gt;
         &lt;h3 data-bind = "text: name"&gt;&lt;/h3&gt;
         &lt;p&gt;Email-id: &lt;span data-bind = "text: email"&gt;&lt;/span&gt;&lt;/p&gt;
      &lt;/script&gt;

      &lt;script type = "text/javascript"&gt;
         function MyViewModel() {
   
            this.friends = ko.observableArray ([
               {
                  name: 'Smith', 
                  contactNumber: 4556750345, 
                  email: 'smith123@gmail.com', 
                  active: ko.observable(true)
               },
               
               {
                  name: 'Jack', 
                  contactNumber: 6789358001, 
                  email: 'jack123@yahoo.com', 
                  active: ko.observable(false)
               },
            ]);

            this.whichTemplate = function(friends) {
               return friends.active() ? "only-phon" : "only-email";
            }
         }

         var vm = new MyViewModel();
         ko.applyBindings(vm);
      &lt;/script&gt;
      
   &lt;/body&gt;
&lt;/html&gt;
</pre>
<p><b>Output</b></p>
<p>Let's carry out the following steps to see how the above code works &minus;</p>
<ul class="list">
<li><p>Save the above code in <b>template-dynamic.htm</b> file.</p></li>
<li><p>Open this HTML file in a browser.</p></li>
<li><p>Template to be used is decided depending on the active flag value.</p></li>
</ul>
<iframe onload="resizeFrame(this)" class="result" src="/knockoutjs/src/templating/template-dynamic.htm" height="260px" width="660px"></iframe>
<h3>Using external string based engines</h3>
<p>Native templating works perfectly with various control flow elements even with nested code blocks. KO also offers a way to integrate with external templating library such as Underscore templating Engine or JQuery.tmpl.</p>
<p>As mentioned on the official site JQuery.tmpl is no longer under active development since December 2011. Hence, KO's native templating is only recommended instead of JQuery.tmpl or any other string-based template engine.</p>
<p>Please refer to the <a target="_blank" rel="nofollow" href="http://knockoutjs.com/documentation/template-binding.html">official site</a> for more details on this.</p>
<div class="mui-container-fluid button-borders show">
<div class="pre-btn">
<a href="/knockoutjs/knockoutjs_dependency_tracking.htm"><i class="fal fa-chevron-circle-left"></i> Previous Page</a>
</div>
<div class="nxt-btn">
<a href="/knockoutjs/knockoutjs_components.htm">Next Page <i class="fal fa-chevron-circle-right"></i>&nbsp;</a>
</div>
</div>
<div class="google-bottom-ads">
<div>Advertisements</div>
<script><!--
var width = 580;
var height = 400;
var format = "580x400_as";
if( window.innerWidth < 468 ){
   width = 300;
   height = 250;
   format = "300x250_as";
}
google_ad_client = "pub-7133395778201029";
google_ad_width = width;
google_ad_height = height;
google_ad_format = format;
google_ad_type = "image";
google_ad_channel ="";
//--></script>
<script src="https://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
<div class="space-bottom"></div>
</div>
</div>
<!-- Tutorial Content Ends Here -->
<!-- Right Column Starts Here -->
<div class="mui-col-md-2 google-right-ads">
<div class="space-top"></div>
<div class="google-right-ad" style="margin: 0px auto !important;margin-top:5px;">
<script><!--
google_ad_client = "pub-2537027957187252";
google_ad_width = 300;
google_ad_height = 250;
google_ad_format = "300x250_as";
google_ad_type = "image";
google_ad_channel ="";
//--></script>
<script src="https://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</div>
<div class="google-right-ad">
<div class="adsbyvli" data-ad-slot="vi_9012177"></div>
<script>(vitag.Init = window.vitag.Init || []).push(function(){viAPItag.display("vi_9012177")})</script>
</div>
<div class="space-bottom"></div>
<div class="google-right-ad">
<div class="adsbyvli" data-ad-slot="vi_9013289"></div>
<script>(vitag.Init = window.vitag.Init || []).push(function(){viAPItag.display("vi_9013289")})</script>
</div>
<div class="space-bottom" style="margin-bottom:15px;"></div>
</div>
<!-- Right Column Ends Here -->
</div>
</div>
<div class="clear"></div>
<footer id="footer">
<div class="mui--text-center">
<div class="mui--text-caption mui--text-light">
<a href="/index.htm" class="logo"><img class="img-responsive" src="/images/logo-black.png" alt="Tutorials Point" title="Tutorials Point"></a>
</div>
<ul class="mui-list--inline mui--text-body2 mui--text-light">
<li><a href="/about/index.htm"><i class="fal fa-globe"></i> About us</a></li>
<li><a href="/about/about_terms_of_use.htm"><i class="fal fa-asterisk"></i> Terms of use</a></li>
<li><a href="/about/about_privacy.htm#cookies"> <i class="fal fa-shield-check"></i> Cookies Policy</a></li>
<li><a href="/about/faq.htm"><i class="fal fa-question-circle"></i> FAQ's</a></li>
<li><a href="/about/about_helping.htm"><i class="fal fa-hands-helping"></i> Helping</a></li>
<li><a href="/about/contact_us.htm"><i class="fal fa-map-marker-alt"></i> Contact</a></li>
</ul>
<div class="mui--text-caption mui--text-light bottom-copyright-text">&copy; Copyright 2019. All Rights Reserved.</div>
</div>
<div id="privacy-banner">
  <div>
    <p>
      We use cookies to provide and improve our services. By using our site, you consent to our Cookies Policy.
      <a id="banner-accept" href="#">Accept</a>
      <a id="banner-learn" href="/about/about_cookies.htm" target="_blank">Learn more</a>
    </p>
  </div>
</div>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-232293-17"></script>
<script>
window.dataLayer = window.dataLayer || [];
function gtag(){dataLayer.push(arguments);}
gtag('js', new Date());
gtag('config', 'UA-232293-6');
</script>
</footer>
</body>
</html>
