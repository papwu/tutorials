<!DOCTYPE html>
<html lang="en-US">
<head>
<title>Python Digital Mobile Device Forensics</title>
<meta charset="utf-8">
<meta name="description" content="Python Digital Mobile Device Forensics - This chapter will explain Python digital forensics on mobile devices and the concepts involved."/>
<meta name="keywords" content="C, C++, Python, Java, HTML, CSS, JavaScript, SQL, PHP, jQuery, XML, DOM, Bootstrap, Tutorials, Articles, Programming, training, learning, quiz, preferences, examples, code"/>
<link rel="canonical" href="https://www.tutorialspoint.com/python_digital_forensics/python_digital_mobile_device_forensics.htm" />
<link rel="shortcut icon" href="/favicon.ico" type="image/x-icon" />
<meta name="viewport" content="width=device-width,initial-scale=1.0,user-scalable=yes">
<script src="/theme/js/script-min-v2.js?v=3"></script>
<link rel="stylesheet" href="/theme/css/style-min-v2.css?v=6">
<script src="//services.bilsyndication.com/adv1/?d=901" defer="" async=""></script>
<script> var vitag = vitag || {};</script>
<script> vitag.outStreamConfig = { enablePC: false, enableMobile: false };</script>  
<style>
.right-menu .mui-btn {
    background-color:#e84802;
}
a.demo {
    background:#e84802;
}
li.heading {
    background:#e84802;
}
.course-box{background:#e84802}
.home-intro-sub p{color:#e84802}
</style>
</head>
<body>
<header id="header">
<!-- Top sub-menu Starts Here -->
<div class="mui-appbar mui-container-fulid top-menu">
<div class="mui-container">
<div class="top-menu-item home">
<a href="https://www.tutorialspoint.com/index.htm" target="_blank" title="TutorialsPoint - Home"><i class="fal fa-home"></i> <span>Home</span></a>
</div>
<div class="top-menu-item qa">
<a href="https://www.tutorialspoint.com/about/about_careers.htm" target="_blank" title="Job @ Tutorials Point"><i class="fa fa-suitcase"></i> <span>Jobs</span></a>
</div>
<div class="top-menu-item tools">
<a href="https://www.tutorialspoint.com/online_dev_tools.htm" target="_blank" title="Tools - Online Development and Testing Tools"><i class="fal fa-cogs"></i> <span>Tools</span></a>
</div>
<div class="top-menu-item coding-ground">
<a href="https://www.tutorialspoint.com/codingground.htm" target="_blank" title="Coding Ground - Free Online IDE and Terminal"><i class="fal fa-code"></i> <span>Coding Ground </span></a> 
</div>
<div class="top-menu-item current-affairs">
<a href="https://www.tutorialspoint.com/current_affairs.htm" target="_blank" title="Daily Current Affairs"><i class="fal fa-layer-plus"></i> <span>Current Affairs</span></a>
</div>
<div class="top-menu-item upsc-notes">
<a href="https://www.tutorialspoint.com/upsc_ias_exams.htm" target="_blank" title="UPSC IAS Exams Notes - TutorialsPoint"><i class="fal fa-user-tie"></i> <span>UPSC Notes</span></a>
</div>      
<div class="top-menu-item online-tutoris">
<a href="https://www.tutorialspoint.com/tutor_connect/index.php" target="_blank" title="Top Online Tutors - Tutor Connect"><i class="fal fa-user"></i> <span>Online Tutors</span></a>
</div>
<div class="top-menu-item whiteboard">
<a href="https://www.tutorialspoint.com/whiteboard.htm" target="_blank" title="Free Online Whiteboard"><i class="fal fa-chalkboard"></i> <span>Whiteboard</span></a>
</div>
<div class="top-menu-item net-meeting">
<a href="https://www.tutorialspoint.com/netmeeting.php" target="_blank" title="A free tool for online video conferencing"><i class="fal fa-chalkboard-teacher"></i> <span>Net Meeting</span></a> 
</div>
<div class="top-menu-item articles">
<a href="https://www.tutorix.com" target="_blank" title="Tutorx - The Best Learning App" rel="nofollow"><i class="fal fa-video"></i> <span>Tutorix</span></a> 
</div>        
<div class="social-menu-item">
<a href="https://www.facebook.com/tutorialspointindia" target="_blank" rel="nofollow" data-placement="bottom" title="tutorialspoint @ Facebook"><i class="fab fa-facebook-f"></i></a> 
<a href="https://www.twitter.com/tutorialspoint" target="_blank" rel="nofollow" data-placement="bottom" title="tutorialspoint @ Twitter"><i class="fab fa-twitter"></i></a>
<a href="https://www.linkedin.com/company/tutorialspoint" target="_blank" rel="nofollow" data-placement="bottom" title="tutorialspoint @ Linkedin"><i class="fab fa-linkedin-in"></i></a>
<a href="https://www.youtube.com/channel/UCVLbzhxVTiTLiVKeGV7WEBg" target="_blank" rel="nofollow" data-placement="bottom" title="tutorialspoint YouTube"><i class="fab fa-youtube"></i></a>
</div>        
</div>
</div>
<!-- Top sub-menu Ends Here -->
<!-- Top main-menu Starts Here -->
<div class="mui-appbar mui-container-fulid mui--appbar-line-height mui--z1" id="logo-menu">
<div class="mui-container">
<div class="left-menu">
<a href="https://www.tutorialspoint.com/index.htm" title="Tutorialspoint">
<img class="tp-logo" alt="tutorialspoint" src="/python_digital_forensics/images/logo.png">
</a>
<div class="mui-dropdown">
<a class="mui-btn mui-btn--primary categories" data-mui-toggle="dropdown"><i class="fa fa-th-large"></i> 
<span>Categories <span class="mui-caret"></span></span></a>            
<ul class="mui-dropdown__menu cat-menu">
<li>
<ul>
<li><a href="/academic_tutorials.htm"><i class="fa fa-caret-right"></i> Academic Tutorials</a></li>
<li><a href="/big_data_tutorials.htm"><i class="fa fa-caret-right"></i> Big Data &amp; Analytics </a></li>
<li><a href="/computer_programming_tutorials.htm"><i class="fa fa-caret-right"></i> Computer Programming </a></li>
<li><a href="/computer_science_tutorials.htm"><i class="fa fa-caret-right"></i> Computer Science </a></li>
<li><a href="/database_tutorials.htm"><i class="fa fa-caret-right"></i> Databases </a></li>
<li><a href="/devops_tutorials.htm"><i class="fa fa-caret-right"></i> DevOps </a></li>
<li><a href="/digital_marketing_tutorials.htm"><i class="fa fa-caret-right"></i> Digital Marketing </a></li>
<li><a href="/engineering_tutorials.htm"><i class="fa fa-caret-right"></i> Engineering Tutorials </a></li>
<li><a href="/upsc_ias_exams.htm"><i class="fa fa-caret-right"></i> Exams Syllabus </a></li>
<li><a href="/famous_monuments.htm"><i class="fa fa-caret-right"></i> Famous Monuments </a></li>
<li><a href="/gate_exams_tutorials.htm"><i class="fa fa-caret-right"></i> GATE Exams Tutorials</a></li>
<li><a href="/latest_technologies.htm"><i class="fa fa-caret-right"></i> Latest Technologies </a></li>
<li><a href="/machine_learning_tutorials.htm"><i class="fa fa-caret-right"></i> Machine Learning </a></li>
<li><a href="/mainframe_tutorials.htm"><i class="fa fa-caret-right"></i> Mainframe Development </a></li>
<li><a href="/management_tutorials.htm"><i class="fa fa-caret-right"></i> Management Tutorials </a></li>
<li><a href="/maths_tutorials.htm"><i class="fa fa-caret-right"></i> Mathematics Tutorials</a></li>
<li><a href="/microsoft_technologies_tutorials.htm"><i class="fa fa-caret-right"></i> Microsoft Technologies </a></li>
<li><a href="/misc_tutorials.htm"><i class="fa fa-caret-right"></i> Misc tutorials </a></li>
<li><a href="/mobile_development_tutorials.htm"><i class="fa fa-caret-right"></i> Mobile Development </a></li>
<li><a href="/java_technology_tutorials.htm"><i class="fa fa-caret-right"></i> Java Technologies </a></li>
<li><a href="/python_technologies_tutorials.htm"><i class="fa fa-caret-right"></i> Python Technologies </a></li>
<li><a href="/sap_tutorials.htm"><i class="fa fa-caret-right"></i> SAP Tutorials </a></li>
<li><a href="/scripting_lnaguage_tutorials.htm"><i class="fa fa-caret-right"></i>Programming Scripts </a></li>
<li><a href="/selected_reading.htm"><i class="fa fa-caret-right"></i> Selected Reading </a></li>
<li><a href="/software_quality_tutorials.htm"><i class="fa fa-caret-right"></i> Software Quality </a></li>
<li><a href="/soft_skill_tutorials.htm"><i class="fa fa-caret-right"></i> Soft Skills </a></li>
<li><a href="/telecom_tutorials.htm"><i class="fa fa-caret-right"></i> Telecom Tutorials </a></li>
<li><a href="/upsc_ias_exams.htm"><i class="fa fa-caret-right"></i> UPSC IAS Exams </a></li>
<li><a href="/web_development_tutorials.htm"><i class="fa fa-caret-right"></i> Web Development </a></li>
<li><a href="/sports_tutorials.htm"><i class="fa fa-caret-right"></i> Sports Tutorials </a></li>
<li><a href="/xml_technologies_tutorials.htm"><i class="fa fa-caret-right"></i> XML Technologies </a></li>
<li><a href="/multi_language_tutorials.htm"><i class="fa fa-caret-right"></i> Multi-Language Tutorials</a></li>
<li><a href="/questions_and_answers.htm"><i class="fa fa-caret-right"></i> Interview Questions</a></li>
</ul>
</li>
</ul>
<div class="clear"></div>
</div> 
</div>
<div class="right-menu">
<div class="toc-toggle">
<a href="javascript:void(0);"><i class="fa fa-bars"></i></a>
</div>
<div class="mobile-search-btn">
<a href="https://www.tutorialspoint.com/search.htm"><i class="fal fa-search"></i></a>
</div>
<div class="search-box">
<form method="get" class="" name="searchform" action="https://www.google.com/search" target="_blank" novalidate="">
<input type="hidden" name="sitesearch" value="www.tutorialspoint.com" class="user-valid valid">
<input class="header-search-box" type="text" id="search-string" name="q" placeholder="Search your favorite tutorials..." onfocus="if (this.value == 'Search your favorite tutorials...') {this.value = '';}" onblur="if (this.value == '') {this.value = 'Search your favorite tutorials...';}" autocomplete="off">
<button><i class="fal fa-search"></i></button>
</form>
</div>
<div class="menu-btn library-btn">
<a href="https://www.tutorialspoint.com/tutorialslibrary.htm"><i class="fal fa-cubes"></i> <span>Library</span></a>
</div>
<div class="menu-btn videos-btn">
<a href="https://www.tutorialspoint.com/videotutorials/index.htm"><i class="fal fa-video"></i> <span>Videos</span></a> 
</div>
<div class="menu-btn videos-btn">
<a href="https://www.tutorialspoint.com/questions/index.php"><i class="fa fa-location-arrow"></i> <span>Q/A</span></a>
</div>
<div class="menu-btn ebooks-btn">
<a href="https://store.tutorialspoint.com"><i class="fal fa-book"></i> <span>eBooks</span></a>
</div>
<div class="mui-dropdown">
<button class="mui-btn mui-btn--primary" data-mui-toggle="dropdown">
<span class="mui-caret"></span>
</button>
<ul class="mui-dropdown__menu">
<li><a href="https://www.tutorialspoint.com/tutorialslibrary.htm"><i class="fal fa-cubes"></i> <span>Library</span></a></li>
<li><a href="https://www.tutorialspoint.com/videotutorials/index.htm"><i class="fal fa-video"></i> <span>Videos</span></a></li>
<li><a href="https://store.tutorialspoint.com"><i class="fal fa-book"></i> <span>eBooks</span></a></li>
</ul>
</div>
</div>
</div>
</div>
<!-- Top main-menu Ends Here -->
</header>
<div class="mui-container-fluid content">
<div class="mui-container">
<!-- Tutorial ToC Starts Here -->
<div class="mui-col-md-3 tutorial-toc">
<div class="mini-logo">
<img src="/python_digital_forensics/images/python-digital-forensics-mini-logo.jpg" alt="Python Digital Forensics Tutorial" />
</div>
<ul class="toc chapters">
<li class="heading">Python Digital Forensics</li>
<li><a href="/python_digital_forensics/index.htm">Python Digital Forensics - Home</a></li>
<li><a href="/python_digital_forensics/python_digital_forensics_introduction.htm">Introduction</a></li>
<li><a href="/python_digital_forensics/python_digital_forensics_getting_started.htm">Getting Started With Python</a></li>
<li><a href="/python_digital_forensics/python_digital_forensics_artifact_report.htm">Artifact Report</a></li>
<li><a href="/python_digital_forensics/python_digital_mobile_device_forensics.htm">Mobile Device Forensics</a></li>
<li><a href="/python_digital_forensics/python_digital_forensics_investigating_embedded_metadata.htm">Investigating Embedded Metadata</a></li>
<li><a href="/python_digital_forensics/python_digital_network_forensics.htm">Network Forensics-I</a></li>
<li><a href="/python_digital_forensics/python_digital_forensics_network.htm">Network Forensics-II</a></li>
<li><a href="/python_digital_forensics/python_digital_forensics_investigation_using_emails.htm">Investigation Using Emails</a></li>
<li><a href="/python_digital_forensics/python_digital_forensics_important_artifacts_in_windows.htm">Important Artifacts In Windows-I</a></li>
<li><a href="/python_digital_forensics/python_digital_forensics_important_artifacts_in_ms_windows.htm">Important Artifacts In Windows-II</a></li>
<li><a href="/python_digital_forensics/python_digital_forensics_important_artifacts_in_microsoft_windows.htm">Important Artifacts In Windows-III</a></li>
<li><a href="/python_digital_forensics/python_digital_forensics_investigation_of_log_based_artifacts.htm">Investigation Of Log Based Artifacts</a></li>
</ul>
<ul class="toc chapters">
<li class="heading">Python Digital Forensics Resources</li>
<li><a href="/python_digital_forensics/python_digital_forensics_quick_guide.htm">Quick Guide</a></li>
<li><a href="/python_digital_forensics/python_digital_forensics_useful_resources.htm">Python Digital Forensics - Resources</a></li>
<li><a href="/python_digital_forensics/python_digital_forensics_discussion.htm">Python Digital Forensics - Discussion</a></li>
</ul>
<ul class="toc reading">
<li class="sreading">Selected Reading</li>
<li><a target="_top" href="/upsc_ias_exams.htm">UPSC IAS Exams Notes</a></li>
<li><a target="_top" href="/developers_best_practices/index.htm">Developer's Best Practices</a></li>
<li><a target="_top" href="/questions_and_answers.htm">Questions and Answers</a></li>
<li><a target="_top" href="/effective_resume_writing.htm">Effective Resume Writing</a></li>
<li><a target="_top" href="/hr_interview_questions/index.htm">HR Interview Questions</a></li>
<li><a target="_top" href="/computer_glossary.htm">Computer Glossary</a></li>
<li><a target="_top" href="/computer_whoiswho.htm">Who is Who</a></li>
</ul>
</div>
<!-- Tutorial ToC Ends Here -->
<!-- Tutorial Content Starts Here -->
<div class="mui-col-md-6 tutorial-content">
<h1>Python Digital Mobile Device Forensics</h1>
<hr />
<div class="top-ad-heading">Advertisements</div>
<div style="text-align: center;">
<script><!--
google_ad_client = "pub-7133395778201029";
var width = document.getElementsByClassName("tutorial-content")[0].clientWidth - 40;
google_ad_width = width;
google_ad_height = 150;
google_ad_format = width + "x150_as";
google_ad_type = "image";
google_ad_channel = "";
//--></script>
<script src="https://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</div>
<div class="mui-container-fluid button-borders">
<div class="pre-btn">
<a href="/python_digital_forensics/python_digital_forensics_artifact_report.htm"><i class="fal fa-chevron-circle-left"></i> Previous Page</a>
</div>
<div class="nxt-btn">
<a href="/python_digital_forensics/python_digital_forensics_investigating_embedded_metadata.htm">Next Page <i class="fal fa-chevron-circle-right"></i>&nbsp;</a>
</div>
</div>
<div class="clearer"></div>
<p>This chapter will explain Python digital forensics on mobile devices and the concepts involved.</p>
<h2>Introduction</h2>
<p>Mobile device forensics is that branch of digital forensics which deals with the acquisition and analysis of mobile devices to recover digital evidences of investigative interest. This branch is different from computer forensics because mobile devices have an inbuilt communication system which is useful for providing useful information related to location.</p>
<p>Though the use of smartphones is increasing in digital forensics day-by-day, still it is considered to be non-standard due to its heterogeneity. On the other hand, computer hardware, such as hard disk, is considered to be standard and developed as a stable discipline too. In digital forensic industry, there is a lot of debate on the techniques used for non-standards devices, having transient evidences, such as smartphones.</p>
<h2>Artifacts Extractible from Mobile Devices</h2>
<p>Modern mobile devices possess lot of digital information in comparison with the older phones having only a call log or SMS messages. Thus, mobile devices can supply investigators with lots of insights about its user. Some artifacts that can be extracted from mobile devices are as mentioned below &minus;</p>
<ul class="list">
<li><p><b>Messages</b> &minus; These are the useful artifacts which can reveal the state of mind of the owner and can even give some previous unknown information to the investigator.</p></li>
<li><p><b>Location History</b>&minus; The location history data is a useful artifact which can be used by investigators to validate about the particular location of a person.</p></li>
<li><p><b>Applications Installed</b> &minus; By accessing the kind of applications installed, investigator get some insight into the habits and thinking of the mobile user.</p></li>
</ul>
<h2>Evidence Sources and Processing in Python</h2>
<p>Smartphones have SQLite databases and PLIST files as the major sources of evidences. In this section we are going to process the sources of evidences in python.</p>
<h3>Analyzing PLIST files</h3>
<p>A PLIST (Property List) is a flexible and convenient format for storing application data especially on iPhone devices. It uses the extension <b>.plist</b>. Such kind of files used to store information about bundles and applications. It can be in two formats: <b>XML</b> and <b>binary</b>. The following Python code will open and read PLIST file. Note that before proceeding into this, we must create our own <b>Info.plist</b> file.</p>
<p>First, install a third party library named <b>biplist</b> by the following command &minus;</p>
<pre class="result notranslate">
Pip install biplist
</pre>
<p>Now, import some useful libraries to process plist files &minus;</p>
<pre class="prettyprint notranslate">
import biplist
import os
import sys
</pre>
<p>Now, use the following command under main method can be used to read plist file into a variable &minus;</p>
<pre class="prettyprint notranslate">
def main(plist):
   try:
      data = biplist.readPlist(plist)
   except (biplist.InvalidPlistException,biplist.NotBinaryPlistException) as e:
print("[-] Invalid PLIST file - unable to be opened by biplist")
sys.exit(1)
</pre>
<p>Now, we can either read the data on the console or directly print it, from this variable.</p>
<h3>SQLite Databases</h3>
<p>SQLite serves as the primary data repository on mobile devices. SQLite an in-process library that implements a self-contained, server-less, zero-configuration, transactional SQL database engine. It is a database, which is zero-configured, you need not configure it in your system, unlike other databases.</p>
<p>If you are a novice or unfamiliar with SQLite databases, you can follow the link <a href="/sqlite/index.htm">www.tutorialspoint.com/sqlite/index.htm</a> Additionally, you can follow the link <a href="/sqlite/sqlite_python.htm">www.tutorialspoint.com/sqlite/sqlite_python.htm</a> in case you want to get into detail of SQLite with Python.</p>
<p>During mobile forensics, we can interact with the <b>sms.db</b> file of a mobile device and can extract valuable information from <b>message</b> table. Python has a built in library named <b>sqlite3</b> for connecting with SQLite database. You can import the same with the following command &minus;</p>
<pre class="result notranslate">
import sqlite3
</pre>
<p>Now, with the help of following command, we can connect with the database, say <b>sms.db</b> in case of mobile devices &minus;</p>
<pre class="prettyprint notranslate">
Conn = sqlite3.connect(‘sms.db’)
C = conn.cursor()
</pre>
<p>Here, C is the cursor object with the help of which we can interact with the database.</p>
<p>Now, suppose if we want to execute a particular command, say to get the details from the <b>abc table</b>, it can be done with the help of following command &minus;</p>
<pre class="prettyprint notranslate">
c.execute(“Select * from abc”)
c.close()
</pre>
<p>The result of the above command would be stored in the <b>cursor</b> object. Similarly we can use <b>fetchall()</b> method to dump the result into a variable we can manipulate.</p>
<p>We can use the following command to get column names data of message table in <b>sms.db</b> &minus;</p>
<pre class="prettyprint notranslate">
c.execute(“pragma table_info(message)”)
table_data = c.fetchall()
columns = [x[1] for x in table_data
</pre>
<p>Observe that here we are using SQLite PRAGMA command which is special command to be used to control various environmental variables and state flags within SQLite environment. In the above command, the <b>fetchall()</b> method returns a tuple of results. Each column’s name is stored in the first index of each tuple.</p>
<p>Now, with the help of following command we can query the table for all of its data and store it in the variable named <b>data_msg</b> &minus;</p>
<pre class="prettyprint notranslate">
c.execute(“Select * from message”)
data_msg = c.fetchall()
</pre>
<p>The above command will store the data in the variable and further we can also write the above data in CSV file by using <b>csv.writer()</b> method.</p>
<h2>iTunes Backups</h2>
<p>iPhone mobile forensics can be performed on the backups made by iTunes. Forensic examiners rely on analyzing the iPhone logical backups acquired through iTunes. AFC (Apple file connection) protocol is used by iTunes to take the backup. Besides, the backup process does not modify anything on the iPhone except the escrow key records.</p>
<p>Now, the question arises that why it is important for a digital forensic expert to understand the techniques on iTunes backups? It is important in case we get access to the suspect’s computer instead of iPhone directly because when a computer is used to sync with iPhone, then most of the information on iPhone is likely to be backed up on the computer.</p>
<h3>Process of Backup and its Location</h3>
<p>Whenever an Apple product is backed up to the computer, it is in sync with iTunes and there will be a specific folder with device’s unique ID. In the latest backup format, the files are stored in subfolders containing the first two hexadecimal characters of the file name. From these back up files, there are some files like info.plist which are useful along with the database named Manifest.db. The following table shows the backup locations, that vary with operating systems of iTunes backups &minus;</p>
<table class="table table-bordered">
<tr>
<th style="width:30%; text-align:center;">OS</th>
<th style="text-align:center;">Backup Location</th>
</tr>
<tr>
<td>Win7</td>
<td>C:\Users\[username]\AppData\Roaming\AppleComputer\MobileSync\Backup\</td>
</tr>
<tr>
<td>MAC OS X</td>
<td>~/Library/Application Suport/MobileSync/Backup/</td>
</tr>
</table>
<p>For processing the iTunes backup with Python, we need to first identify all the backups in backup location as per our operating system. Then we will iterate through each backup and read the database Manifest.db.</p>
<p>Now, with the help of following Python code we can do the same &minus;</p>
<p>First, import the necessary libraries as follows &minus;</p>
<pre class="prettyprint notranslate">
from __future__ import print_function
import argparse
import logging
import os

from shutil import copyfile
import sqlite3
import sys
logger = logging.getLogger(__name__)
</pre>
<p>Now, provide two positional arguments namely INPUT_DIR and OUTPUT_DIR which is representing iTunes backup and desired output folder &minus;</p>
<pre class="prettyprint notranslate">
if __name__ == "__main__":
   parser.add_argument("INPUT_DIR",help = "Location of folder containing iOS backups, ""e.g. ~\Library\Application Support\MobileSync\Backup folder")
   parser.add_argument("OUTPUT_DIR", help = "Output Directory")
   parser.add_argument("-l", help = "Log file path",default = __file__[:-2] + "log")
   parser.add_argument("-v", help = "Increase verbosity",action = "store_true") args = parser.parse_args()
</pre>
<p>Now, setup the log as follows &minus;</p>
<pre class="prettyprint notranslate">
if args.v:
   logger.setLevel(logging.DEBUG)
else:
   logger.setLevel(logging.INFO)
</pre>
<p>Now, setup the message format for this log as follows &minus;</p>
<pre class="prettyprint notranslate">
msg_fmt = logging.Formatter("%(asctime)-15s %(funcName)-13s""%(levelname)-8s %(message)s")
strhndl = logging.StreamHandler(sys.stderr)
strhndl.setFormatter(fmt = msg_fmt)

fhndl = logging.FileHandler(args.l, mode = 'a')
fhndl.setFormatter(fmt = msg_fmt)

logger.addHandler(strhndl)
logger.addHandler(fhndl)
logger.info("Starting iBackup Visualizer")
logger.debug("Supplied arguments: {}".format(" ".join(sys.argv[1:])))
logger.debug("System: " + sys.platform)
logger.debug("Python Version: " + sys.version)
</pre>
<p>The following line of code will create necessary folders for the desired output directory by using <b>os.makedirs()</b> function &minus;</p>
<pre class="prettyprint notranslate">
if not os.path.exists(args.OUTPUT_DIR):
   os.makedirs(args.OUTPUT_DIR)
</pre>
<p>Now, pass the supplied input and output directories to the main() function as follows &minus;</p>
<pre class="prettyprint notranslate">
if os.path.exists(args.INPUT_DIR) and os.path.isdir(args.INPUT_DIR):
   main(args.INPUT_DIR, args.OUTPUT_DIR)
else:
   logger.error("Supplied input directory does not exist or is not ""a directory")
   sys.exit(1)
</pre>
<p>Now, write <b>main()</b> function which will further call <b>backup_summary()</b> function to identify all the backups present in input folder &minus;</p>
<pre class="prettyprint notranslate">
def main(in_dir, out_dir):
   backups = backup_summary(in_dir)
def backup_summary(in_dir):
   logger.info("Identifying all iOS backups in {}".format(in_dir))
   root = os.listdir(in_dir)
   backups = {}
   
   for x in root:
      temp_dir = os.path.join(in_dir, x)
      if os.path.isdir(temp_dir) and len(x) == 40:
         num_files = 0
         size = 0
         
         for root, subdir, files in os.walk(temp_dir):
            num_files += len(files)
            size += sum(os.path.getsize(os.path.join(root, name))
               for name in files)
         backups[x] = [temp_dir, num_files, size]
   return backups
</pre>
<p>Now, print the summary of each backup to the console as follows &minus;</p>
<pre class="prettyprint notranslate">
print("Backup Summary")
print("=" * 20)

if len(backups) > 0:
   for i, b in enumerate(backups):
      print("Backup No.: {} \n""Backup Dev. Name: {} \n""# Files: {} \n""Backup Size (Bytes): {}\n".format(i, b, backups[b][1], backups[b][2]))
</pre>
<p>Now, dump the contents of the Manifest.db file to the variable named db_items.</p>
<pre class="prettyprint notranslate">
try:
   db_items = process_manifest(backups[b][0])
   except IOError:
      logger.warn("Non-iOS 10 backup encountered or " "invalid backup. Continuing to next backup.")
continue
</pre>
<p>Now, let us define a function that will take the directory path of the backup &minus;</p>
<pre class="prettyprint notranslate">
def process_manifest(backup):
   manifest = os.path.join(backup, "Manifest.db")
   
   if not os.path.exists(manifest):
      logger.error("Manifest DB not found in {}".format(manifest))
      raise IOError
</pre>
<p>Now, using SQLite3 we will connect to the database by cursor named c &minus;</p>
<pre class="prettyprint notranslate">
c = conn.cursor()
items = {}

for row in c.execute("SELECT * from Files;"):
   items[row[0]] = [row[2], row[1], row[3]]
return items

create_files(in_dir, out_dir, b, db_items)
   print("=" * 20)
else:
   logger.warning("No valid backups found. The input directory should be
      " "the parent-directory immediately above the SHA-1 hash " "iOS device backups")
      sys.exit(2)
</pre>
<p>Now, define the <b>create_files()</b> method as follows &minus;</p>
<pre class="prettyprint notranslate">
def create_files(in_dir, out_dir, b, db_items):
   msg = "Copying Files for backup {} to {}".format(b, os.path.join(out_dir, b))
   logger.info(msg)
</pre>
<p>Now, iterate through each key in the <b>db_items</b> dictionary &minus;</p>
<pre class="prettyprint notranslate">
for x, key in enumerate(db_items):
   if db_items[key][0] is None or db_items[key][0] == "":
      continue
   else:
      dirpath = os.path.join(out_dir, b,
os.path.dirname(db_items[key][0]))
   filepath = os.path.join(out_dir, b, db_items[key][0])
   
   if not os.path.exists(dirpath):
      os.makedirs(dirpath)
      original_dir = b + "/" + key[0:2] + "/" + key
   path = os.path.join(in_dir, original_dir)
   
   if os.path.exists(filepath):
      filepath = filepath + "_{}".format(x)
</pre>
<p>Now, use <b>shutil.copyfile()</b> method to copy the backed-up file as follows &minus;</p>
<pre class="prettyprint notranslate">
try:
   copyfile(path, filepath)
   except IOError:
      logger.debug("File not found in backup: {}".format(path))
         files_not_found += 1
   if files_not_found > 0:
      logger.warning("{} files listed in the Manifest.db not" "found in
backup".format(files_not_found))
   copyfile(os.path.join(in_dir, b, "Info.plist"), os.path.join(out_dir, b,
"Info.plist"))
   copyfile(os.path.join(in_dir, b, "Manifest.db"), os.path.join(out_dir, b,
"Manifest.db"))
   copyfile(os.path.join(in_dir, b, "Manifest.plist"), os.path.join(out_dir, b,
"Manifest.plist"))
   copyfile(os.path.join(in_dir, b, "Status.plist"),os.path.join(out_dir, b,
"Status.plist"))
</pre>
<p>With the above Python script, we can get the updated back up file structure in our output folder. We can use <b>pycrypto</b> python library to decrypt the backups.</p>
<h2>Wi - Fi</h2>
<p>Mobile devices can be used to connect to the outside world by connecting through Wi-Fi networks which are available everywhere. Sometimes the device gets connected to these open networks automatically.</p>
<p>In case of iPhone, the list of open Wi-Fi connections with which the device has got connected is stored in a PLIST file named <b>com.apple.wifi.plist</b>. This file will contain the Wi-Fi SSID, BSSID and connection time.</p>
<p>We need to extract Wi-Fi details from standard Cellebrite XML report using Python. For this, we need to use API from Wireless Geographic Logging Engine (WIGLE), a popular platform which can be used for finding the location of a device using the names of Wi-Fi networks.</p>
<p>We can use Python library named <b>requests</b> to access the API from WIGLE. It can be installed as follows &minus;</p>
<pre class="result notranslate">
pip install requests
</pre>
<h3>API from WIGLE</h3>
<p>We need to register on WIGLE’s website <a target="_blank" rel="nofollow" href="https://wigle.net/account">https://wigle.net/account</a> to get a free API from WIGLE. The Python script for getting the information about user device and its connection through WIGEL’s API is discussed below &minus;</p>
<p>First, import the following libraries for handling different things &minus;</p>
<pre class="prettyprint notranslate">
from __future__ import print_function

import argparse
import csv
import os
import sys
import xml.etree.ElementTree as ET
import requests
</pre>
<p>Now, provide two positional arguments namely <b>INPUT_FILE</b> and <b>OUTPUT_CSV</b> which will represent the input file with Wi-Fi MAC address and the desired output CSV file respectively &minus;</p>
<pre class="prettyprint notranslate">
if __name__ == "__main__":
   parser.add_argument("INPUT_FILE", help = "INPUT FILE with MAC Addresses")
   parser.add_argument("OUTPUT_CSV", help = "Output CSV File")
   parser.add_argument("-t", help = "Input type: Cellebrite XML report or TXT
file",choices = ('xml', 'txt'), default = "xml")
   parser.add_argument('--api', help = "Path to API key
   file",default = os.path.expanduser("~/.wigle_api"),
   type = argparse.FileType('r'))
   args = parser.parse_args()
</pre>
<p>Now following lines of code will check if the input file exists and is a file. If not, it exits the script &minus;</p>
<pre class="prettyprint notranslate">
if not os.path.exists(args.INPUT_FILE) or \ not os.path.isfile(args.INPUT_FILE):
   print("[-] {} does not exist or is not a
file".format(args.INPUT_FILE))
   sys.exit(1)
directory = os.path.dirname(args.OUTPUT_CSV)
if directory != '' and not os.path.exists(directory):
   os.makedirs(directory)
api_key = args.api.readline().strip().split(":")
</pre>
<p>Now, pass the argument to main as follows &minus;</p>
<pre class="prettyprint notranslate">
main(args.INPUT_FILE, args.OUTPUT_CSV, args.t, api_key)
def main(in_file, out_csv, type, api_key):
   if type == 'xml':
      wifi = parse_xml(in_file)
   else:
      wifi = parse_txt(in_file)
query_wigle(wifi, out_csv, api_key)
</pre>
<p>Now, we will parse the XML file as follows &minus;</p>
<pre class="prettyprint notranslate">
def parse_xml(xml_file):
   wifi = {}
   xmlns = "{http://pa.cellebrite.com/report/2.0}"
   print("[+] Opening {} report".format(xml_file))
   
   xml_tree = ET.parse(xml_file)
   print("[+] Parsing report for all connected WiFi addresses")
   
   root = xml_tree.getroot()
</pre>
<p>Now, iterate through the child element of the root as follows &minus;</p>
<pre class="prettyprint notranslate">
for child in root.iter():
   if child.tag == xmlns + "model":
      if child.get("type") == "Location":
         for field in child.findall(xmlns + "field"):
            if field.get("name") == "TimeStamp":
               ts_value = field.find(xmlns + "value")
               try:
               ts = ts_value.text
               except AttributeError:
continue
</pre>
<p>Now, we will check that ‘ssid’ string is present in the value’s text or not &minus;</p>
<pre class="prettyprint notranslate">
if "SSID" in value.text:
   bssid, ssid = value.text.split("\t")
   bssid = bssid[7:]
   ssid = ssid[6:]
</pre>
<p>Now, we need to add BSSID, SSID and timestamp to the wifi dictionary as follows &minus;</p>
<pre class="prettyprint notranslate">
if bssid in wifi.keys():

wifi[bssid]["Timestamps"].append(ts)
   wifi[bssid]["SSID"].append(ssid)
else:
   wifi[bssid] = {"Timestamps": [ts], "SSID":
[ssid],"Wigle": {}}
return wifi
</pre>
<p>The text parser which is much simpler that XML parser is shown below &minus;</p>
<pre class="prettyprint notranslate">
def parse_txt(txt_file):
   wifi = {}
   print("[+] Extracting MAC addresses from {}".format(txt_file))
   
   with open(txt_file) as mac_file:
      for line in mac_file:
         wifi[line.strip()] = {"Timestamps": ["N/A"], "SSID":
["N/A"],"Wigle": {}}
return wifi
</pre>
<p>Now, let us use requests module to make <b>WIGLE API</b>calls and need to move on to the <b>query_wigle()</b> method &minus;</p>
<pre class="prettyprint notranslate">
def query_wigle(wifi_dictionary, out_csv, api_key):
   print("[+] Querying Wigle.net through Python API for {} "
"APs".format(len(wifi_dictionary)))
   for mac in wifi_dictionary:

   wigle_results = query_mac_addr(mac, api_key)
def query_mac_addr(mac_addr, api_key):

   query_url = "https://api.wigle.net/api/v2/network/search?" \
"onlymine = false&amp;freenet = false&amp;paynet = false" \ "&amp;netid = {}".format(mac_addr)
   req = requests.get(query_url, auth = (api_key[0], api_key[1]))
   return req.json()
</pre>
<p>Actually there is a limit per day for WIGLE API calls, if that limit exceeds then it must show an error as follows &minus;</p>
<pre class="prettyprint notranslate">
try:
   if wigle_results["resultCount"] == 0:
      wifi_dictionary[mac]["Wigle"]["results"] = []
         continue
   else:
      wifi_dictionary[mac]["Wigle"] = wigle_results
except KeyError:
   if wigle_results["error"] == "too many queries today":
      print("[-] Wigle daily query limit exceeded")
      wifi_dictionary[mac]["Wigle"]["results"] = []
      continue
   else:
      print("[-] Other error encountered for " "address {}: {}".format(mac,
wigle_results['error']))
   wifi_dictionary[mac]["Wigle"]["results"] = []
   continue
prep_output(out_csv, wifi_dictionary)
</pre>
<p>Now, we will use <b>prep_output()</b> method to flattens the dictionary into easily writable chunks &minus;</p>
<pre class="prettyprint notranslate">
def prep_output(output, data):
   csv_data = {}
   google_map = https://www.google.com/maps/search/
</pre>
<p>Now, access all the data we have collected so far as follows &minus;</p>
<pre class="prettyprint notranslate">
for x, mac in enumerate(data):
   for y, ts in enumerate(data[mac]["Timestamps"]):
      for z, result in enumerate(data[mac]["Wigle"]["results"]):
         shortres = data[mac]["Wigle"]["results"][z]
         g_map_url = "{}{},{}".format(google_map, shortres["trilat"],shortres["trilong"])
</pre>
<p>Now, we can write the output in CSV file as we have done in earlier scripts in this chapter by using <b>write_csv()</b> function.</p>
<div class="mui-container-fluid button-borders show">
<div class="pre-btn">
<a href="/python_digital_forensics/python_digital_forensics_artifact_report.htm"><i class="fal fa-chevron-circle-left"></i> Previous Page</a>
</div>
<div class="nxt-btn">
<a href="/python_digital_forensics/python_digital_forensics_investigating_embedded_metadata.htm">Next Page <i class="fal fa-chevron-circle-right"></i>&nbsp;</a>
</div>
</div>
<div class="google-bottom-ads">
<div>Advertisements</div>
<script><!--
var width = 580;
var height = 400;
var format = "580x400_as";
if( window.innerWidth < 468 ){
   width = 300;
   height = 250;
   format = "300x250_as";
}
google_ad_client = "pub-7133395778201029";
google_ad_width = width;
google_ad_height = height;
google_ad_format = format;
google_ad_type = "image";
google_ad_channel ="";
//--></script>
<script src="https://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
<div class="space-bottom"></div>
</div>
</div>
<!-- Tutorial Content Ends Here -->
<!-- Right Column Starts Here -->
<div class="mui-col-md-2 google-right-ads">
<div class="space-top"></div>
<div class="google-right-ad" style="margin: 0px auto !important;margin-top:5px;">
<script><!--
google_ad_client = "pub-2537027957187252";
google_ad_width = 300;
google_ad_height = 250;
google_ad_format = "300x250_as";
google_ad_type = "image";
google_ad_channel ="";
//--></script>
<script src="https://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</div>
<div class="google-right-ad">
<div class="adsbyvli" data-ad-slot="vi_9012177"></div>
<script>(vitag.Init = window.vitag.Init || []).push(function(){viAPItag.display("vi_9012177")})</script>
</div>
<div class="space-bottom"></div>
<div class="google-right-ad">
<div class="adsbyvli" data-ad-slot="vi_9013289"></div>
<script>(vitag.Init = window.vitag.Init || []).push(function(){viAPItag.display("vi_9013289")})</script>
</div>
<div class="space-bottom" style="margin-bottom:15px;"></div>
</div>
<!-- Right Column Ends Here -->
</div>
</div>
<div class="clear"></div>
<footer id="footer">
<div class="mui--text-center">
<div class="mui--text-caption mui--text-light">
<a href="/index.htm" class="logo"><img class="img-responsive" src="/images/logo-black.png" alt="Tutorials Point" title="Tutorials Point"></a>
</div>
<ul class="mui-list--inline mui--text-body2 mui--text-light">
<li><a href="/about/index.htm"><i class="fal fa-globe"></i> About us</a></li>
<li><a href="/about/about_terms_of_use.htm"><i class="fal fa-asterisk"></i> Terms of use</a></li>
<li><a href="/about/about_privacy.htm#cookies"> <i class="fal fa-shield-check"></i> Cookies Policy</a></li>
<li><a href="/about/faq.htm"><i class="fal fa-question-circle"></i> FAQ's</a></li>
<li><a href="/about/about_helping.htm"><i class="fal fa-hands-helping"></i> Helping</a></li>
<li><a href="/about/contact_us.htm"><i class="fal fa-map-marker-alt"></i> Contact</a></li>
</ul>
<div class="mui--text-caption mui--text-light bottom-copyright-text">&copy; Copyright 2019. All Rights Reserved.</div>
</div>
<div id="privacy-banner">
  <div>
    <p>
      We use cookies to provide and improve our services. By using our site, you consent to our Cookies Policy.
      <a id="banner-accept" href="#">Accept</a>
      <a id="banner-learn" href="/about/about_cookies.htm" target="_blank">Learn more</a>
    </p>
  </div>
</div>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-232293-17"></script>
<script>
window.dataLayer = window.dataLayer || [];
function gtag(){dataLayer.push(arguments);}
gtag('js', new Date());
gtag('config', 'UA-232293-6');
</script>
</footer>
</body>
</html>
