<!DOCTYPE html>
<html lang="en-US">
<head>
<title>SAP UI5 - Quick Guide</title>
<meta charset="utf-8">
<meta name="description" content="SAP UI5 - Quick Guide - SAP provides various tools that the users can use to enhance their user experience to create apps with rich user interfaces for Web business applications. The m"/>
<meta name="keywords" content="C, C++, Python, Java, HTML, CSS, JavaScript, SQL, PHP, jQuery, XML, DOM, Bootstrap, Tutorials, Articles, Programming, training, learning, quiz, preferences, examples, code"/>
<link rel="canonical" href="https://www.tutorialspoint.com/sap_ui5/sap_ui5_quick_guide.htm" />
<link rel="shortcut icon" href="/favicon.ico" type="image/x-icon" />
<meta name="viewport" content="width=device-width,initial-scale=1.0,user-scalable=yes">
<script src="/theme/js/script-min-v2.js?v=3"></script>
<link rel="stylesheet" href="/theme/css/style-min-v2.css?v=6">
<script src="//services.bilsyndication.com/adv1/?d=901" defer="" async=""></script>
<script> var vitag = vitag || {};</script>
<script> vitag.outStreamConfig = { enablePC: false, enableMobile: false };</script>  
<style>
.right-menu .mui-btn {
    background-color:#036db0;
}
a.demo {
    background:#036db0;
}
li.heading {
    background:#036db0;
}
.course-box{background:#036db0}
.home-intro-sub p{color:#036db0}
</style>
</head>
<body>
<header id="header">
<!-- Top sub-menu Starts Here -->
<div class="mui-appbar mui-container-fulid top-menu">
<div class="mui-container">
<div class="top-menu-item home">
<a href="https://www.tutorialspoint.com/index.htm" target="_blank" title="TutorialsPoint - Home"><i class="fal fa-home"></i> <span>Home</span></a>
</div>
<div class="top-menu-item qa">
<a href="https://www.tutorialspoint.com/about/about_careers.htm" target="_blank" title="Job @ Tutorials Point"><i class="fa fa-suitcase"></i> <span>Jobs</span></a>
</div>
<div class="top-menu-item tools">
<a href="https://www.tutorialspoint.com/online_dev_tools.htm" target="_blank" title="Tools - Online Development and Testing Tools"><i class="fal fa-cogs"></i> <span>Tools</span></a>
</div>
<div class="top-menu-item coding-ground">
<a href="https://www.tutorialspoint.com/codingground.htm" target="_blank" title="Coding Ground - Free Online IDE and Terminal"><i class="fal fa-code"></i> <span>Coding Ground </span></a> 
</div>
<div class="top-menu-item current-affairs">
<a href="https://www.tutorialspoint.com/current_affairs.htm" target="_blank" title="Daily Current Affairs"><i class="fal fa-layer-plus"></i> <span>Current Affairs</span></a>
</div>
<div class="top-menu-item upsc-notes">
<a href="https://www.tutorialspoint.com/upsc_ias_exams.htm" target="_blank" title="UPSC IAS Exams Notes - TutorialsPoint"><i class="fal fa-user-tie"></i> <span>UPSC Notes</span></a>
</div>      
<div class="top-menu-item online-tutoris">
<a href="https://www.tutorialspoint.com/tutor_connect/index.php" target="_blank" title="Top Online Tutors - Tutor Connect"><i class="fal fa-user"></i> <span>Online Tutors</span></a>
</div>
<div class="top-menu-item whiteboard">
<a href="https://www.tutorialspoint.com/whiteboard.htm" target="_blank" title="Free Online Whiteboard"><i class="fal fa-chalkboard"></i> <span>Whiteboard</span></a>
</div>
<div class="top-menu-item net-meeting">
<a href="https://www.tutorialspoint.com/netmeeting.php" target="_blank" title="A free tool for online video conferencing"><i class="fal fa-chalkboard-teacher"></i> <span>Net Meeting</span></a> 
</div>
<div class="top-menu-item articles">
<a href="https://www.tutorix.com" target="_blank" title="Tutorx - The Best Learning App" rel="nofollow"><i class="fal fa-video"></i> <span>Tutorix</span></a> 
</div>        
<div class="social-menu-item">
<a href="https://www.facebook.com/tutorialspointindia" target="_blank" rel="nofollow" data-placement="bottom" title="tutorialspoint @ Facebook"><i class="fab fa-facebook-f"></i></a> 
<a href="https://www.twitter.com/tutorialspoint" target="_blank" rel="nofollow" data-placement="bottom" title="tutorialspoint @ Twitter"><i class="fab fa-twitter"></i></a>
<a href="https://www.linkedin.com/company/tutorialspoint" target="_blank" rel="nofollow" data-placement="bottom" title="tutorialspoint @ Linkedin"><i class="fab fa-linkedin-in"></i></a>
<a href="https://www.youtube.com/channel/UCVLbzhxVTiTLiVKeGV7WEBg" target="_blank" rel="nofollow" data-placement="bottom" title="tutorialspoint YouTube"><i class="fab fa-youtube"></i></a>
</div>        
</div>
</div>
<!-- Top sub-menu Ends Here -->
<!-- Top main-menu Starts Here -->
<div class="mui-appbar mui-container-fulid mui--appbar-line-height mui--z1" id="logo-menu">
<div class="mui-container">
<div class="left-menu">
<a href="https://www.tutorialspoint.com/index.htm" title="Tutorialspoint">
<img class="tp-logo" alt="tutorialspoint" src="/sap_ui5/images/logo.png">
</a>
<div class="mui-dropdown">
<a class="mui-btn mui-btn--primary categories" data-mui-toggle="dropdown"><i class="fa fa-th-large"></i> 
<span>Categories <span class="mui-caret"></span></span></a>            
<ul class="mui-dropdown__menu cat-menu">
<li>
<ul>
<li><a href="/academic_tutorials.htm"><i class="fa fa-caret-right"></i> Academic Tutorials</a></li>
<li><a href="/big_data_tutorials.htm"><i class="fa fa-caret-right"></i> Big Data &amp; Analytics </a></li>
<li><a href="/computer_programming_tutorials.htm"><i class="fa fa-caret-right"></i> Computer Programming </a></li>
<li><a href="/computer_science_tutorials.htm"><i class="fa fa-caret-right"></i> Computer Science </a></li>
<li><a href="/database_tutorials.htm"><i class="fa fa-caret-right"></i> Databases </a></li>
<li><a href="/devops_tutorials.htm"><i class="fa fa-caret-right"></i> DevOps </a></li>
<li><a href="/digital_marketing_tutorials.htm"><i class="fa fa-caret-right"></i> Digital Marketing </a></li>
<li><a href="/engineering_tutorials.htm"><i class="fa fa-caret-right"></i> Engineering Tutorials </a></li>
<li><a href="/upsc_ias_exams.htm"><i class="fa fa-caret-right"></i> Exams Syllabus </a></li>
<li><a href="/famous_monuments.htm"><i class="fa fa-caret-right"></i> Famous Monuments </a></li>
<li><a href="/gate_exams_tutorials.htm"><i class="fa fa-caret-right"></i> GATE Exams Tutorials</a></li>
<li><a href="/latest_technologies.htm"><i class="fa fa-caret-right"></i> Latest Technologies </a></li>
<li><a href="/machine_learning_tutorials.htm"><i class="fa fa-caret-right"></i> Machine Learning </a></li>
<li><a href="/mainframe_tutorials.htm"><i class="fa fa-caret-right"></i> Mainframe Development </a></li>
<li><a href="/management_tutorials.htm"><i class="fa fa-caret-right"></i> Management Tutorials </a></li>
<li><a href="/maths_tutorials.htm"><i class="fa fa-caret-right"></i> Mathematics Tutorials</a></li>
<li><a href="/microsoft_technologies_tutorials.htm"><i class="fa fa-caret-right"></i> Microsoft Technologies </a></li>
<li><a href="/misc_tutorials.htm"><i class="fa fa-caret-right"></i> Misc tutorials </a></li>
<li><a href="/mobile_development_tutorials.htm"><i class="fa fa-caret-right"></i> Mobile Development </a></li>
<li><a href="/java_technology_tutorials.htm"><i class="fa fa-caret-right"></i> Java Technologies </a></li>
<li><a href="/python_technologies_tutorials.htm"><i class="fa fa-caret-right"></i> Python Technologies </a></li>
<li><a href="/sap_tutorials.htm"><i class="fa fa-caret-right"></i> SAP Tutorials </a></li>
<li><a href="/scripting_lnaguage_tutorials.htm"><i class="fa fa-caret-right"></i>Programming Scripts </a></li>
<li><a href="/selected_reading.htm"><i class="fa fa-caret-right"></i> Selected Reading </a></li>
<li><a href="/software_quality_tutorials.htm"><i class="fa fa-caret-right"></i> Software Quality </a></li>
<li><a href="/soft_skill_tutorials.htm"><i class="fa fa-caret-right"></i> Soft Skills </a></li>
<li><a href="/telecom_tutorials.htm"><i class="fa fa-caret-right"></i> Telecom Tutorials </a></li>
<li><a href="/upsc_ias_exams.htm"><i class="fa fa-caret-right"></i> UPSC IAS Exams </a></li>
<li><a href="/web_development_tutorials.htm"><i class="fa fa-caret-right"></i> Web Development </a></li>
<li><a href="/sports_tutorials.htm"><i class="fa fa-caret-right"></i> Sports Tutorials </a></li>
<li><a href="/xml_technologies_tutorials.htm"><i class="fa fa-caret-right"></i> XML Technologies </a></li>
<li><a href="/multi_language_tutorials.htm"><i class="fa fa-caret-right"></i> Multi-Language Tutorials</a></li>
<li><a href="/questions_and_answers.htm"><i class="fa fa-caret-right"></i> Interview Questions</a></li>
</ul>
</li>
</ul>
<div class="clear"></div>
</div> 
</div>
<div class="right-menu">
<div class="toc-toggle">
<a href="javascript:void(0);"><i class="fa fa-bars"></i></a>
</div>
<div class="mobile-search-btn">
<a href="https://www.tutorialspoint.com/search.htm"><i class="fal fa-search"></i></a>
</div>
<div class="search-box">
<form method="get" class="" name="searchform" action="https://www.google.com/search" target="_blank" novalidate="">
<input type="hidden" name="sitesearch" value="www.tutorialspoint.com" class="user-valid valid">
<input class="header-search-box" type="text" id="search-string" name="q" placeholder="Search your favorite tutorials..." onfocus="if (this.value == 'Search your favorite tutorials...') {this.value = '';}" onblur="if (this.value == '') {this.value = 'Search your favorite tutorials...';}" autocomplete="off">
<button><i class="fal fa-search"></i></button>
</form>
</div>
<div class="menu-btn library-btn">
<a href="https://www.tutorialspoint.com/tutorialslibrary.htm"><i class="fal fa-cubes"></i> <span>Library</span></a>
</div>
<div class="menu-btn videos-btn">
<a href="https://www.tutorialspoint.com/videotutorials/index.htm"><i class="fal fa-video"></i> <span>Videos</span></a> 
</div>
<div class="menu-btn videos-btn">
<a href="https://www.tutorialspoint.com/questions/index.php"><i class="fa fa-location-arrow"></i> <span>Q/A</span></a>
</div>
<div class="menu-btn ebooks-btn">
<a href="https://store.tutorialspoint.com"><i class="fal fa-book"></i> <span>eBooks</span></a>
</div>
<div class="mui-dropdown">
<button class="mui-btn mui-btn--primary" data-mui-toggle="dropdown">
<span class="mui-caret"></span>
</button>
<ul class="mui-dropdown__menu">
<li><a href="https://www.tutorialspoint.com/tutorialslibrary.htm"><i class="fal fa-cubes"></i> <span>Library</span></a></li>
<li><a href="https://www.tutorialspoint.com/videotutorials/index.htm"><i class="fal fa-video"></i> <span>Videos</span></a></li>
<li><a href="https://store.tutorialspoint.com"><i class="fal fa-book"></i> <span>eBooks</span></a></li>
</ul>
</div>
</div>
</div>
</div>
<!-- Top main-menu Ends Here -->
</header>
<div class="mui-container-fluid content">
<div class="mui-container">
<!-- Tutorial ToC Starts Here -->
<div class="mui-col-md-3 tutorial-toc">
<div class="mini-logo">
<img src="/sap_ui5/images/sap-ui5-mini-logo.jpg" alt="SAP UI5 Tutorial" />
</div>
<ul class="toc chapters">
<li><a class="videolink" href="/sapui5_online_training/index.asp" target="_blank"><img src="/sap_ui5/images/sap-ui5-video-tutorials.jpg" alt="SAP UI5 Video Tutorials" /></a></li>
</ul>
<ul class="toc chapters">
<li class="heading">SAP UI5 Tutorial</li>
<li><a href="/sap_ui5/index.htm">SAP UI5 - Home</a></li>
<li><a href="/sap_ui5/sap_ui5_overview.htm">SAP UI5 - Overview</a></li>
<li><a href="/sap_ui5/sap_ui5_architecture.htm">SAP UI5 - Architecture</a></li>
<li><a href="/sap_ui5/sap_ui5_key_components.htm">SAP UI5 - Key Components</a></li>
<li><a href="/sap_ui5/sap_ui5_control_libraries.htm">SAP UI5 - Control Libraries</a></li>
<li><a href="/sap_ui5/sap_ui5_development_kit.htm">SAP UI5 - Development Kit</a></li>
<li><a href="/sap_ui5/sap_ui5_mvc_concept.htm">SAP UI5 - MVC Concept</a></li>
<li><a href="/sap_ui5/sap_ui5_views.htm">SAP UI5 - Views</a></li>
<li><a href="/sap_ui5/sap_ui5_developer_studio.htm">SAP UI5 - Developer Studio</a></li>
<li><a href="/sap_ui5/sap_ui5_creating_a_ui5_project.htm">SAP UI5 - Creating a UI5 Project</a></li>
<li><a href="/sap_ui5/sap_ui5_controls.htm">SAP UI5 - Controls</a></li>
<li><a href="/sap_ui5/sap_ui5_data_binding.htm">SAP UI5 - Data binding</a></li>
<li><a href="/sap_ui5/sap_ui5_design_patterns.htm">SAP UI5 - Design Patterns</a></li>
<li><a href="/sap_ui5/sap_ui5_modularization.htm">SAP UI5 - Modularization</a></li>
<li><a href="/sap_ui5/sap_ui5_localization.htm">SAP UI5 - Localization</a></li>
<li><a href="/sap_ui5/sap_ui5_notepad_controls.htm">SAP UI5 - Notepad Controls</a></li>
<li><a href="/sap_ui5/sap_ui5_extending_applications.htm">SAP UI5 - Extending Applications</a></li>
<li><a href="/sap_ui5/sap_ui5_theming.htm">SAP UI5 - Theming</a></li>
<li><a href="/sap_ui5/sap_ui5_mobile.htm">SAP UI5 - Mobile</a></li>
<li><a href="/sap_ui5/sap_ui5_creating_project_web_ide.htm">Creating a Project in Web IDE</a></li>
</ul>
<ul class="toc chapters">
<li class="heading">SAP UI5 Useful Resources</li>
<li><a href="/sap_ui5/sap_ui5_quick_guide.htm">SAP UI5 - Quick Guide</a></li>
<li><a href="/sap_ui5/sap_ui5_useful_resources.htm">SAP UI5 - Useful Resources</a></li>
<li><a href="/sap_ui5/sap_ui5_discussion.htm">SAP UI5 - Discussion</a></li>
</ul>
<ul class="toc reading">
<li class="sreading">Selected Reading</li>
<li><a target="_top" href="/upsc_ias_exams.htm">UPSC IAS Exams Notes</a></li>
<li><a target="_top" href="/developers_best_practices/index.htm">Developer's Best Practices</a></li>
<li><a target="_top" href="/questions_and_answers.htm">Questions and Answers</a></li>
<li><a target="_top" href="/effective_resume_writing.htm">Effective Resume Writing</a></li>
<li><a target="_top" href="/hr_interview_questions/index.htm">HR Interview Questions</a></li>
<li><a target="_top" href="/computer_glossary.htm">Computer Glossary</a></li>
<li><a target="_top" href="/computer_whoiswho.htm">Who is Who</a></li>
</ul>
</div>
<!-- Tutorial ToC Ends Here -->
<!-- Tutorial Content Starts Here -->
<div class="mui-col-md-6 tutorial-content">
<h1>SAP UI5 - Quick Guide</h1>
<hr />
<div class="top-ad-heading">Advertisements</div>
<div style="text-align: center;">
<script><!--
google_ad_client = "pub-7133395778201029";
var width = document.getElementsByClassName("tutorial-content")[0].clientWidth - 40;
google_ad_width = width;
google_ad_height = 150;
google_ad_format = width + "x150_as";
google_ad_type = "image";
google_ad_channel = "";
//--></script>
<script src="https://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</div>
<div class="mui-container-fluid button-borders">
<div class="pre-btn">
<a href="/sap_ui5/sap_ui5_creating_project_web_ide.htm"><i class="fal fa-chevron-circle-left"></i> Previous Page</a>
</div>
<div class="nxt-btn">
<a href="/sap_ui5/sap_ui5_useful_resources.htm">Next Page <i class="fal fa-chevron-circle-right"></i>&nbsp;</a>
</div>
</div>
<div class="clearer"></div>
<h1>SAP UI5 - Overview</h1>
<p>SAP provides various tools that the users can use to enhance their user experience to create apps with rich user interfaces for Web business applications. The most common enablement tools include &minus;</p>
<ul class="list">
<li>Theme Designer</li>
<li>NWBC and Side Panel</li>
<li>FPM Screens</li>
<li>SAP UI5 Development Tools</li>
</ul>
<img src="/sap_ui5/images/ui_theme_designer.jpg" alt="UI Theme Design" />
<p>Web-based apps that you create using SAP UI5 provides more consistent user experience and can be accessed on devices such as tablets, smartphones, and laptop. Using the NetWeaver gateway with UI5, you can define a clear separation between the user interface and business logic.</p>
<p>SAP UI5 provides the following key features &minus;</p>
<ul class="list">
<li>Extensibility concepts at the code and application level.</li>
<li>Ability to create complex UI patterns and predefined layouts for typical use cases.</li>
<li>Model-View-Controller (MVC) and data binding methods.</li>
<li>Keyboard interaction support and accessibility features.</li>
<li>SAP UI5 is based on open standards like JavaScript, CSS, and HTML5.</li>
<li>Theming support based on CSS.</li>
</ul>
<p>Following are the advantages of using SAP UI in business &minus;</p>
<ul class="list">
<li>It helps in increasing productivity.</li>
<li>Increase user adaption.</li>
<li>Less manual errors.</li>
<li>Reduce the cost of training.</li>
<li>High performance of SAP system.</li>
<li>Perfectly designed API and can be consumed easily.</li>
</ul>
<h2>SAP UI5 ─ Version</h2>
<p>Following is the list of recent UI5 versions that have been introduced. Each UI5 provides new features and enhancements from the previous versions, platform support, usability enhancements, etc.</p>
<ul class="list">
<li>SAP UI5 1.26</li>
<li>SAP UI5 1.28</li>
<li>SAP UI5 1.30</li>
<li>SAP UI5 1.32</li>
<li>SAP UI5 1.34</li>
<li>SAP UI5 1.36</li>
<li>SAP UI5 1.38 and many more like SAP UI5 1.6</li>
</ul>
<h2>Version Scheme</h2>
<p>SAP UI5 uses 3-digit version number. For example, SAPUI5 1.36.5. Here, the digit (1) specifies the major version. The second digit (36) specifies the minor version number. The third digit specifies the patch version number (5).</p>
<p>In each SAP UI5, the major and minor version as well as the patch version can be used to identify the patches.</p>
<h2>SAP UI5 vs Open UI5</h2>
<p>SAP UI5 and Open UI5, both provide the UI development environment. However, they are different from each other in the following aspects &minus;</p>
<p>SAP UI5 is part of SAP product suite and is not a separate license. It is integrated with different SAP products like &minus;</p>
<ul class="list">
<li>SAP NW 7.4 or higher</li>
<li>SAP NetWeaver AS 7.3x</li>
<li>SAP HANA Cloud and on premise solution</li>
</ul>
<p>Open UI5 is an open source technology for application development and it was released with Apache 2.0.</p>
<table class="table table-bordered">
<tr>
<td>SAP UI5 is not a separate product and is available with SAP product suite</td>
<td>Open UI5 is free open source platform for application development</td>
</tr>
<tr>
<td>SAP UI5 is integrated with
<ul class="list">
<li>SAP HANA</li>
<li>SAP HANA Cloud Platform</li>
<li>SAP NetWeaver higher releases</li>
</ul></td>
<td><p>Open UI5 was introduced with Apache 2.0 license</p>
<p>OpenUI5 is Open Source, and is available on GitHub</p></td>
</tr>
</table>
<h2>UI5 Browser Support</h2>
<p>SAP UI5 supports all the main browsers from Microsoft, Google and Firefox with latest releases. However, features supported varies with the browser version and the vendor.</p>
<img src="/sap_ui5/images/ui5_browser_support.jpg" alt="UI5 Browser Support" />
<h1>SAP UI5 - Architecture</h1>
<p>In SAP UI5 architecture, you have three layers &minus;</p>
<ul class="list">
<li><p>At the top, is the presentation layer, where UI5 components are consumed by devices like mobile, tablets, and laptops.</p></li>
<li><p>At the middle layer, is the application clients that includes SAP UI5 libraries for theming and control. UI5 control libraries include</p>
<ul class="list">
<li><p>Sap.viz</p></li>
<li><p>Sap.ui.commons (Controls like text fields and buttons)</p></li>
<li><p>Sap.ui.table (Input controls for table)</p></li>
<li><p>Sap.ui.ux3</p></li>
<li><p>Sap.m (Includes input control for mobile devices)</p></li>
</ul></li>
<li><p>At the bottom, is the option server component. This includes SAP NetWeaver Application Server for ABAP/Java, SAP backend, HANA XS engine for development or database.</p></li>
</ul>
<img src="/sap_ui5/images/ui5_architecture.jpg" alt="UI5 Architecture" />
<h1>SAP UI5 - Key Components</h1>
<p>SAP UI5 has multiple components which are independent and reusable objects in UI5 application. These components can be developed by different people and can be used in different projects.</p>
<p>An application can use the components from different locations and hence you can easily get the structure of an application. You can create different types of components under SAP UI5 development.</p>
<h2>Faceless Components</h2>
<p>Faceless components are used to get the data from the backend system and they don’t contain a user interface.</p>
<p><b>Example</b>&minus; They are a part of class sap.ui.core.component</p>
<h2>UI Components</h2>
<p>UI components are used to add rendering functionality and represent a screen area or element on the user interface.</p>
<p><b>Example</b> &minus; UI component can be a button with settings to perform some task. It is a part of class: sap.ui.core.UIComponent</p>
<p><b>Note</b> &minus; sap.ui.core.component is the base class for faceless and UI components. To define the extensibility function, the components can inherit from the base class or from other components in UI development.</p>
<p>The module name of a component is known as the package name, and <b>.component</b> where the package name is defined as the name of the parameter passed to the component constructor.</p>
<p>SAP UI5 components can also be divided as per the system landscape &minus;</p>
<ul class="list">
<li>Client side component: This includes,
<ul class="list">
<li>Control libraries sap.m, sap.ui.common, etc.</li>
<li>Core Javascript</li>
<li>Test includes HTML and Javascript</li>
</ul></li>
<li>Server side component
<ul class="list">
<li>Theming Generator</li>
<li>Control and application development tools in Eclipse</li>
<li>Resource handler</li>
</ul></li>
</ul>
<h2>Structure of a Component</h2>
<p>Each component is represented in the form of a folder and contains the name of the components and the resources required to manage the component.</p>
<p>Each component should contain the following files &minus;</p>
<ul class="list">
<li><p><b>Component.json</b> file that contains metadata for design time and is used only for design time tools.</p></li>
<li><p><b>Component.js</b> is used to define properties, events, and components methods that are responsible for runtime metadata.</p></li>
</ul>
<img src="/sap_ui5/images/structure_component.jpg" alt="Structure of Component" />
<h2>How to Create a New SAP UI5 Component?</h2>
<p>To create a new component, you have to create new folder. Let us name this as <b>button</b>.</p>
<p>Next is to create the <b>component.js file</b></p>
<p>Then, you have to extend UI component base class sap.ui.core.UIComponent.extend and enter the name of the component and package path.</p>
<p>Later, to define a new component, you have to start with the <b>require</b> statement as follows &minus;</p>
<pre class="prettyprint notranslate">
// defining a new UI Component
jQuery.sap.require("sap.ui.core.UIComponent");
jQuery.sap.require("sap.ui.commons.Button");
jQuery.sap.declare("samples.components.button.Component");

// new Component
sap.ui.core.UIComponent.extend("samples.components.button.Component", {
   metadata : {
      properties : {
         text: "string"
      }
   }
});

samples.components.button.Component.prototype.createContent = function(){
   this.oButton = new sap.ui.commons.Button("btn");
   return this.oButton;
};

/*
* Overrides setText method of the component to set this text in the button
*/
samples.components.button.Component.prototype.setText = function(sText) {
   this.oButton.setText(sText);
   this.setProperty("text", sText);
   return this;
};
</pre>
<p>The next step is to define the component.json in your folder as follows &minus;</p>
<pre class="prettyprint notranslate">
{
   "name": "samples.components.button",
   "version": "0.1.0",
   "description": "Sample button component",
   "keywords": [
      "button",
      "example"
   ],
   "dependencies": {
   }
}
</pre>
<h2>How to Use a Component</h2>
<p>To use a component, you have to wrap the component in a component container. You cannot directly use a UI component in a page using placeAt method. Another way is to pass the component to the componentContainer constructor.</p>
<h3>Using placeAt Method</h3>
<p>It includes adding the component to the container and using <b>placeAt</b> method to place the component on the page.</p>
<pre class="prettyprint notranslate">
var oComp = sap.ui.getCore().createComponent({
   name: "samples.components.shell",
   id: "Comp1",
   settings: {appTitle: "Hello John"}
});

var oCompCont = new sap.ui.core.ComponentContainer("CompCont1", {
   component: oComp
});

oCompCont.placeAt("target1");
//using placeAt method
</pre>
<h3>Using componentContainer Constructor</h3>
<p>A component container carries specific settings and also contains the lifecycle methods of a regular control. The following code segment shows how to pass the component to the componentContainer constructor.</p>
<pre class="result notranslate">
var oCompCont2 = new sap.ui.core.ComponentContainer("CompCont2", {
   name: " samples.components.shell",
   settings: {text: "Hello John 1"}
});
oCompCont2.placeAt("target2");
</pre>
<h1>SAP UI5 - Control Libraries</h1>
<p>There are various JavaScript and CSS libraries that you can use in combination for the application development. SAPUI5 can use these libraries in combination and they are called SAPUI5 control libraries.</p>
<p>Common SAPUI5 control libraries &minus;</p>
<ul class="list">
<li>Sap.ui.commons for control fields, buttons, etc.</li>
<li>Sap.m is the most common control library and is used for mobile devices</li>
<li>Sap.ui.table includes table control</li>
<li>Sap.ui.ux3</li>
</ul>
<img src="/sap_ui5/images/standard_controls.jpg" alt="Standard Controls" />
<img src="/sap_ui5/images/control_library.jpg" alt="Control Library" />
<p><b>Note</b> &minus; SAPUI5 control library sap.m is the most common library and is used for application development. These libraries can be combined with other control libraries.</p>
<h2>Control Library Combinations</h2>
<ul class="list">
<li><p>You can use the control library sap.m with other control libraries - sap.ui.unified, sap.viz, sap.ui.table, sap.ui.layout, and sap.suite.</p></li>
<li><p>You can combine control libraries - sap.ui.commons, sap.ui.table, sap.ui.ux3 and sap.ui.suite with each other.</p></li>
<li><p>You can also combine control library sap.ui.commons and sap.ui.ux3 with other libraries like sap.ui.core, sap.ui.unified, sap.ui.layout, and sap.ui.table.</p></li>
<li><p>You can combine sap.viz with all other libraries.</p></li>
</ul>
<img src="/sap_ui5/images/sap_viz.jpg" alt="SAP Viz" />
<p>The following table shows the main SAPUI5 control libraries and their description &minus;</p>
<table class="table table-bordered">
<tr>
<td>sap.m</td>
<td>Library with controls specialized for mobile devices.</td>
</tr>
<tr>
<td>sap.makit</td>
<td>SAPUI5 library contains the markit charts.</td>
</tr>
<tr>
<td>sap.ui.commons</td>
<td>Common library for standard controls</td>
</tr>
<tr>
<td>sap.ui.ux3</td>
<td>SAPUI5 library with controls that implement the SAP User Experience(UX) Guidelines 3.0</td>
</tr>
<tr>
<td>sap.viz</td>
<td>SAPUI5 library containing chart controls based on the VIZ charting library.</td>
</tr>
</table>
<h1>SAP UI5 - Development Kit</h1>
<p>SAP UI5 development kit for HTML5 provides you an environment for the development of web-based applications and it provides an application with one consistent user experience. Web apps that you develop with SAP UI5 are responsive across browsers and devices, and they can run on smartphones, tablets, and desktops.</p>
<p>The UI controls automatically adapt themselves to the capabilities of each device.</p>
<p>You can use SAP UI5 on the following platforms &minus;</p>
<ul class="list">
<li>SAP HANA</li>
<li>SAP HANA Cloud Platform</li>
<li>SAP NetWeaver for SAP NetWeaver 7.4 or higher</li>
<li>User interface add-on for SAP NetWeaver for SAP NetWeaver Application Server 7.3x</li>
</ul>
<p>You can deploy the application on the server that includes storing the libraries and getting data from the database. You can use the NetWeaver Application server or HANA Cloud platform for application deployment, and data can be accessed by a business application using the OData model using Gateway. Take a look at the following illustration.</p>
<img src="/sap_ui5/images/development_kit.jpg" alt="Development Kit" />
<p>When a user sends a client request from his mobile/laptop, a request is sent to the server to load the application in a browser, and data is accessed via database and the relevant libraries are accessed.</p>
<p>To build a UI5 application, you can download the SAP UI5 developer’s tools of Eclipse. Once you download, you can unzip the file and deploy on the web server. For ABAP, you can install a UI Add-On for SAP NetWeaver and this also includes UI5 Theme Designer.</p>
<h3>Prerequisites for SAP UI5</h3>
<p>To install and update UI5 development toolkit for HTML5, you should meet the following prerequisites &minus;</p>
<table class="table table-bordered">
<tr>
<th style="width:28%;">Eclipse Platform</th>
<td>Mars (4.5)</td>
</tr>
<tr>
<th>Operating System</th>
<td>Windows OS (XP, Vista, 7 or 8/8.1)</td>
</tr>
<tr>
<th>Java Runtime</th>
<td>JRE Version 1.6 or higher, 32-Bit or 64-Bit</td>
</tr>
<tr>
<th>SAP GUI</th>
<td><p>Only relevant when installing the SAP UI5 ABAP Repository Team Provider</p>
<ul class="list">
<li>For Windows OS: SAP GUI for Windows 7.30/7.40</li>
</ul></td>
</tr>
<tr>
<th>Microsoft</th>
<td><p>Only relevant when installing the SAP UI5 ABAP Repository Team Provider</p>
<p>For Windows OS: DLLs VS2010 for communication with the back-end system is required</p>
<p>Note: Install either the x86 or the x64 variant, accordingly to your 32 or 64-Bit Eclipse installation</p>
</td>
</tr>
</table>
<p>Let us now proceed and discuss how you can install the SAP UI5 Development Kit in your system.</p>
<p><b>Step 1</b> &minus; To install JDK, go to Oracle.com and search for the required JDK version.</p>
<img src="/sap_ui5/images/java_se_development_kit.jpg" alt="Java SE Development Kit" />
<p><b>Step 2</b> &minus; Download and run the setup. You will get a message as shown in the following screenshot.</p>
<img src="/sap_ui5/images/java_se.jpg" alt="Java SE" />
<p><b>Step 3</b> &minus; To install Eclipse, go to <a href="http://www.eclipse.org/downloads/" target="_blank" rel="nofollow">www.Eclipse.org/downloads</a></p>
<img src="/sap_ui5/images/eclipse_ide.jpg" alt="Eclipse IDE" />
<p><b>Step 4</b> &minus; Extract the file as shown in the following screenshot.</p>
<img src="/sap_ui5/images/extra_compressed.jpg" alt="Extra Compressed" />
<p><b>Step 5</b> &minus; To run the installation, go to the extracted folder and run the application file as shown in the following screenshot.</p>
<img src="/sap_ui5/images/eclipse_data_created.jpg" alt="Eclipse Data Created" />
<p><b>Step 6</b> &minus; To install SAPUI5 tools, go to Eclipse &#8594; Help &#8594; Install New software.</p>
<p>You can install directly using the URL or by entering the path of UI5 demo kit.</p>
<p><b>Step 7</b> &minus;  Next, enter the URL in install dialog <a href="https://tools.hana.ondemand.com/mars" target="_blank" rel="nofollow">https://tools.hana.ondemand.com/mars</a></p>
<img src="/sap_ui5/images/ondemand.jpg" alt="Ondemand" />
<p><b>Step 8</b> &minus; To see the available features. Press the ENTER key. You can select the features and click on Next. It will display the list of features to be installed &#8594; Click Next.</p>
<p><b>Step 9</b> &minus; Accept the license agreement and click Finish to start the installation.</p>
<img src="/sap_ui5/images/license_agreement.jpg" alt="License Agreement" />
<img src="/sap_ui5/images/sap_development_tools.jpg" alt="SAP Development Tools" />
<p><b>Step 10</b> &minus; Download UI Development Kit for HTML 5 from the following link &minus;</p>
<p><a href="http://scn.sap.com/community/developer-center/front-end" rel="nofollow" target="_blank">http://scn.sap.com/community/developer-center/front-end</a> and extract the content in the same folder.</p>
<img src="/sap_ui5/images/sap_ui5_developer.jpg" alt="SAP UI5 Developer" />
<p><b>Step 11</b> &minus; Start the Eclipse environment. Go to Help &#8594; Install New Software.</p>
<img src="/sap_ui5/images/ide_web.jpg" alt="IDE WEB" />
<p><b>Step 12</b> &minus; Click Add &#8594; Local.</p>
<p><b>Step 13</b> &minus; Next, navigate to the local update site location and select the tool-update site folder with the folder where you extracted the HTML5 Development toolkit as the update source.</p>
<p><b>Step 14</b> &minus; Select all plugins and features for installation.</p>
<img src="/sap_ui5/images/features.jpg" alt="Features" />
<p><b>Step 15</b> &minus; Select the dialog to “Contact all update sites” during the installation to find the required software.</p>
<img src="/sap_ui5/images/contact_updates.jpg" alt="Contact Updates" />
<p><b>Step 16</b> &minus; Click the Finish button to complete the setup. Restart Eclipse.</p>
<img src="/sap_ui5/images/java_ee.jpg" alt="Java EE" />
<p><b>Step 17</b> &minus; You can verify the installation by creating a new SAPUI5 Application Project via Eclipse menu File &#8594; <b>New</b> &#8594; Other at the bottom. Select SAP UI5 Application Development folder and expand to create a new project.</p>
<img src="/sap_ui5/images/overview.jpg" alt="Overview" />
<p><b>Step 18</b> &minus; Enter the project name, select library and you can check the box to create an initial view.</p>
<img src="/sap_ui5/images/project_name.jpg" alt="Project Name" />
<p><b>Step 19</b> &minus; Create a view using some sample code in the project. Enter the name of the view and click the Next button.</p>
<img src="/sap_ui5/images/create_new_view.jpg" alt="Create New View" />
<p><b>Step 20</b> &minus; Select the development paradigm and click on Finish. You will see a new SAPUI5 development project in a new window as shown in the following screenshot.</p>
<img src="/sap_ui5/images/development_paradigm.jpg" alt="Development Paradigm" />
<p>Now, to present your application or run it in production, you can deploy your SAPUI5 application on the tomcat server. If you don’t have a tool like MAVEN, in that you can use the export option to export the project manually. Right-click on Project &#8594; Export.</p>
<p><b>Step 21</b> &minus; Enter the destination path where you want to place the <b>war</b> file.</p>
<img src="/sap_ui5/images/war_export.jpg" alt="WAR Export" />
<p>Next, copy the war-File to webapps directory of your apache tomcat. You can access your application by going to this path - <b>http://localhost:8080/</b>&lt;your_app&gt;/</p>
<p><b>Note</b> &minus; In a normal scenario, many SAP projects run in Internet Explorer but for SAPUI5 development it is recommended to use Google Chrome or Firefox with firebug plugin as both systems allow the use of tools and plugins to debug JavaScript, as well as use HTML and CSS.</p>
<h1>SAP UI5 - MVC Concept</h1>
<p>Model-View-Controller (MVC) concept is used in SAP UI5 development to keep the application data separate from the user interactions. This allows you to develop the web applications and make changes to the applications independently.</p>
<p>Model-View-Controller plays a different role in UI development &minus;</p>
<ul class="list">
<li><p>The <b>Model</b> is responsible for managing the application data in the database/backend.</p></li>
<li><p>The <b>View</b> is responsible for defining the user interface to users. When a user sends a requests from his device, the view is responsible for data view as per the request submitted.</p></li>
<li><p>The <b>Controller</b> is used to control the data and view events as per user interaction by updating the view and model.</p></li>
</ul>
<img src="/sap_ui5/images/controller.jpg" alt="Controller" />
<p>You can define Model-View-Controller concept in SAPUI5 with the following features &minus;</p>
<h2>Model</h2>
<ul class="list">
<li>Model acts as a bridge between the view and the application data.</li>
<li>Model is used to get the request from the view and respond as per the user’s input.</li>
<li>Model doesn’t depend on classes.</li>
</ul>
<h2>View</h2>
<ul class="list">
<li>View is responsible to manage information display to the users.</li>
<li>Views are based on Model.</li>
</ul>
<h2>Controller</h2>
<ul class="list">
<li><p>Controller is responsible for taking the input given by devices and communicates to model/view and to trigger correct action.</p></li>
<li><p>Controllers are based on model.</p></li>
</ul>
<p>SAP UI5 offers Views and Controllers in the form of single files &minus;</p>
<ul class="list">
<li>sap.ui.core.mvc.XMLView</li>
<li>sap.ui.core.mvc.JSView</li>
<li>sap.ui.core.mvc.Controller</li>
<li>sap.ui.core.mvc.JSONView</li>
</ul>
<h2>JSON Model</h2>
<ul class="list">
<li>JSON model is a client-side model and is used for small data sets.</li>
<li>JSON model supports two-way binding. Data binding concept is mentioned in the latter half of this tutorial.</li>
<li>JSON model can be used to bind controls to JavaScript object data.</li>
</ul>
<h2>XML Model</h2>
<ul class="list">
<li>XML model can be used to bind controls to XML data.</li>
<li>XML is also a client side model and hence is used only for small data sets.</li>
<li>XML model doesn’t provide any mechanism for server-based paging or loading of deltas.</li>
<li>XML model also supports two-way data binding.</li>
</ul>
<h1>SAP UI5 - Views</h1>
<p>Views are defined using SAP libraries as follows &minus;</p>
<ul class="list">
<li>XML with HTML, mixed, or Standalone: Library- sap.ui.core.mvc.XMLView</li>
<li>JavaScript: Library- sap.ui.core.mvc.JSView</li>
<li>JSON: Library - sap.ui.core.mvc.JSONView</li>
<li>HTML: Library - sap.ui.core.mvc.HTMLView</li>
</ul>
<h3>JavaScript View Sample</h3>
<pre class="prettyprint notranslate">
Sap.ui.jsview(“sap.hcm.address”, {
   getControllerName: function() {
      return “sap.hcm.address”;
   },
   createContent: function(oController) {
      var oButton = new sap.ui.commons.Button({ text: “Hello” });
      oButton.attachPress(function() {
         oController.Hello();
      })
      Return oButton;
   }
});
</pre>
<h3>HTML View Sample</h3>
<pre class="prettyprint notranslate">
&lt;template data-controller-name = ”sap.hcm.address’&gt;
   &lt;h1&gt;title&lt;/h1&gt;
   &lt;div&gt; Embedded html &lt;/div&gt;
   &lt;div class = ”test” data-sap-ui-type = ”sap.ui.commons.Button”
      Id = ”Button1” data-text =  ”Hello” Data-press = ”sayHello”&gt;
   &lt;/div&gt;
&lt;/template&gt;
</pre>
<p>Similarly, you can create JSON view derived from sap.ui.core.mvc.JsonView.</p>
<pre class="result notranslate">
{
   “type”:”sap.ui.core.mvc.JsonView”,
   “controllerName”:”sap.hcm.address”,
   ……………………….
   …………………...
   …………………….
}
</pre>
<h2>Comparison of View Types</h2>
<p>The following table lists key features associated with MVC concept and comparison of different view types w.r.t the features.</p>
<table class="table table-bordered">
<tr>
<th>Feature</th>
<th>JS View</th>
<th>XML View</th>
<th>JSON View</th>
<th>HTML View</th>
</tr>
<tr>
<td>Standard and Custom Libraries</td>
<td>Yes</td>
<td>Yes</td>
<td>Yes</td>
<td>Yes</td>
</tr>
<tr>
<td>Properties of types string, int Boolean, float</td>
<td>Yes</td>
<td>Yes</td>
<td>Yes</td>
<td>Yes</td>
</tr>
<tr>
<td>Aggregation 1:1, 1:n Association 1:1, 1:n</td>
<td>Yes</td>
<td>Yes</td>
<td>Yes</td>
<td>Yes</td>
</tr>
<tr>
<td>Simple Data Binding</td>
<td>Yes</td>
<td>Yes</td>
<td>Yes</td>
<td>Yes</td>
</tr>
<tr>
<td>Customize Data Binding</td>
<td>Yes</td>
<td>No</td>
<td>No</td>
<td>No</td>
</tr>
<tr>
<td>Embedded HTML</td>
<td>No</td>
<td>Yes</td>
<td>No</td>
<td>No</td>
</tr>
<tr>
<td>Code Completion</td>
<td>Yes</td>
<td>Yes</td>
<td>No</td>
<td>No</td>
</tr>
<tr>
<td>Templating</td>
<td>Yes</td>
<td>No</td>
<td>No</td>
<td>No</td>
</tr>
<tr>
<td>Validation</td>
<td>No</td>
<td>Yes</td>
<td>No</td>
<td>No</td>
</tr>
<tr>
<td>Single Event Listener</td>
<td>Yes</td>
<td>Yes</td>
<td>Yes</td>
<td>Yes</td>
</tr>
</table>
<h1>SAP UI5 - Developer Studio</h1>
<p>SAPUI5 Developer Studio provides tools to ease the UI5 development process. Following are the functions &minus;</p>
<ul class="list">
<li>Wizard for Control development</li>
<li>Wizard for Project creation</li>
<li>Wizard for View/Controller creation</li>
</ul>
<p>You can download it from SAP Marketplace using the link <a href="https://support.sap.com/software.html." target="_blank" rel="nofollow">https://support.sap.com/software.html.</a> Search for UI Add-on 1.0 for NetWeaver.</p>
<img src="/sap_ui5/images/sap_download_center.jpg" alt="SAP Download Center" />
<p>Go to Software downloads and enter your Id and password. Then, go to support packages and patches. Search for sapui5 tools ide plugin 1.00.</p>
<img src="/sap_ui5/images/software_downloads.jpg" alt="Software Downloads" />
<p>A trail of SAPUI5 framework is also available under SCN. You can go to this link <a href="http://scn.sap.com/community/developer-center/front-end" target="_blank" rel="nofollow">http://scn.sap.com/community/developer-center/front-end</a></p>
<img src="/sap_ui5/images/sap_ui5.jpg" alt="SAP UI5" />
<h1>SAP UI5 - Creating a UI5 Project</h1>
<p><b>Step 1</b> &minus; To create a new project in UI5 developer Studio, go to File &#8594; New &#8594; Project.</p>
<img src="/sap_ui5/images/new_project_sap.jpg" alt="New Project SAP" />
<p><b>Step 2</b> &minus; Enter the name of project, target device, and Create an Initial View.</p>
<img src="/sap_ui5/images/name_of_project.jpg" alt="Name of the Project" />
<p><b>Step 3</b> &minus; Enter the View name and View type in the next window and click Next.</p>
<img src="/sap_ui5/images/enter_view_name.jpg" alt="Enter View Name" />
<p><b>Step 4</b> &minus; In the last window, you see the project summary. It shows you the project properties. Click the Finish button to create the project.</p>
<img src="/sap_ui5/images/finish.jpg" alt="Finish" />
<p><b>Step 5</b> &minus; You will be prompted to switch to Java EE perspective. Click Yes and it will open a new UI5 project window with an initial view - JSView.</p>
<img src="/sap_ui5/images/ui5_project.jpg" alt="UI5 Project" />
<p><b>Step 6</b> &minus; Now to add a Shell to this view, you can use the library sap.ui.ux3.Shell().</p>
<img src="/sap_ui5/images/library_sap.jpg" alt="Library SAP" />
<p><b>Step 7</b> &minus; As Shell is not part of sap.ui.commons, you need to add sap.ui.ux3 library. You can add additional libraries to data-sap-ui-libs.</p>
<img src="/sap_ui5/images/data_sap_ui_libs.jpg" alt="Data SAP UI Libs" />
<p>To run an application, you have two options &minus;</p>
<ul class="list">
<li>Run on server</li>
<li>Run on webapp</li>
</ul>
<p>Run on server is recommended as it has a fixed port and it is not like run on webapp with one-time random port.</p>
<img src="/sap_ui5/images/random_port.jpg" alt="Random Port" />
<h2>SAP UI5 ─ Configuration</h2>
<p>As shown in the following table, you can define various configuration attributes in SAP UI5 &minus;</p>
<img src="/sap_ui5/images/configuration.jpg" alt="Configuration" />
<h2>Core Functions</h2>
<p>The core functions in SAP UI5 are as follows &minus;</p>
<ul class="list">
<li><p><b>Sap.ui.getCore()</b> &minus; This is used to get a core instance.</p></li>
<li><p><b>Sap.ui.getCore().byid(id)</b> &minus; This is used to get an instance of UI5 control created with id.</p></li>
<li><p><b>Sap.ui.getCore().applyChanges()</b> &minus; This is used to carry out and render the changes for UI5 controls immediately.</p></li>
<li><p><b>jQuery.sap.domById(id)</b> &minus; This is used to get any HTML element with id. If there is a UI5 control with id, the element returned is top most HTML element of UI5 control.</p></li>
<li><p><b>jQuery.sap.byId(id)</b> &minus; This is used to return jQuery object of DOM element with specified Id.</p></li>
</ul>
<h1>SAP UI5 - Controls</h1>
<p>There are different types of UI controls that you can use while developing UI5 applications. These controls allow you to add a button, table, images, layout, combo box, and various other controls in UI5 application.</p>
<p>Common control types include &minus;</p>
<ul class="list">
<li>Simple Controls</li>
<li>Complex Controls</li>
<li>UX3 Controls</li>
<li>Dialogs</li>
<li>Layout</li>
</ul>
<h2>Image Control</h2>
<pre class="result notranslate">
Var image = new sap.ui.commons.Image();
Image.setSrc(“Image1.gif”);
Image.setAlt(“alternat.text”);
</pre>
<h2>Combo Box</h2>
<p>You can use a combo box to provide predefined entries.</p>
<p>Properties &minus; items, selectedKey</p>
<pre class="prettyprint notranslate">
Var oComboBox2 = new sap.ui.commons.ComboBox (“ComboBox”,{
   Items:{path:”/data”,
      Template:oItemTemplate, filters:[oFilter]},
   Change: function(oEvent){
      Sap.ui.getCore(). byId(“field”).setValue(
         oEvent.oSource.getSelectedKey());
   }
});
</pre>
<h2>Simple Button Control</h2>
<p>Use attachPresss assign event handler for a push action.</p>
<pre class="result notranslate">
Var oButton = new sap.ui.commons.Button ({text : “Click”,
   Press: oController.update
});
</pre>
<h2>Autocomplete Control</h2>
<p>To autocomplete the entered value.</p>
<pre class="result notranslate">
Var uiElement = new sap.ui.commons.AutoComplete({
   Tooltip: ”Enter the product”,
   maxPopupItems: 4
});
For (var i = 0; i&lt;aData.lenght; i++){
   uiElement.addItem(new sap.ui.core.ListItem(
      {text: aData[i].name}));
}
</pre>
<h2>Table Control Box</h2>
<p>It is derived from sap.ui.table and each table contains columns.</p>
<pre class="result notranslate">
Var oTable = new sap.ui.table.Table({
   Columns: [
      New sap.ui.table.Column({
         Label: new sap.ui.commons.lable({ text: “First Column”}),
         Template: new sap.ui.commons.TextView({ text: “{Firstcolumn}” }),
         Width: “120px”
      })
</pre>
<h1>SAP UI5 - Data binding</h1>
<p>In SAP UI5, <b>data binding concept</b> is used to update the data automatically by binding the data with the controls that holds the application data. Using data binding, you can bind simple controls like text field, simple button to application data, and data is automatically updated when there is a new value.</p>
<p>Using two-way data binding, application data is updated when the value of bound control changes. The value can be changed via different methods, like user input, etc.</p>
<img src="/sap_ui5/images/data_binding_concept.jpg" alt="Data Binding Concept" />
<p>In SAP UI5, different data models can be used for data binding. These data models support different features &minus;</p>
<h2>JSON Model</h2>
<p>JSON model is used to bind JavaScript objects to controls. This data model is a client-side model and is suggested for small data sets. It doesn’t provide any mechanism for serverside paging or loading.</p>
<p>Key features include &minus;</p>
<ul class="list">
<li>JSON model for data binding supports data in JavaScript notation format.</li>
<li>It supports two-way data binding.</li>
</ul>
<p><b>Creating a model instance &minus;</b></p>
<pre class="result notranslate">
Var oModel = new sap.ui.model.json.JSONModel(dataUrlorData);
</pre>
<h2>XML Model</h2>
<p>XML model of data binding allows you to bind the controls to XML data. It is used for clientside objects and for small data sets. It doesn’t provide any mechanism for server-side paging or loading.</p>
<p>Key features include &minus;</p>
<ul class="list">
<li>XML model of data binding supports XML data.</li>
<li>It also supports two-way data binding.</li>
</ul>
<p><b>Creating a model instance &minus;</b></p>
<pre class="result notranslate">
Var oModel = new sap.ui.model.xml.XMLModel(dataUrlorData);
</pre>
<h2>OData Model</h2>
<p>OData model is a server-side model, so entire data is available at the server side. Client side can see only rows and fields and you can’t use sorting and filtering at the client side. There is a need to send this request to the server to complete these tasks.</p>
<p>Data binding in OData model is one way but you can enable two-way binding using experimental write support.</p>
<p>Key features include &minus;</p>
<ul class="list">
<li>OData model of data binding supports Odata compliant data.</li>
<li>This data model allows you to create OData requests and handle responses.</li>
<li>It supports experimental two-way binding.</li>
</ul>
<p><b>Creating a model instance &minus;</b></p>
<pre class="result notranslate">
Var oModel = new sap.ui.model.odata.ODataModel (dataUrl [,useJSON, user, pass]);
</pre>
<h2>Assigning the Model</h2>
<p>You can use the setModel method to assign the model to specific controls or core.</p>
<pre class="result notranslate">
Sap.ui.getcore().setModel(oModel);
</pre>
<p>To bind a model to view &minus;</p>
<pre class="result notranslate">
Var myView = sap.ui.view({type:sap.ui.core.mvc.ViewType.JS, viewname:”view name”});
myView.setModel(oModel);
</pre>
<p>To bind a model to a control &minus;</p>
<pre class="result notranslate">
Var oTable = sap.ui.getCore().byId(“table”);
oTable.setModel(oModel);
</pre>
<p>You can bind the properties of a control to model properties. You can bind the properties of a model to a control using bindproperty method &minus;</p>
<pre class="result notranslate">
oControl.bindProperty(“controlProperty”, “modelProperty”);
or by using below methodvar
oControl = new sap.ui.commons.TextView({
   controlProperty: “{modelProperty}”
});
</pre>
<h2>Aggregation Binding</h2>
<p>You can use aggregation binding to bind a collection of values like binding multiple rows to a table. To use aggregation, you have to use a control that acts as a template.</p>
<p>You can define aggregation binding using bindAgregation method.</p>
<pre class="result notranslate">
oComboBox.bindaggregation( “items”, “/modelaggregation”, oItemTemplate);
</pre>
<h1>SAP UI5 - Design Patterns</h1>
<p><b>Design Pattern</b> is a new term in SAP UI5 development when we talk about SAP development or SAP Fiori system. SAP is working hard to find new design patterns that support development in SAP system using UI5 SDK.</p>
<p>SAP has released different types of design patterns &minus;</p>
<h2>Master-Detail</h2>
<p>This is a first step in application binding and is supported by SplitApp control of SAP UI5. This design pattern supports the list of content and allows lead selection and detailed view.</p>
<h2>Master-Master Detail</h2>
<p>This design pattern displays the detail of transaction in the detail section.</p>
<p><b>Example</b> &minus; You are placing an order online and you want to see a confirmation page that displays what you are buying and display the detail of the transaction with detailed view.</p>
<h2>Full Screen</h2>
<p>This design pattern is mostly recommended for displaying charts, pictorial data, and various types of graphs.</p>
<h2>Multi-Flow</h2>
<p>This design pattern is recommended when you are using a complex application flow and there is a need to make use of all design patterns to build a working application.</p>
<h1>SAP UI5 - Modularization</h1>
<p>In SAPUI5 development for larger JavaScript applications, UI5 framework provides built in support for modularization. <b>Modularization</b> concept allows you to split application into smaller parts and they can be combined together at run time. These smaller application parts are called modularization.</p>
<p>You can declare your own JavaScript module by calling the query jQuery.sap.declare function and this is used to keep track of the module name and already loaded module.</p>
<p>To load a module, you have to use jQuery.sap.require</p>
<h3>Example</h3>
<pre class="prettyprint notranslate">
&lt;script&gt;
   jQuery.sap.require(“sap.ui.commons.MessageBox”);
   ………………………
&lt;/script&gt;
</pre>
<p>When a module is required jQuery.sap.require and that module is not loaded, it automatically loads. It calls the declare method so when require is called it knows that the module has been loaded.</p>
<h1>SAP UI5 - Localization</h1>
<p>SAP UI5 supports localization concept based on Java platform.</p>
<p><b>Identifying the Language Code</b> &minus; For the identification of languages, the framework uses a language code of type string.</p>
<p><b>Resource Bundles</b> &minus; A resource bundle file is a Java properties file and contains key/value pairs where the values are language-dependent texts and the keys are language independent and used by the application to identify and access the corresponding values.</p>
<p>Resource bundles are a collection of <b>*.properties</b> files. All files are named with the same base name (prefix identifying the resource bundle), an optional suffix that identifies the language contained in each file, and the <b>fixed .properties</b> extension.</p>
<p>The language suffixes are formed according to the older JDK locale syntax. By convention, a file without a language suffix should exist and contain the raw untranslated texts in the developer's language. This file is used if no more suitable language can be found.</p>
<p>Resource bundle sap.ui.commons.message_bundle contains the following files &minus;</p>
<ul class="list">
<li><p><b>sap.ui.commons.message_bundle.properties</b> &minus; This file carries the raw text from the developer and it determines the set of keys.</p></li>
<li><p><b>sap.ui.commons.message_bundle_en.properties</b> &minus; This file carries English text.</p></li>
<li><p><b>sap.ui.commons.message_bundle_en_US.properties</b> &minus; This file carries text in American English.</p></li>
<li><p><b>sap.ui.commons.message_bundle_en_UK.properties</b> &minus; This file carries text in British English.</p></li>
</ul>
<h2>Use of Localized Texts in Applications</h2>
<p>SAPUI5 provides two options to use localized texts in applications – the jQuery.sap.resources module and data binding.</p>
<p>The following code is used to get resource bundle for a given language &minus;</p>
<pre class="result notranslate">
jQuery.sap.require(“jquery.sap.resources”);
var oBundle = jQuery.sap.resources({url ; sUrl, locale:sLocale});
</pre>
<p>The following code is used to access the text in resource bundle &minus;</p>
<pre class="result notranslate">
Var sText = oBundle.getText(sKey);
</pre>
<p>The following code is used to get URL of a resource &minus;</p>
<pre class="result notranslate">
Var sUrl = sap.ui.resource(“sap.ui.table”,”messagebundle.properties”);
</pre>
<h1>SAP UI5 - Notepad Controls</h1>
<p>A <b>Control</b> is used to define the appearance and screen area. It contains properties likewidth and text. These properties are used to modify the appearance or change the data displayed by the control. You can create aggregate controls or associated controls.</p>
<p><b>Associated control</b> of a control is defined as loosely related controls, which are not child controls or a part of the main control. Controls are used to trigger well-defined events.</p>
<p>Controls in SAPUI5 can be created directly using a tool or JavaScript file. Controls that are created using the extend() method are also known as <b>Notepad controls</b>.</p>
<p>The following code is used to define a Control using the Extend method &minus;</p>
<pre class="result notranslate">
Sap.ui.core.control.extend (sname, oDefinition);
</pre>
<p>The parameters that are passed to this control &minus;</p>
<ul class="list">
<li>Name of the control</li>
<li>Definition of the control</li>
</ul>
<p>The definition of a control contains information about control API, aggregations, events, etc. and implementation methods.</p>
<p>You can also create custom controls. Definition of custom control can contain public and private methods, metadata, and rendering method, etc.</p>
<pre class="prettyprint notranslate">
metadata:{
   properties: {},
   events: {},
   aggregations: {}
},

publicMethod: function() {},
_privateMethod: function() {},
init: function() {}
onclick: function(e) {},
renderer: function(rm, oControl) {}
</pre>
<p>Creating a new control inherits from Button &minus;</p>
<pre class="result notranslate">
Sap.ui.commons.Button.extend (sname, oDefinition);
</pre>
<p>The <b>metadata</b> in control definition consists of objects for control properties, events, and aggregations.</p>
<h2>Property</h2>
<ul class="list">
<li>Type: data type of control property</li>
<li>String: string for a string property</li>
<li>Int or float for number properties</li>
<li>Int[] for an integers array</li>
<li>String[] for an string array</li>
</ul>
<h2>Events</h2>
<p>Events are defined by the name event only. You normally pass an empty object to an event. Application use enablePreventDefault flag to interrupt the event.</p>
<pre class="result notranslate">
Events: {
   Logout:{},
   Close: {
      enablePreventDefault : true
   }
}
</pre>
<h1>SAP UI5 - Extending Applications</h1>
<p>You can extend UI5 applications that are either remote or in Web IDE. To create a new Extension project, you should have an application remotely or on IDE.</p>
<p><b>Step 1</b> &minus; To create a new Project, go to File &#8594; Extension Project.</p>
<img src="/sap_ui5/images/extension_project.jpg" alt="Extension Project" />
<p><b>Step 2</b> &minus; Select the Workspace to select the desired SAP Fiori application that you want to use as your original application.</p>
<p><b>Step 3</b> &minus; When you select an application, Extension Project Name field is populated with the name of the original application with the suffix extension. You can change this name &#8594; Next</p>
<p><b>Step 4</b> &minus; If necessary, select the Open extension project in extensibility pane checkbox to automatically open the extensibility pane after the project is generated.</p>
<p><b>Step 5</b> &minus; Click Finish.</p>
<p>Similarly, you can also extend applications that reside in SAP HANA Cloud platform. Follow the steps given below.</p>
<p><b>Step 1</b> &minus; To create a new Project, go to File &#8594; Extension Project.</p>
<img src="/sap_ui5/images/sap_hana_cloud.jpg" alt="SAP HANA Cloud" />
<p><b>Step 2</b> &minus; Select the start &#8594; Remote &#8594; SAP HANA Cloud Platform &#8594; Select Application from SAP HANA Cloud Platform dialog box.</p>
<p><b>Step 3</b> &minus; In the next window, you have to enter SAP HANA Cloud Platform account, user name, and password.</p>
<p><b>Step 4</b> &minus; Select Get Applications and search for the application that you want to extend.</p>
<p><b>Step 5</b> &minus; Select the desired application &#8594; OK. The Extension Project Name field is automatically populated in the wizard. If necessary, you can edit this name.</p>
<p><b>Step 6</b> &minus; Click Next. Choose Finish to confirm and create your extension project.</p>
<h1>SAP UI5 - Theming</h1>
<p>The UI theme designer is a browser-based tool that allows you to develop your themes by modifying one of the theme templates provided by SAP.</p>
<p><b>Example</b> &minus; You can change the color scheme, or add your company's logo. The tool provides a live preview of the theme while you are designing.</p>
<p>Apply your corporate branding and look to applications built with SAP UI technologies. The UI theme designer is a browser-based tool for cross-theming scenarios. Use it to easily build your corporate identity themes by modifying one of the theme templates provided by SAP. For example, you can change the color scheme, or add your company's logo. The tool is targeted at different user groups, including developers, visual designers, and administrators.</p>
<h2>Supported Platform</h2>
<ul class="list">
<li>SAP NetWeaver as ABAP (via UI Add-On 1.0 SP4)</li>
<li>SAP NetWeaver Portal (7.30 SP10 and higher version)</li>
<li>SAP HANA Cloud (Planned)</li>
<li>SAP NetWeaver Portal (7.02 Planned)</li>
</ul>
<h2>Key Features and Benefits</h2>
<ul class="list">
<li><p><b>Browser-based, graphical WYSIWYG editor</b> &minus; Changes the values of theming parameters and immediately sees how it affects the visualization of the selected preview page.</p></li>
<li><p><b>Built-in preview pages</b> &minus; Select built-in preview pages to see what your custom theme will look like when it is applied to an application &minus; </p>
<ul class="list">
<li><p>Application previews (Example: Purchase Order Approval, SAP Fiori Launchpad)</p></li>
<li><p>Control previews</p></li>
</ul></li>
<li><p><b>Different levels of theming</b> &minus; </p>
<ul class="list">
<li><p>Quick theming (basic cross-technology theme settings)</p></li>
<li><p>Expert theming (technology-specific theme settings)</p></li>
<li><p>Manual LESS or CSS editing</p></li>
</ul>
</li>
<li><p><b>Color palette for reuse</b> &minus; Specifies a set of parameters with the main color values defining your corporate branding.</p></li>
<li><p><b>Cross-technology theming</b> &minus; Create one consistent theme that applies to various SAP UI clients and technologies &minus;</p>
<ul class="list">
<li><p>SAPUI5 standard libraries (including SAP Fiori applications and SAP Fiori Launchpad)</p></li>
<li><p>Unified Rendering technologies (such as Web Dynpro ABAP and Floorplan Manager)</p></li>
<li><p>SAP NetWeaver Business Client</p></li>
</ul></li>
</ul>
<table class="table table-bordered">
<tr>
<th>SAP UI Client</th>
<th style="text-align:center;">UI parts can be themed</th>
</tr>
<tr>
<td style="vertical-align:middle;">Web Dynpro ABAP</td>
<td><p>You can theme applications that do not use the following UI elements:</p>
<ul class="list">
<li>HTMLIsland</li>
<li>HTMLContainer</li>
<li>Chart</li>
<li>FlashIsland</li>
<li>SilverlightIsland</li>
<li>BusinessGraphics</li>
</ul>
<p>You can only consume themes created with the UI theme designer for Web Dynpro ABAP applications as of SAP NetWeaver 7.0 EHP2</p></td>
</tr>
<tr>
<td style="width:32%;">Floorplan Manager for Web Dynpro ABAP (FPM)</td>
<td>You can theme applications that do not use HTMLIslands or Chart UIBBs</td>
</tr>
<tr>
<td>SAPUI5</td>
<td>You can theme SAP Standard libraries. Custom SAPUI5 libraries cannot be themed</td>
</tr>
<tr>
<td>SAP NetWeaver Business Client (NWBC)</td>
<td><p>NWBC for Desktop (4.0 or higher): You can theme NWBC shell and overview pages (index page, new tab page, service map).</p>
<p>NWBC for HTML (3.6): You can theme the service map. The shell cannot be themed.</p></td>
</tr>
</table>
<h2>How to Call a Theme Designer in SAP Fiori?</h2>
<p><b>Step 1</b> &minus; Login to SAP Fiori Front-End server. You can use <b>T-Code: Theme Designer</b> or use shortcut as shown in the following screenshot and login.</p>
<img src="/sap_ui5/images/sap_easy_access.jpg" alt="SAP Easy Access" />
<p><b>Step 2</b> &minus; Once you login, you will have all the default templates provided by SAP for Theme Designer. Select the default theme and click Open.</p>
<img src="/sap_ui5/images/sap_all.jpg" alt="SAP ALL" />
<p><b>Step 3</b> &minus; Enter the Fiori Launchpad link and Name of the application and click Add.</p>
<img src="/sap_ui5/images/add_target_content.jpg" alt="Add Target Content" />
<img src="/sap_ui5/images/sap_ui5_target.jpg" alt="SAP UI5 Target" />
<p><b>Step 4</b> &minus; From the right side of the screen panel, you can select Color, Font, Image and other properties. You can edit colors as shown in the following screenshots.</p>
<img src="/sap_ui5/images/custom_blue_crystal.jpg" alt="Custom Blue Crystal" />
<img src="/sap_ui5/images/preview.jpg" alt="Preview" />
<p><b>Step 5</b> &minus; To save the Theme, you can click the Save icon as shown in the following screenshot. You also have an option for save and build option.</p>
<img src="/sap_ui5/images/save_theme.jpg" alt="Save Theme" />
<p>Once you click Save and Build, it will start saving and when completed, you will get a confirmation message - Save and Build completed.</p>
<img src="/sap_ui5/images/save_build.jpg" alt="Save and Build" />
<p><b>Step 6</b> &minus; To get the link of this Custom Theme, use T-code as shown in the following screenshot &minus;</p>
<img src="/sap_ui5/images/fioriserver.jpg" alt="Fiori Server" />
<p><b>Step 7</b> &minus; Select the Theme that you have created and click the Info tab.</p>
<img src="/sap_ui5/images/info_tab.jpg" alt="Info Tab" />
<p><b>Step 8</b> &minus; Use Ctrl+Y to copy the URL from the screen and make a note of this.</p>
<img src="/sap_ui5/images/screen.jpg" alt="Screen" />
<h2>Supported Themes</h2>
<p>These are the default themes that are shipped with UI5 &minus;</p>
<ul class="list">
<li>Blue Crystal</li>
<li>Gold Reflection</li>
<li>Mobile Visual Identify</li>
<li>High Contrast Black</li>
</ul>
<img src="/sap_ui5/images/supported_theme.jpg" alt="Supported Theme" />
<h2>Chart Types</h2>
<p>There are various chart types in sap.viz.ui5 charting library that can be used to represent the business data. Following are some CVOM chart types- Column, Bubble, Line, Pie, etc.</p>
<img src="/sap_ui5/images/chart_types.jpg" alt=" Chart Types" />
<img src="/sap_ui5/images/cvom_charts.jpg" alt="CVOM Charts" />
<h1>SAP UI5 - Mobile</h1>
<p>SAP UI5 applications run on different mobile devices like iPad and smartphones. However, for better user experience, you need to control the appearance, touch interactions, and various other UI parameters.</p>
<p>UI5 contains a control library <b>sap.m</b> that supports application development for mobile devices and supports all key concepts like data binding, MVC, etc.</p>
<h2>Key Features</h2>
<ul class="list">
<li>Platform support for Android, iOS, BlackBerry</li>
<li>It contains 40 controls</li>
<li>Webkit browsers - Google Chrome</li>
<li>UI5 concepts - MVC, localization, modularization, etc.</li>
</ul>
<img src="/sap_ui5/images/key_features.jpg" alt="Key Features" />
<h1>SAP UI5 - Creating a Project in Web IDE</h1>
<p>In this chapter, we will learn how to create a project in Web IDE. Let’s go step by step.</p>
<p><b>Step 1</b> &minus; To start a new project, go to File &#8594; New &#8594; Project</p>
<img src="/sap_ui5/images/web_ide.jpg" alt="Web IDE" />
<p><b>Step 2</b> &minus; Enter the name of the project. In the next window, select the template.</p>
<img src="/sap_ui5/images/basic_sapui5_project.jpg" alt="Basic SAP UI5 Project" />
<p><b>Step 3</b> &minus; Select template SAPUI5 Mobile Applications &#8594; Next</p> 
<img src="/sap_ui5/images/select_a_template.jpg" alt="Select a Template" />
<p><b>Step 4</b> &minus; The next step is to select the data connection. Select service URL &#8594; Select</p>
<img src="/sap_ui5/images/data_connection.jpg" alt="Data Connection" />
<p><b>Step 5</b> &minus; In the next step, you have to perform template customization.</p>
<img src="/sap_ui5/images/template_customization.jpg" alt="Template Customization" />
<p><b>Step 6</b> &minus; On clicking Next, you will see the <b>Finish</b> button.</p>
<img src="/sap_ui5/images/new_project_confirm.jpg" alt="New Project Confirm" />
<p>Once you click Finish, you can see a new project created that has default structure of UI application. It contains the view, model, and name of the project.</p>
<img src="/sap_ui5/images/ui_application.jpg" alt="UI Application" />
<div class="mui-container-fluid button-borders show">
<div class="pre-btn">
<a href="/sap_ui5/sap_ui5_creating_project_web_ide.htm"><i class="fal fa-chevron-circle-left"></i> Previous Page</a>
</div>
<div class="nxt-btn">
<a href="/sap_ui5/sap_ui5_useful_resources.htm">Next Page <i class="fal fa-chevron-circle-right"></i>&nbsp;</a>
</div>
</div>
<div class="google-bottom-ads">
<div>Advertisements</div>
<script><!--
var width = 580;
var height = 400;
var format = "580x400_as";
if( window.innerWidth < 468 ){
   width = 300;
   height = 250;
   format = "300x250_as";
}
google_ad_client = "pub-7133395778201029";
google_ad_width = width;
google_ad_height = height;
google_ad_format = format;
google_ad_type = "image";
google_ad_channel ="";
//--></script>
<script src="https://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
<div class="space-bottom"></div>
</div>
</div>
<!-- Tutorial Content Ends Here -->
<!-- Right Column Starts Here -->
<div class="mui-col-md-2 google-right-ads">
<div class="space-top"></div>
<div class="google-right-ad" style="margin: 0px auto !important;margin-top:5px;">
<script><!--
google_ad_client = "pub-2537027957187252";
google_ad_width = 300;
google_ad_height = 250;
google_ad_format = "300x250_as";
google_ad_type = "image";
google_ad_channel ="";
//--></script>
<script src="https://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</div>
<div class="google-right-ad">
<div class="adsbyvli" data-ad-slot="vi_9012177"></div>
<script>(vitag.Init = window.vitag.Init || []).push(function(){viAPItag.display("vi_9012177")})</script>
</div>
<div class="space-bottom"></div>
<div class="google-right-ad">
<div class="adsbyvli" data-ad-slot="vi_9013289"></div>
<script>(vitag.Init = window.vitag.Init || []).push(function(){viAPItag.display("vi_9013289")})</script>
</div>
<div class="space-bottom" style="margin-bottom:15px;"></div>
</div>
<!-- Right Column Ends Here -->
</div>
</div>
<div class="clear"></div>
<footer id="footer">
<div class="mui--text-center">
<div class="mui--text-caption mui--text-light">
<a href="/index.htm" class="logo"><img class="img-responsive" src="/images/logo-black.png" alt="Tutorials Point" title="Tutorials Point"></a>
</div>
<ul class="mui-list--inline mui--text-body2 mui--text-light">
<li><a href="/about/index.htm"><i class="fal fa-globe"></i> About us</a></li>
<li><a href="/about/about_terms_of_use.htm"><i class="fal fa-asterisk"></i> Terms of use</a></li>
<li><a href="/about/about_privacy.htm#cookies"> <i class="fal fa-shield-check"></i> Cookies Policy</a></li>
<li><a href="/about/faq.htm"><i class="fal fa-question-circle"></i> FAQ's</a></li>
<li><a href="/about/about_helping.htm"><i class="fal fa-hands-helping"></i> Helping</a></li>
<li><a href="/about/contact_us.htm"><i class="fal fa-map-marker-alt"></i> Contact</a></li>
</ul>
<div class="mui--text-caption mui--text-light bottom-copyright-text">&copy; Copyright 2019. All Rights Reserved.</div>
</div>
<div id="privacy-banner">
  <div>
    <p>
      We use cookies to provide and improve our services. By using our site, you consent to our Cookies Policy.
      <a id="banner-accept" href="#">Accept</a>
      <a id="banner-learn" href="/about/about_cookies.htm" target="_blank">Learn more</a>
    </p>
  </div>
</div>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-232293-17"></script>
<script>
window.dataLayer = window.dataLayer || [];
function gtag(){dataLayer.push(arguments);}
gtag('js', new Date());
gtag('config', 'UA-232293-6');
</script>
</footer>
</body>
</html>
