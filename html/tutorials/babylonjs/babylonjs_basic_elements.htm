<!DOCTYPE html>
<html lang="en-US">
<head>
<title>BabylonJS - Basic Elements</title>
<meta charset="utf-8">
<meta name="description" content="BabylonJS - Basic Elements - Babylon.js is a popular framework to help build 3D games for developers. It has built-in functions to implement 3D functionalities. Let us build a simple demo u"/>
<meta name="keywords" content="C, C++, Python, Java, HTML, CSS, JavaScript, SQL, PHP, jQuery, XML, DOM, Bootstrap, Tutorials, Articles, Programming, training, learning, quiz, preferences, examples, code"/>
<link rel="canonical" href="https://www.tutorialspoint.com/babylonjs/babylonjs_basic_elements.htm" />
<link rel="shortcut icon" href="/favicon.ico" type="image/x-icon" />
<meta name="viewport" content="width=device-width,initial-scale=1.0,user-scalable=yes">
<script src="/theme/js/script-min-v2.js?v=3"></script>
<link rel="stylesheet" href="/theme/css/style-min-v2.css?v=6">
<script src="//services.bilsyndication.com/adv1/?d=901" defer="" async=""></script>
<script> var vitag = vitag || {};</script>
<script> vitag.outStreamConfig = { enablePC: false, enableMobile: false };</script>  
<style>
.right-menu .mui-btn {
    background-color:#3C789A;
}
a.demo {
    background:#3C789A;
}
li.heading {
    background:#3C789A;
}
.course-box{background:#3C789A}
.home-intro-sub p{color:#3C789A}
</style>
</head>
<body>
<header id="header">
<!-- Top sub-menu Starts Here -->
<div class="mui-appbar mui-container-fulid top-menu">
<div class="mui-container">
<div class="top-menu-item home">
<a href="https://www.tutorialspoint.com/index.htm" target="_blank" title="TutorialsPoint - Home"><i class="fal fa-home"></i> <span>Home</span></a>
</div>
<div class="top-menu-item qa">
<a href="https://www.tutorialspoint.com/about/about_careers.htm" target="_blank" title="Job @ Tutorials Point"><i class="fa fa-suitcase"></i> <span>Jobs</span></a>
</div>
<div class="top-menu-item tools">
<a href="https://www.tutorialspoint.com/online_dev_tools.htm" target="_blank" title="Tools - Online Development and Testing Tools"><i class="fal fa-cogs"></i> <span>Tools</span></a>
</div>
<div class="top-menu-item coding-ground">
<a href="https://www.tutorialspoint.com/codingground.htm" target="_blank" title="Coding Ground - Free Online IDE and Terminal"><i class="fal fa-code"></i> <span>Coding Ground </span></a> 
</div>
<div class="top-menu-item current-affairs">
<a href="https://www.tutorialspoint.com/current_affairs.htm" target="_blank" title="Daily Current Affairs"><i class="fal fa-layer-plus"></i> <span>Current Affairs</span></a>
</div>
<div class="top-menu-item upsc-notes">
<a href="https://www.tutorialspoint.com/upsc_ias_exams.htm" target="_blank" title="UPSC IAS Exams Notes - TutorialsPoint"><i class="fal fa-user-tie"></i> <span>UPSC Notes</span></a>
</div>      
<div class="top-menu-item online-tutoris">
<a href="https://www.tutorialspoint.com/tutor_connect/index.php" target="_blank" title="Top Online Tutors - Tutor Connect"><i class="fal fa-user"></i> <span>Online Tutors</span></a>
</div>
<div class="top-menu-item whiteboard">
<a href="https://www.tutorialspoint.com/whiteboard.htm" target="_blank" title="Free Online Whiteboard"><i class="fal fa-chalkboard"></i> <span>Whiteboard</span></a>
</div>
<div class="top-menu-item net-meeting">
<a href="https://www.tutorialspoint.com/netmeeting.php" target="_blank" title="A free tool for online video conferencing"><i class="fal fa-chalkboard-teacher"></i> <span>Net Meeting</span></a> 
</div>
<div class="top-menu-item articles">
<a href="https://www.tutorix.com" target="_blank" title="Tutorx - The Best Learning App" rel="nofollow"><i class="fal fa-video"></i> <span>Tutorix</span></a> 
</div>        
<div class="social-menu-item">
<a href="https://www.facebook.com/tutorialspointindia" target="_blank" rel="nofollow" data-placement="bottom" title="tutorialspoint @ Facebook"><i class="fab fa-facebook-f"></i></a> 
<a href="https://www.twitter.com/tutorialspoint" target="_blank" rel="nofollow" data-placement="bottom" title="tutorialspoint @ Twitter"><i class="fab fa-twitter"></i></a>
<a href="https://www.linkedin.com/company/tutorialspoint" target="_blank" rel="nofollow" data-placement="bottom" title="tutorialspoint @ Linkedin"><i class="fab fa-linkedin-in"></i></a>
<a href="https://www.youtube.com/channel/UCVLbzhxVTiTLiVKeGV7WEBg" target="_blank" rel="nofollow" data-placement="bottom" title="tutorialspoint YouTube"><i class="fab fa-youtube"></i></a>
</div>        
</div>
</div>
<!-- Top sub-menu Ends Here -->
<!-- Top main-menu Starts Here -->
<div class="mui-appbar mui-container-fulid mui--appbar-line-height mui--z1" id="logo-menu">
<div class="mui-container">
<div class="left-menu">
<a href="https://www.tutorialspoint.com/index.htm" title="Tutorialspoint">
<img class="tp-logo" alt="tutorialspoint" src="/babylonjs/images/logo.png">
</a>
<div class="mui-dropdown">
<a class="mui-btn mui-btn--primary categories" data-mui-toggle="dropdown"><i class="fa fa-th-large"></i> 
<span>Categories <span class="mui-caret"></span></span></a>            
<ul class="mui-dropdown__menu cat-menu">
<li>
<ul>
<li><a href="/academic_tutorials.htm"><i class="fa fa-caret-right"></i> Academic Tutorials</a></li>
<li><a href="/big_data_tutorials.htm"><i class="fa fa-caret-right"></i> Big Data &amp; Analytics </a></li>
<li><a href="/computer_programming_tutorials.htm"><i class="fa fa-caret-right"></i> Computer Programming </a></li>
<li><a href="/computer_science_tutorials.htm"><i class="fa fa-caret-right"></i> Computer Science </a></li>
<li><a href="/database_tutorials.htm"><i class="fa fa-caret-right"></i> Databases </a></li>
<li><a href="/devops_tutorials.htm"><i class="fa fa-caret-right"></i> DevOps </a></li>
<li><a href="/digital_marketing_tutorials.htm"><i class="fa fa-caret-right"></i> Digital Marketing </a></li>
<li><a href="/engineering_tutorials.htm"><i class="fa fa-caret-right"></i> Engineering Tutorials </a></li>
<li><a href="/upsc_ias_exams.htm"><i class="fa fa-caret-right"></i> Exams Syllabus </a></li>
<li><a href="/famous_monuments.htm"><i class="fa fa-caret-right"></i> Famous Monuments </a></li>
<li><a href="/gate_exams_tutorials.htm"><i class="fa fa-caret-right"></i> GATE Exams Tutorials</a></li>
<li><a href="/latest_technologies.htm"><i class="fa fa-caret-right"></i> Latest Technologies </a></li>
<li><a href="/machine_learning_tutorials.htm"><i class="fa fa-caret-right"></i> Machine Learning </a></li>
<li><a href="/mainframe_tutorials.htm"><i class="fa fa-caret-right"></i> Mainframe Development </a></li>
<li><a href="/management_tutorials.htm"><i class="fa fa-caret-right"></i> Management Tutorials </a></li>
<li><a href="/maths_tutorials.htm"><i class="fa fa-caret-right"></i> Mathematics Tutorials</a></li>
<li><a href="/microsoft_technologies_tutorials.htm"><i class="fa fa-caret-right"></i> Microsoft Technologies </a></li>
<li><a href="/misc_tutorials.htm"><i class="fa fa-caret-right"></i> Misc tutorials </a></li>
<li><a href="/mobile_development_tutorials.htm"><i class="fa fa-caret-right"></i> Mobile Development </a></li>
<li><a href="/java_technology_tutorials.htm"><i class="fa fa-caret-right"></i> Java Technologies </a></li>
<li><a href="/python_technologies_tutorials.htm"><i class="fa fa-caret-right"></i> Python Technologies </a></li>
<li><a href="/sap_tutorials.htm"><i class="fa fa-caret-right"></i> SAP Tutorials </a></li>
<li><a href="/scripting_lnaguage_tutorials.htm"><i class="fa fa-caret-right"></i>Programming Scripts </a></li>
<li><a href="/selected_reading.htm"><i class="fa fa-caret-right"></i> Selected Reading </a></li>
<li><a href="/software_quality_tutorials.htm"><i class="fa fa-caret-right"></i> Software Quality </a></li>
<li><a href="/soft_skill_tutorials.htm"><i class="fa fa-caret-right"></i> Soft Skills </a></li>
<li><a href="/telecom_tutorials.htm"><i class="fa fa-caret-right"></i> Telecom Tutorials </a></li>
<li><a href="/upsc_ias_exams.htm"><i class="fa fa-caret-right"></i> UPSC IAS Exams </a></li>
<li><a href="/web_development_tutorials.htm"><i class="fa fa-caret-right"></i> Web Development </a></li>
<li><a href="/sports_tutorials.htm"><i class="fa fa-caret-right"></i> Sports Tutorials </a></li>
<li><a href="/xml_technologies_tutorials.htm"><i class="fa fa-caret-right"></i> XML Technologies </a></li>
<li><a href="/multi_language_tutorials.htm"><i class="fa fa-caret-right"></i> Multi-Language Tutorials</a></li>
<li><a href="/questions_and_answers.htm"><i class="fa fa-caret-right"></i> Interview Questions</a></li>
</ul>
</li>
</ul>
<div class="clear"></div>
</div> 
</div>
<div class="right-menu">
<div class="toc-toggle">
<a href="javascript:void(0);"><i class="fa fa-bars"></i></a>
</div>
<div class="mobile-search-btn">
<a href="https://www.tutorialspoint.com/search.htm"><i class="fal fa-search"></i></a>
</div>
<div class="search-box">
<form method="get" class="" name="searchform" action="https://www.google.com/search" target="_blank" novalidate="">
<input type="hidden" name="sitesearch" value="www.tutorialspoint.com" class="user-valid valid">
<input class="header-search-box" type="text" id="search-string" name="q" placeholder="Search your favorite tutorials..." onfocus="if (this.value == 'Search your favorite tutorials...') {this.value = '';}" onblur="if (this.value == '') {this.value = 'Search your favorite tutorials...';}" autocomplete="off">
<button><i class="fal fa-search"></i></button>
</form>
</div>
<div class="menu-btn library-btn">
<a href="https://www.tutorialspoint.com/tutorialslibrary.htm"><i class="fal fa-cubes"></i> <span>Library</span></a>
</div>
<div class="menu-btn videos-btn">
<a href="https://www.tutorialspoint.com/videotutorials/index.htm"><i class="fal fa-video"></i> <span>Videos</span></a> 
</div>
<div class="menu-btn videos-btn">
<a href="https://www.tutorialspoint.com/questions/index.php"><i class="fa fa-location-arrow"></i> <span>Q/A</span></a>
</div>
<div class="menu-btn ebooks-btn">
<a href="https://store.tutorialspoint.com"><i class="fal fa-book"></i> <span>eBooks</span></a>
</div>
<div class="mui-dropdown">
<button class="mui-btn mui-btn--primary" data-mui-toggle="dropdown">
<span class="mui-caret"></span>
</button>
<ul class="mui-dropdown__menu">
<li><a href="https://www.tutorialspoint.com/tutorialslibrary.htm"><i class="fal fa-cubes"></i> <span>Library</span></a></li>
<li><a href="https://www.tutorialspoint.com/videotutorials/index.htm"><i class="fal fa-video"></i> <span>Videos</span></a></li>
<li><a href="https://store.tutorialspoint.com"><i class="fal fa-book"></i> <span>eBooks</span></a></li>
</ul>
</div>
</div>
</div>
</div>
<!-- Top main-menu Ends Here -->
</header>
<div class="mui-container-fluid content">
<div class="mui-container">
<!-- Tutorial ToC Starts Here -->
<div class="mui-col-md-3 tutorial-toc">
<div class="mini-logo">
<img src="/babylonjs/images/babylonjs-mini-logo.jpg" alt="BabylonJS Tutorial" />
</div>
<ul class="toc chapters">
<li class="heading">BabylonJS Tutorial</li>
<li><a href="/babylonjs/index.htm">BabylonJS - Home</a></li>
<li><a href="/babylonjs/babylonjs_introduction.htm">BabylonJS - Introduction</a></li>
<li><a href="/babylonjs/babylonjs_environment_setup.htm">BabylonJS - Environment Setup</a></li>
<li><a href="/babylonjs/babylonjs_overview.htm">BabylonJS - Overview</a></li>
<li><a href="/babylonjs/babylonjs_basic_elements.htm">BabylonJS - Basic Elements</a></li>
<li><a href="/babylonjs/babylonjs_materials.htm">BabylonJS - Materials</a></li>
<li><a href="/babylonjs/babylonjs_animations.htm">BabylonJS - Animations</a></li>
<li><a href="/babylonjs/babylonjs_cameras.htm">BabylonJS - Cameras</a></li>
<li><a href="/babylonjs/babylonjs_lights.htm">BabylonJS - Lights</a></li>
<li><a href="/babylonjs/babylonjs_parametric_shapes.htm">BabylonJS - Parametric Shapes</a></li>
<li><a href="/babylonjs/babylonjs_mesh.htm">BabylonJS - Mesh</a></li>
<li><a href="/babylonjs/babylonjs_vectorposition_and_rotation.htm">VectorPosition and Rotation</a></li>
<li><a href="/babylonjs/babylonjs_decals.htm">BabylonJS - Decals</a></li>
<li><a href="/babylonjs/babylonjs_curve3.htm">BabylonJS - Curve3</a></li>
<li><a href="/babylonjs/babylonjs_dynamic_texture.htm">BabylonJS - Dynamic Texture</a></li>
<li><a href="/babylonjs/babylonjs_parallax_mapping.htm">BabylonJS - Parallax Mapping</a></li>
<li><a href="/babylonjs/babylonjs_lens_flares.htm">BabylonJS - Lens Flares</a></li>
<li><a href="/babylonjs/babylonjs_create_screenshot.htm">BabylonJS - Create ScreenShot</a></li>
<li><a href="/babylonjs/babylonjs_reflection_probes.htm">BabylonJS - Reflection Probes</a></li>
<li><a href="/babylonjs/babylonjs_standard_rendering_pipeline.htm">Standard Rendering Pipeline</a></li>
<li><a href="/babylonjs/babylonjs_shadermaterial.htm">BabylonJS - ShaderMaterial</a></li>
<li><a href="/babylonjs/babylonjs_bones_and_skeletons.htm">BabylonJS - Bones and Skeletons</a></li>
<li><a href="/babylonjs/babylonjs_physics_engine.htm">BabylonJS - Physics Engine</a></li>
<li><a href="/babylonjs/babylonjs_playing_sounds_and_music.htm">BabylonJS - Playing Sounds &amp; Music</a></li>
</ul>
<ul class="toc chapters">
<li class="heading">BabylonJS Useful Resources</li>
<li><a href="/babylonjs/babylonjs_quick_guide.htm">BabylonJS - Quick Guide</a></li>
<li><a href="/babylonjs/babylonjs_useful_resources.htm">BabylonJS - Useful Resources</a></li>
<li><a href="/babylonjs/babylonjs_discussion.htm">BabylonJS - Discussion</a></li>
</ul>
<ul class="toc reading">
<li class="sreading">Selected Reading</li>
<li><a target="_top" href="/upsc_ias_exams.htm">UPSC IAS Exams Notes</a></li>
<li><a target="_top" href="/developers_best_practices/index.htm">Developer's Best Practices</a></li>
<li><a target="_top" href="/questions_and_answers.htm">Questions and Answers</a></li>
<li><a target="_top" href="/effective_resume_writing.htm">Effective Resume Writing</a></li>
<li><a target="_top" href="/hr_interview_questions/index.htm">HR Interview Questions</a></li>
<li><a target="_top" href="/computer_glossary.htm">Computer Glossary</a></li>
<li><a target="_top" href="/computer_whoiswho.htm">Who is Who</a></li>
</ul>
</div>
<!-- Tutorial ToC Ends Here -->
<!-- Tutorial Content Starts Here -->
<div class="mui-col-md-6 tutorial-content">
<h1>BabylonJS - Basic Elements</h1>
<hr />
<div class="top-ad-heading">Advertisements</div>
<div style="text-align: center;">
<script><!--
google_ad_client = "pub-7133395778201029";
var width = document.getElementsByClassName("tutorial-content")[0].clientWidth - 40;
google_ad_width = width;
google_ad_height = 150;
google_ad_format = width + "x150_as";
google_ad_type = "image";
google_ad_channel = "";
//--></script>
<script src="https://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</div>
<div class="mui-container-fluid button-borders">
<div class="pre-btn">
<a href="/babylonjs/babylonjs_overview.htm"><i class="fal fa-chevron-circle-left"></i> Previous Page</a>
</div>
<div class="nxt-btn">
<a href="/babylonjs/babylonjs_materials.htm">Next Page <i class="fal fa-chevron-circle-right"></i>&nbsp;</a>
</div>
</div>
<div class="clearer"></div>
<p>Babylon.js is a popular framework to help build 3D games for developers. It has built-in functions to implement 3D functionalities. Let us build a simple demo using Babylon.js and understand the basic functionalities required to get started.</p>
<p>We will first create a demo which contains the basic elements of Babylon.js. In addition, we will also learn the various functionalities of Babylon.js.</p>
<h2>Sample Demo 1</h2>
<p>In this section, we will learn how to create a demo containing the basic elements of BabylonJS.</p>
<pre class="prettyprint notranslate">
&lt;!doctype html&gt;
&lt;html&gt;
   &lt;head&gt;
      &lt;meta charset = "utf-8"&gt;
      &lt;title&gt; Babylon.JS : Demo2&lt;/title&gt;
      &lt;script src = "babylon.js"&gt;&lt;/script&gt;
      &lt;style&gt;
         canvas { width: 100%; height: 100%;}
      &lt;/style&gt;
   &lt;/head&gt;
   
   &lt;body&gt;
      &lt;canvas id = "renderCanvas"&gt;&lt;/canvas&gt;
      &lt;script type = "text/javascript"&gt;
         var canvas = document.getElementById("renderCanvas");
         var engine = new BABYLON.Engine(canvas, true);
         var createScene  = function() {
            var scene = new BABYLON.Scene(engine);
            scene.clearColor = new BABYLON.Color3(1, 0.8, 0.8);
            
            var camera = new BABYLON.ArcRotateCamera("Camera", 1, 0.8, 10, new BABYLON.Vector3(0, 0, 0), scene);
            scene.activeCamera.attachControl(canvas);
            
            var light0 = new BABYLON.PointLight("Omni", new BABYLON.Vector3(0, 0, 10), scene);
            
            var origin = BABYLON.Mesh.CreateSphere("origin", 10, 1.0, scene);
            
            var torus = BABYLON.Mesh.CreateTorus("torus", 5, 1, 10, scene, false);
            
            var box = BABYLON.Mesh.CreateBox("box", 3.0, scene);
            box.position = new BABYLON.Vector3(-5, 0, 0); 
            
            var cylinder = BABYLON.Mesh.CreateCylinder("cylinder", 3, 3, 3, 6, 1, scene, false);
            
            cylinder.position = new BABYLON.Vector3(5, 0, 0);	
            return scene;
         };
         var scene = createScene();
         engine.runRenderLoop(function() {
            scene.render();
         });
      &lt;/script&gt;
   &lt;/body&gt;
&lt;/html&gt;
</pre>
<img src="/babylonjs/images/babylonjs_basic_elements.jpg" alt="Babylonjs Basic Elements" />
<p>To run BabylonJS, we need modern browsers with WEBGL support. The latest browsers -Internet Explorer 11+, Firefox 4+, Google Chrome 9+, Opera 15+, etc. does have WEBGL support and the demos can be executed on the same platforms to see the output. Create a directory to store the files for babylonjs. Fetch the latest BabylonJSscripts file from BabylonJS site. All the demo links in this tutorial are tested with babylonjs version 3.3.</p>
<h3>Step 1</h3>
<ul class="list">
<li><p>Create a simple html page and include the Babylon.js file.</p></li>
<li><p>Create a canvas tag which is used to render contents by BabylonJSinside the body tag as shown below.</p></li> 
<li><p>Add css to the canvas to occupy the full width and height of the screen.</p></li>
</ul>
<pre class="prettyprint notranslate">
&lt;!doctype html&gt;
&lt;html&gt;
   &lt;head&gt;
      &lt;meta charset = "utf-8"&gt;
      &lt;title&gt;MDN Games: Babylon.js demo - shapes&lt;/title&gt;
      &lt;script src = "babylon.js"&gt;&lt;/script&gt;
      
      &lt;style&gt;
         canvas {width: 100%; height: 100%;}
      &lt;/style&gt;
   &lt;/head&gt;
   &lt;body&gt;
      &lt;canvas id = "renderCanvas"&gt;&lt;/canvas&gt;
   &lt;/body&gt;
&lt;/html&gt;
</pre>
<h3>Step 2</h3>
<p>Let us now start with the BabylonJScode for rendering contents on the canvas.</p>
<pre class="prettyprint notranslate">
&lt;!doctype html&gt;
&lt;html&gt;
   &lt;head&gt;
      &lt;meta charset = "utf-8"&gt;
      &lt;title&gt;MDN Games: Babylon.js demo - shapes&lt;/title&gt;
      &lt;script src = "babylon.js"&gt;&lt;/script&gt;
      &lt;style&gt;
         canvas {width: 100%; height: 100%;}
      &lt;/style&gt;
   &lt;/head&gt;
   &lt;body&gt;
      &lt;canvas id = "renderCanvas"&gt;&lt;/canvas&gt;
      &lt;script type = "text/javascript"&gt;
         var canvas = document.getElementById("renderCanvas");
         var engine = new BABYLON.Engine(canvas, true);
      &lt;/script&gt;
   &lt;/body&gt;
&lt;/html&gt;
</pre>
<p>Now, add the script tag to the html structure and store the canvas reference in variable canvas.</p>
<p>To get started with Babylon.js, create an engine instance and pass the canvas reference to render on it.</p>
<pre class="prettyprint notranslate">
&lt;script type = "text/javascript"&gt;
   var canvas = document.getElementById("renderCanvas");
   var engine = new BABYLON.Engine(canvas, true);
&lt;/script&gt;
</pre>
<p>The BABYLON global object contains all the Babylon.js functions available in the engine.</p>
<h3>Step 3</h3>
<p>In this step, we will first create a scene.</p>
<p>A scene is where all the contents will be displayed. We will create the different types of objects and add the same to the scene to make it visible on the screen. To create scene, add the following code to the already created html structure. At present, we will append to the already created code as a continuation to the above html structure.</p>
<pre class="prettyprint notranslate">
var createScene  = function() {
   var scene = new BABYLON.Scene(engine);
   scene.clearColor = new BABYLON.Color3(1, 0.8, 0.8);
};
var scene = createScene();
</pre>
<p>The final html file will look as follows &minus;</p>
<pre class="prettyprint notranslate">
&lt;!doctype html&gt;
&lt;html&gt;
   &lt;head&gt;
      &lt;meta charset = "utf-8"&gt;
      &lt;title&gt;MDN Games: Babylon.js demo - shapes&lt;/title&gt;
      &lt;script src = "babylon.js"&gt;&lt;/script&gt;
      &lt;style&gt;
         canvas {width: 100%; height: 100%;}
      &lt;/style&gt;
   &lt;/head&gt;
   
   &lt;body&gt;
      &lt;canvas id = "renderCanvas"&gt;&lt;/canvas&gt;
      &lt;script type = "text/javascript"&gt;
         var canvas = document.getElementById("renderCanvas");
         var engine = new BABYLON.Engine(canvas, true);
         
         var createScene  = function() {
            var scene = new BABYLON.Scene(engine);
            scene.clearColor = new BABYLON.Color3(0, 1, 0);
            return scene;
         };
         var scene = createScene();
      &lt;/script&gt;
   &lt;/body&gt;
&lt;/html&gt;
</pre>
<p>In the above example, the CreateScene function is defined and the var scene = createScene () is calling the function.</p>
<p>The CreateScene function has the scene created inside it and the next line adds color to the scene, which is done using BABYLON.Color3(1, 0.8, 0.8) and the color over here is pink.</p>
<pre class="result notranslate">
var scene = new BABYLON.Scene(engine);
scene.clearColor = new BABYLON.Color3(1, 0.8, 0.8);
</pre>
<p>Executing the above demo link in the browser will not display anything right now on the browser screen. There is one more step to be added to the code which is called the engine.runRenderLoop as in step 4.</p>
<h3>Step 4</h3>
<p>To make the scene actually visible on the screen, we need to render it using engine.runRenderLoop call. Let us now see how this is done.</p>
<h3>Rendering Loop</h3>
<pre class="result notranslate">
engine.runRenderLoop(function() {
   scene.render();
});
</pre>
<p>The Engine.runRenderLoop function calls scene.render, which will render the scene and make it visible to the user. The final .html will look as follows &minus;</p>
<pre class="prettyprint notranslate">
&lt;!doctype html&gt;
&lt;html&gt;
   &lt;head&gt;
      &lt;meta charset = "utf-8"&gt;
      &lt;title&gt;BabylonJs - Basic Element-Creating Scene&lt;/title&gt;
      &lt;script src = "babylon.js"&gt;&lt;/script&gt;
      &lt;style&gt;
         canvas {width: 100%; height: 100%;}
      &lt;/style&gt;
   &lt;/head&gt;
   
   &lt;body&gt;
      &lt;canvas id = "renderCanvas"&gt;&lt;/canvas&gt;
      &lt;script type = "text/javascript"&gt;
         var canvas = document.getElementById("renderCanvas");
         var engine = new BABYLON.Engine(canvas, true);
         var createScene  = function() {
            var scene = new BABYLON.Scene(engine);
            scene.clearColor = new BABYLON.Color3(1, 0.8, 0.8);
            return scene;
         };
         var scene = createScene();
         engine.runRenderLoop(function() {
            scene.render();
         });
      &lt;/script&gt;
   &lt;/body&gt;
&lt;/html&gt;
</pre>
<p>Save the above file as basicscene.html and check the output in the browser. The screen that is shown is in pink color as shown below &minus;</p>
<img src="/babylonjs/images/pink_output_browser_screen.jpg" alt="Pink Output Browser Screen" />
<h3>Step 5</h3>
<p>Now that we have the scene, we have to add camera to it.</p>
<h3>Adding Camera and Light</h3>
<p>The code given below adds camera to the scene. There are many types of camera that can be used on Babylon.</p>
<p><b>ArcRotateCamera</b> is a camera that rotates around the target. It can be controlled with mouse, cursor or touch events. The parameters required are name, alpha, beta, radius, target, and scene. Let us discuss the details of the camera in a subsequent section.</p>
<pre class="prettyprint notranslate">
var camera = new BABYLON.ArcRotateCamera("Camera", 1, 0.8, 10, new BABYLON.Vector3(0, 0, 0), scene);
</pre>
<p>Now, we need to understand how to add light.</p> 
<p>Lights are used to produce the diffuse and specular color received by each pixel. There are many types of lights. We will learn about the different types of lights in the lights section.</p>
<p>Here I am using the PointLight on the scene. The PointLight is emitted in every direction like theSun. The parameters are name, position and the scene to be used on.</p>
<p>To add light, execute the following code &minus;</p>
<pre class="result notranslate">
var light0 = new BABYLON.PointLight("Omni", new BABYLON.Vector3(0, 0, 10), scene);
</pre>
<h3>Step 6</h3>
<p>Let us now see how to add shapes.</p>
<h3>Adding of shapes</h3>
<p>The demo shared above has 4 shapes added to it.</p>
<ul class="list">
<li>Sphere</li>
<li>Torus</li>
<li>Box</li>
<li>Cylinder</li>
</ul>
<p>To add sphere, execute the following code &minus;</p>
<pre class="result notranslate">
var origin = BABYLON.Mesh.CreateSphere("origin", 10, 1.0, scene);
</pre>
<p>Once the sphere is added, the code looks as follows &minus;</p>
<pre class="prettyprint notranslate">
&lt;!doctype html&gt;
&lt;html&gt;
   &lt;head&gt;
      &lt;meta charset="utf-8"&gt;
      &lt;title&gt;MDN Games: Babylon.js demo - shapes&lt;/title&gt;
      &lt;script src = "babylon.js"&gt;&lt;/script&gt;
      &lt;style&gt;
         html,body,canvas { margin: 0; padding: 0; width: 100%; height: 100%; font-size: 0; }
      &lt;/style&gt;
   &lt;/head&gt;
   
   &lt;body&gt;
      &lt;canvas id = "renderCanvas"&gt;&lt;/canvas&gt;
      &lt;script type = "text/javascript"&gt;
         var canvas = document.getElementById("renderCanvas");
         var engine = new BABYLON.Engine(canvas, true);
         
         var createScene  = function() {
            var scene = new BABYLON.Scene(engine);
            scene.clearColor = new BABYLON.Color3(1, 0.8, 0.8);
            var camera = new BABYLON.ArcRotateCamera("Camera", 1, 0.8, 10, new BABYLON.Vector3(0, 0, 0), scene);
            var light0 = new BABYLON.PointLight("Omni", new BABYLON.Vector3(0, 0, 10), scene);
            var origin = BABYLON.Mesh.CreateSphere("origin", 10, 1.0, scene);
            scene.activeCamera.attachControl(canvas);
            return scene;
         };
         var scene = createScene();
         engine.runRenderLoop(function() {
            scene.render();
         });
      &lt;/script&gt;
   &lt;/body&gt;
&lt;/html&gt;
</pre>
<h3>Output</h3>
<p>The above code generates the following output &minus;</p>
<img src="/babylonjs/images/scenesphere.jpg" alt="Scenesphere" />
<p>Let us now add the other shapes – the Torus and the Box. Execute the following code to add the Torus shape.</p>
<pre class="prettyprint notranslate">
var torus = BABYLON.Mesh.CreateTorus("torus", 5, 1, 10, scene, false);
var box = BABYLON.Mesh.CreateBox("box", 3.0, scene);
box.position = new BABYLON.Vector3(-5, 0, 0);
</pre>
<p>We will add a position to the box. BABYLON.Vector3(-5, 0, 0) takes the x,y and z direction.</p>
<p>Upon execution, the above code generates the following output &minus;</p>
<img src="/babylonjs/images/torus_shape.jpg" alt="Torus shape" />
<p>Let us now add the final shape which is shown in the screenshot above - the cylinder.</p>
<pre class="result notranslate">
var cylinder = BABYLON.Mesh.CreateCylinder("cylinder", 3, 3, 3, 6, 1, scene, false);
cylinder.position = new BABYLON.Vector3(5, 0, 0);
</pre>
<p>The position is added to the cylinder which is x direction 5. The final code is as shown below &minus;</p>
<pre class="prettyprint notranslate">
&lt;!doctype html&gt;
&lt;html&gt;
   &lt;head&gt;
      &lt;meta charset = "utf-8"&gt;
      &lt;title&gt; Babylon.JS : Demo2&lt;/title&gt;
      &lt;script src = "babylon.js"&gt;&lt;/script&gt;
      &lt;style&gt;
         canvas { width: 100%; height: 100%;}
      &lt;/style&gt;
   &lt;/head&gt;
   
   &lt;body&gt;
      &lt;canvas id = "renderCanvas"&gt;&lt;/canvas&gt;
      &lt;script type = "text/javascript"&gt;
         var canvas = document.getElementById("renderCanvas");
         var engine = new BABYLON.Engine(canvas, true);
         var createScene  = function() {
            var scene = new BABYLON.Scene(engine);
            scene.clearColor = new BABYLON.Color3(1, 0.8, 0.8);
            
            var camera = new BABYLON.ArcRotateCamera("Camera", 1, 0.8, 10, new BABYLON.Vector3(0, 0, 0), scene);
            scene.activeCamera.attachControl(canvas);
            
            var light0 = new BABYLON.PointLight("Omni", new BABYLON.Vector3(0, 0, 10), scene);
            
            var origin = BABYLON.Mesh.CreateSphere("origin", 10, 1.0, scene);
            
            var torus = BABYLON.Mesh.CreateTorus("torus", 5, 1, 10, scene, false);
            
            var box = BABYLON.Mesh.CreateBox("box", 3.0, scene);
            box.position = new BABYLON.Vector3(-5, 0, 0); 
            
            var cylinder = BABYLON.Mesh.CreateCylinder("cylinder", 3, 3, 3, 6, 1, scene, false);
            cylinder.position = new BABYLON.Vector3(5, 0, 0);
            return scene;
         };
         var scene = createScene();
         engine.runRenderLoop(function() {
            scene.render();
         });
      &lt;/script&gt;
   &lt;/body&gt;
&lt;/html&gt;
</pre>
<h3>Output</h3>
<p>Upon execution, the above code will generate the following output &minus;</p>
<img src="/babylonjs/images/basic_elements_shapes.jpg" alt="Basic Elements shapes" />
<p>The shapes will move as per the direction you move the cursor; the same is done using the attach control of the camera to the scene.</p>
<pre class="result notranslate">
scene.activeCamera.attachControl(canvas);
</pre>
<p>Let us now discuss each shape in detail.</p>
<p>Here is the summary of all the shapes and the syntax &minus;</p>
<table class="table table-bordered" style="width:100%;">
<tr>
<th style="text-align:center;">Sr.No</th>
<th style="text-align:center;">Shape</th>
<th style="text-align:center;">Syntax</th>
</tr>
<tr>
<td class="ts">1</td>
<td class="ts"><a href="/babylonjs/babylonjs_box.htm">Box</a></td>
<td><pre class="result notranslate">var box = BABYLON.Mesh.CreateBox(
   "box", 6.0, scene, false, BABYLON.Mesh.DEFAULTSIDE);</pre></td>
</tr>
<tr>
<td class="ts">2</td>
<td class="ts"><a href="/babylonjs/babylonjs_sphere.htm">Sphere</a></td>
<td><pre class="result notranslate">var sphere = BABYLON.Mesh.CreateSphere(
   "sphere", 10.0, 10.0, scene, 
   false, BABYLON.Mesh.DEFAULTSIDE);</pre></td>
</tr>
<tr>
<td class="ts">3</td>
<td class="ts"><a href="/babylonjs/babylonjs_plane.htm">Plane</a></td>
<td><pre class="result notranslate">var plane = BABYLON.Mesh.CreatePlane(
   "plane", 10.0, scene, false, BABYLON.Mesh.DEFAULTSIDE);</pre></td>
</tr>
<tr>
<td class="ts">4</td>
<td class="ts"><a href="/babylonjs/babylonjs_disc.htm">Disc</a></td>
<td><pre class="result notranslate">var disc = BABYLON.Mesh.CreateDisc(
   "disc", 5, 30, scene, false, BABYLON.Mesh.DEFAULTSIDE);</pre></td>
</tr>
<tr>
<td class="ts">5</td>
<td class="ts"><a href="/babylonjs/babylonjs_cylinder.htm">Cylinder</a></td>
<td><pre class="result notranslate">var cylinder = BABYLON.Mesh.CreateCylinder(
   "cylinder", 3, 3, 3, 6, 1, scene, false, 
   BABYLON.Mesh.DEFAULTSIDE);</pre></td>
</tr>
<tr>
<td class="ts">6</td>
<td class="ts"><a href="/babylonjs/babylonjs_torus.htm">Torus</a></td>
<td><pre class="result notranslate">var torus = BABYLON.Mesh.CreateTorus(
   "torus", 5, 1, 10, scene, false, 
   BABYLON.Mesh.DEFAULTSIDE);</pre></td>
</tr>
<tr>
<td class="ts">7</td>
<td class="ts"><a href="/babylonjs/babylonjs_knot.htm">Knot</a></td>
<td><pre class="result notranslate">var knot = BABYLON.Mesh.CreateTorusKnot(
   "knot", 2, 0.5, 128, 64, 2, 3, scene, false, 
   BABYLON.Mesh.DEFAULTSIDE);</pre></td>
</tr>
<tr>
<td class="ts">8</td>
<td class="ts"><a href="/babylonjs/babylonjs_line_mesh.htm">Line Mesh</a></td>
<td><pre class="result notranslate">
var lines = BABYLON.Mesh.CreateLines("lines", [
   new BABYLON.Vector3(-10, 0, 0),
   new BABYLON.Vector3(10, 0, 0),
   new BABYLON.Vector3(0, 0, -10),
   new BABYLON.Vector3(0, 0, 10)
], scene);
</pre></td>
</tr>
<tr>
<td class="ts">9</td>
<td class="ts"><a href="/babylonjs/babylonjs_dashedlines_mesh.htm">Dashes Lines</a></td>
<td><pre class="result notranslate">var dashedlines = BABYLON.Mesh.CreateDashedLines(
   "dashedLines", [v1, v2, ... vn], 
   dashSize, gapSize, dashNb, scene);</pre></td>
</tr>
<tr>
<td class="ts">10</td>
<td class="ts"><a href="/babylonjs/babylonjs_ribbon.htm">Ribbon</a></td>
<td><pre class="result notranslate">var ribbon = BABYLON.Mesh.CreateRibbon(
   "ribbon", 
   [path1, path2, ..., pathn], 
   false, false, 0, 
   scene, false, 
   BABYLON.Mesh.DEFAULTSIDE);</pre></td>
</tr>
<tr>
<td class="ts">11</td>
<td class="ts"><a href="/babylonjs/babylonjs_tube.htm">Tube</a></td>
<td><pre class="result notranslate">var tube = BABYLON.Mesh.CreateTube(
   "tube", 
   [V1, V2, ..., Vn], 
   radius, tesselation, 
   radiusFunction, 
   cap, scene, false, 
   BABYLON.Mesh.DEFAULTSIDE);</pre></td>
</tr>
<tr>
<td class="ts">12</td>
<td class="ts"><a href="/babylonjs/babylonjs_ground.htm">Ground</a></td>
<td><pre class="result notranslate">var ground = BABYLON.Mesh.CreateGround(
   "ground", 6, 6, 2, scene);</pre></td>
</tr>
<tr>
<td class="ts">13</td>
<td class="ts"><a href="/babylonjs/babylonjs_ground_from_heightmap.htm">Ground From HeightMap</a></td>
<td><pre class="result notranslate">var ground = BABYLON.Mesh.CreateGroundFromHeightMap(
   "ground", "heightmap.jpg", 200, 200, 250, 0, 10, 
   scene, false, successCallback);</pre></td>
</tr>
<tr>
<td class="ts">14</td>
<td class="ts"><a href="/babylonjs/babylonjs_tiled_ground.htm">Tiled Ground</a></td>
<td><pre class="result notranslate">var precision = {"w" : 2, "h" : 2};
var subdivisions = {'h' : 8, 'w' : 8};
var tiledGround = BABYLON.Mesh.CreateTiledGround(
   "Tiled Ground", -3, -3, 3, 3, 
   subdivisions, precision, scene, false);
</pre>
</td>
</tr>
</table>
<h2>Basic Element - Position, Rotation and Scaling</h2>
<p>In this section, we will learn how to position, rotate or scale the elements which we added so far.</p>
<p>We have created box, sphere, cylinder, knot, etc. Now, we will see how to position, scale and rotate the shapes.</p>
<table class="table table-bordered">
<tr>
<th>Sr.No.</th>
<th style="text-align:center;">Element &amp; Description</th>
</tr>
<tr>
<td class="ts">1</td>
<td><a href="/babylonjs/babylonjs_basic_elements_position.htm">Position</a>
<p>With position change, the mesh will be changed from one position to another.</p></td>
</tr>
<tr>
<td class="ts">2</td>
<td><a href="/babylonjs/babylonjs_basic_elements_rotation.htm">Rotation</a>
<p>With rotation, the mesh will be rotated around the mesh.</p></td>
</tr>
<tr>
<td class="ts">3</td>
<td><a href="/babylonjs/babylonjs_basic_elements_scaling.htm">Scaling</a>
<p>The scaling of mesh can be done with respect to x, y or z axis.</p></td>
</tr>
</table>
<h2>Basic Element - Parenting</h2>
<p>With Parenting, we will create a parent-child relationship between the meshes and see how they behave. So whatever transformations you apply to the parent, the same will also be applied to the child. Let us now understand the same with the demo shown below.</p>
<h3>Demo</h3>
<pre class="prettyprint notranslate">
&lt;!doctype html&gt;
&lt;html&gt;
   &lt;head&gt;
      &lt;meta charset = "utf-8"&gt;
      &lt;title&gt;BabylonJs - Basic Element-Creating Scene&lt;/title&gt;
      &lt;script src = "babylon.js"&gt;&lt;/script&gt;
      &lt;style&gt;
         canvas {width: 100%; height: 100%;}
      &lt;/style&gt;
   &lt;/head&gt;

   &lt;body&gt;
      &lt;canvas id = "renderCanvas"&gt;&lt;/canvas&gt;
      &lt;script type = "text/javascript"&gt;
         var canvas = document.getElementById("renderCanvas");
         var engine = new BABYLON.Engine(canvas, true);
         var createScene  = function() {
            var scene = new BABYLON.Scene(engine);
            scene.clearColor = new BABYLON.Color3(0, 1, 0);
         
            var camera = new BABYLON.ArcRotateCamera("Camera", 1, 0.8, 10, new BABYLON.Vector3(0, 0, 0), scene);
            scene.activeCamera.attachControl(canvas);
         
            var light = new BABYLON.PointLight("Omni", new BABYLON.Vector3(0, 100, 100), scene);

            var boxa = BABYLON.Mesh.CreateBox("BoxA", 1.0, scene);
            boxa.position = new BABYLON.Vector3(0,0.5,0);

            var boxb = BABYLON.Mesh.CreateBox("BoxB", 1.0, scene);
            boxb.position = new BABYLON.Vector3(3,0.5,0);		
            boxb.scaling = new BABYLON.Vector3(2,1,2);

            var boxc = BABYLON.Mesh.CreateBox("BoxC", 1.0, scene);
            boxc.parent = boxb;
            boxc.position.z = -3;
         
            var ground = BABYLON.Mesh.CreateGround("ground1", 10, 6, 2, scene);
            ground.position = new BABYLON.Vector3(0,0,0);
            return scene;
         };
         var scene = createScene();
         engine.runRenderLoop(function() {
            scene.render();
         });
      &lt;/script&gt;
   &lt;/body&gt;
&lt;/html&gt;
</pre>
<h3>Output</h3>
<img src="/babylonjs/images/basic_element_parenting.jpg" alt="Basic Element Parenting" />
<h3>Explanation</h3>
<p>We have created 3 boxes in the above mesh. In the demo, boxb scaling is applied and it is assigned as a parent to boxc which also scales since its parent boxb and the same is scaled. You can play around with the demo to see how the parent-child link works.</p>
<p>To make a mesh, you have to use the parent of another mesh &minus;</p>
<ul class="list">
<li><p><b>child.parent = parentmesh;</b></p></li>
</ul>
<h2>Basic Element - Environment</h2>
<p>Let us now discuss the scene environment in this section. We will talk about the <b>scene background color, ambientcolor, skyboxes, fog mode</b>, etc. on a scene.</p>
<p>We have seen the <b>scene background color is demos</b> which we have created so far.</p>
<h3>Scene background-color</h3>
<p>Let us now see how the scene background color works.</p>
<h3>Syntax</h3>
<p>Following is the syntax for the scene background color &minus;</p>
<pre class="result notranslate">
scene.clearColor = new BABYLON.Color3(0.5, 0.8, 0.5);
or
scene.clearColor = BABYLON.Color3.Blue();
</pre>
<p>The above property will change the background color of the scene.</p>
<h3>Scene Ambient color</h3>
<p>Let us now see how the scene ambient color works.</p>
<h3>Syntax</h3>
<p>Following is the syntax for the scene ambient color &minus;</p>
<pre class="result notranslate">
scene.ambientColor = new BABYLON.Color3(0.3, 0.3, 0.3);
</pre>
<p>AmbientColor is used along with the <b>StandardMaterial</b> ambient color and texture. If there is no ambientColor for the scene the <b>StandardMaterial.ambientColor</b> and <b>StandardMaterial.ambientTexture</b> has no effect. The StandardMaterial ambientColor/ambientTexture will become active once the ambientColor for scene is applied. By default, scene is given <b>scene.ambientColor</b> and set to <b>Color3</b> (0, 0, 0), which means no ambientColor.</p>
<h3>Scene Fog mode</h3>
<p>We will now understand how the Scene Fog Mode works.</p>
<h3>Syntax</h3>
<p>Following is the syntax for the Scene Fog Mode.</p>
<pre class="result notranslate">
scene.fogMode = BABYLON.Scene.FOGMODE_EXP;
</pre>
<p>The following list of the available fog modes &minus;</p>
<ul class="list">
<li><p><b>BABYLON.Scene.FOGMODE_NONE</b> &minus; default one, fog is deactivated.</p></li>
<li><p><b>BABYLON.Scene.FOGMODE_EXP</b> &minus; the fog density follows an exponential function.</p></li>
<li><p><b>BABYLON.Scene.FOGMODE_EXP2</b> &minus; same as above but faster.</p></li>
<li><p><b>BABYLON.Scene.FOGMODE_LINEAR</b> &minus; the fog density follows a linear function.</p></li>
</ul>
<p>If the fog mode EXP or EXP2 is defined, then you can define the density on it as follows &minus;</p>
<pre class="result notranslate">
scene.fogDensity = 0.01;
</pre>
<p>If the fog mode is LINEAR, then you can define where the fog starts and ends as follows &minus;</p>
<pre class="result notranslate">
scene.fogStart = 20.0;
scene.fogEnd = 60.0;
</pre>
<p>To give color to the fog, execute the following code &minus;</p>
<pre class="result notranslate">
scene.fogColor = new BABYLON.Color3(0.9, 0.9, 0.85);
</pre>
<h3>Skybox</h3>
<p>Skybox is a way of creating background in games which makes the scene looks realistic. It is more of a wrapper around your screen which covers with the texture being used for the material. Choose your images properly to make it look realistic for the scene that you want to create. To create skybox, you have to create a box and apply material to it. We will discuss the different material in detail in a subsequent chapter.</p> 
<p>Now, we will see how to create a skybox using box and material.</p>
<pre class="result notranslate">
var skybox = BABYLON.Mesh.CreateBox("skyBox", 100.0, scene);
</pre>
<p>We will create a box of size 100 so that it covers the entire scene. We will start by giving material to the box which is done as follows &minus;</p>
<pre class="result notranslate">
var skyboxMaterial = new BABYLON.StandardMaterial("skyBox", scene);
</pre>
<p>To this material, we will assign the properties.</p>
<pre class="result notranslate">
skyboxMaterial.reflectionTexture = new BABYLON.CubeTexture("images/cubetexture/skybox", scene);
</pre>
<p>We have to use reflection texture which is basically used to create a mirror like material. The reflection texture property uses CubeTexture which takes image as an input. Since the cube has 6 faces, the image required for skybox has to be 6, i.e., internally it has to be stored as skybox_nx, skybox_ny, skybox_nz, skybox_px, skybox_py, skybox_pz. The images used for skybox are pasted below; they are faces of the cube on all six sides. When you apply a texture to the shape, it gives the details of the image used and makes the scene look realistic. We made use of the co-ordinates mode as SKYBOX_MODE as shown below &minus;</p>
<pre class="result notranslate">
skyboxMaterial.reflectionTexture.coordinatesMode = BABYLON.Texture.SKYBOX_MODE;
</pre>
<p>There are other properties used for material like backfaceCulling, diffuseColor, specularColor, disableLighting, etc. The properties are explained in detail in the material section.</p>
<p>In the demo, we will show an environment scene created using skybox, a sphere rotating in the scene and a plane moving around. Fog is applied to the scene, which you will notice when you rotate.</p>
<h3>Demo Showing Environment Scene</h3>
<pre class="prettyprint notranslate">
&lt;!doctype html&gt;
&lt;html&gt;
   &lt;head&gt;
      &lt;meta charset = "utf-8"&gt;
      &lt;title&gt; Babylon.JS : Demo&lt;/title&gt;
      &lt;script src = "babylon.js"&gt;&lt;/script&gt;
      &lt;style&gt;
         canvas { width: 100%; height: 100%;}
      &lt;/style&gt;
   &lt;/head&gt;

   &lt;body&gt;
      &lt;canvas id = "renderCanvas"&gt;&lt;/canvas&gt;
      &lt;script type = "text/javascript"&gt;
         var canvas = document.getElementById("renderCanvas");
         var engine = new BABYLON.Engine(canvas, true);
         var createScene  = function() {
            var scene = new BABYLON.Scene(engine);
            var light = new BABYLON.PointLight("Omni", 
            new BABYLON.Vector3(10, 50, 50), scene);
            
            var camera = new BABYLON.ArcRotateCamera("Camera", 0.4, 1.2, 20, new BABYLON.Vector3(-10, 0, 0), scene);
            camera.attachControl(canvas, true);

            var material1 = new BABYLON.StandardMaterial("mat1", scene);
            material1.diffuseTexture = new BABYLON.Texture("images/tsphere.jpg", scene);

            var sphere = BABYLON.Mesh.CreateSphere("red", 32, 2, scene);
            sphere.setPivotMatrix(BABYLON.Matrix.Translation(2, 0, 0));
            sphere.material = material1;		

            // Fog
            scene.fogMode = BABYLON.Scene.FOGMODE_EXP;
            scene.fogColor = new BABYLON.Color3(0.9, 0.9, 0.85);
            scene.fogDensity = 0.01;

            //skybox		
            var skybox = BABYLON.Mesh.CreateBox("skyBox", 100.0, scene);
            
            var skyboxMaterial = new BABYLON.StandardMaterial("skyBox", scene);
            skyboxMaterial.backFaceCulling = false;
            
            skyboxMaterial.reflectionTexture = new BABYLON.CubeTexture("images/cubetexture/skybox", scene);
            skyboxMaterial.reflectionTexture.coordinatesMode = BABYLON.Texture.SKYBOX_MODE;
            
            skyboxMaterial.diffuseColor = new BABYLON.Color3(0, 0, 0);
            
            skyboxMaterial.specularColor = new BABYLON.Color3(0, 0, 0);
            
            skyboxMaterial.disableLighting = true;
            skybox.material = skyboxMaterial;


            var spriteManagerPlayer = new BABYLON.SpriteManager("playerManager", "images/plane.png", 8, 1000, scene);
            
            var plane = new BABYLON.Sprite("plane", spriteManagerPlayer);
            plane.position.x = -2;
            plane.position.y = 2;	
            plane.position.z = 0;	


            var alpha = 0;
            var x = 2;
            var y = 0;
            scene.registerBeforeRender(function () {
               scene.fogDensity = Math.cos(alpha) / 10;
               alpha += 0.02;
               sphere.rotation.y += 0.01;
               y += 0.05; 
               if (x &gt; 50) {
                  x = -2;
               }
               plane.position.x = -x;
               x += 0.02; 
            });
            return scene;
         };
         var scene = createScene();
         engine.runRenderLoop(function() {
            scene.render();
         });
      &lt;/script&gt;
   &lt;/body&gt;
&lt;/html&gt;
</pre>
<h3>Output</h3>
<img src="/babylonjs/images/basic_element_skybox_mode.jpg" alt="Basic Element Skybox Mode" />
<h3>Explanation</h3> 
<p>In the above example, we used the following code for fog &minus;</p>
<pre class="prettyprint notranslate">
scene.fogMode = BABYLON.Scene.FOGMODE_EXP;
scene.fogColor = new BABYLON.Color3(0.9, 0.9, 0.85);
scene.fogDensity = 0.01;
</pre>
<ul class="list">
<li><p><b>scene.fogMode = BABYLON.Scene.FOGMODE_EXP</b> &minus; Here, the fog density follows an exponential function.</p></li>
<li><p><b>scene.registerBeforeRender</b> = With this, the fog density changes as follows &minus;</p></li>
</ul>
<pre class="prettyprint notranslate">
var alpha = 0;
scene.registerBeforeRender(function () {
   scene.fogDensity = Math.cos(alpha) / 10;
   alpha += 0.02;
});
</pre>
<p>The value of alpha keeps incrementing by 0.02 as it goes in a loop as in the above function.</p>
<p>Here, we have added a plane sprite image and changed it’s position with the <b>scene.registerBeforeRender</b> function as follows &minus;</p>
<pre class="prettyprint notranslate">
var alpha = 0;
var x = 2;
var y = 0;
scene.registerBeforeRender(function () {
   scene.fogDensity = Math.cos(alpha) / 10;
   alpha += 0.02;
   sphere.rotation.y += 0.01;
   y += 0.05; 
   if (x &gt; 50) {
      x = -2;
   }
   plane.position.x = -x;
   x += 0.02; 
});
return scene;
};s
</pre>
<p>We will change the x axis of the plane and reset it when it reaches more than 50.</p>
<p>Also, the sphere is rotated along the y axis. This is shown in the above example.The value is changed using sphere.rotation.y.</p>
<p>The texture used for sphere is &minus; <b>images/tshphere.jpg</b>. The images are stored in images/ folder locally and  also pasted below for reference. You can download any image of your choice and use in the demo link.</p>
<img src="/babylonjs/images/basic_element_tshphere.jpg" alt="Basic Element Tshphere" />
<p>We need six images for a cube. The images are stored locally in images/cubetexture/ folder. You can download any image of your choice, but when you save it save them as nameoftheimage_nx, nameoftheimage_ny, nameoftheimage_nz,nameoftheimage_px, nameoftheimage_py, nameoftheimage_pz. Please note the images chosen should be in a sequence  so that the background looks realistic like the one shown for skybox.</p>
<p>The images used for making a skybox are as follows &minus; <b>images/cubetexture/skybox</b></p>
<p><b>skybox_nx</b></p>
<img src="/babylonjs/images/basic_element_skybox_nx.jpg" alt="Basic Element Skybox-nx" />
<p><b>skybox_ny</b></p>
<img src="/babylonjs/images/basic_element_skybox_ny.jpg" alt="Basic Element Skybox-nx" />
<p><b>skybox_nz</b></p>
<img src="/babylonjs/images/basic_element_skybox_nz.jpg" alt="Basic Element Skybox-nx" />
<p><b>skybox_px</b></p>
<img src="/babylonjs/images/basic_element_skybox_px.jpg" alt="Basic Element Skybox-nx" />
<p><b>skybox_py</b></p>
<img src="/babylonjs/images/basic_element_skybox_py.jpg" alt="Basic Element Skybox-nx" />
<p><b>skybox_pz</b></p>
<img src="/babylonjs/images/basic_element_skybox_pz.jpg" alt="Basic Element Skybox-nx" />
<div class="mui-container-fluid button-borders show">
<div class="pre-btn">
<a href="/babylonjs/babylonjs_overview.htm"><i class="fal fa-chevron-circle-left"></i> Previous Page</a>
</div>
<div class="nxt-btn">
<a href="/babylonjs/babylonjs_materials.htm">Next Page <i class="fal fa-chevron-circle-right"></i>&nbsp;</a>
</div>
</div>
<div class="google-bottom-ads">
<div>Advertisements</div>
<script><!--
var width = 580;
var height = 400;
var format = "580x400_as";
if( window.innerWidth < 468 ){
   width = 300;
   height = 250;
   format = "300x250_as";
}
google_ad_client = "pub-7133395778201029";
google_ad_width = width;
google_ad_height = height;
google_ad_format = format;
google_ad_type = "image";
google_ad_channel ="";
//--></script>
<script src="https://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
<div class="space-bottom"></div>
</div>
</div>
<!-- Tutorial Content Ends Here -->
<!-- Right Column Starts Here -->
<div class="mui-col-md-2 google-right-ads">
<div class="space-top"></div>
<div class="google-right-ad" style="margin: 0px auto !important;margin-top:5px;">
<script><!--
google_ad_client = "pub-2537027957187252";
google_ad_width = 300;
google_ad_height = 250;
google_ad_format = "300x250_as";
google_ad_type = "image";
google_ad_channel ="";
//--></script>
<script src="https://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</div>
<div class="google-right-ad">
<div class="adsbyvli" data-ad-slot="vi_9012177"></div>
<script>(vitag.Init = window.vitag.Init || []).push(function(){viAPItag.display("vi_9012177")})</script>
</div>
<div class="space-bottom"></div>
<div class="google-right-ad">
<div class="adsbyvli" data-ad-slot="vi_9013289"></div>
<script>(vitag.Init = window.vitag.Init || []).push(function(){viAPItag.display("vi_9013289")})</script>
</div>
<div class="space-bottom" style="margin-bottom:15px;"></div>
</div>
<!-- Right Column Ends Here -->
</div>
</div>
<div class="clear"></div>
<footer id="footer">
<div class="mui--text-center">
<div class="mui--text-caption mui--text-light">
<a href="/index.htm" class="logo"><img class="img-responsive" src="/images/logo-black.png" alt="Tutorials Point" title="Tutorials Point"></a>
</div>
<ul class="mui-list--inline mui--text-body2 mui--text-light">
<li><a href="/about/index.htm"><i class="fal fa-globe"></i> About us</a></li>
<li><a href="/about/about_terms_of_use.htm"><i class="fal fa-asterisk"></i> Terms of use</a></li>
<li><a href="/about/about_privacy.htm#cookies"> <i class="fal fa-shield-check"></i> Cookies Policy</a></li>
<li><a href="/about/faq.htm"><i class="fal fa-question-circle"></i> FAQ's</a></li>
<li><a href="/about/about_helping.htm"><i class="fal fa-hands-helping"></i> Helping</a></li>
<li><a href="/about/contact_us.htm"><i class="fal fa-map-marker-alt"></i> Contact</a></li>
</ul>
<div class="mui--text-caption mui--text-light bottom-copyright-text">&copy; Copyright 2019. All Rights Reserved.</div>
</div>
<div id="privacy-banner">
  <div>
    <p>
      We use cookies to provide and improve our services. By using our site, you consent to our Cookies Policy.
      <a id="banner-accept" href="#">Accept</a>
      <a id="banner-learn" href="/about/about_cookies.htm" target="_blank">Learn more</a>
    </p>
  </div>
</div>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-232293-17"></script>
<script>
window.dataLayer = window.dataLayer || [];
function gtag(){dataLayer.push(arguments);}
gtag('js', new Date());
gtag('config', 'UA-232293-6');
</script>
</footer>
</body>
</html>
