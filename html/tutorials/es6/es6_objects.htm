<!DOCTYPE html>
<html lang="en-US">
<head>
<title>ES6 - Objects - Tutorialspoint</title>
<meta charset="utf-8">
<meta name="description" content="ES6 - Objects - JavaScript supports extending data types. JavaScript objects are a great way to define custom data types."/>
<meta name="keywords" content="C, C++, Python, Java, HTML, CSS, JavaScript, SQL, PHP, jQuery, XML, DOM, Bootstrap, Tutorials, Articles, Programming, training, learning, quiz, preferences, examples, code"/>
<link rel="canonical" href="https://www.tutorialspoint.com/es6/es6_objects.htm" />
<link rel="shortcut icon" href="/favicon.ico" type="image/x-icon" />
<meta name="viewport" content="width=device-width,initial-scale=1.0,user-scalable=yes">
<script src="/theme/js/script-min-v2.js?v=3"></script>
<link rel="stylesheet" href="/theme/css/style-min-v2.css?v=6">
<script src="//services.bilsyndication.com/adv1/?d=901" defer="" async=""></script>
<script> var vitag = vitag || {};</script>
<script> vitag.outStreamConfig = { enablePC: false, enableMobile: false };</script>  
<style>
.right-menu .mui-btn {
    background-color:#fb7d34;
}
a.demo {
    background:#fb7d34;
}
li.heading {
    background:#fb7d34;
}
.course-box{background:#fb7d34}
.home-intro-sub p{color:#fb7d34}
</style>
</head>
<body>
<header id="header">
<!-- Top sub-menu Starts Here -->
<div class="mui-appbar mui-container-fulid top-menu">
<div class="mui-container">
<div class="top-menu-item home">
<a href="https://www.tutorialspoint.com/index.htm" target="_blank" title="TutorialsPoint - Home"><i class="fal fa-home"></i> <span>Home</span></a>
</div>
<div class="top-menu-item qa">
<a href="https://www.tutorialspoint.com/about/about_careers.htm" target="_blank" title="Job @ Tutorials Point"><i class="fa fa-suitcase"></i> <span>Jobs</span></a>
</div>
<div class="top-menu-item tools">
<a href="https://www.tutorialspoint.com/online_dev_tools.htm" target="_blank" title="Tools - Online Development and Testing Tools"><i class="fal fa-cogs"></i> <span>Tools</span></a>
</div>
<div class="top-menu-item coding-ground">
<a href="https://www.tutorialspoint.com/codingground.htm" target="_blank" title="Coding Ground - Free Online IDE and Terminal"><i class="fal fa-code"></i> <span>Coding Ground </span></a> 
</div>
<div class="top-menu-item current-affairs">
<a href="https://www.tutorialspoint.com/current_affairs.htm" target="_blank" title="Daily Current Affairs"><i class="fal fa-layer-plus"></i> <span>Current Affairs</span></a>
</div>
<div class="top-menu-item upsc-notes">
<a href="https://www.tutorialspoint.com/upsc_ias_exams.htm" target="_blank" title="UPSC IAS Exams Notes - TutorialsPoint"><i class="fal fa-user-tie"></i> <span>UPSC Notes</span></a>
</div>      
<div class="top-menu-item online-tutoris">
<a href="https://www.tutorialspoint.com/tutor_connect/index.php" target="_blank" title="Top Online Tutors - Tutor Connect"><i class="fal fa-user"></i> <span>Online Tutors</span></a>
</div>
<div class="top-menu-item whiteboard">
<a href="https://www.tutorialspoint.com/whiteboard.htm" target="_blank" title="Free Online Whiteboard"><i class="fal fa-chalkboard"></i> <span>Whiteboard</span></a>
</div>
<div class="top-menu-item net-meeting">
<a href="https://www.tutorialspoint.com/netmeeting.php" target="_blank" title="A free tool for online video conferencing"><i class="fal fa-chalkboard-teacher"></i> <span>Net Meeting</span></a> 
</div>
<div class="top-menu-item articles">
<a href="https://www.tutorix.com" target="_blank" title="Tutorx - The Best Learning App" rel="nofollow"><i class="fal fa-video"></i> <span>Tutorix</span></a> 
</div>        
<div class="social-menu-item">
<a href="https://www.facebook.com/tutorialspointindia" target="_blank" rel="nofollow" data-placement="bottom" title="tutorialspoint @ Facebook"><i class="fab fa-facebook-f"></i></a> 
<a href="https://www.twitter.com/tutorialspoint" target="_blank" rel="nofollow" data-placement="bottom" title="tutorialspoint @ Twitter"><i class="fab fa-twitter"></i></a>
<a href="https://www.linkedin.com/company/tutorialspoint" target="_blank" rel="nofollow" data-placement="bottom" title="tutorialspoint @ Linkedin"><i class="fab fa-linkedin-in"></i></a>
<a href="https://www.youtube.com/channel/UCVLbzhxVTiTLiVKeGV7WEBg" target="_blank" rel="nofollow" data-placement="bottom" title="tutorialspoint YouTube"><i class="fab fa-youtube"></i></a>
</div>        
</div>
</div>
<!-- Top sub-menu Ends Here -->
<!-- Top main-menu Starts Here -->
<div class="mui-appbar mui-container-fulid mui--appbar-line-height mui--z1" id="logo-menu">
<div class="mui-container">
<div class="left-menu">
<a href="https://www.tutorialspoint.com/index.htm" title="Tutorialspoint">
<img class="tp-logo" alt="tutorialspoint" src="/es6/images/logo.png">
</a>
<div class="mui-dropdown">
<a class="mui-btn mui-btn--primary categories" data-mui-toggle="dropdown"><i class="fa fa-th-large"></i> 
<span>Categories <span class="mui-caret"></span></span></a>            
<ul class="mui-dropdown__menu cat-menu">
<li>
<ul>
<li><a href="/academic_tutorials.htm"><i class="fa fa-caret-right"></i> Academic Tutorials</a></li>
<li><a href="/big_data_tutorials.htm"><i class="fa fa-caret-right"></i> Big Data &amp; Analytics </a></li>
<li><a href="/computer_programming_tutorials.htm"><i class="fa fa-caret-right"></i> Computer Programming </a></li>
<li><a href="/computer_science_tutorials.htm"><i class="fa fa-caret-right"></i> Computer Science </a></li>
<li><a href="/database_tutorials.htm"><i class="fa fa-caret-right"></i> Databases </a></li>
<li><a href="/devops_tutorials.htm"><i class="fa fa-caret-right"></i> DevOps </a></li>
<li><a href="/digital_marketing_tutorials.htm"><i class="fa fa-caret-right"></i> Digital Marketing </a></li>
<li><a href="/engineering_tutorials.htm"><i class="fa fa-caret-right"></i> Engineering Tutorials </a></li>
<li><a href="/upsc_ias_exams.htm"><i class="fa fa-caret-right"></i> Exams Syllabus </a></li>
<li><a href="/famous_monuments.htm"><i class="fa fa-caret-right"></i> Famous Monuments </a></li>
<li><a href="/gate_exams_tutorials.htm"><i class="fa fa-caret-right"></i> GATE Exams Tutorials</a></li>
<li><a href="/latest_technologies.htm"><i class="fa fa-caret-right"></i> Latest Technologies </a></li>
<li><a href="/machine_learning_tutorials.htm"><i class="fa fa-caret-right"></i> Machine Learning </a></li>
<li><a href="/mainframe_tutorials.htm"><i class="fa fa-caret-right"></i> Mainframe Development </a></li>
<li><a href="/management_tutorials.htm"><i class="fa fa-caret-right"></i> Management Tutorials </a></li>
<li><a href="/maths_tutorials.htm"><i class="fa fa-caret-right"></i> Mathematics Tutorials</a></li>
<li><a href="/microsoft_technologies_tutorials.htm"><i class="fa fa-caret-right"></i> Microsoft Technologies </a></li>
<li><a href="/misc_tutorials.htm"><i class="fa fa-caret-right"></i> Misc tutorials </a></li>
<li><a href="/mobile_development_tutorials.htm"><i class="fa fa-caret-right"></i> Mobile Development </a></li>
<li><a href="/java_technology_tutorials.htm"><i class="fa fa-caret-right"></i> Java Technologies </a></li>
<li><a href="/python_technologies_tutorials.htm"><i class="fa fa-caret-right"></i> Python Technologies </a></li>
<li><a href="/sap_tutorials.htm"><i class="fa fa-caret-right"></i> SAP Tutorials </a></li>
<li><a href="/scripting_lnaguage_tutorials.htm"><i class="fa fa-caret-right"></i>Programming Scripts </a></li>
<li><a href="/selected_reading.htm"><i class="fa fa-caret-right"></i> Selected Reading </a></li>
<li><a href="/software_quality_tutorials.htm"><i class="fa fa-caret-right"></i> Software Quality </a></li>
<li><a href="/soft_skill_tutorials.htm"><i class="fa fa-caret-right"></i> Soft Skills </a></li>
<li><a href="/telecom_tutorials.htm"><i class="fa fa-caret-right"></i> Telecom Tutorials </a></li>
<li><a href="/upsc_ias_exams.htm"><i class="fa fa-caret-right"></i> UPSC IAS Exams </a></li>
<li><a href="/web_development_tutorials.htm"><i class="fa fa-caret-right"></i> Web Development </a></li>
<li><a href="/sports_tutorials.htm"><i class="fa fa-caret-right"></i> Sports Tutorials </a></li>
<li><a href="/xml_technologies_tutorials.htm"><i class="fa fa-caret-right"></i> XML Technologies </a></li>
<li><a href="/multi_language_tutorials.htm"><i class="fa fa-caret-right"></i> Multi-Language Tutorials</a></li>
<li><a href="/questions_and_answers.htm"><i class="fa fa-caret-right"></i> Interview Questions</a></li>
</ul>
</li>
</ul>
<div class="clear"></div>
</div> 
</div>
<div class="right-menu">
<div class="toc-toggle">
<a href="javascript:void(0);"><i class="fa fa-bars"></i></a>
</div>
<div class="mobile-search-btn">
<a href="https://www.tutorialspoint.com/search.htm"><i class="fal fa-search"></i></a>
</div>
<div class="search-box">
<form method="get" class="" name="searchform" action="https://www.google.com/search" target="_blank" novalidate="">
<input type="hidden" name="sitesearch" value="www.tutorialspoint.com" class="user-valid valid">
<input class="header-search-box" type="text" id="search-string" name="q" placeholder="Search your favorite tutorials..." onfocus="if (this.value == 'Search your favorite tutorials...') {this.value = '';}" onblur="if (this.value == '') {this.value = 'Search your favorite tutorials...';}" autocomplete="off">
<button><i class="fal fa-search"></i></button>
</form>
</div>
<div class="menu-btn library-btn">
<a href="https://www.tutorialspoint.com/tutorialslibrary.htm"><i class="fal fa-cubes"></i> <span>Library</span></a>
</div>
<div class="menu-btn videos-btn">
<a href="https://www.tutorialspoint.com/videotutorials/index.htm"><i class="fal fa-video"></i> <span>Videos</span></a> 
</div>
<div class="menu-btn videos-btn">
<a href="https://www.tutorialspoint.com/questions/index.php"><i class="fa fa-location-arrow"></i> <span>Q/A</span></a>
</div>
<div class="menu-btn ebooks-btn">
<a href="https://store.tutorialspoint.com"><i class="fal fa-book"></i> <span>eBooks</span></a>
</div>
<div class="mui-dropdown">
<button class="mui-btn mui-btn--primary" data-mui-toggle="dropdown">
<span class="mui-caret"></span>
</button>
<ul class="mui-dropdown__menu">
<li><a href="https://www.tutorialspoint.com/tutorialslibrary.htm"><i class="fal fa-cubes"></i> <span>Library</span></a></li>
<li><a href="https://www.tutorialspoint.com/videotutorials/index.htm"><i class="fal fa-video"></i> <span>Videos</span></a></li>
<li><a href="https://store.tutorialspoint.com"><i class="fal fa-book"></i> <span>eBooks</span></a></li>
</ul>
</div>
</div>
</div>
</div>
<!-- Top main-menu Ends Here -->
</header>
<div class="mui-container-fluid content">
<div class="mui-container">
<!-- Tutorial ToC Starts Here -->
<div class="mui-col-md-3 tutorial-toc">
<div class="mini-logo">
<img src="/es6/images/es6-mini-logo.jpg" alt="ES6 Tutorial" />
</div>
<ul class="toc chapters">
<li class="heading">ES6 Tutorial</li>
<li><a href="/es6/index.htm">ES6 - Home</a></li>
<li><a href="/es6/es6_overview.htm">ES6 - Overview</a></li>
<li><a href="/es6/es6_environment.htm">ES6 - Environment</a></li>
<li><a href="/es6/es6_syntax.htm">ES6 - Syntax</a></li>
<li><a href="/es6/es6_variables.htm">ES6 - Variables</a></li>
<li><a href="/es6/es6_operators.htm">ES6 - Operators</a></li>
<li><a href="/es6/es6_decision_making.htm">ES6 - Decision Making</a></li>
<li><a href="/es6/es6_loops.htm">ES6 - Loops</a></li>
<li><a href="/es6/es6_functions.htm">ES6 - Functions</a></li>
<li><a href="/es6/es6_events.htm">ES6 - Events</a></li>
<li><a href="/es6/es6_cookies.htm">ES6 - Cookies</a></li>
<li><a href="/es6/es6_page_redirect.htm">ES6 - Page Redirect</a></li>
<li><a href="/es6/es6_dialog_boxes.htm">ES6 - Dialog Boxes</a></li>
<li><a href="/es6/es6_void_keyword.htm">ES6 - Void Keyword</a></li>
<li><a href="/es6/es6_page_printing.htm">ES6 - Page Printing</a></li>
<li><a href="/es6/es6_objects.htm">ES6 - Objects</a></li>
<li><a href="/es6/es6_number.htm">ES6 - Number</a></li>
<li><a href="/es6/es6_boolean.htm">ES6 - Boolean</a></li>
<li><a href="/es6/es6_strings.htm">ES6 - Strings</a></li>
<li><a href="/es6/es6_new_string_methods.htm">ES6 - New String Methods</a></li>
<li><a href="/es6/es6_arrays.htm">ES6 - Arrays</a></li>
<li><a href="/es6/es6_date.htm">ES6 - Date</a></li>
<li><a href="/es6/es6_math.htm">ES6 - Math</a></li>
<li><a href="/es6/es6_regexp.htm">ES6 - RegExp</a></li>
<li><a href="/es6/es6_html_dom.htm">ES6 - HTML DOM</a></li>
<li><a href="/es6/es6_collections.htm">ES6 - Collections</a></li>
<li><a href="/es6/es6_classes.htm">ES6 - Classes</a></li>
<li><a href="/es6/es6_promises.htm">ES6 - Promises</a></li>
<li><a href="/es6/es6_modules.htm">ES6 - Modules</a></li>
<li><a href="/es6/es6_error_handling.htm">ES6 - Error Handling</a></li>
<li><a href="/es6/es6_validations.htm">ES6 - Validations</a></li>
<li><a href="/es6/es6_animation.htm">ES6 - Animation</a></li>
<li><a href="/es6/es6_multimedia.htm">ES6 - Multimedia</a></li>
<li><a href="/es6/es6_debugging.htm">ES6 - Debugging</a></li>
<li><a href="/es6/es6_image_map.htm">ES6 - Image Map</a></li>
<li><a href="/es6/es6_browsers.htm">ES6 - Browsers</a></li>
</ul>
<ul class="toc chapters">
<li class="heading">ES6 Useful Resources</li>
<li><a href="/es6/es6_quick_guide.htm">ES6 - Quick Guide</a></li>
<li><a href="/es6/es6_useful_resources.htm">ES6 - Useful Resources</a></li>
<li><a href="/es6/es6_discussion.htm">ES6 - Discussion</a></li>
</ul>
<ul class="toc reading">
<li class="sreading">Selected Reading</li>
<li><a target="_top" href="/upsc_ias_exams.htm">UPSC IAS Exams Notes</a></li>
<li><a target="_top" href="/developers_best_practices/index.htm">Developer's Best Practices</a></li>
<li><a target="_top" href="/questions_and_answers.htm">Questions and Answers</a></li>
<li><a target="_top" href="/effective_resume_writing.htm">Effective Resume Writing</a></li>
<li><a target="_top" href="/hr_interview_questions/index.htm">HR Interview Questions</a></li>
<li><a target="_top" href="/computer_glossary.htm">Computer Glossary</a></li>
<li><a target="_top" href="/computer_whoiswho.htm">Who is Who</a></li>
</ul>
</div>
<!-- Tutorial ToC Ends Here -->
<!-- Tutorial Content Starts Here -->
<div class="mui-col-md-6 tutorial-content">
<h1>ES6 - Objects</h1>
<hr />
<div class="top-ad-heading">Advertisements</div>
<div style="text-align: center;">
<script><!--
google_ad_client = "pub-7133395778201029";
var width = document.getElementsByClassName("tutorial-content")[0].clientWidth - 40;
google_ad_width = width;
google_ad_height = 150;
google_ad_format = width + "x150_as";
google_ad_type = "image";
google_ad_channel = "";
//--></script>
<script src="https://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</div>
<div class="mui-container-fluid button-borders">
<div class="pre-btn">
<a href="/es6/es6_page_printing.htm"><i class="fal fa-chevron-circle-left"></i> Previous Page</a>
</div>
<div class="nxt-btn">
<a href="/es6/es6_number.htm">Next Page <i class="fal fa-chevron-circle-right"></i>&nbsp;</a>
</div>
</div>
<div class="clearer"></div>
<p>JavaScript supports extending data types. JavaScript objects are a great way to define custom data types.</p> 
<p>An <b>object</b> is an instance which contains a set of key value pairs. Unlike primitive data types, objects can represent multiple or complex values and can change over their life time. The values can be scalar values or functions or even array of other objects.</p> 
<p>The syntactic variations for defining an object is discussed further.</p> 
<h2>Object Initializers</h2>          
<p>Like the primitive types, objects have a literal syntax: <b>curly bracesv</b> ({and}). Following is the syntax for defining an object.</p> 
<pre class="result notranslate">
var identifier = {
   Key1:value, Key2: function () { 
      //functions 
   }, 
   Key3: [“content1”,” content2”] 
} 
</pre>
<p>The contents of an object are called <b>properties</b> (or members), and properties consist of a <b>name</b> (or key) and <b>value</b>. Property names must be strings or symbols, and values can be any type (including other objects).</p> 
<p>Like all JavaScript variables, both the object name (which could be a normal variable) and the property name are case sensitive. You access the properties of an object with a simple dot-notation.</p> 
<p>Following is the syntax for accessing Object Properties.</p>
<pre class="result notranslate">
objectName.propertyName 
</pre>
<h3>Example: Object Initializers</h3> 
<pre class="prettyprint notranslate">
var person = { 
   firstname:"Tom", 
   lastname:"Hanks", 
   func:function(){return "Hello!!"},    
}; 
//access the object values 
console.log(person.firstname)   
console.log(person.lastname) 
console.log(person.func())
</pre> 
<p>The above Example, defines an object person. The object has three properties. The third property refers to a function.</p> 
<p>The following output is displayed on successful execution of the above code.</p>
<pre class="result notranslate">
Tom 
Hanks 
Hello!!
</pre> 
<p>In ES6, assigning a property value that matches a property name, you can omit the property value.</p>  
<h3>Example</h3>
<pre class="prettyprint notranslate">
var foo = 'bar' 
var baz = { foo } 
console.log(baz.foo)
</pre> 
<p>The above code snippet defines an object <b>baz</b>. The object has a property <b>foo</b>. The property value is omitted here as ES6 implicitly assigns the value of the variable foo to the object’s key foo.</p> 
<p>Following is the ES5 equivalent of the above code.</p> 
<pre class="prettyprint notranslate">
var foo = 'bar' 
var baz = { foo:foo } 
console.log(baz.foo)
</pre>
<p>The following output is displayed on successful execution of the above code.</p> 
<pre class="result notranslate">
bar
</pre> 
<p>With this shorthand syntax, the JS engine looks in the containing scope for a variable with the same name. If it is found, that variable’s value is assigned to the property. If it is not found, a Reference Error is thrown.</p> 
<h2>The Object() Constructor</h2>         
<p>JavaScript provides a special constructor function called <b>Object()</b> to build the object. The new operator is used to create an instance of an object. To create an object, the new operator is followed by the constructor method.</p>     
<p>Following is the syntax for defining an object.</p>
<pre class="result notranslate">
var obj_name = new Object(); 
obj_name.property = value;    
OR             
obj_name["key"] = value 
</pre>
<p>Following is the syntax for accessing a property.</p>
<pre class="result notranslate">
Object_name.property_key                    
OR              
Object_name["property_key"]
</pre> 
<h3>Example</h3>
<pre class="prettyprint notranslate">
var myCar = new Object(); 
myCar.make = "Ford"; //define an object 
myCar.model = "Mustang"; 
myCar.year = 1987;  

console.log(myCar["make"]) //access the object property 
console.log(myCar["model"]) 
console.log(myCar["year"])
</pre> 
<p>The following output is displayed on successful execution of the above code.</p>
<pre class="result notranslate">
Ford 
Mustang 
1987
</pre> 
<p>Unassigned properties of an object are undefined.</p>  
<h3>Example</h3> 
<pre class="prettyprint notranslate">
var myCar = new Object(); 
myCar.make = "Ford"; 
console.log(myCar["model"])
</pre> 
<p>The following output is displayed on successful execution of the above code.</p>
<pre class="result notranslate">
undefined
</pre>  
<p><b>Note</b> &minus; An object property name can be any valid JavaScript string, or anything that can be converted to a string, including the empty string. However, any property name that is not a valid JavaScript identifier (for example, a property name that has a space or a hyphen, or that starts with a number) can only be accessed using the square bracket notation.</p> 
<p>Properties can also be accessed by using a string value that is stored in a variable. In other words, the object’s property key can be a dynamic value. For example: a variable. The said concept is illustrated in the following example.</p>
<h3>Example</h3>
<pre class="prettyprint notranslate">
var myCar = new Object()  
var propertyName = "make"; 
myCar[propertyName] = "Ford"; 
console.log(myCar.make)
</pre> 
<p>The following output is displayed on successful execution of the above code.</p>
<pre class="result notranslate">
Ford
</pre> 
<h2>Constructor Function</h2>          
<p>An object can be created using the following two steps &minus;</p> 
<p><b>Step 1</b> &minus; Define the object type by writing a constructor function.</p> 
<p>Following is the syntax for the same.</p>
<pre class="result notranslate">
function function_name() { 
   this.property_name = value 
}
</pre> 
<p>The ‘this’ keyword refers to the current object in use and defines the object’s property.</p>
<p><b>Step 2</b> &minus; Create an instance of the object with the new syntax.</p> 
<pre class="result notranslate">
var Object_name= new function_name() 
//Access the property value  

Object_name.property_name
</pre> 
<p>The new keyword invokes the function constructor and initializes the function’s property keys.</p>     
<p><b>Example &minus; Using a Function Constructor</b></p> 
<pre class="prettyprint notranslate">
function Car() { 
   this.make = "Ford" 
   this.model = "F123" 
}  
var obj = new Car() 
console.log(obj.make) 
console.log(obj.model)
</pre> 
<p>The above example uses a function constructor to define an object.</p> 
<p>The following output is displayed on successful execution of the above code.</p>
<pre class="result notranslate">
Ford 
F123 
</pre> 
<p>A new property can always be added to a previously defined object. For example, consider the following code snippet &minus;</p>
<pre class="prettyprint notranslate">
function Car() { 
   this.make = "Ford" 
} 
var obj = new Car() 
obj.model = "F123" 
console.log(obj.make) 
console.log(obj.model)
</pre> 
<p>The following output is displayed on successful execution of the above code.</p> 
<pre class="result notranslate">
Ford 
F123
</pre>   
<h2>The Object.create Method</h2>         
<p>Objects can also be created using the <b>Object.create()</b> method. It allows you to create the prototype for the object you want, without having to define a constructor function.</p>
<h3>Example</h3>
<pre class="prettyprint notranslate">
var roles = { 
   type: "Admin", // Default value of properties 
   displayType : function() {  
      // Method which will display type of role 
      console.log(this.type); 
   } 
}  
// Create new role type called super_role 
var super_role = Object.create(roles); 
super_role.displayType(); // Output:Admin  

// Create new role type called Guest 
var guest_role = Object.create(roles); 
guest_role.type = "Guest"; 
guest_role.displayType(); // Output:Guest
</pre> 
<p>The above example defines an object -roles and sets the default values for the properties. Two new instances are created that override the default properties value for the object.</p> 
<p>The following output is displayed on successful execution of the above code.</p>
<pre class="result notranslate">
Admin 
Guest
</pre> 
<h2>The Object.assign() Function</h2>     
<p>The <b>Object.assign()</b> method is used to copy the values of all enumerable own properties from one or more source objects to a target object. It will return the target object.</p> 
<p>Following is the syntax for the same.</p> 
<pre class="result notranslate">
Object.assign(target, ...sources)    
</pre>
<p><b>Example &minus; Cloning an Object</b></p>
<pre class="prettyprint notranslate">
"use strict" 
var det = { name:"Tom", ID:"E1001" }; 
var copy = Object.assign({}, det); 
console.log(copy);  
for (let val in copy) { 
   console.log(copy[val]) 
}
</pre> 
<p>The following output is displayed on successful execution of the above code.</p>
<pre class="result notranslate">
Tom 
E1001
</pre>
<p><b>Example &minus; Merging Objects</b></p>
<pre class="result notranslate">
var o1 = { a: 10 }; 
var o2 = { b: 20 }; 
var o3 = { c: 30 }; 
var obj = Object.assign(o1, o2, o3); 
console.log(obj);  
console.log(o1);
</pre> 
<p>The following output is displayed on successful execution of the above code.</p>
<pre class="result notranslate">
{ a: 10, b: 20, c: 30 } 
{ a: 10, b: 20, c: 30 }
</pre> 
<p><b>Note</b> &minus; Unlike copying objects, when objects are merged, the larger object doesn’t maintain a new copy of the properties. Rather it holds the reference to the properties contained in the original objects. The following example explains this concept.</p>
<pre class="prettyprint notranslate">
var o1 = { a: 10 }; 
var obj = Object.assign(o1); 
obj.a++ 
console.log("Value of 'a' in the Merged object after increment  ") 
console.log(obj.a);  
console.log("value of 'a' in the Original Object after increment ") 
console.log(o1.a);
</pre>   
<p>The following output is displayed on successful execution of the above code.</p>
<pre class="result notranslate">
Value of 'a' in the Merged object after increment 
11  
value of 'a' in the Original Object after increment 
11 
</pre>
<h2>Deleting Properties</h2>          
<p>You can remove a property by using the delete operator. The following code shows how to remove a property.</p> 
<h3>Example</h3> 
<pre class="prettyprint notranslate">
// Creates a new object, myobj, with two properties, a and b. 
var myobj = new Object; 
myobj.a = 5; 
myobj.b = 12; 

// Removes the ‘a’ property 
delete myobj.a; 
console.log ("a" in myobj) // yields "false"
</pre>
<p>The following output is displayed on successful execution of the above code.</p>
<pre class="result notranslate">
false
</pre> 
<p>The code snippet deletes the property from the object. The example prints false as the in operator doesn’t find the property in the object.</p>  
<h2>Comparing Objects</h2>          
<p>In JavaScript, objects are a reference type. Two distinct objects are never equal, even if they have the same properties. This is because, they point to a completely different memory address. Only those objects that share a common reference yields true on comparison.</p> 
<p><b>Example 1 &minus; Different Object References</b></p> 
<pre class="prettyprint notranslate">
var val1 = {name: "Tom"}; 
var val2 = {name: "Tom"}; 
console.log(val1 == val2)  // return false 
console.log(val1 === val2)  // return false
</pre>   
<p>In the above example, <b>val1</b> and <b>val2</b> are two distinct objects that refer to two different memory addresses. Hence on comparison for equality, the operator will return false.</p>  
<p><b>Example 2 &minus; Single Object Reference</b></p> 
<pre class="prettyprint notranslate">
var val1 = {name: "Tom"}; 
var val2 = val1  

console.log(val1 == val2) // return true 
console.log(val1 === val2) // return true
</pre> 
<p>In the above example, the contents in val1 are assigned to val2, i.e. the reference of the properties in val1 are shared with val2. Since, the objects now share the reference to the property, the equality operator will return true for two distinct objects that refer to two different memory addresses. Hence on comparison for equality, the operator will return false.</p> 
<h2>Object De-structuring</h2>          
<p>The term <b>destructuring</b> refers to breaking up the structure of an entity. The destructuring assignment syntax in JavaScript makes it possible to extract data from arrays or objects into distinct variables. The same is illustrated in the following example.</p> 
<h3>Example</h3> 
<pre class="prettyprint notranslate">
var emp = { name: 'John', Id: 3 } 
var {name, Id} = emp 
console.log(name) 
console.log(Id)
</pre>
<p>The following output is displayed on successful execution of the above code.</p>
<pre class="result notranslate">
John 
3
</pre> 
<p><b>Note</b> &minus; To enable destructuring, execute the file in <i><b>node as node – harmony_destructuring file_name</i></b>.</p>  
<div class="mui-container-fluid button-borders show">
<div class="pre-btn">
<a href="/es6/es6_page_printing.htm"><i class="fal fa-chevron-circle-left"></i> Previous Page</a>
</div>
<div class="nxt-btn">
<a href="/es6/es6_number.htm">Next Page <i class="fal fa-chevron-circle-right"></i>&nbsp;</a>
</div>
</div>
<div class="google-bottom-ads">
<div>Advertisements</div>
<script><!--
var width = 580;
var height = 400;
var format = "580x400_as";
if( window.innerWidth < 468 ){
   width = 300;
   height = 250;
   format = "300x250_as";
}
google_ad_client = "pub-7133395778201029";
google_ad_width = width;
google_ad_height = height;
google_ad_format = format;
google_ad_type = "image";
google_ad_channel ="";
//--></script>
<script src="https://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
<div class="space-bottom"></div>
</div>
</div>
<!-- Tutorial Content Ends Here -->
<!-- Right Column Starts Here -->
<div class="mui-col-md-2 google-right-ads">
<div class="space-top"></div>
<div class="google-right-ad" style="margin: 0px auto !important;margin-top:5px;">
<script><!--
google_ad_client = "pub-2537027957187252";
google_ad_width = 300;
google_ad_height = 250;
google_ad_format = "300x250_as";
google_ad_type = "image";
google_ad_channel ="";
//--></script>
<script src="https://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</div>
<div class="google-right-ad">
<div class="adsbyvli" data-ad-slot="vi_9012177"></div>
<script>(vitag.Init = window.vitag.Init || []).push(function(){viAPItag.display("vi_9012177")})</script>
</div>
<div class="space-bottom"></div>
<div class="google-right-ad">
<div class="adsbyvli" data-ad-slot="vi_9013289"></div>
<script>(vitag.Init = window.vitag.Init || []).push(function(){viAPItag.display("vi_9013289")})</script>
</div>
<div class="space-bottom" style="margin-bottom:15px;"></div>
</div>
<!-- Right Column Ends Here -->
</div>
</div>
<div class="clear"></div>
<footer id="footer">
<div class="mui--text-center">
<div class="mui--text-caption mui--text-light">
<a href="/index.htm" class="logo"><img class="img-responsive" src="/images/logo-black.png" alt="Tutorials Point" title="Tutorials Point"></a>
</div>
<ul class="mui-list--inline mui--text-body2 mui--text-light">
<li><a href="/about/index.htm"><i class="fal fa-globe"></i> About us</a></li>
<li><a href="/about/about_terms_of_use.htm"><i class="fal fa-asterisk"></i> Terms of use</a></li>
<li><a href="/about/about_privacy.htm#cookies"> <i class="fal fa-shield-check"></i> Cookies Policy</a></li>
<li><a href="/about/faq.htm"><i class="fal fa-question-circle"></i> FAQ's</a></li>
<li><a href="/about/about_helping.htm"><i class="fal fa-hands-helping"></i> Helping</a></li>
<li><a href="/about/contact_us.htm"><i class="fal fa-map-marker-alt"></i> Contact</a></li>
</ul>
<div class="mui--text-caption mui--text-light bottom-copyright-text">&copy; Copyright 2019. All Rights Reserved.</div>
</div>
<div id="privacy-banner">
  <div>
    <p>
      We use cookies to provide and improve our services. By using our site, you consent to our Cookies Policy.
      <a id="banner-accept" href="#">Accept</a>
      <a id="banner-learn" href="/about/about_cookies.htm" target="_blank">Learn more</a>
    </p>
  </div>
</div>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-232293-17"></script>
<script>
window.dataLayer = window.dataLayer || [];
function gtag(){dataLayer.push(arguments);}
gtag('js', new Date());
gtag('config', 'UA-232293-6');
</script>
</footer>
</body>
</html>
