<!DOCTYPE html>
<html lang="en-US">
<head>
<title>Puppet - Live Project</title>
<meta charset="utf-8">
<meta name="description" content="Puppet - Live Project - In order to perform the live testing of applying configuration and manifests on Puppet node, we will use a live working demo. This can be directly copied and pa"/>
<meta name="keywords" content="C, C++, Python, Java, HTML, CSS, JavaScript, SQL, PHP, jQuery, XML, DOM, Bootstrap, Tutorials, Articles, Programming, training, learning, quiz, preferences, examples, code"/>
<link rel="canonical" href="https://www.tutorialspoint.com/puppet/puppet_live_project.htm" />
<link rel="shortcut icon" href="/favicon.ico" type="image/x-icon" />
<meta name="viewport" content="width=device-width,initial-scale=1.0,user-scalable=yes">
<script src="/theme/js/script-min-v2.js?v=3"></script>
<link rel="stylesheet" href="/theme/css/style-min-v2.css?v=6">
<script src="//services.bilsyndication.com/adv1/?d=901" defer="" async=""></script>
<script> var vitag = vitag || {};</script>
<script> vitag.outStreamConfig = { enablePC: false, enableMobile: false };</script>  
<style>
.right-menu .mui-btn {
    background-color:#FFAD1B;
}
a.demo {
    background:#FFAD1B;
}
li.heading {
    background:#FFAD1B;
}
.course-box{background:#FFAD1B}
.home-intro-sub p{color:#FFAD1B}
</style>
</head>
<body>
<header id="header">
<!-- Top sub-menu Starts Here -->
<div class="mui-appbar mui-container-fulid top-menu">
<div class="mui-container">
<div class="top-menu-item home">
<a href="https://www.tutorialspoint.com/index.htm" target="_blank" title="TutorialsPoint - Home"><i class="fal fa-home"></i> <span>Home</span></a>
</div>
<div class="top-menu-item qa">
<a href="https://www.tutorialspoint.com/about/about_careers.htm" target="_blank" title="Job @ Tutorials Point"><i class="fa fa-suitcase"></i> <span>Jobs</span></a>
</div>
<div class="top-menu-item tools">
<a href="https://www.tutorialspoint.com/online_dev_tools.htm" target="_blank" title="Tools - Online Development and Testing Tools"><i class="fal fa-cogs"></i> <span>Tools</span></a>
</div>
<div class="top-menu-item coding-ground">
<a href="https://www.tutorialspoint.com/codingground.htm" target="_blank" title="Coding Ground - Free Online IDE and Terminal"><i class="fal fa-code"></i> <span>Coding Ground </span></a> 
</div>
<div class="top-menu-item current-affairs">
<a href="https://www.tutorialspoint.com/current_affairs.htm" target="_blank" title="Daily Current Affairs"><i class="fal fa-layer-plus"></i> <span>Current Affairs</span></a>
</div>
<div class="top-menu-item upsc-notes">
<a href="https://www.tutorialspoint.com/upsc_ias_exams.htm" target="_blank" title="UPSC IAS Exams Notes - TutorialsPoint"><i class="fal fa-user-tie"></i> <span>UPSC Notes</span></a>
</div>      
<div class="top-menu-item online-tutoris">
<a href="https://www.tutorialspoint.com/tutor_connect/index.php" target="_blank" title="Top Online Tutors - Tutor Connect"><i class="fal fa-user"></i> <span>Online Tutors</span></a>
</div>
<div class="top-menu-item whiteboard">
<a href="https://www.tutorialspoint.com/whiteboard.htm" target="_blank" title="Free Online Whiteboard"><i class="fal fa-chalkboard"></i> <span>Whiteboard</span></a>
</div>
<div class="top-menu-item net-meeting">
<a href="https://www.tutorialspoint.com/netmeeting.php" target="_blank" title="A free tool for online video conferencing"><i class="fal fa-chalkboard-teacher"></i> <span>Net Meeting</span></a> 
</div>
<div class="top-menu-item articles">
<a href="https://www.tutorix.com" target="_blank" title="Tutorx - The Best Learning App" rel="nofollow"><i class="fal fa-video"></i> <span>Tutorix</span></a> 
</div>        
<div class="social-menu-item">
<a href="https://www.facebook.com/tutorialspointindia" target="_blank" rel="nofollow" data-placement="bottom" title="tutorialspoint @ Facebook"><i class="fab fa-facebook-f"></i></a> 
<a href="https://www.twitter.com/tutorialspoint" target="_blank" rel="nofollow" data-placement="bottom" title="tutorialspoint @ Twitter"><i class="fab fa-twitter"></i></a>
<a href="https://www.linkedin.com/company/tutorialspoint" target="_blank" rel="nofollow" data-placement="bottom" title="tutorialspoint @ Linkedin"><i class="fab fa-linkedin-in"></i></a>
<a href="https://www.youtube.com/channel/UCVLbzhxVTiTLiVKeGV7WEBg" target="_blank" rel="nofollow" data-placement="bottom" title="tutorialspoint YouTube"><i class="fab fa-youtube"></i></a>
</div>        
</div>
</div>
<!-- Top sub-menu Ends Here -->
<!-- Top main-menu Starts Here -->
<div class="mui-appbar mui-container-fulid mui--appbar-line-height mui--z1" id="logo-menu">
<div class="mui-container">
<div class="left-menu">
<a href="https://www.tutorialspoint.com/index.htm" title="Tutorialspoint">
<img class="tp-logo" alt="tutorialspoint" src="/puppet/images/logo.png">
</a>
<div class="mui-dropdown">
<a class="mui-btn mui-btn--primary categories" data-mui-toggle="dropdown"><i class="fa fa-th-large"></i> 
<span>Categories <span class="mui-caret"></span></span></a>            
<ul class="mui-dropdown__menu cat-menu">
<li>
<ul>
<li><a href="/academic_tutorials.htm"><i class="fa fa-caret-right"></i> Academic Tutorials</a></li>
<li><a href="/big_data_tutorials.htm"><i class="fa fa-caret-right"></i> Big Data &amp; Analytics </a></li>
<li><a href="/computer_programming_tutorials.htm"><i class="fa fa-caret-right"></i> Computer Programming </a></li>
<li><a href="/computer_science_tutorials.htm"><i class="fa fa-caret-right"></i> Computer Science </a></li>
<li><a href="/database_tutorials.htm"><i class="fa fa-caret-right"></i> Databases </a></li>
<li><a href="/devops_tutorials.htm"><i class="fa fa-caret-right"></i> DevOps </a></li>
<li><a href="/digital_marketing_tutorials.htm"><i class="fa fa-caret-right"></i> Digital Marketing </a></li>
<li><a href="/engineering_tutorials.htm"><i class="fa fa-caret-right"></i> Engineering Tutorials </a></li>
<li><a href="/upsc_ias_exams.htm"><i class="fa fa-caret-right"></i> Exams Syllabus </a></li>
<li><a href="/famous_monuments.htm"><i class="fa fa-caret-right"></i> Famous Monuments </a></li>
<li><a href="/gate_exams_tutorials.htm"><i class="fa fa-caret-right"></i> GATE Exams Tutorials</a></li>
<li><a href="/latest_technologies.htm"><i class="fa fa-caret-right"></i> Latest Technologies </a></li>
<li><a href="/machine_learning_tutorials.htm"><i class="fa fa-caret-right"></i> Machine Learning </a></li>
<li><a href="/mainframe_tutorials.htm"><i class="fa fa-caret-right"></i> Mainframe Development </a></li>
<li><a href="/management_tutorials.htm"><i class="fa fa-caret-right"></i> Management Tutorials </a></li>
<li><a href="/maths_tutorials.htm"><i class="fa fa-caret-right"></i> Mathematics Tutorials</a></li>
<li><a href="/microsoft_technologies_tutorials.htm"><i class="fa fa-caret-right"></i> Microsoft Technologies </a></li>
<li><a href="/misc_tutorials.htm"><i class="fa fa-caret-right"></i> Misc tutorials </a></li>
<li><a href="/mobile_development_tutorials.htm"><i class="fa fa-caret-right"></i> Mobile Development </a></li>
<li><a href="/java_technology_tutorials.htm"><i class="fa fa-caret-right"></i> Java Technologies </a></li>
<li><a href="/python_technologies_tutorials.htm"><i class="fa fa-caret-right"></i> Python Technologies </a></li>
<li><a href="/sap_tutorials.htm"><i class="fa fa-caret-right"></i> SAP Tutorials </a></li>
<li><a href="/scripting_lnaguage_tutorials.htm"><i class="fa fa-caret-right"></i>Programming Scripts </a></li>
<li><a href="/selected_reading.htm"><i class="fa fa-caret-right"></i> Selected Reading </a></li>
<li><a href="/software_quality_tutorials.htm"><i class="fa fa-caret-right"></i> Software Quality </a></li>
<li><a href="/soft_skill_tutorials.htm"><i class="fa fa-caret-right"></i> Soft Skills </a></li>
<li><a href="/telecom_tutorials.htm"><i class="fa fa-caret-right"></i> Telecom Tutorials </a></li>
<li><a href="/upsc_ias_exams.htm"><i class="fa fa-caret-right"></i> UPSC IAS Exams </a></li>
<li><a href="/web_development_tutorials.htm"><i class="fa fa-caret-right"></i> Web Development </a></li>
<li><a href="/sports_tutorials.htm"><i class="fa fa-caret-right"></i> Sports Tutorials </a></li>
<li><a href="/xml_technologies_tutorials.htm"><i class="fa fa-caret-right"></i> XML Technologies </a></li>
<li><a href="/multi_language_tutorials.htm"><i class="fa fa-caret-right"></i> Multi-Language Tutorials</a></li>
<li><a href="/questions_and_answers.htm"><i class="fa fa-caret-right"></i> Interview Questions</a></li>
</ul>
</li>
</ul>
<div class="clear"></div>
</div> 
</div>
<div class="right-menu">
<div class="toc-toggle">
<a href="javascript:void(0);"><i class="fa fa-bars"></i></a>
</div>
<div class="mobile-search-btn">
<a href="https://www.tutorialspoint.com/search.htm"><i class="fal fa-search"></i></a>
</div>
<div class="search-box">
<form method="get" class="" name="searchform" action="https://www.google.com/search" target="_blank" novalidate="">
<input type="hidden" name="sitesearch" value="www.tutorialspoint.com" class="user-valid valid">
<input class="header-search-box" type="text" id="search-string" name="q" placeholder="Search your favorite tutorials..." onfocus="if (this.value == 'Search your favorite tutorials...') {this.value = '';}" onblur="if (this.value == '') {this.value = 'Search your favorite tutorials...';}" autocomplete="off">
<button><i class="fal fa-search"></i></button>
</form>
</div>
<div class="menu-btn library-btn">
<a href="https://www.tutorialspoint.com/tutorialslibrary.htm"><i class="fal fa-cubes"></i> <span>Library</span></a>
</div>
<div class="menu-btn videos-btn">
<a href="https://www.tutorialspoint.com/videotutorials/index.htm"><i class="fal fa-video"></i> <span>Videos</span></a> 
</div>
<div class="menu-btn videos-btn">
<a href="https://www.tutorialspoint.com/questions/index.php"><i class="fa fa-location-arrow"></i> <span>Q/A</span></a>
</div>
<div class="menu-btn ebooks-btn">
<a href="https://store.tutorialspoint.com"><i class="fal fa-book"></i> <span>eBooks</span></a>
</div>
<div class="mui-dropdown">
<button class="mui-btn mui-btn--primary" data-mui-toggle="dropdown">
<span class="mui-caret"></span>
</button>
<ul class="mui-dropdown__menu">
<li><a href="https://www.tutorialspoint.com/tutorialslibrary.htm"><i class="fal fa-cubes"></i> <span>Library</span></a></li>
<li><a href="https://www.tutorialspoint.com/videotutorials/index.htm"><i class="fal fa-video"></i> <span>Videos</span></a></li>
<li><a href="https://store.tutorialspoint.com"><i class="fal fa-book"></i> <span>eBooks</span></a></li>
</ul>
</div>
</div>
</div>
</div>
<!-- Top main-menu Ends Here -->
</header>
<div class="mui-container-fluid content">
<div class="mui-container">
<!-- Tutorial ToC Starts Here -->
<div class="mui-col-md-3 tutorial-toc">
<div class="mini-logo">
<img src="/puppet/images/puppet-mini-logo.jpg" alt="Puppet Tutorial" />
</div>
<ul class="toc chapters">
<li class="heading">Puppet Tutorial</li>
<li><a href="/puppet/index.htm">Puppet - Home</a></li>
</ul>
<ul class="toc chapters">
<li class="heading">Basic Puppet</li>
<li><a href="/puppet/puppet_overview.htm">Puppet - Overview</a></li>
<li><a href="/puppet/puppet_architecture.htm">Puppet - Architecture</a></li>
<li><a href="/puppet/puppet_installation.htm">Puppet - Installation</a></li>
<li><a href="/puppet/puppet_configuration.htm">Puppet - Configuration</a></li>
<li><a href="/puppet/puppet_environment_conf.htm">Puppet - Environment Conf</a></li>
<li><a href="/puppet/puppet_master.htm">Puppet - Master</a></li>
<li><a href="/puppet/puppet_agent_setup.htm">Puppet - Agent Setup</a></li>
<li><a href="/puppet/puppet_ssl_sign_certificate_setup.htm">Puppet - SSL Sign Certificate Setup</a></li>
<li><a href="/puppet/puppet_installing_configuring_r10k.htm">Installing &amp; Configuring r10K</a></li>
<li><a href="/puppet/puppet_validating_setup.htm">Puppet - Validating Setup</a></li>
<li><a href="/puppet/puppet_coding_style.htm">Puppet - Coding Style</a></li>
<li><a href="/puppet/puppet_manifest_files.htm">Puppet - Manifest Files</a></li>
<li><a href="/puppet/puppet_module.htm">Puppet - Module</a></li>
<li><a href="/puppet/puppet_file_server.htm">Puppet - File Server</a></li>
<li><a href="/puppet/puppet_facter_facts.htm">Puppet - Facter &amp; Facts</a></li>
</ul>
<ul class="toc chapters">
<li class="heading">Advanced Puppet</li>
<li><a href="/puppet/puppet_resource.htm">Puppet - Resource</a></li>
<li><a href="/puppet/puppet_resource_abstraction_layer.htm">Puppet - Resource Abstraction Layer</a></li>
<li><a href="/puppet/puppet_template.htm">Puppet - Template</a></li>
<li><a href="/puppet/puppet_classes.htm">Puppet - Classes</a></li>
<li><a href="/puppet/puppet_function.htm">Puppet - Function</a></li>
<li><a href="/puppet/puppet_custom_functions.htm">Puppet - Custom Functions</a></li>
<li><a href="/puppet/puppet_environment.htm">Puppet - Environment</a></li>
<li><a href="/puppet/puppet_type_provider.htm">Puppet - Type &amp; Provider</a></li>
<li><a href="/puppet/puppet_restful_api.htm">Puppet - RESTful API</a></li>
<li><a href="/puppet/puppet_live_project.htm">Puppet - Live Project</a></li>
</ul>
<ul class="toc chapters">
<li class="heading">Puppet Useful Resources</li>
<li><a href="/puppet/puppet_quick_guide.htm">Puppet - Quick Guide</a></li>
<li><a href="/puppet/puppet_useful_resources.htm">Puppet - Useful Resources</a></li>
<li><a href="/puppet/puppet_discussion.htm">Puppet - Discussion</a></li>
</ul>
<ul class="toc reading">
<li class="sreading">Selected Reading</li>
<li><a target="_top" href="/upsc_ias_exams.htm">UPSC IAS Exams Notes</a></li>
<li><a target="_top" href="/developers_best_practices/index.htm">Developer's Best Practices</a></li>
<li><a target="_top" href="/questions_and_answers.htm">Questions and Answers</a></li>
<li><a target="_top" href="/effective_resume_writing.htm">Effective Resume Writing</a></li>
<li><a target="_top" href="/hr_interview_questions/index.htm">HR Interview Questions</a></li>
<li><a target="_top" href="/computer_glossary.htm">Computer Glossary</a></li>
<li><a target="_top" href="/computer_whoiswho.htm">Who is Who</a></li>
</ul>
</div>
<!-- Tutorial ToC Ends Here -->
<!-- Tutorial Content Starts Here -->
<div class="mui-col-md-6 tutorial-content">
<h1>Puppet - Live Project</h1>
<hr />
<div class="top-ad-heading">Advertisements</div>
<div style="text-align: center;">
<script><!--
google_ad_client = "pub-7133395778201029";
var width = document.getElementsByClassName("tutorial-content")[0].clientWidth - 40;
google_ad_width = width;
google_ad_height = 150;
google_ad_format = width + "x150_as";
google_ad_type = "image";
google_ad_channel = "";
//--></script>
<script src="https://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</div>
<div class="mui-container-fluid button-borders">
<div class="pre-btn">
<a href="/puppet/puppet_restful_api.htm"><i class="fal fa-chevron-circle-left"></i> Previous Page</a>
</div>
<div class="nxt-btn">
<a href="/puppet/puppet_quick_guide.htm">Next Page <i class="fal fa-chevron-circle-right"></i>&nbsp;</a>
</div>
</div>
<div class="clearer"></div>
<p>In order to perform the live testing of applying configuration and manifests on Puppet node, we will use a live working demo. This can be directly copied and pasted to test how the configuration works. If the user wishes to use the same set of code, he needs to have the same naming convention as shown in code snippets as follows.</p>
<p>Let’s start with the creation of a new module.</p>
<h2>Creating a New Module</h2>
<p>The first step in testing and applying the httpd configuration is by creating a module. In order to do this, the user needs to change his working directory to Puppet module directory and create a basic module structure. The structure creation can be done manually or by using Puppet to create boilerplate for the module.</p>
<pre class="result notranslate">
# cd /etc/puppet/modules 
# puppet module generate Live-module
</pre>
<p><b>Note</b> &minus; Puppet module generate command requires that the module-name takes the format of [username]-[module] to comply with Puppet forge specifications.</p>
<p>The new module contains some basic files, including a manifest directory. The directory already contains a manifest named init.pp, which is modules main manifest file. This is an empty class declaration for the module.</p>
<pre class="result notranslate">
class live-module { 
} 
</pre>
<p>The module also contains a test directory containing a manifest called <b>init.pp</b>. This test manifest contains reference to the live-module class within manifest/init.pp:</p>
<pre class="result notranslate">
include live-module
</pre>
<p>Puppet will use this test module to test the manifest. Now we are ready to add the configuration to the module.</p>
<h2>Installing a HTTP Server</h2>
<p>Puppet module will install the necessary packages to run http server. This requires a resource definition that defines the configuration of httpd packages.</p>
<p>In the module’s manifest directory, create a new manifest file called httpd.pp</p>
<pre class="result notranslate">
# touch test-module/manifests/httpd.pp
</pre>
<p>This manifest will contain all HTTP configuration for our module. For separation purpose, we will keep the httpd.pp file separate from init.pp manifest file</p>
<p>We need to put the following code in httpd.pp manifest file.</p>
<pre class="prettyprint notranslate">
class test-module::httpd { 
   package { 'httpd': 
      ensure =&gt; installed, 
   } 
}
</pre>
<p>This code defines a subclass of test-module called httpd, then defines a package resource declaration for the httpd package. The ensure =&gt; installed attribute checks if the required package is installed.  If not installed, Puppet uses yum utility to install it. Next, is to include this subclass in our main manifest file. We need to edit init.pp manifest.</p>
<pre class="prettyprint notranslate">
class test-module { 
   include test-module::httpd 
}
</pre>
<p>Now, it’s the time to test the module which could be done as follows</p>
<pre class="result notranslate">
# puppet apply test-module/tests/init.pp --noop
</pre>
<p>The puppet apply command applies the configuration present in manifest file on the target system. Here, we are using test init.pp which refers to main init.pp. The –noop performs the dry run of the configuration, which only shows the output but actually does not do anything.</p>
<p>Following is the output.</p>
<pre class="result notranslate">
Notice: Compiled catalog for puppet.example.com in environment 
production in 0.59 seconds 

Notice: /Stage[main]/test-module::Httpd/Package[httpd]/ensure: 
current_value absent, should be present (noop) 

Notice: Class[test-module::Httpd]: Would have triggered 'refresh' from 1 
events 

Notice: Stage[main]: Would have triggered 'refresh' from 1 events 
Notice: Finished catalog run in 0.67 seconds 
</pre>
<p>The highlight line is the result of the ensure =&gt; installed attribute. The current_value absent means that Puppet has detected the httpd package is installed. Without the –noop option, Puppet will install the httpd package.</p>
<h2>Running the httpd Server</h2>
<p>After installing the httpd servers, we need to start the service using other resource deceleration: Service</p>
<p>We need to edit the httpd.pp manifest file and edit the following content.</p>
<pre class="prettyprint notranslate">
class test-module::httpd { 
   package { 'httpd': 
      ensure =&gt; installed, 
   } 
   service { 'httpd': 
      ensure =&gt; running, 
      enable =&gt; true, 
      require =&gt; Package["httpd"], 
   } 
}
</pre>
<p>Following is the list of targets that we have achieved from the above code.</p>
<ul class="list">
<li><p>The <b>ensure =&gt;</b> running status checks if the service is running, if not then it enables it.</p></li>
<li><p>The <b>enable =&gt;</b> true attribute sets the service to run when the system boots up.</p></li>
<li><p>The <b>require =&gt; Package["httpd"]</b> attribute defines an ordering relationship between one resource deceleration and other. In the above case, it ensures that the httpd service starts after the http package is installed. This creates a dependency between the service and the respective package.</p></li>
</ul>
<p>Run the puppet apply command to test the changes again.</p>
<pre class="result notranslate">
# puppet apply test-module/tests/init.pp --noop 
Notice: Compiled catalog for puppet.example.com in environment 
production in 0.56 seconds 

Notice: /Stage[main]/test-module::Httpd/Package[httpd]/ensure: 
current_value absent, should be present (noop) 

Notice: /Stage[main]/test-module::Httpd/Service[httpd]/ensure: 
current_value stopped, should be running (noop) 

Notice: Class[test-module::Httpd]: Would have triggered 'refresh' from 2 
events 

Notice: Stage[main]: Would have triggered 'refresh' from 1 events 
Notice: Finished catalog run in 0.41 seconds 
</pre>
<h2>Configuring httpd Server</h2>
<p>Once the above steps are completed, we will have HTTP server installed and enabled. The next step is to provide some configuration to the server. By default, httpd provides some default configurations in /etc/httpd/conf/httpd.conf which provides a webhost port 80. We will add some additional host to provide some user-specific facilities to the web-host.</p>
<p>A template will be used to provide additional port as it requires a variable input. We will create a directory called template and add a file called test-server.config.erb in the new director and add the following content.</p>
<pre class="prettyprint notranslate">
Listen &lt;%= @httpd_port %&gt; 
NameVirtualHost *:&lt;% = @httpd_port %&gt; 

&lt;VirtualHost *:&lt;% = @httpd_port %&gt;&gt; 
   DocumentRoot /var/www/testserver/ 
   ServerName &lt;% = @fqdn %&gt; 
   
   &lt;Directory "/var/www/testserver/"&gt; 
      Options All Indexes FollowSymLinks 
      Order allow,deny 
      Allow from all 
   &lt;/Directory&gt; 
&lt;/VirtualHost&gt;
</pre>
<p>The above template follows the standard apache-tomcat server configuration format. The only difference is the use of Ruby escape character to inject variables from the module. We have FQDN which stores fully qualified domain name of the system. This is known as the <b>system fact</b>.</p>
<p>System facts are collected from each system prior to generating each respective system’s puppet catalog. Puppet uses the facter command to get this information and one can use facter to get other details regarding the system. We need to add the highlight lines in httpd.pp manifest file.</p>
<pre class="prettyprint notranslate">
class test-module::httpd { 
   package { 'httpd': 
      ensure =&gt; installed, 
   } 
   service { 'httpd': 
      ensure =&gt; running, 
      enable =&gt; true, 
      require =&gt; Package["httpd"], 
   } 
   file {'/etc/httpd/conf.d/testserver.conf': 
      notify =&gt; Service["httpd"], 
      ensure =&gt; file, 
      require =&gt; Package["httpd"], 
      content =&gt; template("test-module/testserver.conf.erb"), 
   } 
   file { "/var/www/myserver": 
      ensure =&gt; "directory", 
   } 
}
</pre>
<p>This helps in achieving the following things &minus;</p>
<ul class="list">
<li><p>This adds a file resource declaration for the server configuration file (/etc/httpd/conf.d/test-server.conf).  The content of this file is the test-serverconf.erb template that was created earlier. We also check the httpd package installed before adding this file.</p></li>
<li><p>This adds the second file resource declaration which creates a directory (/var/www/test-server) for the web server.</p></li>
<li><p>Next, we add the relationship between the configuration file and the https service using the <b>notify =&gt; Service["httpd"]attribute</b>. This checks if there are any configuration file changes. If there is, then Puppet restarts the service.</p></li>
</ul>
<p>Next is to include the httpd_port in the main manifest file. For this, we need to end the main init.pp manifest file and include the following content.</p>
<pre class="prettyprint notranslate">
class test-module ( 
   $http_port = 80 
) { 
   include test-module::httpd 
}
</pre>
<p>This sets the httpd port to the default value of 80. Next is to run the Puppet apply command.</p>
<p>Following will be the output.</p>
<pre class="result notranslate">
# puppet apply test-module/tests/init.pp --noop 
Warning: Config file /etc/puppet/hiera.yaml not found, using Hiera 
defaults 

Notice: Compiled catalog for puppet.example.com in environment 
production in 0.84 seconds 

Notice: /Stage[main]/test-module::Httpd/File[/var/www/myserver]/ensure: 
current_value absent, should be directory (noop) 

Notice: /Stage[main]/test-module::Httpd/Package[httpd]/ensure: 
current_value absent, should be present (noop) 

Notice: 
/Stage[main]/test-module::Httpd/File[/etc/httpd/conf.d/myserver.conf]/ensure: 
current_value absent, should be file (noop) 

Notice: /Stage[main]/test-module::Httpd/Service[httpd]/ensure: 
current_value stopped, should be running (noop) 

Notice: Class[test-module::Httpd]: Would have triggered 'refresh' from 4 
events 

Notice: Stage[main]: Would have triggered 'refresh' from 1 events 
Notice: Finished catalog run in 0.51 seconds 
</pre>
<h2>Configuring the Firewall</h2>
<p>In order to communicate with the server one requires an open port. The problem here is that different kind of operating systems use different methods of controlling the firewall. In case of Linux, versions below 6 use iptables and version 7 use firewalld.</p>
<p>This decision of using an appropriate service is somewhat handled by Puppet using the system facts and its logic. For this, we need to first check the OS and then run the appropriate firewall command.</p>
<p>In order to achieve this, we need to add the following code snippet inside testmodule::http class.</p>
<pre class="prettyprint notranslate">
if $operatingsystemmajrelease &lt;= 6 { 
   exec { 'iptables': 
      command =&gt; "iptables -I INPUT 1 -p tcp -m multiport --ports 
      ${httpd_port} -m comment --comment 'Custom HTTP Web Host' -j ACCEPT &amp;&amp; 
      iptables-save &gt; /etc/sysconfig/iptables", 
      path =&gt; "/sbin", 
      refreshonly =&gt; true, 
      subscribe =&gt; Package['httpd'], 
   } 
   service { 'iptables': 
      ensure =&gt; running, 
      enable =&gt; true, 
      hasrestart =&gt; true, 
      subscribe =&gt; Exec['iptables'], 
   } 
}  elsif $operatingsystemmajrelease == 7 { 
   exec { 'firewall-cmd': 
      command =&gt; "firewall-cmd --zone=public --addport = $ { 
      httpd_port}/tcp --permanent", 
      path =&gt; "/usr/bin/", 
      refreshonly =&gt; true, 
      subscribe =&gt; Package['httpd'], 
   } 
   service { 'firewalld': 
      ensure =&gt; running, 
      enable =&gt; true, 
      hasrestart =&gt; true, 
      subscribe =&gt; Exec['firewall-cmd'], 
   } 
} 
</pre>
<p>The above code performs the following &minus;</p>
<ul class="list">
<li><p>Using the <b>operatingsystemmajrelease</b> determines whether the OS which is used is version 6 or 7.</p></li>
<li><p>If the version is 6, then it runs all the required configuration commands to configure Linux 6 version.</p></li>
<li><p>If OS version is 7, then it runs all the required commands required to configure the firewall.</p></li>
<li><p>The code snippet for both the OS contains a logic which ensures that the configuration runs only after the http package is installed.</p></li>
</ul>
<p>Finally, run the Puppet apply command.</p>
<pre class="result notranslate">
# puppet apply test-module/tests/init.pp --noop 
Warning: Config file /etc/puppet/hiera.yaml not found, using Hiera 
defaults 

Notice: Compiled catalog for puppet.example.com in environment 
production in 0.82 seconds 

Notice: /Stage[main]/test-module::Httpd/Exec[iptables]/returns: 
current_value notrun, should be 0 (noop) 

Notice: /Stage[main]/test-module::Httpd/Service[iptables]: Would have 
triggered 'refresh' from 1 events 
</pre>
<h2>Configuring the SELinux</h2>
<p>As we are working on a Linux machine which is version 7 and above, hence we need to configure it to make a http communication. SELinux restricts non-standard access to the HTTP server by default. If we define a custom port, then we need to configure the SELinux to provide access to that port.</p>
<p>Puppet contains some resource type to manage SELinux functions, such as Booleans and modules. Here, we need to execute semanage command to manage port settings. This tools is a part of policycoreutils-python package, which is not installed on red-hat servers by default. In order to achieve the above, we need to add the following code inside the test-module::http class.</p>
<pre class="prettyprint notranslate">
exec { 'semanage-port': 
   command =&gt; "semanage port -a -t http_port_t -p tcp ${httpd_port}", 
   path =&gt; "/usr/sbin", 
   require =&gt; Package['policycoreutils-python'], 
   before =&gt; Service ['httpd'], 
   subscribe =&gt; Package['httpd'], 
   refreshonly =&gt; true, 
} 

package { 'policycoreutils-python': 
   ensure =&gt; installed, 
} 
</pre>
<p>The above code performs the following &minus;</p>
<ul class="list">
<li><p>The require =&gt; Package['policycoreutils-python'] ensures that we have the required python module installed.</p></li>
<li><p>Puppet uses semanage to open the port using the httpd_port as a veriable.</p></li>
<li><p>The before =&gt; service ensures to execute this command before httpd service starts. If HTTPD starts before SELinux command, then SELinux the service request and the service request fails.</p></li>
</ul>
<p>Finally, run the Puppet apply command</p>
<pre class="result notranslate">
# puppet apply test-module/tests/init.pp --noop 
... 
Notice: /Stage[main]/test-module::Httpd/Package[policycoreutilspython]/ 
ensure: current_value absent, should be present (noop) 
...
Notice: /Stage[main]/test-module::Httpd/Exec[semanage-port]/returns: 
current_value notrun, should be 0 (noop) 
... 
Notice: /Stage[main]/test-module::Httpd/Service[httpd]/ensure: 
current_value stopped, should be running (noop) 
</pre>
<p>Puppet installs the python module first and then configures the port access and finally starts the httpd service.</p>
<h2>Copying HTML Files in the Web Host</h2>
<p>With the above steps we have completed the http server configuration. Now, we have a platform ready to install a web-based application, which Puppet can also configure. To test, we will copy some sample html index web pages to the server.</p>
<p>Create an index.html file inside the files directory.</p>
<pre class="prettyprint notranslate">
&lt;html&gt; 
   &lt;head&gt; 
      &lt;title&gt;Congratulations&lt;/title&gt; 
   &lt;head&gt; 
   
   &lt;body&gt; 
      &lt;h1&gt;Congratulations&lt;/h1&gt; 
      &lt;p&gt;Your puppet module has correctly applied your configuration.&lt;/p&gt; 
   &lt;/body&gt; 
&lt;/html&gt; 
</pre>
<p>Create a manifest app.pp inside the manifest directory and add the following content.</p>
<pre class="prettyprint notranslate">
class test-module::app { 
   file { "/var/www/test-server/index.html": 
      ensure =&gt; file, 
      mode =&gt; 755, 
      owner =&gt; root, 
      group =&gt; root, 
      source =&gt; "puppet:///modules/test-module/index.html", 
      require =&gt; Class["test-module::httpd"], 
   } 
}
</pre>
<p>This new class contains a single resource deceleration. This copies a file from the module’s file directory to the web server and sets its permissions. The required attribute ensures the test-module::http class completes the configuration successfully before one applies test-module::app.</p>
<p>Finally, we need to include a new manifest in our main init.pp manifest.</p>
<pre class="prettyprint notranslate">
class test-module ( 
   $http_port = 80 
) { 
   include test-module::httpd 
   include test-module::app 
} 
</pre>
<p>Now, run the apply command to actually test what is happening. Following will be the output.</p>
<pre class="result notranslate">
<b># puppet apply test-module/tests/init.pp --noop</b>
Warning: Config file /etc/puppet/hiera.yaml not found, using Hiera 
defaults 

Notice: Compiled catalog for brcelprod001.brcle.com in environment 
production in 0.66 seconds 

Notice: /Stage[main]/Test-module::Httpd/Exec[iptables]/returns: 
current_value notrun, should be 0 (noop) 

Notice: /Stage[main]/Test-module::Httpd/Package[policycoreutilspython]/ 
ensure: current_value absent, should be present (noop) 

Notice: /Stage[main]/Test-module::Httpd/Service[iptables]: Would have 
triggered 'refresh' from 1 events 

Notice: /Stage[main]/Test-module::Httpd/File[/var/www/myserver]/ensure: 
current_value absent, should be directory (noop) 

Notice: /Stage[main]/Test-module::Httpd/Package[httpd]/ensure: 
current_value absent, should be present (noop) 

Notice: 
/Stage[main]/Test-module::Httpd/File[/etc/httpd/conf.d/myserver.conf]/ensur 
e: current_value absent, should be file (noop) 

Notice: /Stage[main]/Test-module::Httpd/Exec[semanage-port]/returns: 
current_value notrun, should be 0 (noop) 

Notice: /Stage[main]/Test-module::Httpd/Service[httpd]/ensure: 
current_value stopped, should be running (noop) 

Notice: Class[test-module::Httpd]: Would have triggered 'refresh' from 8 
Notice: 
/Stage[main]/test-module::App/File[/var/www/myserver/index.html]/ensur: 
current_value absent, should be file (noop) 

Notice: Class[test-module::App]: Would have triggered 'refresh' from 1 
Notice: Stage[main]: Would have triggered 'refresh' from 2 events Notice: 
Finished catalog run in 0.74 seconds
</pre>
<p>The highlighted line shows the result of index.html file being copied to the web-host.</p>
<h2>Finalizing the Module</h2>
<p>With all the above steps, our new module that we created is ready to use. If we want to create an archive of the module, it can be done using the following command.</p>
<pre class="result notranslate">
# puppet module build test-module
</pre>
<div class="mui-container-fluid button-borders show">
<div class="pre-btn">
<a href="/puppet/puppet_restful_api.htm"><i class="fal fa-chevron-circle-left"></i> Previous Page</a>
</div>
<div class="nxt-btn">
<a href="/puppet/puppet_quick_guide.htm">Next Page <i class="fal fa-chevron-circle-right"></i>&nbsp;</a>
</div>
</div>
<div class="google-bottom-ads">
<div>Advertisements</div>
<script><!--
var width = 580;
var height = 400;
var format = "580x400_as";
if( window.innerWidth < 468 ){
   width = 300;
   height = 250;
   format = "300x250_as";
}
google_ad_client = "pub-7133395778201029";
google_ad_width = width;
google_ad_height = height;
google_ad_format = format;
google_ad_type = "image";
google_ad_channel ="";
//--></script>
<script src="https://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
<div class="space-bottom"></div>
</div>
</div>
<!-- Tutorial Content Ends Here -->
<!-- Right Column Starts Here -->
<div class="mui-col-md-2 google-right-ads">
<div class="space-top"></div>
<div class="google-right-ad" style="margin: 0px auto !important;margin-top:5px;">
<script><!--
google_ad_client = "pub-2537027957187252";
google_ad_width = 300;
google_ad_height = 250;
google_ad_format = "300x250_as";
google_ad_type = "image";
google_ad_channel ="";
//--></script>
<script src="https://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</div>
<div class="google-right-ad">
<div class="adsbyvli" data-ad-slot="vi_9012177"></div>
<script>(vitag.Init = window.vitag.Init || []).push(function(){viAPItag.display("vi_9012177")})</script>
</div>
<div class="space-bottom"></div>
<div class="google-right-ad">
<div class="adsbyvli" data-ad-slot="vi_9013289"></div>
<script>(vitag.Init = window.vitag.Init || []).push(function(){viAPItag.display("vi_9013289")})</script>
</div>
<div class="space-bottom" style="margin-bottom:15px;"></div>
</div>
<!-- Right Column Ends Here -->
</div>
</div>
<div class="clear"></div>
<footer id="footer">
<div class="mui--text-center">
<div class="mui--text-caption mui--text-light">
<a href="/index.htm" class="logo"><img class="img-responsive" src="/images/logo-black.png" alt="Tutorials Point" title="Tutorials Point"></a>
</div>
<ul class="mui-list--inline mui--text-body2 mui--text-light">
<li><a href="/about/index.htm"><i class="fal fa-globe"></i> About us</a></li>
<li><a href="/about/about_terms_of_use.htm"><i class="fal fa-asterisk"></i> Terms of use</a></li>
<li><a href="/about/about_privacy.htm#cookies"> <i class="fal fa-shield-check"></i> Cookies Policy</a></li>
<li><a href="/about/faq.htm"><i class="fal fa-question-circle"></i> FAQ's</a></li>
<li><a href="/about/about_helping.htm"><i class="fal fa-hands-helping"></i> Helping</a></li>
<li><a href="/about/contact_us.htm"><i class="fal fa-map-marker-alt"></i> Contact</a></li>
</ul>
<div class="mui--text-caption mui--text-light bottom-copyright-text">&copy; Copyright 2019. All Rights Reserved.</div>
</div>
<div id="privacy-banner">
  <div>
    <p>
      We use cookies to provide and improve our services. By using our site, you consent to our Cookies Policy.
      <a id="banner-accept" href="#">Accept</a>
      <a id="banner-learn" href="/about/about_cookies.htm" target="_blank">Learn more</a>
    </p>
  </div>
</div>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-232293-17"></script>
<script>
window.dataLayer = window.dataLayer || [];
function gtag(){dataLayer.push(arguments);}
gtag('js', new Date());
gtag('config', 'UA-232293-6');
</script>
</footer>
</body>
</html>
