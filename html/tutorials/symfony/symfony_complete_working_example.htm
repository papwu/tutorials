<!DOCTYPE html>
<html lang="en-US">
<head>
<title>Symfony - Working Example</title>
<meta charset="utf-8">
<meta name="description" content="Symfony - Working Example - In this chapter, we will learn how to create a complete MVC based BookStore Application in Symfony Framework. Following are the steps."/>
<meta name="keywords" content="C, C++, Python, Java, HTML, CSS, JavaScript, SQL, PHP, jQuery, XML, DOM, Bootstrap, Tutorials, Articles, Programming, training, learning, quiz, preferences, examples, code"/>
<link rel="canonical" href="https://www.tutorialspoint.com/symfony/symfony_complete_working_example.htm" />
<link rel="shortcut icon" href="/favicon.ico" type="image/x-icon" />
<meta name="viewport" content="width=device-width,initial-scale=1.0,user-scalable=yes">
<script src="/theme/js/script-min-v2.js?v=3"></script>
<link rel="stylesheet" href="/theme/css/style-min-v2.css?v=6">
<script src="//services.bilsyndication.com/adv1/?d=901" defer="" async=""></script>
<script> var vitag = vitag || {};</script>
<script> vitag.outStreamConfig = { enablePC: false, enableMobile: false };</script>  
<style>
.right-menu .mui-btn {
    background-color:#0cadd5;
}
a.demo {
    background:#0cadd5;
}
li.heading {
    background:#0cadd5;
}
.course-box{background:#0cadd5}
.home-intro-sub p{color:#0cadd5}
</style>
</head>
<body>
<header id="header">
<!-- Top sub-menu Starts Here -->
<div class="mui-appbar mui-container-fulid top-menu">
<div class="mui-container">
<div class="top-menu-item home">
<a href="https://www.tutorialspoint.com/index.htm" target="_blank" title="TutorialsPoint - Home"><i class="fal fa-home"></i> <span>Home</span></a>
</div>
<div class="top-menu-item qa">
<a href="https://www.tutorialspoint.com/about/about_careers.htm" target="_blank" title="Job @ Tutorials Point"><i class="fa fa-suitcase"></i> <span>Jobs</span></a>
</div>
<div class="top-menu-item tools">
<a href="https://www.tutorialspoint.com/online_dev_tools.htm" target="_blank" title="Tools - Online Development and Testing Tools"><i class="fal fa-cogs"></i> <span>Tools</span></a>
</div>
<div class="top-menu-item coding-ground">
<a href="https://www.tutorialspoint.com/codingground.htm" target="_blank" title="Coding Ground - Free Online IDE and Terminal"><i class="fal fa-code"></i> <span>Coding Ground </span></a> 
</div>
<div class="top-menu-item current-affairs">
<a href="https://www.tutorialspoint.com/current_affairs.htm" target="_blank" title="Daily Current Affairs"><i class="fal fa-layer-plus"></i> <span>Current Affairs</span></a>
</div>
<div class="top-menu-item upsc-notes">
<a href="https://www.tutorialspoint.com/upsc_ias_exams.htm" target="_blank" title="UPSC IAS Exams Notes - TutorialsPoint"><i class="fal fa-user-tie"></i> <span>UPSC Notes</span></a>
</div>      
<div class="top-menu-item online-tutoris">
<a href="https://www.tutorialspoint.com/tutor_connect/index.php" target="_blank" title="Top Online Tutors - Tutor Connect"><i class="fal fa-user"></i> <span>Online Tutors</span></a>
</div>
<div class="top-menu-item whiteboard">
<a href="https://www.tutorialspoint.com/whiteboard.htm" target="_blank" title="Free Online Whiteboard"><i class="fal fa-chalkboard"></i> <span>Whiteboard</span></a>
</div>
<div class="top-menu-item net-meeting">
<a href="https://www.tutorialspoint.com/netmeeting.php" target="_blank" title="A free tool for online video conferencing"><i class="fal fa-chalkboard-teacher"></i> <span>Net Meeting</span></a> 
</div>
<div class="top-menu-item articles">
<a href="https://www.tutorix.com" target="_blank" title="Tutorx - The Best Learning App" rel="nofollow"><i class="fal fa-video"></i> <span>Tutorix</span></a> 
</div>        
<div class="social-menu-item">
<a href="https://www.facebook.com/tutorialspointindia" target="_blank" rel="nofollow" data-placement="bottom" title="tutorialspoint @ Facebook"><i class="fab fa-facebook-f"></i></a> 
<a href="https://www.twitter.com/tutorialspoint" target="_blank" rel="nofollow" data-placement="bottom" title="tutorialspoint @ Twitter"><i class="fab fa-twitter"></i></a>
<a href="https://www.linkedin.com/company/tutorialspoint" target="_blank" rel="nofollow" data-placement="bottom" title="tutorialspoint @ Linkedin"><i class="fab fa-linkedin-in"></i></a>
<a href="https://www.youtube.com/channel/UCVLbzhxVTiTLiVKeGV7WEBg" target="_blank" rel="nofollow" data-placement="bottom" title="tutorialspoint YouTube"><i class="fab fa-youtube"></i></a>
</div>        
</div>
</div>
<!-- Top sub-menu Ends Here -->
<!-- Top main-menu Starts Here -->
<div class="mui-appbar mui-container-fulid mui--appbar-line-height mui--z1" id="logo-menu">
<div class="mui-container">
<div class="left-menu">
<a href="https://www.tutorialspoint.com/index.htm" title="Tutorialspoint">
<img class="tp-logo" alt="tutorialspoint" src="/symfony/images/logo.png">
</a>
<div class="mui-dropdown">
<a class="mui-btn mui-btn--primary categories" data-mui-toggle="dropdown"><i class="fa fa-th-large"></i> 
<span>Categories <span class="mui-caret"></span></span></a>            
<ul class="mui-dropdown__menu cat-menu">
<li>
<ul>
<li><a href="/academic_tutorials.htm"><i class="fa fa-caret-right"></i> Academic Tutorials</a></li>
<li><a href="/big_data_tutorials.htm"><i class="fa fa-caret-right"></i> Big Data &amp; Analytics </a></li>
<li><a href="/computer_programming_tutorials.htm"><i class="fa fa-caret-right"></i> Computer Programming </a></li>
<li><a href="/computer_science_tutorials.htm"><i class="fa fa-caret-right"></i> Computer Science </a></li>
<li><a href="/database_tutorials.htm"><i class="fa fa-caret-right"></i> Databases </a></li>
<li><a href="/devops_tutorials.htm"><i class="fa fa-caret-right"></i> DevOps </a></li>
<li><a href="/digital_marketing_tutorials.htm"><i class="fa fa-caret-right"></i> Digital Marketing </a></li>
<li><a href="/engineering_tutorials.htm"><i class="fa fa-caret-right"></i> Engineering Tutorials </a></li>
<li><a href="/upsc_ias_exams.htm"><i class="fa fa-caret-right"></i> Exams Syllabus </a></li>
<li><a href="/famous_monuments.htm"><i class="fa fa-caret-right"></i> Famous Monuments </a></li>
<li><a href="/gate_exams_tutorials.htm"><i class="fa fa-caret-right"></i> GATE Exams Tutorials</a></li>
<li><a href="/latest_technologies.htm"><i class="fa fa-caret-right"></i> Latest Technologies </a></li>
<li><a href="/machine_learning_tutorials.htm"><i class="fa fa-caret-right"></i> Machine Learning </a></li>
<li><a href="/mainframe_tutorials.htm"><i class="fa fa-caret-right"></i> Mainframe Development </a></li>
<li><a href="/management_tutorials.htm"><i class="fa fa-caret-right"></i> Management Tutorials </a></li>
<li><a href="/maths_tutorials.htm"><i class="fa fa-caret-right"></i> Mathematics Tutorials</a></li>
<li><a href="/microsoft_technologies_tutorials.htm"><i class="fa fa-caret-right"></i> Microsoft Technologies </a></li>
<li><a href="/misc_tutorials.htm"><i class="fa fa-caret-right"></i> Misc tutorials </a></li>
<li><a href="/mobile_development_tutorials.htm"><i class="fa fa-caret-right"></i> Mobile Development </a></li>
<li><a href="/java_technology_tutorials.htm"><i class="fa fa-caret-right"></i> Java Technologies </a></li>
<li><a href="/python_technologies_tutorials.htm"><i class="fa fa-caret-right"></i> Python Technologies </a></li>
<li><a href="/sap_tutorials.htm"><i class="fa fa-caret-right"></i> SAP Tutorials </a></li>
<li><a href="/scripting_lnaguage_tutorials.htm"><i class="fa fa-caret-right"></i>Programming Scripts </a></li>
<li><a href="/selected_reading.htm"><i class="fa fa-caret-right"></i> Selected Reading </a></li>
<li><a href="/software_quality_tutorials.htm"><i class="fa fa-caret-right"></i> Software Quality </a></li>
<li><a href="/soft_skill_tutorials.htm"><i class="fa fa-caret-right"></i> Soft Skills </a></li>
<li><a href="/telecom_tutorials.htm"><i class="fa fa-caret-right"></i> Telecom Tutorials </a></li>
<li><a href="/upsc_ias_exams.htm"><i class="fa fa-caret-right"></i> UPSC IAS Exams </a></li>
<li><a href="/web_development_tutorials.htm"><i class="fa fa-caret-right"></i> Web Development </a></li>
<li><a href="/sports_tutorials.htm"><i class="fa fa-caret-right"></i> Sports Tutorials </a></li>
<li><a href="/xml_technologies_tutorials.htm"><i class="fa fa-caret-right"></i> XML Technologies </a></li>
<li><a href="/multi_language_tutorials.htm"><i class="fa fa-caret-right"></i> Multi-Language Tutorials</a></li>
<li><a href="/questions_and_answers.htm"><i class="fa fa-caret-right"></i> Interview Questions</a></li>
</ul>
</li>
</ul>
<div class="clear"></div>
</div> 
</div>
<div class="right-menu">
<div class="toc-toggle">
<a href="javascript:void(0);"><i class="fa fa-bars"></i></a>
</div>
<div class="mobile-search-btn">
<a href="https://www.tutorialspoint.com/search.htm"><i class="fal fa-search"></i></a>
</div>
<div class="search-box">
<form method="get" class="" name="searchform" action="https://www.google.com/search" target="_blank" novalidate="">
<input type="hidden" name="sitesearch" value="www.tutorialspoint.com" class="user-valid valid">
<input class="header-search-box" type="text" id="search-string" name="q" placeholder="Search your favorite tutorials..." onfocus="if (this.value == 'Search your favorite tutorials...') {this.value = '';}" onblur="if (this.value == '') {this.value = 'Search your favorite tutorials...';}" autocomplete="off">
<button><i class="fal fa-search"></i></button>
</form>
</div>
<div class="menu-btn library-btn">
<a href="https://www.tutorialspoint.com/tutorialslibrary.htm"><i class="fal fa-cubes"></i> <span>Library</span></a>
</div>
<div class="menu-btn videos-btn">
<a href="https://www.tutorialspoint.com/videotutorials/index.htm"><i class="fal fa-video"></i> <span>Videos</span></a> 
</div>
<div class="menu-btn videos-btn">
<a href="https://www.tutorialspoint.com/questions/index.php"><i class="fa fa-location-arrow"></i> <span>Q/A</span></a>
</div>
<div class="menu-btn ebooks-btn">
<a href="https://store.tutorialspoint.com"><i class="fal fa-book"></i> <span>eBooks</span></a>
</div>
<div class="mui-dropdown">
<button class="mui-btn mui-btn--primary" data-mui-toggle="dropdown">
<span class="mui-caret"></span>
</button>
<ul class="mui-dropdown__menu">
<li><a href="https://www.tutorialspoint.com/tutorialslibrary.htm"><i class="fal fa-cubes"></i> <span>Library</span></a></li>
<li><a href="https://www.tutorialspoint.com/videotutorials/index.htm"><i class="fal fa-video"></i> <span>Videos</span></a></li>
<li><a href="https://store.tutorialspoint.com"><i class="fal fa-book"></i> <span>eBooks</span></a></li>
</ul>
</div>
</div>
</div>
</div>
<!-- Top main-menu Ends Here -->
</header>
<div class="mui-container-fluid content">
<div class="mui-container">
<!-- Tutorial ToC Starts Here -->
<div class="mui-col-md-3 tutorial-toc">
<div class="mini-logo">
<img src="/symfony/images/symfony-mini-logo.jpg" alt="Symfony Tutorial" />
</div>
<ul class="toc chapters">
<li class="heading">Symfony Tutorial</li>
<li><a href="/symfony/index.htm">Symfony - Home</a></li>
<li><a href="/symfony/symfony_introduction.htm">Symfony - Introduction</a></li>
<li><a href="/symfony/symfony_installation.htm">Symfony - Installation</a></li>
<li><a href="/symfony/symfony_architecture.htm">Symfony - Architecture</a></li>
<li><a href="/symfony/symfony_components.htm">Symfony - Components</a></li>
<li><a href="/symfony/symfony_service_container.htm">Symfony - Service Container</a></li>
<li><a href="/symfony/symfony_events_eventlistener.htm">Symfony - Events &amp; EventListener</a></li>
<li><a href="/symfony/symfony_expression.htm">Symfony - Expression</a></li>
<li><a href="/symfony/symfony_bundles.htm">Symfony -  Bundles</a></li>
<li><a href="/symfony/symfony_creating_simple_web_application.htm">Creating a Simple Web Application</a></li>
<li><a href="/symfony/symfony_controllers.htm">Symfony - Controllers</a></li>
<li><a href="/symfony/symfony_routing.htm">Symfony - Routing</a></li>
<li><a href="/symfony/symfony_view_engine.htm">Symfony - View Engine</a></li>
<li><a href="/symfony/symfony_doctrine_orm.htm">Symfony - Doctrine ORM</a></li>
<li><a href="/symfony/symfony_forms.htm">Symfony - Forms </a></li>
<li><a href="/symfony/symfony_validation.htm">Symfony - Validation</a></li>
<li><a href="/symfony/symfony_file_uploading.htm">Symfony - File Uploading</a></li>
<li><a href="/symfony/symfony_ajax_control.htm">Symfony - Ajax Control</a></li>
<li><a href="/symfony/symfony_cookies_session_management.htm">Cookies &amp; Session Management</a></li>
<li><a href="/symfony/symfony_internationalization.htm">Symfony - Internationalization</a></li>
<li><a href="/symfony/symfony_logging.htm">Symfony - Logging</a></li>
<li><a href="/symfony/symfony_email_management.htm">Symfony - Email Management</a></li>
<li><a href="/symfony/symfony_unit_testing.htm">Symfony - Unit Testing</a></li>
<li><a href="/symfony/symfony_advanced_concepts.htm">Symfony - Advanced Concepts</a></li>
<li><a href="/symfony/symfony_rest_edition.htm">Symfony - REST Edition</a></li>
<li><a href="/symfony/symfony_cmf_edition.htm">Symfony - CMF Edition</a></li>
<li><a href="/symfony/symfony_complete_working_example.htm">Complete Working Example</a></li>
</ul>
<ul class="toc chapters">
<li class="heading">Symfony Useful Resources</li>
<li><a href="/symfony/symfony_quick_guide.htm">Symfony - Quick Guide</a></li>
<li><a href="/symfony/symfony_useful_resources.htm">Symfony - Useful Resources</a></li>
<li><a href="/symfony/symfony_discussion.htm">Symfony - Discussion</a></li>
</ul>
<ul class="toc reading">
<li class="sreading">Selected Reading</li>
<li><a target="_top" href="/upsc_ias_exams.htm">UPSC IAS Exams Notes</a></li>
<li><a target="_top" href="/developers_best_practices/index.htm">Developer's Best Practices</a></li>
<li><a target="_top" href="/questions_and_answers.htm">Questions and Answers</a></li>
<li><a target="_top" href="/effective_resume_writing.htm">Effective Resume Writing</a></li>
<li><a target="_top" href="/hr_interview_questions/index.htm">HR Interview Questions</a></li>
<li><a target="_top" href="/computer_glossary.htm">Computer Glossary</a></li>
<li><a target="_top" href="/computer_whoiswho.htm">Who is Who</a></li>
</ul>
</div>
<!-- Tutorial ToC Ends Here -->
<!-- Tutorial Content Starts Here -->
<div class="mui-col-md-6 tutorial-content">
<h1>Symfony - Working Example</h1>
<hr />
<div class="top-ad-heading">Advertisements</div>
<div style="text-align: center;">
<script><!--
google_ad_client = "pub-7133395778201029";
var width = document.getElementsByClassName("tutorial-content")[0].clientWidth - 40;
google_ad_width = width;
google_ad_height = 150;
google_ad_format = width + "x150_as";
google_ad_type = "image";
google_ad_channel = "";
//--></script>
<script src="https://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</div>
<div class="mui-container-fluid button-borders">
<div class="pre-btn">
<a href="/symfony/symfony_cmf_edition.htm"><i class="fal fa-chevron-circle-left"></i> Previous Page</a>
</div>
<div class="nxt-btn">
<a href="/symfony/symfony_quick_guide.htm">Next Page <i class="fal fa-chevron-circle-right"></i>&nbsp;</a>
</div>
</div>
<div class="clearer"></div>
<p>In this chapter, we will learn how to create a complete MVC based <b>BookStore Application</b> in Symfony Framework. Following are the steps.</p>
<h2>Step 1: Create a Project</h2>
<p>Let’s create a new project named “BookStore” in Symfony using the following command.</p>
<pre class="result notranslate">
symfony new BookStore
</pre>
<h2>Step 2: Create a Controller and Route</h2>
<p>Create a BooksController in “src/AppBundle/Controller” directory. It is defined as follows.</p>
<h3>BooksController.php</h3>
<pre class="prettyprint notranslate">
&lt;?php  
namespace AppBundle\Controller;  

use Sensio\Bundle\FrameworkExtraBundle\Configuration\Route; 
use Symfony\Bundle\FrameworkBundle\Controller\Controller; 
use Symfony\Component\HttpFoundation\Response;  

class BooksController { 
   /** 
      * @Route("/books/author") 
   */ 
   public function authorAction() { 
      return new Response('Book store application!'); 
   } 
}
</pre>
<p>Now, we have created a BooksController, next create a view to render the action.</p>
<h2>Step 3: Create a View</h2>
<p>Let’s create a new folder named “Books” in “app/Resources/views/” directory. Inside the folder, create a file “author.html.twig” and add the following changes.</p>
<h3>author.html.twig</h3>
<pre class="result notranslate">
&lt;h3&gt; Simple book store application&lt;/h3&gt; 
</pre>
<p>Now, render the view in BooksController class. It is defined as follows.</p>
<h3>BooksController.php</h3>
<pre class="prettyprint notranslate">
&lt;?php  
namespace AppBundle\Controller;  

use Sensio\Bundle\FrameworkExtraBundle\Configuration\Route; 
use Symfony\Bundle\FrameworkBundle\Controller\Controller; 
use Symfony\Component\HttpFoundation\Response;  

class BooksController extends Controller { 
   /** 
      * @Route("/books/author") 
   */ 
   public function authorAction() { 
      return $this-&gt;render('books/author.html.twig'); 
   } 
}
</pre>
<p>As of now, we have created a basic BooksController and the result is rendered. You can check the result in the browser using the URL “http://localhost:8000/books/author”.</p>
<h2>Step 4: Database Configuration</h2>
<p>Configure the database in “app/config/parameters.yml” file.</p>
<p>Open the file and add the following changes.</p>
<h3>parameter.yml</h3>
<pre class="result notranslate">
# This file is auto-generated during the composer install  
parameters: 
   database_driver: pdo_mysql 
   database_host: localhost 
   database_port: 3306 
   database_name: booksdb 
   database_user: &lt;database_username&gt; 
   database_password: &lt;database_password&gt; 
   mailer_transport: smtp 
   mailer_host: 127.0.0.1 
   mailer_user: null 
   mailer_password: null 
   secret: 0ad4b6d0676f446900a4cb11d96cf0502029620d 
   
   doctrine: 
      dbal: 
      driver:   pdo_mysql 
      host:     '%database_host%' 
      dbname:   '%database_name%' 
      user:     '%database_user%' 
      password: '%database_password%' 
      charset: utf8mb4 
</pre>
<p>Now, Doctrine can connect to your database “booksdb”.</p>
<h2>Step 5: Create a Database</h2>
<p>Issue the following command to generate “booksdb” database. This step is used to bind the database in Doctrine.</p>
<pre class="result notranslate">
php bin/console doctrine:database:create
</pre>
<p>After executing the command, it automatically generates an empty “booksdb” database. You can see the following response on your screen.</p>
<p>It will produce the following result &minus;</p>
<pre class="result notranslate">
Created database `booksdb` for connection named default 
</pre>
<h2>Step 6: Mapping Information</h2>
<p>Create a Book entity class inside the Entity directory which is located at “src/AppBundle/Entity”.</p>
<p>You can directly pass Book class using annotations. It is defined as follows.</p>
<h3>Book.php</h3>
<p>Add the following code in the file.</p>
<pre class="prettyprint notranslate">
&lt;?php 
namespace AppBundle\Entity; 
use Doctrine\ORM\Mapping as ORM;  

/** 
   * @ORM\Entity 
   * @ORM\Table(name = "Books") 
*/  
class Book { 
   /** 
      * @ORM\Column(type = "integer") 
      * @ORM\Id 
      * @ORM\GeneratedValue(strategy = "AUTO") 
   */ 
   private $id;  
   
   /** 
      * @ORM\Column(type = "string", length = 50) 
   */ 
   private $name;  
    
   /** 
      * @ORM\Column(type = "string", length = 50) 
   */ 
      
   private $author;
   /** 
      * @ORM\Column(type = "decimal", scale = 2) 
   */ 
   private $price; 
}  
</pre>
<p>Here, the table name is optional.</p>
<p>If the table name is not specified, then it will be determined automatically based on the name of the entity class.</p>
<h2>Step 7: Bind an Entity</h2>
<p>Doctrine creates simple entity classes for you. It helps you build any entity.</p>
<p>Issue the following command to generate an entity.</p>
<pre class="result notranslate">
php bin/console doctrine:generate:entities AppBundle/Entity/Book
</pre>
<p>Then you will see the following result and the entity will be updated.</p>
<pre class="result notranslate">
Generating entity "AppBundle\Entity\Book” 
   &gt; backing up Book.php to Book.php~ 
   &gt; generating AppBundle\Entity\Book 
</pre>
<h3>Book.php</h3>
<pre class="prettyprint notranslate">
&lt;?php  
namespace AppBundle\Entity;  

use Doctrine\ORM\Mapping as ORM;  
/** 
   * @ORM\Entity 
   * @ORM\Table(name = "Books") 
*/ 
class Book { 
   /** 
      * @ORM\Column(type = "integer") 
      * @ORM\Id
      * @ORM\GeneratedValue(strategy = "AUTO") 
   */ 
   private $id;  
    
   /** 
      * @ORM\Column(type = "string", length = 50) 
   */ 
   private $name;  
    
   /** 
      * @ORM\Column(type = "string", length = 50) 
   */ 
   private $author;  
    
   /** 
      * @ORM\Column(type = "decimal", scale = 2) 
   */ 
   private $price;  
    
   /** 
      * Get id 
      * 
      * @return integer 
   */ 
   public function getId() { 
      return $this-&gt;id; 
   }  
   
   /** 
      * Set name 
      * 
      * @param string $name 
      * 
      * @return Book 
   */
   public function setName($name) { 
      $this-&gt;name = $name; 
      return $this; 
   }  
    
   /** 
      * Get name 
      * 
      * @return string 
   */ 
   public function getName() { 
      return $this-&gt;name; 
   }  
    
   /** 
      * Set author 
      * 
      * @param string $author 
      * 
      * @return Book 
   */ 
   public function setAuthor($author) { 
      $this-&gt;author = $author; 
      return $this; 
   }  
    
   /** 
      * Get author 
      * 
      * @return string 
   */ 
   public function getAuthor() {
      return $this-&gt;author; 
   }  
   
   /** 
      * Set price 
      * 
      * @param string $price 
      * 
      * @return Book 
   */ 
   public function setPrice($price) { 
      $this-&gt;price = $price; 
      return $this; 
   }  
    
   /** 
      * Get price 
      * 
      * @return string 
   */ 
   public function getPrice() { 
      return $this-&gt;price; 
   } 
}     
</pre>
<h2>Step 8: Mapping Validation</h2>
<p>After creating entities, you should validate the mappings using the following command.</p>
<pre class="prettyprint notranslate">
php bin/console doctrine:schema:validate 
</pre>
<p>It will produce the following result &minus;</p>
<pre class="result notranslate">
[Mapping]  OK - The mapping files are correct
[Database] FAIL - The database schema is not in sync with the current mapping file.
</pre>
<p>Since we have not created the Books table, the entity is out of sync. Let us create the Books table using Symfony command in the next step.</p>
<h2>Step 9: Creating Schema</h2>
<p>Doctrine can automatically create all the database tables needed for Book entity. This can be done using the following command.</p>
<pre class="result notranslate">
php bin/console doctrine:schema:update --force
</pre>
<p>After executing the command, you will see the following response.</p>
<pre class="result notranslate">
Updating database schema... 
Database schema updated successfully! "1" query was executed 
</pre>
<p>Now, again validate the schema using the following command.</p>
<pre class="result notranslate">
php bin/console doctrine:schema:validate 
</pre>
<p>It will produce the following result &minus;</p>
<pre class="result notranslate">
[Mapping]  OK - The mapping files are correct. 
[Database] OK - The database schema is in sync with the mapping files. 
</pre>
<h2>Step 10: Getter and Setter</h2>
<p>As seen in the Bind an Entity section, the following command generates all the getters and setters for the Book class.</p>
<pre class="result notranslate">
$ php bin/console doctrine:generate:entities AppBundle/Entity/Book
</pre>
<h2>Step 11: Fetching Objects from the Database</h2>
<p>Create a method in BooksController that will display the books’ details.</p>
<h3>BooksController.php</h3>
<pre class="prettyprint notranslate">
/** 
   * @Route("/books/display", name="app_book_display") 
*/ 
public function displayAction() { 
   $bk = $this-&gt;getDoctrine()
   -&gt;getRepository('AppBundle:Book') 
   -&gt;findAll(); 
   return $this-&gt;render('books/display.html.twig', array('data' =&gt; $bk)); 
}
</pre>
<h2>Step 12: Create a View</h2>
<p>Let’s create a view that points to display action. Move to the views directory and create file “display.html.twig”. Add the following changes in the file.</p>
<h3>display.html.twig</h3>
<pre class="prettyprint notranslate">
{% extends 'base.html.twig' %} 
{% block stylesheets %} 
   &lt;style&gt; 
      .table { border-collapse: collapse; } 
      .table th, td { 
         border-bottom: 1px solid #ddd; 
         width: 250px; 
         text-align: left; 
         align: left; 
      } 
   &lt;/style&gt; 
{% endblock %}  
{% block body %} 
   &lt;h2&gt;Books database application!&lt;/h2&gt;  
   &lt;table class = "table"&gt;  
      &lt;tr&gt;  
         &lt;th&gt;Name&lt;/th&gt;  
         &lt;th&gt;Author&lt;/th&gt;  
         &lt;th&gt;Price&lt;/th&gt;  
      &lt;/tr&gt;  
      {% for x in data %} 
      &lt;tr&gt;  
         &lt;td&gt;{{ x.Name }}&lt;/td&gt;   
         &lt;td&gt;{{ x.Author }}&lt;/td&gt;
         &lt;td&gt;{{ x.Price }}&lt;/td&gt;  
      &lt;/tr&gt;  
      {% endfor %} 
   &lt;/table&gt; 
{% endblock %}         
</pre>
<p>You can obtain the result by requesting the URL “http://localhost:8000/books/display” in the browser.</p>
<h3>Result</h3>
<img src="/symfony/images/books_database_application.jpg" alt="Books Database Application" />
<h2>Step 13: Add a Book Form</h2>
<p>Let's create a functionality to add a book into the system. Create a new page, newAction method in the BooksController as follows.</p>
<pre class="prettyprint notranslate">
// use section 
use Symfony\Component\HttpFoundation\Request; 
use Symfony\Component\Form\Extension\Core\Type\TextType; 
use Symfony\Component\Form\Extension\Core\Type\SubmitType;  

// methods section 
/** 
   * @Route("/books/new") 
*/ 

public function newAction(Request $request) { 
   $stud = new StudentForm();
      $form = $this-&gt;createFormBuilder($stud) 
         -&gt;add('name', TextType::class) 
         -&gt;add('author', TextType::class) 
         -&gt;add('price', TextType::class) 
         -&gt;add('save', SubmitType::class, array('label' =&gt; 'Submit')) 
         -&gt;getForm();  
   return $this-&gt;render('books/new.html.twig', array('form' =&gt; $form-&gt;createView(),)); 
} 
</pre>
<h2>Step 14: Create a View For Book Form</h2>
<p>Let’s create a view that points to a new action. Move to the views directory and create a file “new.html.twig”. Add the following changes in the file.</p>
<pre class="prettyprint notranslate">
{% extends 'base.html.twig' %} 
{% block stylesheets %} 
   &lt;style&gt; 
      #simpleform { 
         width:600px; 
         border:2px solid grey; 
         padding:14px; 
      } 
      #simpleform label { 
         font-size:14px; 
         float:left; 
         width:300px; 
         text-align:right; 
         display:block; 
      } 
      #simpleform span { 
         font-size:11px; 
         color:grey;
         width:100px; 
         text-align:right; 
         display:block; 
      }  
      #simpleform input { 
         border:1px solid grey; 
         font-family:verdana; 
         font-size:14px; 
         color:light blue; 
         height:24px; 
         width:250px; 
         margin: 0 0 10px 10px; 
      }  
      #simpleform textarea { 
         border:1px solid grey; 
         font-family:verdana; 
         font-size:14px; 
         color:light blue; 
         height:120px; 
         width:250px; 
         margin: 0 0 20px 10px; 
      }  
      #simpleform select { 
         margin: 0 0 20px 10px; 
      } 
      #simpleform button { 
         clear:both; 
         margin-left:250px; 
         background: grey;
         color:#FFFFFF; 
         border:solid 1px #666666; 
         font-size:16px; 
      } 
   &lt;/style&gt; 
{% endblock %}  
{% block body %} 
   &lt;h3&gt;Book details:&lt;/h3&gt; 
   &lt;div id = "simpleform"&gt; 
      {{ form_start(form) }} 
      {{ form_widget(form) }} 
      {{ form_end(form) }} 
   &lt;/div&gt; 
{% endblock %}    
</pre>
<p>It will produce the following screen as output &minus;</p>
<img src="/symfony/images/book_details.jpg" alt="Book Details" />
<h2>Step 15: Collect Book Information and Store It</h2>
<p>Let's change the newAction method and include the code to handle form submission. Also, store the book information into the database.</p>
<pre class="prettyprint notranslate">
/**
   * @Route("/books/new", name="app_book_new") 
*/ 
public function newAction(Request $request) { 
   $book = new Book(); 
   $form = $this-&gt;createFormBuilder($book) 
      -&gt;add('name', TextType::class) 
      -&gt;add('author', TextType::class) 
      -&gt;add('price', TextType::class) 
      -&gt;add('save', SubmitType::class, array('label' =&gt; 'Submit')) 
      -&gt;getForm();  
   
   $form-&gt;handleRequest($request);  
   
   if ($form-&gt;isSubmitted() &amp;&amp; $form-&gt;isValid()) { 
      $book = $form-&gt;getData(); 
      $doct = $this-&gt;getDoctrine()-&gt;getManager();  
      
      // tells Doctrine you want to save the Product 
      $doct-&gt;persist($book);  
      
      //executes the queries (i.e. the INSERT query) 
      $doct-&gt;flush();  
      
      return $this-&gt;redirectToRoute('app_book_display'); 
   } else { 
      return $this-&gt;render('books/new.html.twig', array( 
         'form' =&gt; $form-&gt;createView(), 
      )); 
   } 
}        
</pre>
<p>Once the book is stored into the database, redirect to the book display page.</p>
<h2>Step 16: Updating the Book</h2>
<p>To update the book, create an action, updateAction, and add the following changes.</p>
<pre class="prettyprint notranslate">
/** 
   * @Route("/books/update/{id}", name = "app_book_update" ) 
*/ 
public function updateAction($id, Request $request) { 
   $doct = $this-&gt;getDoctrine()-&gt;getManager(); 
   $bk = $doct-&gt;getRepository('AppBundle:Book')-&gt;find($id);  
    
   if (!$bk) { 
      throw $this-&gt;createNotFoundException( 
         'No book found for id '.$id 
      ); 
   }  
   $form = $this-&gt;createFormBuilder($bk) 
      -&gt;add('name', TextType::class) 
      -&gt;add('author', TextType::class) 
      -&gt;add('price', TextType::class) 
      -&gt;add('save', SubmitType::class, array('label' =&gt; 'Submit')) 
      -&gt;getForm();  
   
   $form-&gt;handleRequest($request);  
   
   if ($form-&gt;isSubmitted() &amp;&amp; $form-&gt;isValid()) { 
      $book = $form-&gt;getData(); 
      $doct = $this-&gt;getDoctrine()-&gt;getManager();  
      
      // tells Doctrine you want to save the Product 
      $doct-&gt;persist($book);  
        
      //executes the queries (i.e. the INSERT query) 
      $doct-&gt;flush(); 
      return $this-&gt;redirectToRoute('app_book_display'); 
   } else {  
      return $this-&gt;render('books/new.html.twig', array(
         'form' =&gt; $form-&gt;createView(), 
      )); 
   } 
}        
</pre>
<p>Here, we are processing two functionalities. If the request only contains id, then we fetch it from the database and show it in the book form. And, if the request contains full book information, then we update the details in the database and redirect to the book display page.</p>
<h2>Step 17: Deleting an Object</h2>
<p>Deleting an object requires a call to the remove() method of the entity (doctrine) manager.</p>
<p>This can be done using the following code.</p>
<pre class="prettyprint notranslate">
/** 
   * @Route("/books/delete/{id}", name="app_book_delete") 
*/ 
public function deleteAction($id) { 
   $doct = $this-&gt;getDoctrine()-&gt;getManager(); 
   $bk = $doct-&gt;getRepository('AppBundle:Book')-&gt;find($id); 
   
   if (!$bk) { 
      throw $this-&gt;createNotFoundException('No book found for id '.$id); 
   } 
   $doct-&gt;remove($bk); 
   $doct-&gt;flush(); 
   return $this-&gt;redirectToRoute('app_book_display'); 
} 
</pre>
<p>Here, we deleted the book and redirected to book display page.</p>
<h2>Step 18: Include Add / Edit / Delete Functionality in Display Page</h2>
<p>Now, update the body block in display view and include include add / edit / delete links as follows.</p>
<pre class="prettyprint notranslate">
{% block body %} 
   &lt;h2&gt;Books database application!&lt;/h2&gt; 
   &lt;div&gt; 
      &lt;a href = "{{ path('app_book_new') }}"&gt;Add&lt;/a&gt; 
   &lt;/div&gt; 
   &lt;table class = "table"&gt;  
      &lt;tr&gt;  
         &lt;th&gt;Name&lt;/th&gt;  
         &lt;th&gt;Author&lt;/th&gt;  
         &lt;th&gt;Price&lt;/th&gt; 
         &lt;th&gt;&lt;/th&gt; 
         &lt;th&gt;&lt;/th&gt; 
      &lt;/tr&gt;  
      {% for x in data %} 
      &lt;tr&gt;  
         &lt;td&gt;{{ x.Name }}&lt;/td&gt;   
         &lt;td&gt;{{ x.Author }}&lt;/td&gt;   
         &lt;td&gt;{{ x.Price }}&lt;/td&gt;   
         &lt;td&gt;&lt;a href = "{{ path('app_book_update', { 'id' : x.Id }) }}"&gt;Edit&lt;/a&gt;&lt;/td&gt;
         &lt;td&gt;&lt;a href = "{{ path('app_book_delete', { 'id' : x.Id }) }}"&gt;Delete&lt;/a&gt;&lt;/td&gt;
      &lt;/tr&gt;  
      {% endfor %} 
   &lt;/table&gt;  
{% endblock %} 
</pre>
<p>It will produce the following screen as output &minus;</p>
<img src="/symfony/images/books_database_application_add.jpg" alt="Books Database Application" />
<p>Symfony comprises of a set of PHP components, an application framework, a community and a philosophy. Symfony is extremely flexible and capable of meeting all the requirements of advanced users, professionals, and an ideal choice for all the beginners with PHP.</p>
<div class="mui-container-fluid button-borders show">
<div class="pre-btn">
<a href="/symfony/symfony_cmf_edition.htm"><i class="fal fa-chevron-circle-left"></i> Previous Page</a>
</div>
<div class="nxt-btn">
<a href="/symfony/symfony_quick_guide.htm">Next Page <i class="fal fa-chevron-circle-right"></i>&nbsp;</a>
</div>
</div>
<div class="google-bottom-ads">
<div>Advertisements</div>
<script><!--
var width = 580;
var height = 400;
var format = "580x400_as";
if( window.innerWidth < 468 ){
   width = 300;
   height = 250;
   format = "300x250_as";
}
google_ad_client = "pub-7133395778201029";
google_ad_width = width;
google_ad_height = height;
google_ad_format = format;
google_ad_type = "image";
google_ad_channel ="";
//--></script>
<script src="https://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
<div class="space-bottom"></div>
</div>
</div>
<!-- Tutorial Content Ends Here -->
<!-- Right Column Starts Here -->
<div class="mui-col-md-2 google-right-ads">
<div class="space-top"></div>
<div class="google-right-ad" style="margin: 0px auto !important;margin-top:5px;">
<script><!--
google_ad_client = "pub-2537027957187252";
google_ad_width = 300;
google_ad_height = 250;
google_ad_format = "300x250_as";
google_ad_type = "image";
google_ad_channel ="";
//--></script>
<script src="https://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</div>
<div class="google-right-ad">
<div class="adsbyvli" data-ad-slot="vi_9012177"></div>
<script>(vitag.Init = window.vitag.Init || []).push(function(){viAPItag.display("vi_9012177")})</script>
</div>
<div class="space-bottom"></div>
<div class="google-right-ad">
<div class="adsbyvli" data-ad-slot="vi_9013289"></div>
<script>(vitag.Init = window.vitag.Init || []).push(function(){viAPItag.display("vi_9013289")})</script>
</div>
<div class="space-bottom" style="margin-bottom:15px;"></div>
</div>
<!-- Right Column Ends Here -->
</div>
</div>
<div class="clear"></div>
<footer id="footer">
<div class="mui--text-center">
<div class="mui--text-caption mui--text-light">
<a href="/index.htm" class="logo"><img class="img-responsive" src="/images/logo-black.png" alt="Tutorials Point" title="Tutorials Point"></a>
</div>
<ul class="mui-list--inline mui--text-body2 mui--text-light">
<li><a href="/about/index.htm"><i class="fal fa-globe"></i> About us</a></li>
<li><a href="/about/about_terms_of_use.htm"><i class="fal fa-asterisk"></i> Terms of use</a></li>
<li><a href="/about/about_privacy.htm#cookies"> <i class="fal fa-shield-check"></i> Cookies Policy</a></li>
<li><a href="/about/faq.htm"><i class="fal fa-question-circle"></i> FAQ's</a></li>
<li><a href="/about/about_helping.htm"><i class="fal fa-hands-helping"></i> Helping</a></li>
<li><a href="/about/contact_us.htm"><i class="fal fa-map-marker-alt"></i> Contact</a></li>
</ul>
<div class="mui--text-caption mui--text-light bottom-copyright-text">&copy; Copyright 2019. All Rights Reserved.</div>
</div>
<div id="privacy-banner">
  <div>
    <p>
      We use cookies to provide and improve our services. By using our site, you consent to our Cookies Policy.
      <a id="banner-accept" href="#">Accept</a>
      <a id="banner-learn" href="/about/about_cookies.htm" target="_blank">Learn more</a>
    </p>
  </div>
</div>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-232293-17"></script>
<script>
window.dataLayer = window.dataLayer || [];
function gtag(){dataLayer.push(arguments);}
gtag('js', new Date());
gtag('config', 'UA-232293-6');
</script>
</footer>
</body>
</html>
