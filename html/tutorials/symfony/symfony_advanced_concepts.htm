<!DOCTYPE html>
<html lang="en-US">
<head>
<title>Symfony - Advanced Concepts</title>
<meta charset="utf-8">
<meta name="description" content="Symfony - Advanced Concepts - In this chapter, we will learn about some advanced concepts in Symfony framework."/>
<meta name="keywords" content="C, C++, Python, Java, HTML, CSS, JavaScript, SQL, PHP, jQuery, XML, DOM, Bootstrap, Tutorials, Articles, Programming, training, learning, quiz, preferences, examples, code"/>
<link rel="canonical" href="https://www.tutorialspoint.com/symfony/symfony_advanced_concepts.htm" />
<link rel="shortcut icon" href="/favicon.ico" type="image/x-icon" />
<meta name="viewport" content="width=device-width,initial-scale=1.0,user-scalable=yes">
<script src="/theme/js/script-min-v2.js?v=3"></script>
<link rel="stylesheet" href="/theme/css/style-min-v2.css?v=6">
<script src="//services.bilsyndication.com/adv1/?d=901" defer="" async=""></script>
<script> var vitag = vitag || {};</script>
<script> vitag.outStreamConfig = { enablePC: false, enableMobile: false };</script>  
<style>
.right-menu .mui-btn {
    background-color:#0cadd5;
}
a.demo {
    background:#0cadd5;
}
li.heading {
    background:#0cadd5;
}
.course-box{background:#0cadd5}
.home-intro-sub p{color:#0cadd5}
</style>
</head>
<body>
<header id="header">
<!-- Top sub-menu Starts Here -->
<div class="mui-appbar mui-container-fulid top-menu">
<div class="mui-container">
<div class="top-menu-item home">
<a href="https://www.tutorialspoint.com/index.htm" target="_blank" title="TutorialsPoint - Home"><i class="fal fa-home"></i> <span>Home</span></a>
</div>
<div class="top-menu-item qa">
<a href="https://www.tutorialspoint.com/about/about_careers.htm" target="_blank" title="Job @ Tutorials Point"><i class="fa fa-suitcase"></i> <span>Jobs</span></a>
</div>
<div class="top-menu-item tools">
<a href="https://www.tutorialspoint.com/online_dev_tools.htm" target="_blank" title="Tools - Online Development and Testing Tools"><i class="fal fa-cogs"></i> <span>Tools</span></a>
</div>
<div class="top-menu-item coding-ground">
<a href="https://www.tutorialspoint.com/codingground.htm" target="_blank" title="Coding Ground - Free Online IDE and Terminal"><i class="fal fa-code"></i> <span>Coding Ground </span></a> 
</div>
<div class="top-menu-item current-affairs">
<a href="https://www.tutorialspoint.com/current_affairs.htm" target="_blank" title="Daily Current Affairs"><i class="fal fa-layer-plus"></i> <span>Current Affairs</span></a>
</div>
<div class="top-menu-item upsc-notes">
<a href="https://www.tutorialspoint.com/upsc_ias_exams.htm" target="_blank" title="UPSC IAS Exams Notes - TutorialsPoint"><i class="fal fa-user-tie"></i> <span>UPSC Notes</span></a>
</div>      
<div class="top-menu-item online-tutoris">
<a href="https://www.tutorialspoint.com/tutor_connect/index.php" target="_blank" title="Top Online Tutors - Tutor Connect"><i class="fal fa-user"></i> <span>Online Tutors</span></a>
</div>
<div class="top-menu-item whiteboard">
<a href="https://www.tutorialspoint.com/whiteboard.htm" target="_blank" title="Free Online Whiteboard"><i class="fal fa-chalkboard"></i> <span>Whiteboard</span></a>
</div>
<div class="top-menu-item net-meeting">
<a href="https://www.tutorialspoint.com/netmeeting.php" target="_blank" title="A free tool for online video conferencing"><i class="fal fa-chalkboard-teacher"></i> <span>Net Meeting</span></a> 
</div>
<div class="top-menu-item articles">
<a href="https://www.tutorix.com" target="_blank" title="Tutorx - The Best Learning App" rel="nofollow"><i class="fal fa-video"></i> <span>Tutorix</span></a> 
</div>        
<div class="social-menu-item">
<a href="https://www.facebook.com/tutorialspointindia" target="_blank" rel="nofollow" data-placement="bottom" title="tutorialspoint @ Facebook"><i class="fab fa-facebook-f"></i></a> 
<a href="https://www.twitter.com/tutorialspoint" target="_blank" rel="nofollow" data-placement="bottom" title="tutorialspoint @ Twitter"><i class="fab fa-twitter"></i></a>
<a href="https://www.linkedin.com/company/tutorialspoint" target="_blank" rel="nofollow" data-placement="bottom" title="tutorialspoint @ Linkedin"><i class="fab fa-linkedin-in"></i></a>
<a href="https://www.youtube.com/channel/UCVLbzhxVTiTLiVKeGV7WEBg" target="_blank" rel="nofollow" data-placement="bottom" title="tutorialspoint YouTube"><i class="fab fa-youtube"></i></a>
</div>        
</div>
</div>
<!-- Top sub-menu Ends Here -->
<!-- Top main-menu Starts Here -->
<div class="mui-appbar mui-container-fulid mui--appbar-line-height mui--z1" id="logo-menu">
<div class="mui-container">
<div class="left-menu">
<a href="https://www.tutorialspoint.com/index.htm" title="Tutorialspoint">
<img class="tp-logo" alt="tutorialspoint" src="/symfony/images/logo.png">
</a>
<div class="mui-dropdown">
<a class="mui-btn mui-btn--primary categories" data-mui-toggle="dropdown"><i class="fa fa-th-large"></i> 
<span>Categories <span class="mui-caret"></span></span></a>            
<ul class="mui-dropdown__menu cat-menu">
<li>
<ul>
<li><a href="/academic_tutorials.htm"><i class="fa fa-caret-right"></i> Academic Tutorials</a></li>
<li><a href="/big_data_tutorials.htm"><i class="fa fa-caret-right"></i> Big Data &amp; Analytics </a></li>
<li><a href="/computer_programming_tutorials.htm"><i class="fa fa-caret-right"></i> Computer Programming </a></li>
<li><a href="/computer_science_tutorials.htm"><i class="fa fa-caret-right"></i> Computer Science </a></li>
<li><a href="/database_tutorials.htm"><i class="fa fa-caret-right"></i> Databases </a></li>
<li><a href="/devops_tutorials.htm"><i class="fa fa-caret-right"></i> DevOps </a></li>
<li><a href="/digital_marketing_tutorials.htm"><i class="fa fa-caret-right"></i> Digital Marketing </a></li>
<li><a href="/engineering_tutorials.htm"><i class="fa fa-caret-right"></i> Engineering Tutorials </a></li>
<li><a href="/upsc_ias_exams.htm"><i class="fa fa-caret-right"></i> Exams Syllabus </a></li>
<li><a href="/famous_monuments.htm"><i class="fa fa-caret-right"></i> Famous Monuments </a></li>
<li><a href="/gate_exams_tutorials.htm"><i class="fa fa-caret-right"></i> GATE Exams Tutorials</a></li>
<li><a href="/latest_technologies.htm"><i class="fa fa-caret-right"></i> Latest Technologies </a></li>
<li><a href="/machine_learning_tutorials.htm"><i class="fa fa-caret-right"></i> Machine Learning </a></li>
<li><a href="/mainframe_tutorials.htm"><i class="fa fa-caret-right"></i> Mainframe Development </a></li>
<li><a href="/management_tutorials.htm"><i class="fa fa-caret-right"></i> Management Tutorials </a></li>
<li><a href="/maths_tutorials.htm"><i class="fa fa-caret-right"></i> Mathematics Tutorials</a></li>
<li><a href="/microsoft_technologies_tutorials.htm"><i class="fa fa-caret-right"></i> Microsoft Technologies </a></li>
<li><a href="/misc_tutorials.htm"><i class="fa fa-caret-right"></i> Misc tutorials </a></li>
<li><a href="/mobile_development_tutorials.htm"><i class="fa fa-caret-right"></i> Mobile Development </a></li>
<li><a href="/java_technology_tutorials.htm"><i class="fa fa-caret-right"></i> Java Technologies </a></li>
<li><a href="/python_technologies_tutorials.htm"><i class="fa fa-caret-right"></i> Python Technologies </a></li>
<li><a href="/sap_tutorials.htm"><i class="fa fa-caret-right"></i> SAP Tutorials </a></li>
<li><a href="/scripting_lnaguage_tutorials.htm"><i class="fa fa-caret-right"></i>Programming Scripts </a></li>
<li><a href="/selected_reading.htm"><i class="fa fa-caret-right"></i> Selected Reading </a></li>
<li><a href="/software_quality_tutorials.htm"><i class="fa fa-caret-right"></i> Software Quality </a></li>
<li><a href="/soft_skill_tutorials.htm"><i class="fa fa-caret-right"></i> Soft Skills </a></li>
<li><a href="/telecom_tutorials.htm"><i class="fa fa-caret-right"></i> Telecom Tutorials </a></li>
<li><a href="/upsc_ias_exams.htm"><i class="fa fa-caret-right"></i> UPSC IAS Exams </a></li>
<li><a href="/web_development_tutorials.htm"><i class="fa fa-caret-right"></i> Web Development </a></li>
<li><a href="/sports_tutorials.htm"><i class="fa fa-caret-right"></i> Sports Tutorials </a></li>
<li><a href="/xml_technologies_tutorials.htm"><i class="fa fa-caret-right"></i> XML Technologies </a></li>
<li><a href="/multi_language_tutorials.htm"><i class="fa fa-caret-right"></i> Multi-Language Tutorials</a></li>
<li><a href="/questions_and_answers.htm"><i class="fa fa-caret-right"></i> Interview Questions</a></li>
</ul>
</li>
</ul>
<div class="clear"></div>
</div> 
</div>
<div class="right-menu">
<div class="toc-toggle">
<a href="javascript:void(0);"><i class="fa fa-bars"></i></a>
</div>
<div class="mobile-search-btn">
<a href="https://www.tutorialspoint.com/search.htm"><i class="fal fa-search"></i></a>
</div>
<div class="search-box">
<form method="get" class="" name="searchform" action="https://www.google.com/search" target="_blank" novalidate="">
<input type="hidden" name="sitesearch" value="www.tutorialspoint.com" class="user-valid valid">
<input class="header-search-box" type="text" id="search-string" name="q" placeholder="Search your favorite tutorials..." onfocus="if (this.value == 'Search your favorite tutorials...') {this.value = '';}" onblur="if (this.value == '') {this.value = 'Search your favorite tutorials...';}" autocomplete="off">
<button><i class="fal fa-search"></i></button>
</form>
</div>
<div class="menu-btn library-btn">
<a href="https://www.tutorialspoint.com/tutorialslibrary.htm"><i class="fal fa-cubes"></i> <span>Library</span></a>
</div>
<div class="menu-btn videos-btn">
<a href="https://www.tutorialspoint.com/videotutorials/index.htm"><i class="fal fa-video"></i> <span>Videos</span></a> 
</div>
<div class="menu-btn videos-btn">
<a href="https://www.tutorialspoint.com/questions/index.php"><i class="fa fa-location-arrow"></i> <span>Q/A</span></a>
</div>
<div class="menu-btn ebooks-btn">
<a href="https://store.tutorialspoint.com"><i class="fal fa-book"></i> <span>eBooks</span></a>
</div>
<div class="mui-dropdown">
<button class="mui-btn mui-btn--primary" data-mui-toggle="dropdown">
<span class="mui-caret"></span>
</button>
<ul class="mui-dropdown__menu">
<li><a href="https://www.tutorialspoint.com/tutorialslibrary.htm"><i class="fal fa-cubes"></i> <span>Library</span></a></li>
<li><a href="https://www.tutorialspoint.com/videotutorials/index.htm"><i class="fal fa-video"></i> <span>Videos</span></a></li>
<li><a href="https://store.tutorialspoint.com"><i class="fal fa-book"></i> <span>eBooks</span></a></li>
</ul>
</div>
</div>
</div>
</div>
<!-- Top main-menu Ends Here -->
</header>
<div class="mui-container-fluid content">
<div class="mui-container">
<!-- Tutorial ToC Starts Here -->
<div class="mui-col-md-3 tutorial-toc">
<div class="mini-logo">
<img src="/symfony/images/symfony-mini-logo.jpg" alt="Symfony Tutorial" />
</div>
<ul class="toc chapters">
<li class="heading">Symfony Tutorial</li>
<li><a href="/symfony/index.htm">Symfony - Home</a></li>
<li><a href="/symfony/symfony_introduction.htm">Symfony - Introduction</a></li>
<li><a href="/symfony/symfony_installation.htm">Symfony - Installation</a></li>
<li><a href="/symfony/symfony_architecture.htm">Symfony - Architecture</a></li>
<li><a href="/symfony/symfony_components.htm">Symfony - Components</a></li>
<li><a href="/symfony/symfony_service_container.htm">Symfony - Service Container</a></li>
<li><a href="/symfony/symfony_events_eventlistener.htm">Symfony - Events &amp; EventListener</a></li>
<li><a href="/symfony/symfony_expression.htm">Symfony - Expression</a></li>
<li><a href="/symfony/symfony_bundles.htm">Symfony -  Bundles</a></li>
<li><a href="/symfony/symfony_creating_simple_web_application.htm">Creating a Simple Web Application</a></li>
<li><a href="/symfony/symfony_controllers.htm">Symfony - Controllers</a></li>
<li><a href="/symfony/symfony_routing.htm">Symfony - Routing</a></li>
<li><a href="/symfony/symfony_view_engine.htm">Symfony - View Engine</a></li>
<li><a href="/symfony/symfony_doctrine_orm.htm">Symfony - Doctrine ORM</a></li>
<li><a href="/symfony/symfony_forms.htm">Symfony - Forms </a></li>
<li><a href="/symfony/symfony_validation.htm">Symfony - Validation</a></li>
<li><a href="/symfony/symfony_file_uploading.htm">Symfony - File Uploading</a></li>
<li><a href="/symfony/symfony_ajax_control.htm">Symfony - Ajax Control</a></li>
<li><a href="/symfony/symfony_cookies_session_management.htm">Cookies &amp; Session Management</a></li>
<li><a href="/symfony/symfony_internationalization.htm">Symfony - Internationalization</a></li>
<li><a href="/symfony/symfony_logging.htm">Symfony - Logging</a></li>
<li><a href="/symfony/symfony_email_management.htm">Symfony - Email Management</a></li>
<li><a href="/symfony/symfony_unit_testing.htm">Symfony - Unit Testing</a></li>
<li><a href="/symfony/symfony_advanced_concepts.htm">Symfony - Advanced Concepts</a></li>
<li><a href="/symfony/symfony_rest_edition.htm">Symfony - REST Edition</a></li>
<li><a href="/symfony/symfony_cmf_edition.htm">Symfony - CMF Edition</a></li>
<li><a href="/symfony/symfony_complete_working_example.htm">Complete Working Example</a></li>
</ul>
<ul class="toc chapters">
<li class="heading">Symfony Useful Resources</li>
<li><a href="/symfony/symfony_quick_guide.htm">Symfony - Quick Guide</a></li>
<li><a href="/symfony/symfony_useful_resources.htm">Symfony - Useful Resources</a></li>
<li><a href="/symfony/symfony_discussion.htm">Symfony - Discussion</a></li>
</ul>
<ul class="toc reading">
<li class="sreading">Selected Reading</li>
<li><a target="_top" href="/upsc_ias_exams.htm">UPSC IAS Exams Notes</a></li>
<li><a target="_top" href="/developers_best_practices/index.htm">Developer's Best Practices</a></li>
<li><a target="_top" href="/questions_and_answers.htm">Questions and Answers</a></li>
<li><a target="_top" href="/effective_resume_writing.htm">Effective Resume Writing</a></li>
<li><a target="_top" href="/hr_interview_questions/index.htm">HR Interview Questions</a></li>
<li><a target="_top" href="/computer_glossary.htm">Computer Glossary</a></li>
<li><a target="_top" href="/computer_whoiswho.htm">Who is Who</a></li>
</ul>
</div>
<!-- Tutorial ToC Ends Here -->
<!-- Tutorial Content Starts Here -->
<div class="mui-col-md-6 tutorial-content">
<h1>Symfony - Advanced Concepts</h1>
<hr />
<div class="top-ad-heading">Advertisements</div>
<div style="text-align: center;">
<script><!--
google_ad_client = "pub-7133395778201029";
var width = document.getElementsByClassName("tutorial-content")[0].clientWidth - 40;
google_ad_width = width;
google_ad_height = 150;
google_ad_format = width + "x150_as";
google_ad_type = "image";
google_ad_channel = "";
//--></script>
<script src="https://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</div>
<div class="mui-container-fluid button-borders">
<div class="pre-btn">
<a href="/symfony/symfony_unit_testing.htm"><i class="fal fa-chevron-circle-left"></i> Previous Page</a>
</div>
<div class="nxt-btn">
<a href="/symfony/symfony_rest_edition.htm">Next Page <i class="fal fa-chevron-circle-right"></i>&nbsp;</a>
</div>
</div>
<div class="clearer"></div>
<p>In this chapter, we will learn about some advanced concepts in Symfony framework.</p>
<h2>HTTP Cache</h2>
<p>Caching in a web application improves performance. For example, hot products in a shopping cart web application can be cached for a limited time, so that it can be presented to the customer in a speedy manner without hitting the database. Following are some basic components of Cache.</p>
<h3>Cache Item</h3>
<p>Cache Item is a single unit of information stored as a key/value pair. The <b>key</b> should be string and <b>value</b> can be any PHP object. PHP objects are stored as string by serialization and converted back into objects while reading the items.</p>
<h3>Cache Adapter</h3>
<p>Cache Adapter is the actual mechanism to store the item in a store. The store may be a memory, file system, database, redis, etc. Cache component provides an <b>AdapterInterface</b> through which an adapter can store cache item in a back-end store. There are lot of built-in cache adapters available. Few of them are as follows &minus;</p>
<ul class="list">
<li><p>Array Cache adapter - Cache items are stored in PHP array.</p></li>
<li><p>Filesystem Cache adapter - Cache items are stored in files.</p></li>
<li><p>PHP Files Cache Adapter - Cache items are stored as php files.</p></li>
<li><p>APCu Cache Adapter - Cache items are stored in shared memory using PHP APCu extenstion.</p></li>
<li><p>Redis Cache Adapter - Cache items are stored in Redis server.</p></li>
<li><p>PDO and Doctrine DBAL Cache Adapter - Cache items are stored in the database.</p></li>
<li><p>Chain Cache Adapter - Combines multiple cache adapters for replication purpose.</p></li>
<li><p>Proxy Cache Adapter - Cache items are stored using third party adapter, which implements CacheItemPoolInterface.</p></li>
</ul>
<h3>Cache Pool</h3>
<p>Cache Pool is a logical repository of cache items. Cache pools are implemented by cache adapters.</p>
<h3>Simple Application</h3>
<p>Let us create a simple application to understand the cache concept.</p>
<p><b>Step 1</b> &minus; Create a new application, <b>cache-example</b>.</p>
<pre class="result notranslate">
cd /path/to/app 
mkdir cache-example 
cd cache-example
</pre>
<p><b>Step 2</b> &minus; Install cache component.</p>
<pre class="result notranslate">
composer require symfony/cache
</pre>
<p><b>Step 3</b> &minus; Create a file system adapter.</p>
<pre class="result notranslate">
require __DIR__ . '/vendor/autoload.php';  
use Symfony\Component\Cache\Adapter\FilesystemAdapter;  
$cache = new FilesystemAdapter(); 
</pre>
<p><b>Step 4</b> &minus; Create a cache item using <b>getItem</b> and <b>set</b> method of adapter. getItem fetches the cache item using its key. if the key is not persent, it creates a new item. set method stores the actual data.</p>
<pre class="result notranslate">
$usercache = $cache-&gt;getitem('item.users'); 
$usercache-&gt;set(['jon', 'peter']); 
$cache-&gt;save($usercache); 
</pre>
<p><b>Step 5</b> &minus; Access the cache item using <b>getItem, isHit</b> and <b>get</b> method. isHit informs the availability of the cache item and get method provides the actual data.</p>
<pre class="result notranslate">
$userCache = $cache-&gt;getItem('item.users'); 
if(!$userCache-&gt;isHit()) { 
   echo "item.users is not available"; 
} else { 
   $users = $userCache-&gt;get(); 
   var_dump($users); 
} 
</pre>
<p><b>Step 6</b> &minus; Delete the cache item using <b>deleteItem</b> method.</p>
<pre class="result notranslate">
$cache-&gt;deleteItem('item.users');
</pre>
<p>The complete code listing is as follows.</p>
<pre class="prettyprint notranslate">
&lt;?php  
   require __DIR__ . '/vendor/autoload.php'; 
   use Symfony\Component\Cache\Adapter\FilesystemAdapter;  

   $cache = new FilesystemAdapter();  
   $usercache = $cache-&gt;getitem('item.users'); 
   $usercache-&gt;set(['jon', 'peter']); 
   $cache-&gt;save($usercache);  
   $userCache = $cache-&gt;getItem('item.users'); 
   
   if(!$userCache-&gt;isHit()) { 
      echo "item.users is not available"; 
   } else { 
      $users = $userCache-&gt;get(); 
      var_dump($users); 
   }  
   $cache-&gt;deleteItem('item.users');  
?&gt; 
</pre>
<h3>Result</h3>
<pre class="result notranslate">
array(2) { 
   [0]=&gt; 
   string(3) "jon" 
   [1]=&gt; 
   string(5) "peter" 
} 
</pre>
<h2>Debug</h2>
<p>Debugging is one of the most frequent activity while developing an application. Symfony provides a separate component to ease the process of debugging. We can enable Symfony debugging tools by just calling the <b>enable</b> method of Debug class.</p>
<pre class="result notranslate">
use Symfony\Component\Debug\Debug  
Debug::enable()
</pre>
<p>Symfony provides two classes, <b>ErrorHandler</b> and <b>ExceptionHandler</b> for debugging purpose. While ErrorHandler catches PHP errors and converts them into exceptions, ErrorException or FatalErrorException, ExceptionHandler catches uncaught PHP exceptions and converts them into useful PHP response. ErrorHandler and ExceptionHandler are disabled by default. We can enable it by using the register method.</p>
<pre class="result notranslate">
use Symfony\Component\Debug\ErrorHandler; 
use Symfony\Component\Debug\ExceptionHandler;  
ErrorHandler::register(); 
ExceptionHandler::register(); 
</pre>
<p>In a Symfony web application, the <b>debug environment</b> is provided by DebugBundle. Register the bundle in AppKernel's <b>registerBundles</b> method to enable it.</p>
<pre class="result notranslate">
if (in_array($this-&gt;getEnvironment(), ['dev', 'test'], true)) { 
   $bundles[] = new Symfony\Bundle\DebugBundle\DebugBundle(); 
}
</pre>
<h2>Profiler</h2>
<p>Development of an application needs a world-class profiling tool. The profiling tool collects all the run-time information about an application such as execution time, execution time of individual modules, time taken by a database activity, memory usage, etc. A web application needs much more information such as the time of request, time taken to create a response, etc. in addition to the above metrics.</p>
<p>Symfony enables all such information in a web application by default. Symfony provides a separate bundle for web profiling called <b>WebProfilerBundle</b>. Web profiler bundle can be enabled in a web application by registering the bundle in the AppKernel's registerBundles method.</p>
<pre class="result notranslate">
if (in_array($this-&gt;getEnvironment(), ['dev', 'test'], true)) { 
   $bundles[] = new Symfony\Bundle\WebProfilerBundle\WebProfilerBundle(); 
}
</pre>
<p>The web profile component can be configured under <b>web_profile section</b> of the application configuration file, <b>app/config/config.xml</b></p>
<pre class="result notranslate">
web_profiler: 
   toolbar:      false 
   position:     bottom 
</pre>
<p>Symfony application shows the profiled data at the bottom of the page as a distinct section.</p>
<img src="/symfony/images/symfony_application.jpg" alt="Symfony application" />
<p>Symfony also provides an easy way to add custom details about the page in the profile data using <b>DataCollectorInterface interface</b> and twig template. In short, Symfony enables a web developer to create a world-class application by providing a great profiling framework with relative ease.</p>
<h2>Security</h2>
<p>As discussed earlier, Symfony provides a robust security framework through its security component. The security component is divided into four sub-components as follows.</p>
<ul class="list">
<li>symfony/security-core - Core security functionality.</li>
<li>symfony/security-http - Integrated security feature in HTTP protocol.</li>
<li>symfony/security-csrf - Protection against cross-site request forgery in a web application.</li>
<li>symfony/security-acl - Advanced access control list based security framework.</li>
</ul>
<h3>Simple Authentication and Authorization</h3>
<p>Let us learn the concept of authentication and authorization using a simple demo application.</p>
<p><b>Step 1</b> &minus; Create a new web application <b>securitydemo</b> using the following command.</p>
<pre class="result notranslate">
 symfony new securitydemo
</pre>
<p><b>Step 2</b> &minus; Enable the security feature in the application using the security configuration file. The security related configuration are placed in a separate file, <b>security.yml</b>. The default configuration is as follows.</p>
<pre class="result notranslate">
security: 
   providers: 
      in_memory: 
         memory: ~ 
   firewalls: 
      dev: 
         pattern: ^/(_(profiler|wdt)|css|images|js)/ 
         security: false  
   main: 
      anonymous: ~ 
      #http_basic: ~ 
      #form_login: ~
</pre>
<p>The default configuration enables memory-based security provider and anonymous access to all pages. The firewall section excludes the files matching the pattern, <b>^/(_(profiler|wdt)|css|images|js)/</b> from the security framework. The default pattern includes stylesheets, images, and JavaScripts (plus dev tools like profiler).</p>
<p><b>Step 3</b> &minus; Enable HTTP based security authenticate system by adding http_basic option in main section as follows.</p>
<pre class="result notranslate">
security: 
   # ...  
   firewalls: 
      # ...  
      main: 
         anonymous: ~ 
         http_basic: ~ 
         #form_login: ~ 
</pre>
<p><b>Step 4</b> &minus; Add some users in the memory provider section. Also, add roles for the users.</p>
<pre class="result notranslate">
security: 
   providers: 
      in_memory: 
         memory: 
            users: 
               myuser: 
                  password: user 
                  roles: 'ROLE_USER' 
                     myadmin: 
                        password: admin 
                        roles: 'ROLE_ADMIN' 
</pre>
<p>We have added two users, <i>user</i> in role ROLE_USER and <i>admin</i> in role ROLE_ADMIN.</p>
<p><b>Step 5</b> &minus; Add the encoder to get complete details of the current logged-in user. The purpose of the encoder is to get complete details of the current user object from the web request.</p>
<pre class="prettyprint notranslate">
security: 
   # ... 
   encoders: 
      Symfony\Component\Security\Core\User\User: bcrypt 
      # ...  
</pre>
<p>Symfony provides an interface, <b>UserInterface</b> to get user details such as username, roles, password, etc. We need to implement the interface to our requirement and configure it in the encoder section.</p>
<p>For example, let us consider that the user details are in the database. Then, we need to create a new User class and implement UserInterface methods to get the user details from the database. Once the data is available, then the security system uses it to allow/deny the user. Symfony provides a default User implementation for Memory provider. Algorithm is used to decrypt the user password.</p>
<p><b>Step 6</b> &minus; Encrypt the user password using <b>bcrypt</b> algorithm and place it in the configuration file. Since we used <b>bcrypt</b> algorithm, User object tries to decrypt the password specified in configuration file and then tries to match with the password entered by the user. Symfony console application provides a simple command to encrypt the password.</p>
<pre class="result notranslate">
php bin/console security:encode-password admin 
Symfony Password Encoder Utility 
================================  
------------------ -----------------------------------
Key   Value  
------------------ ------------------------------------
Encoder used       Symfony\Component\Security\Core\Encoder\BCryptPasswordEncoder         
Encoded password   
$2y$12$0Hy6/.MNxWdFcCRDdstHU.hT5j3Mg1tqBunMLIUYkz6..IucpaPNO    
------------------ ------------------------------------   
! [NOTE] Bcrypt encoder used: the encoder generated its own built-in salt.
[OK] Password encoding succeeded 
</pre>
<p><b>Step 7</b> &minus; Use the command to generate the encrypted password and update it in the configuration file.</p>
<pre class="prettyprint notranslate">
# To get started with security, check out the documentation: 
# http://symfony.com/doc/current/security.html 
   security:  
      # http://symfony.com/doc/current/security.html#b-configuring-how-users-are-loaded 
      providers: 
         in_memory: 
            memory: 
               users: 
                  user: 
                     password: $2y$13$WsGWNufreEnVK1InBXL2cO/U7WftvfNvH
                     Vb/IJBH6JiYoDwVN4zoi  
                     roles: 'ROLE_USER' 
                     admin: 
                        password: $2y$13$jQNdIeoNV1BKVbpnBuhKRuOL01NeMK
                        F7nEqEi/Mqlzgts0njK3toy  
                        roles: 'ROLE_ADMIN' 
                         
         encoders: 
            Symfony\Component\Security\Core\User\User: bcrypt  
         firewalls: 
            # disables authentication for assets and the profiler, 
            # adapt it according to your needs 
         dev: 
            pattern: ^/(_(profiler|wdt)|css|images|js)/
         security: false  
         main: 
            anonymous: ~ 
            # activate different ways to authenticate  
            # http://symfony.com/doc/current/security.html#a-co
            nfiguring-howyour-users-will-authenticate 
            http_basic: ~  
            # http://symfony.com/doc/current/cookbook/security/
            form_login_setup.html 
            #form_login: ~             
</pre>
<p><b>Step 8</b> &minus; Now, apply the security to some section of the application. For example, restrict admin section to the users in role, ROLE_ADMIN.</p>
<pre class="prettyprint notranslate">
security: 
   # ... 
      firewalls: 
         # ... 
      default: 
         # ...  
      access_control: 
         # require ROLE_ADMIN for /admin* 
         - { path: ^/admin, roles: 'ROLE_ADMIN' } 
</pre>
<p><b>Step 9</b> &minus; Add an admin page in DefaultController as follows.</p>
<pre class="prettyprint notranslate">
/** 
   * @Route("/admin") 
*/ 
public function adminLandingAction() { 
   return new Response('&lt;html&gt;&lt;body&gt;This is admin section.&lt;/body&gt;&lt;/html&gt;'); 
} 
</pre>
<p><b>Step 10</b> &minus; Finally, access the admin page to check the security configuration in a browser. The browser will ask for the username and password and only allow configured users.</p>
<h3>Result</h3>
<img src="/symfony/images/connecting.jpg" alt="Connecting" />
<p></p>
<img src="/symfony/images/admin_section.jpg" alt="Admin Section" />
<h2>Workflow</h2>
<p>Workflow is an advanced concept having usage in many enterprise applications. In an ecommerce application, the product delivery process is a workflow. The product is first billed (order creation), procured from the store and packaged (packaging/ready to dispatch), and dispatched to the user. If there is any issue, the product returns from the user and the order is reverted. Order of the flow of action is very important. For example, we can't deliver a product without billing.</p>
<p>Symfony component provides an object-oriented way to define and manage a workflow. Each step in a process is called <b>place</b> and the action required to move from one place to another is called <b>transition</b>. The collection of places and transition to create a workflow is called a <b>Workflow definition</b>.</p>
<p>Let us understand the concept of workflow by creating a simple application for leave management.</p>
<p><b>Step 1</b> &minus; Create a new application, <b>workflow-example</b>.</p>
<pre class="prettyprint notranslate">
cd /path/to/dev 
mkdir workflow-example 

cd workflow-example 
composer require symfony/workflow
</pre>
<p><b>Step 2</b> &minus; Create a new class, <b>Leave</b> having <b>applied_by, leave_on</b> and <b>status</b> attributes.</p>
<pre class="result notranslate">
class Leave { 
   public $applied_by; 
   public $leave_on;  
   public $status; 
} 
</pre>
<p>Here, applied_by refers to the employees who want leave. leave_on refers to the date of leave. status refers to the leave status.</p>
<p><b>Step 3</b> &minus; Leave management has four places, applied, in_process and approved / rejected.</p>
<pre class="result notranslate">
use Symfony\Component\Workflow\DefinitionBuilder; 
use Symfony\Component\Workflow\Transition; 
use Symfony\Component\Workflow\Workflow; 
use Symfony\Component\Workflow\MarkingStore\SingleStateMarkingStore; 
use Symfony\Component\Workflow\Registry; 
use Symfony\Component\Workflow\Dumper\GraphvizDumper;

$builder = new DefinitionBuilder(); 
$builder-&gt;addPlaces(['applied', 'in_process', 'approved', 'rejected']);  
</pre>
<p>Here, we have created a new definition using <b>DefinitionBuilder</b> and added places using <b>addPlaces</b> method.</p>
<p><b>Step 4</b> &minus; Define the actions required to move from one place to another place.</p>
<pre class="result notranslate">
$builder-&gt;addTransition(new Transition('to_process', 'applied', 'in_process')); 
$builder-&gt;addTransition(new Transition('approve', 'in_process', 'approved')); 
$builder-&gt;addTransition(new Transition('reject', 'in_process', 'rejected')); 
</pre>
<p>Here, we have three transitions, <b>to_process, approve</b> and <b>reject</b>. to_process transition accepts the leave application and moves the place from applied to in_process. approve transition approves the leave application and moves the place to approved. Similarly, reject transition rejects the leave application and moves the place to rejected. We have created all transitions using addTransition method.</p>
<p><b>Step 5</b> &minus; Build the definition using build method.</p>
<pre class="result notranslate">
$definition = $builder-&gt;build();
</pre>
<p><b>Step 6</b> &minus; Optionally, the definition can be dumped as graphviz dot format, which can be converted to image file for reference purpose.</p>
<pre class="result notranslate">
$dumper = new GraphvizDumper(); 
echo $dumper-&gt;dump($definition);
</pre>
<img src="/symfony/images/graphviz_dot_format.jpg" alt="Graphviz Dot Format" />
<p><b>Step 7</b> &minus; Create a marking store, which is used to store the current places/status of the object.</p>
<pre class="result notranslate">
$marking = new SingleStateMarkingStore('status');
</pre>
<p>Here, we have used <b>SingleStateMarkingStore</b> class to create the mark and it marks the current status into the status property of the object. In our example, the object is Leave object.</p>
<p><b>Step 8</b> &minus; Create the workflow using definition and marking.</p>
<pre class="result notranslate">
$leaveWorkflow =    new Workflow($definition, $marking);
</pre>
<p>Here, we have used <b>Workflow</b> class to create the workflow.</p>
<p><b>Step 9</b> &minus; Add the workflow into the registry of the workflow framework using <b>Registry</b> class.</p>
<pre class="result notranslate">
$registry = new Registry(); 
$registry-&gt;add($leaveWorkflow, Leave::class);
</pre>
<p><b>Step 10</b> &minus; Finally, use the workflow to find whether a given transition is applied using <b>can</b> method and if so, <b>apply</b> the transition using apply method. When a transition is applied, the status of the object moves from one place to another.</p>
<pre class="result notranslate">
$workflow = $registry-&gt;get($leave); 
echo "Can we approve the leave now? " . $workflow-&gt;can($leave, 'approve') . "\r\n"; 
echo "Can we approve the start process now? " . $workflow-&gt;can($leave, 'to_process') . "\r\n"; 

$workflow-&gt;apply($leave, 'to_process'); 
echo "Can we approve the leave now? " . $workflow-&gt;can($leave, 'approve') . "\r\n"; 
echo $leave-&gt;status . "\r\n"; 

$workflow-&gt;apply($leave, 'approve'); 
echo $leave-&gt;status . "\r\n";
</pre>
<p>The complete coding is as follows &minus;</p>
<pre class="prettyprint notranslate">
&lt;?php  
   require __DIR__ . '/vendor/autoload.php';  

   use Symfony\Component\Workflow\DefinitionBuilder; 
   use Symfony\Component\Workflow\Transition; 
   use Symfony\Component\Workflow\Workflow; 
   use Symfony\Component\Workflow\MarkingStore\SingleStateMarkingStore; 
   use Symfony\Component\Workflow\Registry; 
   use Symfony\Component\Workflow\Dumper\GraphvizDumper;

   class Leave { 
      public $applied_by; 
      public $leave_on;  
      public $status; 
   }  
   $builder = new DefinitionBuilder(); 
   $builder-&gt;addPlaces(['applied', 'in_process', 'approved', 'rejected']); 
   $builder-&gt;addTransition(new Transition('to_process', 'applied', 'in_process')); 
   $builder-&gt;addTransition(new Transition('approve', 'in_process', 'approved')); 
   $builder-&gt;addTransition(new Transition('reject', 'in_process', 'rejected')); 
   $definition = $builder-&gt;build();  

   // $dumper = new GraphvizDumper(); 
   // echo $dumper-&gt;dump($definition);  

   $marking = new SingleStateMarkingStore('status'); 
   $leaveWorkflow = new Workflow($definition, $marking);  
   $registry = new Registry(); 
   $registry-&gt;add($leaveWorkflow, Leave::class);  

   $leave = new Leave(); 
   $leave-&gt;applied_by = "Jon"; 
   $leave-&gt;leave_on = "1998-12-12"; 
   $leave-&gt;status = 'applied';  

   $workflow = $registry-&gt;get($leave); 
   echo "Can we approve the leave now? " . $workflow-&gt;can($leave, 'approve') . "\r\n"; 
   echo "Can we approve the start process now? " . $workflow-&gt;can($leave, 'to_process') . "\r\n"; 
   
   $workflow-&gt;apply($leave, 'to_process');  
   echo "Can we approve the leave now? " . $workflow-&gt;can($leave, 'approve') . "\r\n"; 
   echo $leave-&gt;status . "\r\n"; 
   
   $workflow-&gt;apply($leave, 'approve'); 
   echo $leave-&gt;status . "\r\n";  
?&gt;  
</pre>
<h3>Result</h3>
<pre class="result notranslate">
Can we approve the leave now?  
Can we approve the start process now? 1 
Can we approve the leave now? 1 
in_process 
approved
</pre>
<div class="mui-container-fluid button-borders show">
<div class="pre-btn">
<a href="/symfony/symfony_unit_testing.htm"><i class="fal fa-chevron-circle-left"></i> Previous Page</a>
</div>
<div class="nxt-btn">
<a href="/symfony/symfony_rest_edition.htm">Next Page <i class="fal fa-chevron-circle-right"></i>&nbsp;</a>
</div>
</div>
<div class="google-bottom-ads">
<div>Advertisements</div>
<script><!--
var width = 580;
var height = 400;
var format = "580x400_as";
if( window.innerWidth < 468 ){
   width = 300;
   height = 250;
   format = "300x250_as";
}
google_ad_client = "pub-7133395778201029";
google_ad_width = width;
google_ad_height = height;
google_ad_format = format;
google_ad_type = "image";
google_ad_channel ="";
//--></script>
<script src="https://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
<div class="space-bottom"></div>
</div>
</div>
<!-- Tutorial Content Ends Here -->
<!-- Right Column Starts Here -->
<div class="mui-col-md-2 google-right-ads">
<div class="space-top"></div>
<div class="google-right-ad" style="margin: 0px auto !important;margin-top:5px;">
<script><!--
google_ad_client = "pub-2537027957187252";
google_ad_width = 300;
google_ad_height = 250;
google_ad_format = "300x250_as";
google_ad_type = "image";
google_ad_channel ="";
//--></script>
<script src="https://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</div>
<div class="google-right-ad">
<div class="adsbyvli" data-ad-slot="vi_9012177"></div>
<script>(vitag.Init = window.vitag.Init || []).push(function(){viAPItag.display("vi_9012177")})</script>
</div>
<div class="space-bottom"></div>
<div class="google-right-ad">
<div class="adsbyvli" data-ad-slot="vi_9013289"></div>
<script>(vitag.Init = window.vitag.Init || []).push(function(){viAPItag.display("vi_9013289")})</script>
</div>
<div class="space-bottom" style="margin-bottom:15px;"></div>
</div>
<!-- Right Column Ends Here -->
</div>
</div>
<div class="clear"></div>
<footer id="footer">
<div class="mui--text-center">
<div class="mui--text-caption mui--text-light">
<a href="/index.htm" class="logo"><img class="img-responsive" src="/images/logo-black.png" alt="Tutorials Point" title="Tutorials Point"></a>
</div>
<ul class="mui-list--inline mui--text-body2 mui--text-light">
<li><a href="/about/index.htm"><i class="fal fa-globe"></i> About us</a></li>
<li><a href="/about/about_terms_of_use.htm"><i class="fal fa-asterisk"></i> Terms of use</a></li>
<li><a href="/about/about_privacy.htm#cookies"> <i class="fal fa-shield-check"></i> Cookies Policy</a></li>
<li><a href="/about/faq.htm"><i class="fal fa-question-circle"></i> FAQ's</a></li>
<li><a href="/about/about_helping.htm"><i class="fal fa-hands-helping"></i> Helping</a></li>
<li><a href="/about/contact_us.htm"><i class="fal fa-map-marker-alt"></i> Contact</a></li>
</ul>
<div class="mui--text-caption mui--text-light bottom-copyright-text">&copy; Copyright 2019. All Rights Reserved.</div>
</div>
<div id="privacy-banner">
  <div>
    <p>
      We use cookies to provide and improve our services. By using our site, you consent to our Cookies Policy.
      <a id="banner-accept" href="#">Accept</a>
      <a id="banner-learn" href="/about/about_cookies.htm" target="_blank">Learn more</a>
    </p>
  </div>
</div>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-232293-17"></script>
<script>
window.dataLayer = window.dataLayer || [];
function gtag(){dataLayer.push(arguments);}
gtag('js', new Date());
gtag('config', 'UA-232293-6');
</script>
</footer>
</body>
</html>
