<!DOCTYPE html>
<html lang="en-US">
<head>
<title>MFC - Messages & Events</title>
<meta charset="utf-8">
<meta name="description" content="MFC - Messages & Events - An application is made of various objects. Most of the time, more than one application is running on the computer and the operating system is constantly asked t"/>
<meta name="keywords" content="C, C++, Python, Java, HTML, CSS, JavaScript, SQL, PHP, jQuery, XML, DOM, Bootstrap, Tutorials, Articles, Programming, training, learning, quiz, preferences, examples, code"/>
<link rel="canonical" href="https://www.tutorialspoint.com/mfc/mfc_messages_events.htm" />
<link rel="shortcut icon" href="/favicon.ico" type="image/x-icon" />
<meta name="viewport" content="width=device-width,initial-scale=1.0,user-scalable=yes">
<script src="/theme/js/script-min-v2.js?v=3"></script>
<link rel="stylesheet" href="/theme/css/style-min-v2.css?v=6">
<script src="//services.bilsyndication.com/adv1/?d=901" defer="" async=""></script>
<script> var vitag = vitag || {};</script>
<script> vitag.outStreamConfig = { enablePC: false, enableMobile: false };</script>  
<style>
.right-menu .mui-btn {
    background-color:#e94701;
}
a.demo {
    background:#e94701;
}
li.heading {
    background:#e94701;
}
.course-box{background:#e94701}
.home-intro-sub p{color:#e94701}
</style>
</head>
<body>
<header id="header">
<!-- Top sub-menu Starts Here -->
<div class="mui-appbar mui-container-fulid top-menu">
<div class="mui-container">
<div class="top-menu-item home">
<a href="https://www.tutorialspoint.com/index.htm" target="_blank" title="TutorialsPoint - Home"><i class="fal fa-home"></i> <span>Home</span></a>
</div>
<div class="top-menu-item qa">
<a href="https://www.tutorialspoint.com/about/about_careers.htm" target="_blank" title="Job @ Tutorials Point"><i class="fa fa-suitcase"></i> <span>Jobs</span></a>
</div>
<div class="top-menu-item tools">
<a href="https://www.tutorialspoint.com/online_dev_tools.htm" target="_blank" title="Tools - Online Development and Testing Tools"><i class="fal fa-cogs"></i> <span>Tools</span></a>
</div>
<div class="top-menu-item coding-ground">
<a href="https://www.tutorialspoint.com/codingground.htm" target="_blank" title="Coding Ground - Free Online IDE and Terminal"><i class="fal fa-code"></i> <span>Coding Ground </span></a> 
</div>
<div class="top-menu-item current-affairs">
<a href="https://www.tutorialspoint.com/current_affairs.htm" target="_blank" title="Daily Current Affairs"><i class="fal fa-layer-plus"></i> <span>Current Affairs</span></a>
</div>
<div class="top-menu-item upsc-notes">
<a href="https://www.tutorialspoint.com/upsc_ias_exams.htm" target="_blank" title="UPSC IAS Exams Notes - TutorialsPoint"><i class="fal fa-user-tie"></i> <span>UPSC Notes</span></a>
</div>      
<div class="top-menu-item online-tutoris">
<a href="https://www.tutorialspoint.com/tutor_connect/index.php" target="_blank" title="Top Online Tutors - Tutor Connect"><i class="fal fa-user"></i> <span>Online Tutors</span></a>
</div>
<div class="top-menu-item whiteboard">
<a href="https://www.tutorialspoint.com/whiteboard.htm" target="_blank" title="Free Online Whiteboard"><i class="fal fa-chalkboard"></i> <span>Whiteboard</span></a>
</div>
<div class="top-menu-item net-meeting">
<a href="https://www.tutorialspoint.com/netmeeting.php" target="_blank" title="A free tool for online video conferencing"><i class="fal fa-chalkboard-teacher"></i> <span>Net Meeting</span></a> 
</div>
<div class="top-menu-item articles">
<a href="https://www.tutorix.com" target="_blank" title="Tutorx - The Best Learning App" rel="nofollow"><i class="fal fa-video"></i> <span>Tutorix</span></a> 
</div>        
<div class="social-menu-item">
<a href="https://www.facebook.com/tutorialspointindia" target="_blank" rel="nofollow" data-placement="bottom" title="tutorialspoint @ Facebook"><i class="fab fa-facebook-f"></i></a> 
<a href="https://www.twitter.com/tutorialspoint" target="_blank" rel="nofollow" data-placement="bottom" title="tutorialspoint @ Twitter"><i class="fab fa-twitter"></i></a>
<a href="https://www.linkedin.com/company/tutorialspoint" target="_blank" rel="nofollow" data-placement="bottom" title="tutorialspoint @ Linkedin"><i class="fab fa-linkedin-in"></i></a>
<a href="https://www.youtube.com/channel/UCVLbzhxVTiTLiVKeGV7WEBg" target="_blank" rel="nofollow" data-placement="bottom" title="tutorialspoint YouTube"><i class="fab fa-youtube"></i></a>
</div>        
</div>
</div>
<!-- Top sub-menu Ends Here -->
<!-- Top main-menu Starts Here -->
<div class="mui-appbar mui-container-fulid mui--appbar-line-height mui--z1" id="logo-menu">
<div class="mui-container">
<div class="left-menu">
<a href="https://www.tutorialspoint.com/index.htm" title="Tutorialspoint">
<img class="tp-logo" alt="tutorialspoint" src="/mfc/images/logo.png">
</a>
<div class="mui-dropdown">
<a class="mui-btn mui-btn--primary categories" data-mui-toggle="dropdown"><i class="fa fa-th-large"></i> 
<span>Categories <span class="mui-caret"></span></span></a>            
<ul class="mui-dropdown__menu cat-menu">
<li>
<ul>
<li><a href="/academic_tutorials.htm"><i class="fa fa-caret-right"></i> Academic Tutorials</a></li>
<li><a href="/big_data_tutorials.htm"><i class="fa fa-caret-right"></i> Big Data &amp; Analytics </a></li>
<li><a href="/computer_programming_tutorials.htm"><i class="fa fa-caret-right"></i> Computer Programming </a></li>
<li><a href="/computer_science_tutorials.htm"><i class="fa fa-caret-right"></i> Computer Science </a></li>
<li><a href="/database_tutorials.htm"><i class="fa fa-caret-right"></i> Databases </a></li>
<li><a href="/devops_tutorials.htm"><i class="fa fa-caret-right"></i> DevOps </a></li>
<li><a href="/digital_marketing_tutorials.htm"><i class="fa fa-caret-right"></i> Digital Marketing </a></li>
<li><a href="/engineering_tutorials.htm"><i class="fa fa-caret-right"></i> Engineering Tutorials </a></li>
<li><a href="/upsc_ias_exams.htm"><i class="fa fa-caret-right"></i> Exams Syllabus </a></li>
<li><a href="/famous_monuments.htm"><i class="fa fa-caret-right"></i> Famous Monuments </a></li>
<li><a href="/gate_exams_tutorials.htm"><i class="fa fa-caret-right"></i> GATE Exams Tutorials</a></li>
<li><a href="/latest_technologies.htm"><i class="fa fa-caret-right"></i> Latest Technologies </a></li>
<li><a href="/machine_learning_tutorials.htm"><i class="fa fa-caret-right"></i> Machine Learning </a></li>
<li><a href="/mainframe_tutorials.htm"><i class="fa fa-caret-right"></i> Mainframe Development </a></li>
<li><a href="/management_tutorials.htm"><i class="fa fa-caret-right"></i> Management Tutorials </a></li>
<li><a href="/maths_tutorials.htm"><i class="fa fa-caret-right"></i> Mathematics Tutorials</a></li>
<li><a href="/microsoft_technologies_tutorials.htm"><i class="fa fa-caret-right"></i> Microsoft Technologies </a></li>
<li><a href="/misc_tutorials.htm"><i class="fa fa-caret-right"></i> Misc tutorials </a></li>
<li><a href="/mobile_development_tutorials.htm"><i class="fa fa-caret-right"></i> Mobile Development </a></li>
<li><a href="/java_technology_tutorials.htm"><i class="fa fa-caret-right"></i> Java Technologies </a></li>
<li><a href="/python_technologies_tutorials.htm"><i class="fa fa-caret-right"></i> Python Technologies </a></li>
<li><a href="/sap_tutorials.htm"><i class="fa fa-caret-right"></i> SAP Tutorials </a></li>
<li><a href="/scripting_lnaguage_tutorials.htm"><i class="fa fa-caret-right"></i>Programming Scripts </a></li>
<li><a href="/selected_reading.htm"><i class="fa fa-caret-right"></i> Selected Reading </a></li>
<li><a href="/software_quality_tutorials.htm"><i class="fa fa-caret-right"></i> Software Quality </a></li>
<li><a href="/soft_skill_tutorials.htm"><i class="fa fa-caret-right"></i> Soft Skills </a></li>
<li><a href="/telecom_tutorials.htm"><i class="fa fa-caret-right"></i> Telecom Tutorials </a></li>
<li><a href="/upsc_ias_exams.htm"><i class="fa fa-caret-right"></i> UPSC IAS Exams </a></li>
<li><a href="/web_development_tutorials.htm"><i class="fa fa-caret-right"></i> Web Development </a></li>
<li><a href="/sports_tutorials.htm"><i class="fa fa-caret-right"></i> Sports Tutorials </a></li>
<li><a href="/xml_technologies_tutorials.htm"><i class="fa fa-caret-right"></i> XML Technologies </a></li>
<li><a href="/multi_language_tutorials.htm"><i class="fa fa-caret-right"></i> Multi-Language Tutorials</a></li>
<li><a href="/questions_and_answers.htm"><i class="fa fa-caret-right"></i> Interview Questions</a></li>
</ul>
</li>
</ul>
<div class="clear"></div>
</div> 
</div>
<div class="right-menu">
<div class="toc-toggle">
<a href="javascript:void(0);"><i class="fa fa-bars"></i></a>
</div>
<div class="mobile-search-btn">
<a href="https://www.tutorialspoint.com/search.htm"><i class="fal fa-search"></i></a>
</div>
<div class="search-box">
<form method="get" class="" name="searchform" action="https://www.google.com/search" target="_blank" novalidate="">
<input type="hidden" name="sitesearch" value="www.tutorialspoint.com" class="user-valid valid">
<input class="header-search-box" type="text" id="search-string" name="q" placeholder="Search your favorite tutorials..." onfocus="if (this.value == 'Search your favorite tutorials...') {this.value = '';}" onblur="if (this.value == '') {this.value = 'Search your favorite tutorials...';}" autocomplete="off">
<button><i class="fal fa-search"></i></button>
</form>
</div>
<div class="menu-btn library-btn">
<a href="https://www.tutorialspoint.com/tutorialslibrary.htm"><i class="fal fa-cubes"></i> <span>Library</span></a>
</div>
<div class="menu-btn videos-btn">
<a href="https://www.tutorialspoint.com/videotutorials/index.htm"><i class="fal fa-video"></i> <span>Videos</span></a> 
</div>
<div class="menu-btn videos-btn">
<a href="https://www.tutorialspoint.com/questions/index.php"><i class="fa fa-location-arrow"></i> <span>Q/A</span></a>
</div>
<div class="menu-btn ebooks-btn">
<a href="https://store.tutorialspoint.com"><i class="fal fa-book"></i> <span>eBooks</span></a>
</div>
<div class="mui-dropdown">
<button class="mui-btn mui-btn--primary" data-mui-toggle="dropdown">
<span class="mui-caret"></span>
</button>
<ul class="mui-dropdown__menu">
<li><a href="https://www.tutorialspoint.com/tutorialslibrary.htm"><i class="fal fa-cubes"></i> <span>Library</span></a></li>
<li><a href="https://www.tutorialspoint.com/videotutorials/index.htm"><i class="fal fa-video"></i> <span>Videos</span></a></li>
<li><a href="https://store.tutorialspoint.com"><i class="fal fa-book"></i> <span>eBooks</span></a></li>
</ul>
</div>
</div>
</div>
</div>
<!-- Top main-menu Ends Here -->
</header>
<div class="mui-container-fluid content">
<div class="mui-container">
<!-- Tutorial ToC Starts Here -->
<div class="mui-col-md-3 tutorial-toc">
<div class="mini-logo">
<img src="/mfc/images/mfc-mini-logo.jpg" alt="MFC Tutorial" />
</div>
<ul class="toc chapters">
<li class="heading">MFC Tutorial</li>
<li><a href="/mfc/index.htm">MFC - Home</a></li>
<li><a href="/mfc/mfc_overview.htm">MFC - Overview</a></li>
<li><a href="/mfc/mfc_environment_setup.htm">MFC - Environment Setup</a></li>
<li><a href="/mfc/mfc_vcplusplus_projects.htm">MFC - VC++ Projects</a></li>
<li><a href="/mfc/mfc_getting_started.htm">MFC - Getting Started</a></li>
<li><a href="/mfc/mfc_windows_fundamentals.htm">MFC - Windows Fundamentals</a></li>
<li><a href="/mfc/mfc_dialog_boxes.htm">MFC - Dialog Boxes</a></li>
<li><a href="/mfc/mfc_windows_resources.htm">MFC - Windows Resources</a></li>
<li><a href="/mfc/mfc_property_sheets.htm">MFC - Property Sheets</a></li>
<li><a href="/mfc/mfc_windows_layout.htm">MFC - Windows Layout</a></li>
<li><a href="/mfc/mfc_controls_management.htm">MFC - Controls Management</a></li>
<li><a href="/mfc/mfc_windows_controls.htm">MFC - Windows Controls</a></li>
<li><a href="/mfc/mfc_messages_events.htm">MFC - Messages &amp; Events</a></li>
<li><a href="/mfc/mfc_activex_control.htm">MFC - Activex Controls</a></li>
<li><a href="/mfc/mfc_file_system.htm">MFC - File System</a></li>
<li><a href="/mfc/mfc_standard_io.htm">MFC - Standard I/O</a></li>
<li><a href="/mfc/mfc_document_view.htm">MFC - Document View</a></li>
<li><a href="/mfc/mfc_strings.htm">MFC - Strings</a></li>
<li><a href="/mfc/mfc_carray.htm">MFC - Carray</a></li>
<li><a href="/mfc/mfc_linked_lists.htm">MFC - Linked Lists</a></li>
<li><a href="/mfc/mfc_database_classes.htm">MFC - Database Classes</a></li>
<li><a href="/mfc/mfc_serialization.htm">MFC - Serialization</a></li>
<li><a href="/mfc/mfc_multithreading.htm">MFC - Multithreading</a></li>
<li><a href="/mfc/mfc_internet_programming.htm">MFC - Internet Programming</a></li>
<li><a href="/mfc/mfc_gdi.htm">MFC - GDI</a></li>
<li><a href="/mfc/mfc_libraries.htm">MFC - Libraries</a></li>
</ul>
<ul class="toc chapters">
<li class="heading">MFC Useful Resources</li>
<li><a href="/mfc/mfc_quick_guide.htm">MFC - Quick Guide</a></li>
<li><a href="/mfc/mfc_useful_resources.htm">MFC - Useful Resources</a></li>
<li><a href="/mfc/mfc_discussion.htm">MFC - Discussion</a></li>
</ul>
<ul class="toc reading">
<li class="sreading">Selected Reading</li>
<li><a target="_top" href="/upsc_ias_exams.htm">UPSC IAS Exams Notes</a></li>
<li><a target="_top" href="/developers_best_practices/index.htm">Developer's Best Practices</a></li>
<li><a target="_top" href="/questions_and_answers.htm">Questions and Answers</a></li>
<li><a target="_top" href="/effective_resume_writing.htm">Effective Resume Writing</a></li>
<li><a target="_top" href="/hr_interview_questions/index.htm">HR Interview Questions</a></li>
<li><a target="_top" href="/computer_glossary.htm">Computer Glossary</a></li>
<li><a target="_top" href="/computer_whoiswho.htm">Who is Who</a></li>
</ul>
</div>
<!-- Tutorial ToC Ends Here -->
<!-- Tutorial Content Starts Here -->
<div class="mui-col-md-6 tutorial-content">
<h1>MFC - Messages &amp; Events</h1>
<hr />
<div class="top-ad-heading">Advertisements</div>
<div style="text-align: center;">
<script><!--
google_ad_client = "pub-7133395778201029";
var width = document.getElementsByClassName("tutorial-content")[0].clientWidth - 40;
google_ad_width = width;
google_ad_height = 150;
google_ad_format = width + "x150_as";
google_ad_type = "image";
google_ad_channel = "";
//--></script>
<script src="https://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</div>
<div class="mui-container-fluid button-borders">
<div class="pre-btn">
<a href="/mfc/mfc_windows_controls.htm"><i class="fal fa-chevron-circle-left"></i> Previous Page</a>
</div>
<div class="nxt-btn">
<a href="/mfc/mfc_activex_control.htm">Next Page <i class="fal fa-chevron-circle-right"></i>&nbsp;</a>
</div>
</div>
<div class="clearer"></div>
<p>An application is made of various objects. Most of the time, more than one application is running on the computer and the operating system is constantly asked to perform some assignments. Because there can be so many requests presented unpredictably, the operating system leaves it up to the objects to specify what they want, when they want it, and what behavior or result they expect.</p>
<h2>Overview</h2>
<ul class="list">
<li><p>The Microsoft Windows operating system cannot predict what kinds of requests one object would need to be taken care of and what type of assignment another object would need.</p></li>
<li><p>To manage all these assignments and requests, the objects send messages.</p></li>
<li><p>Each object has the responsibility to decided what message to send and when.</p></li>
<li><p>In order to send a message, a control must create an event.</p></li>
<li><p>To make a distinction between the two, a message's name usually starts with WM_ which stands for Window Message.</p></li>
<li><p>The name of an event usually starts with On which indicates an action.</p></li>
<li><p>The event is the action of sending the message.</p></li>
</ul>
<h2>Map of Messages</h2>
<p>Since Windows is a message-oriented operating system, a large portion of programming for the Windows environment involves message handling. Each time an event such as a keystroke or mouse click occurs, a message is sent to the application, which must then handle the event.</p>
<ul class="list">
<li><p>For the compiler to manage messages, they should be included in the class definition.</p></li>
<li><p>The <b>DECLARE_MESSAGE_MAP</b> macro should be provided at the end of the class definition as shown in the following code.</p></li>
</ul>
<pre class="prettyprint notranslate">
class CMainFrame : public CFrameWnd {
   public:
      CMainFrame();
   protected:
      DECLARE_MESSAGE_MAP()
};
</pre>
<ul class="list">
<li><p>The actual messages should be listed just above the DECLARE_MESSAGE_MAP line.</p></li>
<li><p>To implement the messages, you need to create a table of messages that your program is using.</p></li>
<li><p>This table uses two delimiting macros;</p></li>
<li><p>Its starts with a <b>BEGIN_MESSAGE_MAP</b> and ends with an <b>END_MESSAGE_MAP</b> macros.</p></li>
<li><p>The BEGIN_MESSAGE_MAP macro takes two arguments, the name of your class and the MFC class you derived your class from as shown in the following code.</p></li>
</ul>
<pre class="prettyprint notranslate">
#include &lt;afxwin.h&gt;
class CMainFrame : public CFrameWnd {
   public:
      CMainFrame();
   protected:
      DECLARE_MESSAGE_MAP()
};
CMainFrame::CMainFrame() {

   // Create the window's frame
   Create(NULL, L"MFC Messages Demo", WS_OVERLAPPEDWINDOW,
                                      CRect(120, 100, 700, 480), NULL);
}
class CMessagesApp : public CWinApp {
   public:
      BOOL InitInstance();
};
BEGIN_MESSAGE_MAP(CMainFrame, CFrameWnd)
END_MESSAGE_MAP()
BOOL CMessagesApp::InitInstance(){
   m_pMainWnd = new CMainFrame;
   m_pMainWnd-&gt;ShowWindow(SW_SHOW);
   m_pMainWnd-&gt;UpdateWindow();
   return TRUE;
}
CMessagesApp theApp;
</pre>
<p>Let us look into a simple example by creating a new Win32 project.</p>
<img src="/mfc/images/win32_project.jpg" alt="Win32 Project" />
<p><b>Step 1</b> &minus; To create an MFC project, right-click on the project and select Properties.</p>
<p><b>Step 2</b> &minus; In the left section, click Configuration Properties &rarr; General.</p>
<p><b>Step 3</b> &minus; Select the ‘Use MFC in Shared DLL’ option in Project Defaults section and click OK.</p>
<p><b>Step 4</b> &minus; We need to add a new source file.</p>
<p><b>Step 5</b> &minus; Right-click on your Project and select Add &rarr; New Item.</p>
<p><b>Step 6</b> &minus; In the Templates section, click C++ File (.cpp).</p>
<img src="/mfc/images/win32_project_temp_section.jpg" alt="Win Project" />
<p><b>Step 7</b> &minus; Click Add to Continue.</p>
<p><b>Step 8</b> &minus; Now, add the following code in the *.cpp file.</p>
<pre class="prettyprint notranslate">
#include &lt;afxwin.h&gt;
class CMainFrame : public CFrameWnd {
   public:
      CMainFrame();
   protected:
      DECLARE_MESSAGE_MAP()
};

CMainFrame::CMainFrame() {
   // Create the window's frame
   Create(NULL, L"MFC Messages Demo", WS_OVERLAPPEDWINDOW,
      CRect(120, 100, 700, 480), NULL);
}

class CMessagesApp : public CWinApp {
   public:
      BOOL InitInstance();
};

BEGIN_MESSAGE_MAP(CMainFrame, CFrameWnd)
END_MESSAGE_MAP()
BOOL CMessagesApp::InitInstance() {
   m_pMainWnd = new CMainFrame;
   m_pMainWnd-&gt;ShowWindow(SW_SHOW);
   m_pMainWnd-&gt;UpdateWindow();
   return TRUE;
}
CMessagesApp theApp;
</pre>
<h2>Windows Messages</h2>
<p>There are different types of Windows messages like creating a window, showing a window etc. Here are some of the commonly used windows messages.</p>
<section class="toggle">
<label><i class="icon icon-minus"></i><i class="icon icon-plus"></i>Given below are the different types of Window messages.</label>
<div class="toggle-content" style="display: none;">
<table class="table table-bordered" style="font-size:13px;">
<tr>
<th style="text-align:center;">Message</th>
<th style="text-align:center;">Map entry</th>
<th style="text-align:center;">Description</th>
</tr>
<tr>
<td style="vertical-align:middle"><b>WM_ACTIVATE</b></td>
<td style="vertical-align:middle">ON_WM_ACTIVATE()</td>
<td>The framework calls this member function when a CWnd object is being activated or deactivated.</td>
</tr>
<tr>
<td style="vertical-align:middle"><b>WM_ACTIVATEA PP</b</td>
<td>ON_WM_ACTIVATEAPP()</td>
<td>The framework calls this member function to all top-level windows of the task being activated and for all top-level windows of the task being deactivated.</td>
</tr>
<tr>
<td style="vertical-align:middle"><b>WM_APPCOMM AND</b></td>
<td style="vertical-align:middle">ON_WM_APPCOMMAND()</td>
<td>The framework calls this member function when the user generates an application command event.</td>
</tr>
<tr>
<td style="vertical-align:middle"><b>WM_CANCELMODE</b></td>
<td style="vertical-align:middle">WM_CANCELMODE()</td>
<td>The framework calls this member function to inform CWnd to cancel any internal mode.</td>
</tr>
<tr>
<td style="vertical-align:middle"><b>WM_CHILDACTIVATE</b></td>
<td style="vertical-align:middle">ON_WM_CHILDACTIVATE()</td>
<td>If the CWnd object is a multiple document interface (MDI) child window, OnChildActivate is called by the framework when the user clicks the window's title bar or when the window is activated, moved, or sized.</td>
</tr>
<tr>
<td style="vertical-align:middle"><b>WM_CLIPBOAR DUPDATE</b></td>
<td style="vertical-align:middle">ON_WM_CLIPBOARDUPDATE()</td>
<td>The framework calls this member function when the contents of the clipboard have changed.</td>
</tr>
<tr>
<td style="vertical-align:middle"><b>WM_CLOSE</b></td>
<td style="vertical-align:middle">ON_WM_CLOSE()</td>
<td>The framework calls this member function as a signal that the CWnd or an application is to terminate.</td>
</tr>
<tr>
<td style="vertical-align:middle"><b>WM_CONTEXTMENU</b></td>
<td style="vertical-align:middle">ON_WM_CONTEXTMENU()</td>
<td>Called by the framework when the user has clicked the right mouse button (rightclicked) in the window.</td>
</tr>
<tr>
<td style="vertical-align:middle"><b>WM_COPYDATA</b></td>
<td style="vertical-align:middle">ON_WM_COPYDATA()</td>
<td>This member function is called by the framework to copy data from one application to another.</td>
</tr>
<tr>
<td style="vertical-align:middle"><b>WM_CREATE</b></td>
<td style="vertical-align:middle">ON_WM_CREATE()</td>
<td>The framework calls this member function when an application requests that the Windows window be created by calling the Create or CreateEx member function.</td>
</tr>
<tr>
<td style="vertical-align:middle"><b>WM_CTLCOLOR</b></td>
<td style="vertical-align:middle">ON_WM_CTLCOLOR()</td>
<td>The framework calls this member function when a child control is about to be drawn.</td>
</tr>
<tr>
<td style="vertical-align:middle"><b>WM_DELETEITEM</b></td>
<td style="vertical-align:middle">ON_WM_DELETEITEM()</td>
<td>The framework calls this member function to inform the owner of an owner-draw list box or combo box that the list box or combo box is destroyed or that items have been removed.</td>
</tr>
<tr>
<td style="vertical-align:middle"><b>WM_DESTROY</b></td>
<td style="vertical-align:middle">ON_WM_DESTROY()</td>
<td>he framework calls this member function to inform the CWnd object that it is being destroyed.</td>
</tr>
<tr>
<td style="vertical-align:middle"><b>WM_DRAWITEM</b></td>
<td style="vertical-align:middle">ON_WM_DRAWITEM()</td>
<td>The framework calls this member function for the owner of an owner-draw button control, combo-box control, list-box control, or menu when a visual aspect of the control or menu has changed.</td>
</tr>
<tr>
<td style="vertical-align:middle"><b>WM_DROPFILES</b></td>
<td style="vertical-align:middle">ON_WM_DROPFILES()</td>
<td>The framework calls this member function when the user releases the left mouse button over a window that has registered itself as the recipient of dropped files.</td>
</tr>
<tr>
<td style="vertical-align:middle"><b>WM_ENABLE</b></td>
<td style="vertical-align:middle">ON_WM_ENABLE()</td>
<td>The framework calls this member function when an application changes the enabled state of the CWnd object. Syntax.</td>
</tr>
<tr>
<td style="vertical-align:middle"><b>WM_HELPINFO</b></td>
<td style="vertical-align:middle">ON_WM_HELPINFO()</td>
<td>Handles F1 Help within the application (using the current context).</td>
</tr>
<tr>
<td style="vertical-align:middle"><b>WM_HOTKEY</b></td>
<td style="vertical-align:middle">ON_WM_HOTKEY()</td>
<td>The framework calls this member function when the user presses a system-wide hot key.</td>
</tr>
<tr>
<td style="vertical-align:middle"><b>WM_HSCROLL</b></td>
<td style="vertical-align:middle">ON_WM_HSCROLL()</td>
<td>The framework calls this member function when the user clicks a window's horizontal scroll bar.</td>
</tr>
<tr>
<td style="vertical-align:middle"><b>WM_KEYDOWN</b></td>
<td style="vertical-align:middle">ON_WM_KEYDOWN()</td>
<td>The framework calls this member function when a nonsystem key is pressed.</td>
</tr>
<tr>
<td style="vertical-align:middle"><b>WM_KEYUP</b></td>
<td style="vertical-align:middle">ON_WM_KEYUP()</td>
<td>The framework calls this member function when a nonsystem key is released.</td>
</tr>
<tr>
<td style="vertical-align:middle"><b>WM_KILLFOCUS</b></td>
<td style="vertical-align:middle">ON_WM_KILLFOCUS()</td>
<td>The framework calls this member function immediately before losing the input focus.</td>
</tr>
<tr>
<td style="vertical-align:middle"><b>WM_LBUTTONDBLCLK</b></td>
<td style="vertical-align:middle">ON_WM_LBUTTONDBLCLK()</td>
<td>The framework calls this member function when the user double-clicks the left mouse button.</td>
</tr>
<tr>
<td style="vertical-align:middle"><b>WM_LBUTTONDOWN</b></td>
<td style="vertical-align:middle">ON_WM_LBUTTONDOWN()</td>
<td>The framework calls this member function when the user presses the left mouse button.</td>
</tr>
<tr>
<td style="vertical-align:middle"><b>WM_LBUTTONUP</b></td>
<td style="vertical-align:middle">ON_WM_LBUTTONUP()</td>
<td>The framework calls this member function when the user releases the left mouse button.</td>
</tr>
<tr>
<td style="vertical-align:middle"><b>WM_MBUTTONDBLCLK</b></td>
<td style="vertical-align:middle">ON_WM_MBUTTONDBLCLK()</td>
<td>The framework calls this member function when the user double-clicks the middle mouse button.</td>
</tr>
<tr>
<td style="vertical-align:middle"><b>WM_MBUTTONDOWN</b></td>
<td style="vertical-align:middle">ON_WM_MBUTTONDOWN()</td>
<td>The framework calls this member function when the user presses the middle mouse button.</td>
</tr>
<tr>
<td style="vertical-align:middle"><b>WM_MBUTTONUP</b></td>
<td style="vertical-align:middle">ON_WM_MBUTTONUP()</td>
<td>The framework calls this member function when the user releases the middle mouse button.</td>
</tr>
<tr>
<td style="vertical-align:middle"><b>WM_MENUSELECT</b></td>
<td style="vertical-align:middle">ON_WM_MENUSELECT()</td>
<td>If the CWnd object is associated with a menu, OnMenuSelect is called by the framework when the user selects a menu item.</td>
</tr>
<tr>
<td style="vertical-align:middle"><b>WM_MOUSEACTIVATE</b></td>
<td style="vertical-align:middle">ON_WM_MOUSEACTIVATE()</td>
<td>The framework calls this member function when the cursor is in an inactive window and the user presses a mouse button.</td>
</tr>
<tr>
<td style="vertical-align:middle"><b>WM_MOUSEHOVER</b></td>
<td style="vertical-align:middle">ON_WM_MOUSEHOVER()</td>
<td>The framework calls this member function when the cursor hovers over the client area of the window for the period of time specified in a prior call to TrackMouseEvent.</td>
</tr>
<tr>
<td style="vertical-align:middle"><b>WM_MOUSEHWHEEL</b></td>
<td style="vertical-align:middle">ON_WM_MOUSEHWHEEL()</td>
<td>The framework calls this member when the current window is composed by the Desktop Window Manager (DWM), and that window is maximized.</td>
</tr>
<tr>
<td style="vertical-align:middle"><b>WM_MOUSELEAVE</b></td>
<td style="vertical-align:middle">ON_WM_MOUSELEAVE()</td>
<td>The framework calls this member function when the cursor leaves the client area of the window specified in a prior call to TrackMouseEvent.</td>
</tr>
<tr>
<td style="vertical-align:middle"><b>WM_MOUSEMOVE</b></td>
<td style="vertical-align:middle">ON_WM_MOUSEMOVE()</td>
<td>The framework calls this member function when the mouse cursor moves.</td>
</tr>
<tr>
<td style="vertical-align:middle"><b>WM_MOVE</b></td>
<td style="vertical-align:middle">ON_WM_MOVE()</td>
<td>The framework calls this member function after the CWnd object has been moved.</td>
</tr>
<tr>
<td style="vertical-align:middle"><b>WM_PAINT</b></td>
<td style="vertical-align:middle">ON_WM_PAINT()</td>
<td>The framework calls this member function when Windows or an application makes a request to repaint a portion of an application's window.</td>
</tr>
<tr>
<td style="vertical-align:middle"><b>WM_SETFOCUS()</b></td>
<td style="vertical-align:middle">ON_WM_SETFOCUS( )</td>
<td>The framework calls this member function after gaining the input focus.</td>
</tr>
<tr>
<td style="vertical-align:middle"><b>WM_SIZE( )</b></td>
<td style="vertical-align:middle">ON_WM_SIZE( )</td>
<td>The framework calls this member function after the window's size has changed.</td>
</tr>
<tr>
<td style="vertical-align:middle"><b>WM_TIMER</b></td>
<td style="vertical-align:middle">ON_WM_TIMER()</td>
<td>The framework calls this member function after each interval specified in the SetTimer member function used to install a timer.</td>
</tr>
<tr>
<td style="vertical-align:middle"><b>WM_VSCROLL</b></td>
<td style="vertical-align:middle">ON_WM_VSCROLL()</td>
<td>The framework calls this member function when the user clicks the window's vertical scroll bar.</td>
</tr>
<tr>
<td style="vertical-align:middle"><b>WM_WINDOWPOSCHANGED</b></td>
<td style="vertical-align:middle">ON_WM_WINDOWPOSCHANGED()</td>
<td>The framework calls this member function when the size, position, or Z-order has changed as a result of a call to the SetWindowPos member function or another window-management function.</td>
</tr>
</table>
</div>
</section>
<p>Let us look into a simple example of window creation.</p>
<p><b>WM_CREATE</b> &minus; When an object, called a window, is created, the frame that creates the objects sends a message identified as <b>ON_WM_CREATE</b>.</p>
<p><b>Step 1</b> &minus; To create ON_WM_CREATE, add afx_msg int OnCreate(LPCREATESTRUCT lpCreateStruct); before the DECLARE_MESSAGE_MAP() as shown below.</p>
<pre class="prettyprint notranslate">
class CMainFrame : public CFrameWnd {
   public:
      CMainFrame();
   protected:
      afx_msg int OnCreate(LPCREATESTRUCT lpCreateStruct);
      DECLARE_MESSAGE_MAP()
};
</pre>
<p><b>Step 2</b> &minus; Add the ON_WM_CREATE() after the BEGIN_MESSAGE_MAP(CMainFrame, CFrameWnd) and before END_MESSAGE_MAP()</p>
<pre class="prettyprint notranslate">
BEGIN_MESSAGE_MAP(CMainFrame, CFrameWnd)
   ON_WM_CREATE()
END_MESSAGE_MAP()
</pre>
<p><b>Step 3</b> &minus; Here is the Implementation of OnCreate()</p>
<pre class="prettyprint notranslate">
int CMainFrame::OnCreate(LPCREATESTRUCT lpCreateStruct) {
   // Call the base class to create the window
   if (CFrameWnd::OnCreate(lpCreateStruct) == 0) {

      // If the window was successfully created, let the user know
      MessageBox(L"The window has been created!!!");
      // Since the window was successfully created, return 0
      return 0;
   }
   // Otherwise, return -1
   return -1;
}
</pre>
<p><b>Step 4</b> &minus; Now your *.cpp file will look like as shown in the following code.</p>
<pre class="prettyprint notranslate">
#include &lt;afxwin.h&gt;
class CMainFrame : public CFrameWnd {
   public:
      CMainFrame();
   protected:
      afx_msg int OnCreate(LPCREATESTRUCT lpCreateStruct);
      DECLARE_MESSAGE_MAP()
};
CMainFrame::CMainFrame() {

   // Create the window's frame
   Create(NULL, L"MFC Messages Demo", WS_OVERLAPPEDWINDOW,
      CRect(120, 100, 700, 480), NULL);
}
class CMessagesApp : public CWinApp {
   public:
      BOOL InitInstance();
};
BEGIN_MESSAGE_MAP(CMainFrame, CFrameWnd)
   ON_WM_CREATE()
END_MESSAGE_MAP()
int CMainFrame::OnCreate(LPCREATESTRUCT lpCreateStruct) {
   // Call the base class to create the window
   if (CFrameWnd::OnCreate(lpCreateStruct) == 0) {
      // If the window was successfully created, let the user know
      MessageBox(L"The window has been created!!!");
      // Since the window was successfully created, return 0
      return 0;
   }
   // Otherwise, return -1
   return -1;
}
BOOL CMessagesApp::InitInstance() { 
   m_pMainWnd = new CMainFrame;
   m_pMainWnd -&gt; ShowWindow(SW_SHOW);
   m_pMainWnd -&gt; UpdateWindow();
   return TRUE;
}
CMessagesApp theApp;
</pre>
<p><b>Step 5</b> &minus; When the above code is compiled and executed, you will see the following output.</p>
<img src="/mfc/images/message.jpg" alt="Message" />
<p><b>Step 6</b> &minus; When you click OK, it will display the main window.</p>
<img src="/mfc/images/message_window.jpg" alt="Message" />
<h2>Command Messages</h2>
<p>One of the main features of a graphical application is to present Windows controls and resources that allow the user to interact with the machine. Examples of controls that we will learn are buttons, list boxes, combo boxes, etc.</p>
<p>One type of resource we introduced in the previous lesson is the menu. Such controls and resources can initiate their own messages when the user clicks them. A message that emanates from a Windows control or a resource is called a command message.</p>
<p>Let us look into a simple example of Command messages.</p>
<p>To provide your application the ability to create a new document, the CWinApp class provides the OnFileNew() method.</p>
<pre class="prettyprint notranslate">
afx_msg void OnFileNew();

BEGIN_MESSAGE_MAP(CMainFrame, CFrameWnd)
   ON_COMMAND(ID_FILE_NEW, CMainFrame::OnFileNew)
END_MESSAGE_MAP()
</pre>
<p>Here is the method definition &minus;</p>
<pre class="prettyprint notranslate">
void CMainFrame::OnFileNew() {
   // Create New file
}
</pre>
<h2>Keyboard Messages</h2>
<p>A <b>keyboard</b> is a hardware object attached to the computer. By default, it is used to enter recognizable symbols, letters, and other characters on a control. Each key on the keyboard displays a symbol, a letter, or a combination of those, to give an indication of what the key could be used for. The user typically presses a key, which sends a signal to a program.</p>
<p>Each key has a code that the operating system can recognize. This code is known as the <b>virtual key code</b>.</p>
<section class="toggle">
<label><i class="icon icon-minus"></i><i class="icon icon-plus"></i>The virtual key codes are as follows.</label>
<div class="toggle-content" style="display: none;">
<table class="table table-bordered">
<tr>
<th style="width:5%;">Sr.No.</th>
<th style="text-align:center;">Constant/value &amp; Description</th>
</tr>
<tr>
<td class="ts">1</td>
<td><p><b>VK_LBUTTON</b></p>
<p>Left mouse button</p></td>
</tr>
<tr>
<td class="ts">2</td>
<td><p><b>VK_RBUTTON</b></p>
<p>Right mouse button</p></td>
</tr>
<tr>
<td class="ts">3</td>
<td><p><b>VK_CANCEL</b></p>
<p>Control-break processing</p></td>
</tr>
<tr>
<td class="ts">4</td>
<td><p><b>VK_MBUTTON</b></p>
<p>Middle mouse button (three-button mouse)</p></td>
</tr>
<tr>
<td class="ts">5</td>
<td><p><b>VK_BACK</b></p>
<p>BACKSPACE key</p></td>
</tr>
<tr>
<td class="ts">6</td>
<td><p><b>VK_RETURN</b></p>
<p>ENTER key</p></td>
</tr>
<tr>
<td class="ts">7</td>
<td><p><b>VK_TAB</b></p>
<p>TAB key</p></td>
</tr>
<tr>
<td class="ts">8</td>
<td><p><b>VK_CLEAR</b></p>
<p>CLEAR key</p></td>
</tr>
<tr>
<td class="ts">9</td>
<td><p><b>VK_SHIFT</b></p>
<p>SHIFT key</p></td>
</tr>
<tr>
<td class="ts">10</td>
<td><p><b>VK_CONTROL</b></p>
<p>CTRL key</p></td>
</tr>
<tr>
<td class="ts">11</td>
<td><p><b>VK_MENU</b></p>
<p>ALT key</p></td>
</tr>
<tr>
<td class="ts">12</td>
<td><p><b>VK_PAUSE</b></p>
<p>PAUSE key</p></td>
</tr>
<tr>
<td class="ts">13</td>
<td><p><b>VK_CAPITAL</b></p>
<p>CAPS LOCK key</p></td>
</tr>
<tr>
<td class="ts">14</td>
<td><p><b>VK_ESCAPE</b></p>
<p>ESC key</p></td>
</tr>
<tr>
<td class="ts">15</td>
<td><p><b>VK_SPACE</b></p>
<p>SPACEBAR</p></td>
</tr>
<tr>
<td class="ts">16</td>
<td><p><b>VK_PRIOR</b></p>
<p>PAGE UP key</p></td>
</tr>
<tr>
<td class="ts">17</td>
<td><p><b>VK_NEXT</b></p>
<p>PAGE DOWN key</p></td>
</tr>
<tr>
<td class="ts">18</td>
<td><p><b>VK_END</b></p>
<p>END key</p></td>
</tr>
<tr>
<td class="ts">19</td>
<td><p><b>VK_HOME</b></p>
<p>HOME key</p></td>
</tr>
<tr>
<td class="ts">20</td>
<td><p><b>VK_LEFT</b></p>
<p>LEFT ARROW key</p></td>
</tr>
<tr>
<td class="ts">21</td>
<td><p><b>VK_UP</b></p>
<p>UP ARROW key</p></td>
</tr>
<tr>
<td class="ts">22</td>
<td><p><b>VK_RIGHT</b></p>
<p>RIGHT ARROW key</p></td>
</tr>
<tr>
<td class="ts">23</td>
<td><p><b>VK_DOWN</b></p>
<p>DOWN ARROW key</p></td>
</tr>
<tr>
<td class="ts">24</td>
<td><p><b>VK_SELECT</b></p>
<p>SELECT key</p></td>
</tr>
<tr>
<td class="ts">25</td>
<td><p><b>VK_PRINT</b></p>
<p>PRINT key</p></td>
</tr>
<tr>
<td class="ts">26</td>
<td><p><b>VK_EXECUTE</b></p>
<p>EXECUTE key</p></td>
</tr>
<tr>
<td class="ts">27</td>
<td><p><b>VK_SNAPSHOT</b></p>
<p>PRINT SCREEN key</p></td>
</tr>
<tr>
<td class="ts">28</td>
<td><p><b>VK_INSERT</b></p>
<p>INS key</p></td>
</tr>
<tr>
<td class="ts">29</td>
<td><p><b>VK_DELETE</b></p>
<p>DEL key</p></td>
</tr>
<tr>
<td class="ts">30</td>
<td><p><b>VK_NUMPAD0</b></p>
<p>Numeric keypad 0 key</p></td>
</tr>
<tr>
<td class="ts">31</td>
<td><p><b>VK_NUMPAD1</b></p>
<p>Numeric keypad 1 key</p></td>
</tr>
<tr>
<td class="ts">32</td>
<td><p><b>VK_NUMPAD2</b></p>
<p>Numeric keypad 2 key</p></td>
</tr>
<tr>
<td class="ts">33</td>
<td><p><b>VK_NUMPAD3</b></p>
<p>Numeric keypad 3 key</p></td>
</tr>
<tr>
<td class="ts">34</td>
<td><p><b>VK_NUMPAD4</b></p>
<p>Numeric keypad 4 key</p></td>
</tr>
<tr>
<td class="ts">35</td>
<td><p><b>VK_NUMPAD5</b></p>
<p>Numeric keypad 5 key</p></td>
</tr>
<tr>
<td class="ts">36</td>
<td><p><b>VK_NUMPAD6</b></p>
<p>Numeric keypad 6 key</p></td>
</tr>
<tr>
<td class="ts">37</td>
<td><p><b>VK_NUMPAD7</b></p>
<p>Numeric keypad 7 key</p></td>
</tr>
<tr>
<td class="ts">38</td>
<td><p><b>VK_NUMPAD8</b></p>
<p>Numeric keypad 8 key</p></td>
</tr>
<tr>
<td class="ts">39</td>
<td><p><b>VK_NUMPAD9</b></p>
<p>Numeric keypad 9 key</p></td>
</tr>
<tr>
<td class="ts">40</td>
<td><p><b>VK_MULTIPLY</b></p>
<p>Multiply key</p></td>
</tr>
<tr>
<td class="ts">41</td>
<td><p><b>VK_ADD</b></p>
<p>Add key</p></td>
</tr>
<tr>
<td class="ts">42</td>
<td><p><b>VK_SEPARATOR</b></p>
<p>Separator key</p></td>
</tr>
<tr>
<td class="ts">43</td>
<td><p><b>VK_SUBTRACT</b></p>
<p>Subtract key</p></td>
</tr>
<tr>
<td class="ts">44</td>
<td><p><b>VK_DECIMAL</b></p>
<p>Decimal key</p></td>
</tr>
<tr>
<td class="ts">45</td>
<td><p><b>VK_DIVIDE</b></p>
<p>Divide key</p></td>
</tr>
<tr>
<td class="ts">46</td>
<td><p><b>VK_F1</b></p>
<p>F1 key</p></td>
</tr>
<tr>
<td class="ts">47</td>
<td><p><b>VK_F2</b></p>
<p>F2 key</p></td>
</tr>
<tr>
<td class="ts">48</td>
<td><p><b>VK_F3</b></p>
<p>F3 key</p></td>
</tr>
<tr>
<td class="ts">49</td>
<td><p><b>VK_F4</b></p>
<p>F4 key</p></td>
</tr>
<tr>
<td class="ts">50</td>
<td><p><b>VK_F5</b></p>
<p>F5 key</p></td>
</tr>
<tr>
<td class="ts">52</td>
<td><p><b>VK_F6</b></p>
<p>F6 key</p></td>
</tr>
<tr>
<td class="ts">53</td>
<td><p><b>VK_F7</b></p>
<p>F7 key</p></td>
</tr>
<tr>
<td class="ts">54</td>
<td><p><b>VK_F8</b></p>
<p>F8 key</p></td>
</tr>
<tr>
<td class="ts">55</td>
<td><p><b>VK_F9</b></p>
<p>F9 key</p></td>
</tr>
<tr>
<td class="ts">56</td>
<td><p><b>VK_F10</b></p>
<p>F10 key</p></td>
</tr>
<tr>
<td class="ts">57</td>
<td><p><b>VK_F11</b></p>
<p>F11 key</p></td>
</tr>
<tr>
<td class="ts">58</td>
<td><p><b>VK_F12</b></p>
<p>F12 key</p></td>
</tr>
<tr>
<td class="ts">59</td>
<td><p><b>VK_NUMLOCK</b></p>
<p>NUM LOCK key</p></td>
</tr>
<tr>
<td class="ts">60</td>
<td><p><b>VK_SCROLL</b></p>
<p>SCROLL LOCK key</p></td>
</tr>
<tr>
<td class="ts">61</td>
<td><p><b>VK_LSHIFT</b></p>
<p>Left SHIFT key</p></td>
</tr>
<tr>
<td class="ts">62</td>
<td><p><b>VK_RSHIFT</b></p>
<p>Right SHIFT key</p></td>
</tr>
<tr>
<td class="ts">63</td>
<td><p><b>VK_LCONTROL</b></p>
<p>Left CONTROL key</p></td>
</tr>
<tr>
<td class="ts">64</td>
<td><p><b>VK_RCONTROL</b></p>
<p>Right CONTROL key</p></td>
</tr>
</table>
</div>
</section>
<p>Pressing a key causes a <a href="https://docs.microsoft.com/en-us/windows/desktop/inputdev/wm-keydown" target="_blank" rel="nofollow">WM_KEYDOWN</a> or <a href="https://docs.microsoft.com/en-us/windows/desktop/inputdev/wm-syskeydown" target="_blank" rel="nofollow">WM_SYSKEYDOWN</a> message to be placed in the thread message. This can be defined as follows &minus;</p>
<pre class="prettyprint notranslate">
afx_msg void OnKeyDown(UINT nChar, UINT nRepCnt, UINT nFlags);
</pre>
<p>Let us look into a simple example.</p>
<p><b>Step 1</b> &minus; Here is the message.</p>
<pre class="prettyprint notranslate">
BEGIN_MESSAGE_MAP(CMainFrame, CFrameWnd)
   ON_WM_CREATE()
   ON_WM_KEYDOWN()
END_MESSAGE_MAP()
</pre>
<p><b>Step 2</b> &minus; Here is the implementation of OnKeyDown().</p>
<pre class="prettyprint notranslate">
void CMainFrame::OnKeyDown(UINT nChar, UINT nRepCnt, UINT nFlags) {
   switch (nChar) {

      case VK_RETURN:
         MessageBox(L"You pressed Enter");
         break;
      case VK_F1:
         MessageBox(L"Help is not available at the moment");
         break;
      case VK_DELETE:
         MessageBox(L"Can't Delete This");
         break;
      default:
         MessageBox(L"Whatever");
   }
}
</pre>
<p><b>Step 3</b> &minus; When the above code is compiled and executed, you will see the following output.</p>
<img src="/mfc/images/message_window.jpg" alt="Message Window" />
<p><b>Step 4</b> &minus; When you press Enter, it will display the following message.</p>
<img src="/mfc/images/message_output.jpg" alt="Message Output" />
<h2>Mouse Messages</h2>
<p>The mouse is another object that is attached to the computer allowing the user to interact with the machine.</p>
<ul class="list">
<li><p>If the left mouse button was pressed, an ON_WM_LBUTTONDOWN message is sent. The syntax of this message is &minus; </p>
<ul class="list">
<li><p>afx_msg void OnLButtonDown(UINT nFlags, CPoint point)</p></li>
</ul>
</li>
<li><p>If the right mouse button was pressed, an ON_WM_RBUTTONDOWN message is sent. Its syntax is &minus;</p>
<ul class="list">
<li><p>afx_msg void OnRButtonDown(UINT nFlags, CPoint point)</p></li>
</ul>
</li>
<li><p>Similarly If the left mouse is being released, the ON_WM_LBUTTONUP message is sent. Its syntax is &minus;</p>
<ul class="list">
<li><p>afx_msg void OnLButtonUp(UINT nFlags, CPoint point)</p></li>
</ul>
</li>
<li><p>If the right mouse is being released, the ON_WM_TBUTTONUP message is sent. Its syntax is &minus;</p>
<ul class="list">
<li><p>afx_msg void OnRButtonUp(UINT nFlags, CPoint point)</p></li>
</ul>
</li>
</ul>
<p>Let us look into a simple example.</p>
<p><b>Step 1</b> &minus; Add the following two functions in CMainFrame class definition as shown in the following code.</p>
<pre class="prettyprint notranslate">
class CMainFrame : public CFrameWnd {
   public:
      CMainFrame();
   protected:
      afx_msg void OnKeyDown(UINT nChar, UINT nRepCnt, UINT nFlags);
      afx_msg void OnLButtonDown(UINT nFlags, CPoint point);
      afx_msg void OnRButtonUp(UINT nFlags, CPoint point);
      DECLARE_MESSAGE_MAP()
};
</pre>
<p><b>Step 2</b> &minus; Add the following two Message Maps.</p>
<pre class="prettyprint notranslate">
BEGIN_MESSAGE_MAP(CMainFrame, CFrameWnd)
   ON_WM_KEYDOWN()
   ON_WM_LBUTTONDOWN()
   ON_WM_RBUTTONUP()
END_MESSAGE_MAP()
</pre>
<p><b>Step 3</b> &minus; Here is the functions definition.</p>
<pre class="prettyprint notranslate">
void CMainFrame::OnLButtonDown(UINT nFlags, CPoint point) { 
   CString MsgCoord;
   MsgCoord.Format(L"Left Button at P(%d, %d)", point.x, point.y);
   MessageBox(MsgCoord);
}
void CMainFrame::OnRButtonUp(UINT nFlags, CPoint point) { 
   MessageBox(L"Right Mouse Button Up");
}
</pre>
<p><b>Step 4</b> &minus; When you run this application, you will see the following output.</p>
<img src="/mfc/images/message_window.jpg" alt="Mouse Messages" />
<p><b>Step 5</b> &minus; When you click OK, you will see the following message.</p>
<img src="/mfc/images/mouse_messages2.jpg" alt="Mouse Messages" />
<p><b>Step 6</b> &minus; Right-click on this window. Now, when you release the right button of the mouse, it will display the following message.</p>
<img src="/mfc/images/mouse_messages3.jpg" alt="Mouse Messages" />
<div class="mui-container-fluid button-borders show">
<div class="pre-btn">
<a href="/mfc/mfc_windows_controls.htm"><i class="fal fa-chevron-circle-left"></i> Previous Page</a>
</div>
<div class="nxt-btn">
<a href="/mfc/mfc_activex_control.htm">Next Page <i class="fal fa-chevron-circle-right"></i>&nbsp;</a>
</div>
</div>
<div class="google-bottom-ads">
<div>Advertisements</div>
<script><!--
var width = 580;
var height = 400;
var format = "580x400_as";
if( window.innerWidth < 468 ){
   width = 300;
   height = 250;
   format = "300x250_as";
}
google_ad_client = "pub-7133395778201029";
google_ad_width = width;
google_ad_height = height;
google_ad_format = format;
google_ad_type = "image";
google_ad_channel ="";
//--></script>
<script src="https://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
<div class="space-bottom"></div>
</div>
</div>
<!-- Tutorial Content Ends Here -->
<!-- Right Column Starts Here -->
<div class="mui-col-md-2 google-right-ads">
<div class="space-top"></div>
<div class="google-right-ad" style="margin: 0px auto !important;margin-top:5px;">
<script><!--
google_ad_client = "pub-2537027957187252";
google_ad_width = 300;
google_ad_height = 250;
google_ad_format = "300x250_as";
google_ad_type = "image";
google_ad_channel ="";
//--></script>
<script src="https://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</div>
<div class="google-right-ad">
<div class="adsbyvli" data-ad-slot="vi_9012177"></div>
<script>(vitag.Init = window.vitag.Init || []).push(function(){viAPItag.display("vi_9012177")})</script>
</div>
<div class="space-bottom"></div>
<div class="google-right-ad">
<div class="adsbyvli" data-ad-slot="vi_9013289"></div>
<script>(vitag.Init = window.vitag.Init || []).push(function(){viAPItag.display("vi_9013289")})</script>
</div>
<div class="space-bottom" style="margin-bottom:15px;"></div>
</div>
<!-- Right Column Ends Here -->
</div>
</div>
<div class="clear"></div>
<footer id="footer">
<div class="mui--text-center">
<div class="mui--text-caption mui--text-light">
<a href="/index.htm" class="logo"><img class="img-responsive" src="/images/logo-black.png" alt="Tutorials Point" title="Tutorials Point"></a>
</div>
<ul class="mui-list--inline mui--text-body2 mui--text-light">
<li><a href="/about/index.htm"><i class="fal fa-globe"></i> About us</a></li>
<li><a href="/about/about_terms_of_use.htm"><i class="fal fa-asterisk"></i> Terms of use</a></li>
<li><a href="/about/about_privacy.htm#cookies"> <i class="fal fa-shield-check"></i> Cookies Policy</a></li>
<li><a href="/about/faq.htm"><i class="fal fa-question-circle"></i> FAQ's</a></li>
<li><a href="/about/about_helping.htm"><i class="fal fa-hands-helping"></i> Helping</a></li>
<li><a href="/about/contact_us.htm"><i class="fal fa-map-marker-alt"></i> Contact</a></li>
</ul>
<div class="mui--text-caption mui--text-light bottom-copyright-text">&copy; Copyright 2019. All Rights Reserved.</div>
</div>
<div id="privacy-banner">
  <div>
    <p>
      We use cookies to provide and improve our services. By using our site, you consent to our Cookies Policy.
      <a id="banner-accept" href="#">Accept</a>
      <a id="banner-learn" href="/about/about_cookies.htm" target="_blank">Learn more</a>
    </p>
  </div>
</div>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-232293-17"></script>
<script>
window.dataLayer = window.dataLayer || [];
function gtag(){dataLayer.push(arguments);}
gtag('js', new Date());
gtag('config', 'UA-232293-6');
</script>
</footer>
</body>
</html>
