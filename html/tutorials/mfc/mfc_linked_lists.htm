<!DOCTYPE html>
<html lang="en-US">
<head>
<title>MFC - Linked Lists</title>
<meta charset="utf-8">
<meta name="description" content="MFC - Linked Lists - A linked list is a linear data structure where each element is a separate object. Each element (we will call it a node) of a list comprises two items â the"/>
<meta name="keywords" content="C, C++, Python, Java, HTML, CSS, JavaScript, SQL, PHP, jQuery, XML, DOM, Bootstrap, Tutorials, Articles, Programming, training, learning, quiz, preferences, examples, code"/>
<link rel="canonical" href="https://www.tutorialspoint.com/mfc/mfc_linked_lists.htm" />
<link rel="shortcut icon" href="/favicon.ico" type="image/x-icon" />
<meta name="viewport" content="width=device-width,initial-scale=1.0,user-scalable=yes">
<script src="/theme/js/script-min-v2.js?v=3"></script>
<link rel="stylesheet" href="/theme/css/style-min-v2.css?v=6">
<script src="//services.bilsyndication.com/adv1/?d=901" defer="" async=""></script>
<script> var vitag = vitag || {};</script>
<script> vitag.outStreamConfig = { enablePC: false, enableMobile: false };</script>  
<style>
.right-menu .mui-btn {
    background-color:#e94701;
}
a.demo {
    background:#e94701;
}
li.heading {
    background:#e94701;
}
.course-box{background:#e94701}
.home-intro-sub p{color:#e94701}
</style>
</head>
<body>
<header id="header">
<!-- Top sub-menu Starts Here -->
<div class="mui-appbar mui-container-fulid top-menu">
<div class="mui-container">
<div class="top-menu-item home">
<a href="https://www.tutorialspoint.com/index.htm" target="_blank" title="TutorialsPoint - Home"><i class="fal fa-home"></i> <span>Home</span></a>
</div>
<div class="top-menu-item qa">
<a href="https://www.tutorialspoint.com/about/about_careers.htm" target="_blank" title="Job @ Tutorials Point"><i class="fa fa-suitcase"></i> <span>Jobs</span></a>
</div>
<div class="top-menu-item tools">
<a href="https://www.tutorialspoint.com/online_dev_tools.htm" target="_blank" title="Tools - Online Development and Testing Tools"><i class="fal fa-cogs"></i> <span>Tools</span></a>
</div>
<div class="top-menu-item coding-ground">
<a href="https://www.tutorialspoint.com/codingground.htm" target="_blank" title="Coding Ground - Free Online IDE and Terminal"><i class="fal fa-code"></i> <span>Coding Ground </span></a> 
</div>
<div class="top-menu-item current-affairs">
<a href="https://www.tutorialspoint.com/current_affairs.htm" target="_blank" title="Daily Current Affairs"><i class="fal fa-layer-plus"></i> <span>Current Affairs</span></a>
</div>
<div class="top-menu-item upsc-notes">
<a href="https://www.tutorialspoint.com/upsc_ias_exams.htm" target="_blank" title="UPSC IAS Exams Notes - TutorialsPoint"><i class="fal fa-user-tie"></i> <span>UPSC Notes</span></a>
</div>      
<div class="top-menu-item online-tutoris">
<a href="https://www.tutorialspoint.com/tutor_connect/index.php" target="_blank" title="Top Online Tutors - Tutor Connect"><i class="fal fa-user"></i> <span>Online Tutors</span></a>
</div>
<div class="top-menu-item whiteboard">
<a href="https://www.tutorialspoint.com/whiteboard.htm" target="_blank" title="Free Online Whiteboard"><i class="fal fa-chalkboard"></i> <span>Whiteboard</span></a>
</div>
<div class="top-menu-item net-meeting">
<a href="https://www.tutorialspoint.com/netmeeting.php" target="_blank" title="A free tool for online video conferencing"><i class="fal fa-chalkboard-teacher"></i> <span>Net Meeting</span></a> 
</div>
<div class="top-menu-item articles">
<a href="https://www.tutorix.com" target="_blank" title="Tutorx - The Best Learning App" rel="nofollow"><i class="fal fa-video"></i> <span>Tutorix</span></a> 
</div>        
<div class="social-menu-item">
<a href="https://www.facebook.com/tutorialspointindia" target="_blank" rel="nofollow" data-placement="bottom" title="tutorialspoint @ Facebook"><i class="fab fa-facebook-f"></i></a> 
<a href="https://www.twitter.com/tutorialspoint" target="_blank" rel="nofollow" data-placement="bottom" title="tutorialspoint @ Twitter"><i class="fab fa-twitter"></i></a>
<a href="https://www.linkedin.com/company/tutorialspoint" target="_blank" rel="nofollow" data-placement="bottom" title="tutorialspoint @ Linkedin"><i class="fab fa-linkedin-in"></i></a>
<a href="https://www.youtube.com/channel/UCVLbzhxVTiTLiVKeGV7WEBg" target="_blank" rel="nofollow" data-placement="bottom" title="tutorialspoint YouTube"><i class="fab fa-youtube"></i></a>
</div>        
</div>
</div>
<!-- Top sub-menu Ends Here -->
<!-- Top main-menu Starts Here -->
<div class="mui-appbar mui-container-fulid mui--appbar-line-height mui--z1" id="logo-menu">
<div class="mui-container">
<div class="left-menu">
<a href="https://www.tutorialspoint.com/index.htm" title="Tutorialspoint">
<img class="tp-logo" alt="tutorialspoint" src="/mfc/images/logo.png">
</a>
<div class="mui-dropdown">
<a class="mui-btn mui-btn--primary categories" data-mui-toggle="dropdown"><i class="fa fa-th-large"></i> 
<span>Categories <span class="mui-caret"></span></span></a>            
<ul class="mui-dropdown__menu cat-menu">
<li>
<ul>
<li><a href="/academic_tutorials.htm"><i class="fa fa-caret-right"></i> Academic Tutorials</a></li>
<li><a href="/big_data_tutorials.htm"><i class="fa fa-caret-right"></i> Big Data &amp; Analytics </a></li>
<li><a href="/computer_programming_tutorials.htm"><i class="fa fa-caret-right"></i> Computer Programming </a></li>
<li><a href="/computer_science_tutorials.htm"><i class="fa fa-caret-right"></i> Computer Science </a></li>
<li><a href="/database_tutorials.htm"><i class="fa fa-caret-right"></i> Databases </a></li>
<li><a href="/devops_tutorials.htm"><i class="fa fa-caret-right"></i> DevOps </a></li>
<li><a href="/digital_marketing_tutorials.htm"><i class="fa fa-caret-right"></i> Digital Marketing </a></li>
<li><a href="/engineering_tutorials.htm"><i class="fa fa-caret-right"></i> Engineering Tutorials </a></li>
<li><a href="/upsc_ias_exams.htm"><i class="fa fa-caret-right"></i> Exams Syllabus </a></li>
<li><a href="/famous_monuments.htm"><i class="fa fa-caret-right"></i> Famous Monuments </a></li>
<li><a href="/gate_exams_tutorials.htm"><i class="fa fa-caret-right"></i> GATE Exams Tutorials</a></li>
<li><a href="/latest_technologies.htm"><i class="fa fa-caret-right"></i> Latest Technologies </a></li>
<li><a href="/machine_learning_tutorials.htm"><i class="fa fa-caret-right"></i> Machine Learning </a></li>
<li><a href="/mainframe_tutorials.htm"><i class="fa fa-caret-right"></i> Mainframe Development </a></li>
<li><a href="/management_tutorials.htm"><i class="fa fa-caret-right"></i> Management Tutorials </a></li>
<li><a href="/maths_tutorials.htm"><i class="fa fa-caret-right"></i> Mathematics Tutorials</a></li>
<li><a href="/microsoft_technologies_tutorials.htm"><i class="fa fa-caret-right"></i> Microsoft Technologies </a></li>
<li><a href="/misc_tutorials.htm"><i class="fa fa-caret-right"></i> Misc tutorials </a></li>
<li><a href="/mobile_development_tutorials.htm"><i class="fa fa-caret-right"></i> Mobile Development </a></li>
<li><a href="/java_technology_tutorials.htm"><i class="fa fa-caret-right"></i> Java Technologies </a></li>
<li><a href="/python_technologies_tutorials.htm"><i class="fa fa-caret-right"></i> Python Technologies </a></li>
<li><a href="/sap_tutorials.htm"><i class="fa fa-caret-right"></i> SAP Tutorials </a></li>
<li><a href="/scripting_lnaguage_tutorials.htm"><i class="fa fa-caret-right"></i>Programming Scripts </a></li>
<li><a href="/selected_reading.htm"><i class="fa fa-caret-right"></i> Selected Reading </a></li>
<li><a href="/software_quality_tutorials.htm"><i class="fa fa-caret-right"></i> Software Quality </a></li>
<li><a href="/soft_skill_tutorials.htm"><i class="fa fa-caret-right"></i> Soft Skills </a></li>
<li><a href="/telecom_tutorials.htm"><i class="fa fa-caret-right"></i> Telecom Tutorials </a></li>
<li><a href="/upsc_ias_exams.htm"><i class="fa fa-caret-right"></i> UPSC IAS Exams </a></li>
<li><a href="/web_development_tutorials.htm"><i class="fa fa-caret-right"></i> Web Development </a></li>
<li><a href="/sports_tutorials.htm"><i class="fa fa-caret-right"></i> Sports Tutorials </a></li>
<li><a href="/xml_technologies_tutorials.htm"><i class="fa fa-caret-right"></i> XML Technologies </a></li>
<li><a href="/multi_language_tutorials.htm"><i class="fa fa-caret-right"></i> Multi-Language Tutorials</a></li>
<li><a href="/questions_and_answers.htm"><i class="fa fa-caret-right"></i> Interview Questions</a></li>
</ul>
</li>
</ul>
<div class="clear"></div>
</div> 
</div>
<div class="right-menu">
<div class="toc-toggle">
<a href="javascript:void(0);"><i class="fa fa-bars"></i></a>
</div>
<div class="mobile-search-btn">
<a href="https://www.tutorialspoint.com/search.htm"><i class="fal fa-search"></i></a>
</div>
<div class="search-box">
<form method="get" class="" name="searchform" action="https://www.google.com/search" target="_blank" novalidate="">
<input type="hidden" name="sitesearch" value="www.tutorialspoint.com" class="user-valid valid">
<input class="header-search-box" type="text" id="search-string" name="q" placeholder="Search your favorite tutorials..." onfocus="if (this.value == 'Search your favorite tutorials...') {this.value = '';}" onblur="if (this.value == '') {this.value = 'Search your favorite tutorials...';}" autocomplete="off">
<button><i class="fal fa-search"></i></button>
</form>
</div>
<div class="menu-btn library-btn">
<a href="https://www.tutorialspoint.com/tutorialslibrary.htm"><i class="fal fa-cubes"></i> <span>Library</span></a>
</div>
<div class="menu-btn videos-btn">
<a href="https://www.tutorialspoint.com/videotutorials/index.htm"><i class="fal fa-video"></i> <span>Videos</span></a> 
</div>
<div class="menu-btn videos-btn">
<a href="https://www.tutorialspoint.com/questions/index.php"><i class="fa fa-location-arrow"></i> <span>Q/A</span></a>
</div>
<div class="menu-btn ebooks-btn">
<a href="https://store.tutorialspoint.com"><i class="fal fa-book"></i> <span>eBooks</span></a>
</div>
<div class="mui-dropdown">
<button class="mui-btn mui-btn--primary" data-mui-toggle="dropdown">
<span class="mui-caret"></span>
</button>
<ul class="mui-dropdown__menu">
<li><a href="https://www.tutorialspoint.com/tutorialslibrary.htm"><i class="fal fa-cubes"></i> <span>Library</span></a></li>
<li><a href="https://www.tutorialspoint.com/videotutorials/index.htm"><i class="fal fa-video"></i> <span>Videos</span></a></li>
<li><a href="https://store.tutorialspoint.com"><i class="fal fa-book"></i> <span>eBooks</span></a></li>
</ul>
</div>
</div>
</div>
</div>
<!-- Top main-menu Ends Here -->
</header>
<div class="mui-container-fluid content">
<div class="mui-container">
<!-- Tutorial ToC Starts Here -->
<div class="mui-col-md-3 tutorial-toc">
<div class="mini-logo">
<img src="/mfc/images/mfc-mini-logo.jpg" alt="MFC Tutorial" />
</div>
<ul class="toc chapters">
<li class="heading">MFC Tutorial</li>
<li><a href="/mfc/index.htm">MFC - Home</a></li>
<li><a href="/mfc/mfc_overview.htm">MFC - Overview</a></li>
<li><a href="/mfc/mfc_environment_setup.htm">MFC - Environment Setup</a></li>
<li><a href="/mfc/mfc_vcplusplus_projects.htm">MFC - VC++ Projects</a></li>
<li><a href="/mfc/mfc_getting_started.htm">MFC - Getting Started</a></li>
<li><a href="/mfc/mfc_windows_fundamentals.htm">MFC - Windows Fundamentals</a></li>
<li><a href="/mfc/mfc_dialog_boxes.htm">MFC - Dialog Boxes</a></li>
<li><a href="/mfc/mfc_windows_resources.htm">MFC - Windows Resources</a></li>
<li><a href="/mfc/mfc_property_sheets.htm">MFC - Property Sheets</a></li>
<li><a href="/mfc/mfc_windows_layout.htm">MFC - Windows Layout</a></li>
<li><a href="/mfc/mfc_controls_management.htm">MFC - Controls Management</a></li>
<li><a href="/mfc/mfc_windows_controls.htm">MFC - Windows Controls</a></li>
<li><a href="/mfc/mfc_messages_events.htm">MFC - Messages &amp; Events</a></li>
<li><a href="/mfc/mfc_activex_control.htm">MFC - Activex Controls</a></li>
<li><a href="/mfc/mfc_file_system.htm">MFC - File System</a></li>
<li><a href="/mfc/mfc_standard_io.htm">MFC - Standard I/O</a></li>
<li><a href="/mfc/mfc_document_view.htm">MFC - Document View</a></li>
<li><a href="/mfc/mfc_strings.htm">MFC - Strings</a></li>
<li><a href="/mfc/mfc_carray.htm">MFC - Carray</a></li>
<li><a href="/mfc/mfc_linked_lists.htm">MFC - Linked Lists</a></li>
<li><a href="/mfc/mfc_database_classes.htm">MFC - Database Classes</a></li>
<li><a href="/mfc/mfc_serialization.htm">MFC - Serialization</a></li>
<li><a href="/mfc/mfc_multithreading.htm">MFC - Multithreading</a></li>
<li><a href="/mfc/mfc_internet_programming.htm">MFC - Internet Programming</a></li>
<li><a href="/mfc/mfc_gdi.htm">MFC - GDI</a></li>
<li><a href="/mfc/mfc_libraries.htm">MFC - Libraries</a></li>
</ul>
<ul class="toc chapters">
<li class="heading">MFC Useful Resources</li>
<li><a href="/mfc/mfc_quick_guide.htm">MFC - Quick Guide</a></li>
<li><a href="/mfc/mfc_useful_resources.htm">MFC - Useful Resources</a></li>
<li><a href="/mfc/mfc_discussion.htm">MFC - Discussion</a></li>
</ul>
<ul class="toc reading">
<li class="sreading">Selected Reading</li>
<li><a target="_top" href="/upsc_ias_exams.htm">UPSC IAS Exams Notes</a></li>
<li><a target="_top" href="/developers_best_practices/index.htm">Developer's Best Practices</a></li>
<li><a target="_top" href="/questions_and_answers.htm">Questions and Answers</a></li>
<li><a target="_top" href="/effective_resume_writing.htm">Effective Resume Writing</a></li>
<li><a target="_top" href="/hr_interview_questions/index.htm">HR Interview Questions</a></li>
<li><a target="_top" href="/computer_glossary.htm">Computer Glossary</a></li>
<li><a target="_top" href="/computer_whoiswho.htm">Who is Who</a></li>
</ul>
</div>
<!-- Tutorial ToC Ends Here -->
<!-- Tutorial Content Starts Here -->
<div class="mui-col-md-6 tutorial-content">
<h1>MFC - Linked Lists</h1>
<hr />
<div class="top-ad-heading">Advertisements</div>
<div style="text-align: center;">
<script><!--
google_ad_client = "pub-7133395778201029";
var width = document.getElementsByClassName("tutorial-content")[0].clientWidth - 40;
google_ad_width = width;
google_ad_height = 150;
google_ad_format = width + "x150_as";
google_ad_type = "image";
google_ad_channel = "";
//--></script>
<script src="https://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</div>
<div class="mui-container-fluid button-borders">
<div class="pre-btn">
<a href="/mfc/mfc_carray.htm"><i class="fal fa-chevron-circle-left"></i> Previous Page</a>
</div>
<div class="nxt-btn">
<a href="/mfc/mfc_database_classes.htm">Next Page <i class="fal fa-chevron-circle-right"></i>&nbsp;</a>
</div>
</div>
<div class="clearer"></div>
<p>A <b>linked list</b> is a linear data structure where each element is a separate object. Each element (we will call it a node) of a list comprises two items — the data and a reference to the next node. The last node has a reference to null.</p>
<p>A linked list is a data structure consisting of a group of nodes which together represent a sequence. It is a way to store data with structures so that the programmer can automatically create a new place to store data whenever necessary. Some of its salient features are &minus;</p>
<ul class="list">
<li><p>Linked List is a sequence of links which contains items.</p></li>
<li><p>Each link contains a connection to another link.</p></li>
<li><p>Each item in the list is called a node.</p></li>
<li><p>If the list contains at least one node, then a new node is positioned as the last element in the list.</p></li>
<li><p>If the list has only one node, that node represents the first and the last item.</p></li>
</ul>
<p>There are two types of link list &minus;</p>
<h2>Singly Linked List</h2>
<p>Singly Linked Lists are a type of data structure. In a singly linked list, each node in the list stores the contents of the node and a pointer or reference to the next node in the list.</p>
<img src="/mfc/images/single_linked_list.jpg" alt="Single Linked List" />
<h2>Doubly Linked List</h2>
<p>A doubly linked list is a linked data structure that consists of a set of sequentially linked records called nodes. Each node contains two fields that are references to the previous and to the next node in the sequence of nodes.</p>
<img src="/mfc/images/double_linked_list.jpg" alt="Double Linked List" />
<h2>CList Class</h2>
<p>MFC provides a class <b>CList</b> which is a template linked list implementation and works perfectly. CList lists behave like doubly-linked lists. A variable of type POSITION is a key for the list. You can use a POSITION variable as an iterator to traverse a list sequentially and as a bookmark to hold a place.</p> 
<section class="toggle">
<label><i class="icon icon-minus"></i><i class="icon icon-plus"></i>Here is the list of methods in CList class.</label>
<div class="toggle-content" style="display: none;">
<table class="table table-bordered">
<tr>
<th style="width:5%;">Sr.No.</th>
<th style="text-align:center;">Name &amp; Description</th>
</tr>
<tr>
<td class="ts">1</td>
<td><p><b>AddHead</b></p>
<p>Adds an element (or all the elements in another list) to the head of the list (makes a new head).</p></td>
</tr>
<tr>
<td class="ts">2</td>
<td><p><b>AddTail</b></p>
<p>Adds an element (or all the elements in another list) to the tail of the list (makes a new tail).</p></td>
</tr>
<tr>
<td class="ts">3</td>
<td><p><b>Find</b></p>
<p>Gets the position of an element specified by pointer value.</p></td>
</tr>
<tr>
<td class="ts">4</td>
<td><p><b>FindIndex</b></p>
<p>Gets the position of an element specified by a zero-based index.</p></td>
</tr>
<tr>
<td class="ts">5</td>
<td><p><b>GetAt</b></p>
<p>Gets the element at a given position.</p></td>
</tr>
<tr>
<td class="ts">6</td>
<td><p><b>GetCount</b></p>
<p>Returns the number of elements in this list.</p></td>
</tr>
<tr>
<td class="ts">7</td>
<td><p><b>GetHead</b></p>
<p>Returns the head element of the list (cannot be empty).</p></td>
</tr>
<tr>
<td class="ts">8</td>
<td><p><b>GetHeadPosition</b></p>
<p>Returns the position of the head element of the list.</p></td>
</tr>
<tr>
<td class="ts">9</td>
<td><p><b>GetNext</b></p>
<p>Gets the next element for iterating.</p></td>
</tr>
<tr>
<td class="ts">10</td>
<td><p><b>GetPrev</b></p>
<p>Gets the previous element for iterating.</p></td>
</tr>
<tr>
<td class="ts">11</td>
<td><p><b>GetSize</b></p>
<p>Returns the number of elements in this list.</p></td>
</tr>
<tr>
<td class="ts">12</td>
<td><p><b>GetTail</b></p>
<p>Returns the tail element of the list (cannot be empty).</p></td>
</tr>
<tr>
<td class="ts">13</td>
<td><p><b>GetTailPosition</b></p>
<p>Returns the position of the tail element of the list.</p></td>
</tr>
<tr>
<td class="ts">14</td>
<td><p><b>InsertAfter</b></p>
<p>Inserts a new element after a given position.</p></td>
</tr>
<tr>
<td class="ts">15</td>
<td><p><b>InsertBefore</b></p>
<p>Inserts a new element before a given position.</p></td>
</tr>
<tr>
<td class="ts">16</td>
<td><p><b>IsEmpty</b></p>
<p>Tests for the empty list condition (no elements).</p></td>
</tr>
<tr>
<td class="ts">17</td>
<td><p><b>RemoveAll</b></p>
<p>Removes all the elements from this list.</p></td>
</tr>
<tr>
<td class="ts">18</td>
<td><p><b>RemoveAt</b></p>
<p>Removes an element from this list, specified by position.</p></td>
</tr>
<tr>
<td class="ts">19</td>
<td><p><b>RemoveHead</b></p>
<p>Removes the element from the head of the list.</p></td>
</tr>
<tr>
<td class="ts">20</td>
<td><p><b>RemoveTail</b></p>
<p>Removes the element from the tail of the list.</p></td>
</tr>
<tr>
<td class="ts">21</td>
<td><p><b>SetAt</b></p>
<p>Sets the element at a given position.</p></td>
</tr>
</table>
</div>
</section>
<p>Following are the different operations on CList objects &minus;</p>
<h2>Create CList Object</h2>
<p>To create a collection of CList values or objects, you must first decide the type of values of the collection. You can use one of the existing primitive data types such as int, CString, double etc. as shown below in the following code.</p>
<pre class="prettyprint notranslate">
CList&lt;double, double&gt;m_list;
</pre>
<h2>Add items</h2>
<p>To add an item, you can use CList::AddTail() function. It adds an item at the end of the list. To add an element at the start of the list, you can use the CList::AddHead() function. In the OnInitDialog() CList, object is created and four values are added as shown in the following code.</p>
<pre class="prettyprint notranslate">
CList&lt;double, double&gt;m_list;

//Add items to the list
m_list.AddTail(100.75);
m_list.AddTail(85.26);
m_list.AddTail(95.78);
m_list.AddTail(90.1);

</pre>
<h2>Retrieve Items</h2>
<p>A variable of type POSITION is a key for the list. You can use a POSITION variable as an iterator to traverse a list sequentially.</p>
<p><b>Step 1</b> &minus; To retrieve the element from the list, we can use the following code which will retrieve all the values.</p>
<pre class="prettyprint notranslate">
//iterate the list
POSITION pos = m_list.GetHeadPosition();
while (pos) { 
   double nData = m_list.GetNext(pos);
   CString strVal;
   strVal.Format(L"%.2f\n", nData);
   m_strText.Append(strVal);
}
</pre>
<p><b>Step 2</b> &minus; Here is the complete CMFCCListDemoDlg::OnInitDialog() function.</p>
<pre class="prettyprint notranslate">
BOOL CMFCCListDemoDlg::OnInitDialog() {
   CDialogEx::OnInitDialog();

   // Set the icon for this dialog. The framework does this automatically
   // when the application's main window is not a dialog
   SetIcon(m_hIcon, TRUE);             // Set big icon
   SetIcon(m_hIcon, FALSE);             // Set small icon

   // TODO: Add extra initialization here
   CList&lt;double, double&gt;m_list;

   //Add items to the list
   m_list.AddTail(100.75);
   m_list.AddTail(85.26);
   m_list.AddTail(95.78);
   m_list.AddTail(90.1);

   //iterate the list
   POSITION pos = m_list.GetHeadPosition();
   while (pos) {
      double nData = m_list.GetNext(pos);
      CString strVal;
      strVal.Format(L"%.f\n", nData);
      m_strText.Append(strVal);
   }

   UpdateData(FALSE);
 
   return TRUE; // return TRUE unless you set the focus to a control
}
</pre>
<p><b>Step 3</b> &minus; When the above code is compiled and executed, you will see the following output.</p>
<img src="/mfc/images/retrieve.jpg" alt="Retrieve" />
<h2>Add Items in the Middle</h2>
<p>To add item in the middle of the list, you can use the CList::.InsertAfter() and CList::.InsertBefore() functions. It takes two paramerters — First, the position (where it can be added) and Second, the value.</p>
<p><b>Step 1</b> &minus; Let us insert a new item as shown in the followng code.</p>
<pre class="prettyprint notranslate">
BOOL CMFCCListDemoDlg::OnInitDialog() {
   CDialogEx::OnInitDialog();
   
   // Set the icon for this dialog. The framework does this automatically
   // when the application's main window is not a dialog
   SetIcon(m_hIcon, TRUE);             // Set big icon
   SetIcon(m_hIcon, FALSE);          // Set small icon

   // TODO: Add extra initialization here
   CList&lt;double, double&gt;m_list;

   //Add items to the list
   m_list.AddTail(100.75);
   m_list.AddTail(85.26);
   m_list.AddTail(95.78);
   m_list.AddTail(90.1);

   POSITION position = m_list.Find(85.26);
   m_list.InsertBefore(position, 200.0);
   m_list.InsertAfter(position, 300.0);

   //iterate the list
   POSITION pos = m_list.GetHeadPosition();
   while (pos) {
      double nData = m_list.GetNext(pos);
      CString strVal;
      strVal.Format(L"%.2f\n", nData);
      m_strText.Append(strVal);
   }

   UpdateData(FALSE);

   return TRUE; // return TRUE unless you set the focus to a control
}
</pre>
<p><b>Step 2</b> &minus; You can now see see that we first retrieved the position of value 85.26 and then inserted one element before and one element after that value.</p>
<p><b>Step 3</b> &minus; When the above code is compiled and executed, you will see the following output.</p>
<img src="/mfc/images/adding_item.jpg" alt="Adding Item" />
<h2>Update Item Value</h2>
<p>To update item at the middle of array, you can use the CArray::.SetAt() function. It takes two paramerters — First, the position and Second, the value.</p>
<p>Let us update the 300.00 to 400 in the list as shown in the following code.</p>
<pre class="prettyprint notranslate">
BOOL CMFCCListDemoDlg::OnInitDialog() {
   CDialogEx::OnInitDialog();

   // Set the icon for this dialog. The framework does this automatically
   // when the application's main window is not a dialog
   SetIcon(m_hIcon, TRUE);              // Set big icon
   SetIcon(m_hIcon, FALSE);            // Set small icon

   // TODO: Add extra initialization here
   CList&lt;double, double&gt;m_list;

   //Add items to the list
   m_list.AddTail(100.75);
   m_list.AddTail(85.26);
   m_list.AddTail(95.78);
   m_list.AddTail(90.1);

   POSITION position = m_list.Find(85.26);
   m_list.InsertBefore(position, 200.0);
   m_list.InsertAfter(position, 300.0);

   position = m_list.Find(300.00);
   m_list.SetAt(position, 400.00);

   //iterate the list
   POSITION pos = m_list.GetHeadPosition();
   while (pos) {
      double nData = m_list.GetNext(pos);
      CString strVal;
      strVal.Format(L"%.2f\n", nData);
      m_strText.Append(strVal);
   }

   UpdateData(FALSE);

   return TRUE; // return TRUE unless you set the focus to a control
}
</pre>
<p>When the above code is compiled and executed, you will see the following output. You can now see that the value of 300.00 is updated to 400.00.</p>
<img src="/mfc/images/updating_item.jpg" alt="Updating Item" />
<h2>Remove Items</h2>
<p>To remove any particular item, you can use CList::RemoveAt() function. To remove all the element from the list, CList::RemoveAll() function can be used.</p>
<p>Let us remove the element, which has 95.78 as its value.</p>
<pre class="prettyprint notranslate">
BOOL CMFCCListDemoDlg::OnInitDialog() {
   CDialogEx::OnInitDialog();

   // Set the icon for this dialog. The framework does this automatically
   // when the application's main window is not a dialog
   SetIcon(m_hIcon, TRUE);              // Set big icon
   SetIcon(m_hIcon, FALSE);             // Set small icon

   // TODO: Add extra initialization here
   CList&lt;double, double&gt;m_list;

   //Add items to the list
   m_list.AddTail(100.75);
   m_list.AddTail(85.26);
   m_list.AddTail(95.78);
   m_list.AddTail(90.1);

   POSITION position = m_list.Find(85.26);
   m_list.InsertBefore(position, 200.0);
   m_list.InsertAfter(position, 300.0);
   
   position = m_list.Find(300.00);
   m_list.SetAt(position, 400.00);

   position = m_list.Find(95.78);
   m_list.RemoveAt(position);

   //iterate the list
   POSITION pos = m_list.GetHeadPosition();
   while (pos) {
      double nData = m_list.GetNext(pos);
      CString strVal;
      strVal.Format(L"%.2f\n", nData);
      m_strText.Append(strVal);
   }
   UpdateData(FALSE);
   
   return TRUE; // return TRUE unless you set the focus to a control
}
</pre>
<p>When the above code is compiled and executed, you will see the following output. You can now see that the value of 95.78 is no longer part of the list.</p>
<img src="/mfc/images/removing_item.jpg" alt="Removing Item" />
<div class="mui-container-fluid button-borders show">
<div class="pre-btn">
<a href="/mfc/mfc_carray.htm"><i class="fal fa-chevron-circle-left"></i> Previous Page</a>
</div>
<div class="nxt-btn">
<a href="/mfc/mfc_database_classes.htm">Next Page <i class="fal fa-chevron-circle-right"></i>&nbsp;</a>
</div>
</div>
<div class="google-bottom-ads">
<div>Advertisements</div>
<script><!--
var width = 580;
var height = 400;
var format = "580x400_as";
if( window.innerWidth < 468 ){
   width = 300;
   height = 250;
   format = "300x250_as";
}
google_ad_client = "pub-7133395778201029";
google_ad_width = width;
google_ad_height = height;
google_ad_format = format;
google_ad_type = "image";
google_ad_channel ="";
//--></script>
<script src="https://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
<div class="space-bottom"></div>
</div>
</div>
<!-- Tutorial Content Ends Here -->
<!-- Right Column Starts Here -->
<div class="mui-col-md-2 google-right-ads">
<div class="space-top"></div>
<div class="google-right-ad" style="margin: 0px auto !important;margin-top:5px;">
<script><!--
google_ad_client = "pub-2537027957187252";
google_ad_width = 300;
google_ad_height = 250;
google_ad_format = "300x250_as";
google_ad_type = "image";
google_ad_channel ="";
//--></script>
<script src="https://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</div>
<div class="google-right-ad">
<div class="adsbyvli" data-ad-slot="vi_9012177"></div>
<script>(vitag.Init = window.vitag.Init || []).push(function(){viAPItag.display("vi_9012177")})</script>
</div>
<div class="space-bottom"></div>
<div class="google-right-ad">
<div class="adsbyvli" data-ad-slot="vi_9013289"></div>
<script>(vitag.Init = window.vitag.Init || []).push(function(){viAPItag.display("vi_9013289")})</script>
</div>
<div class="space-bottom" style="margin-bottom:15px;"></div>
</div>
<!-- Right Column Ends Here -->
</div>
</div>
<div class="clear"></div>
<footer id="footer">
<div class="mui--text-center">
<div class="mui--text-caption mui--text-light">
<a href="/index.htm" class="logo"><img class="img-responsive" src="/images/logo-black.png" alt="Tutorials Point" title="Tutorials Point"></a>
</div>
<ul class="mui-list--inline mui--text-body2 mui--text-light">
<li><a href="/about/index.htm"><i class="fal fa-globe"></i> About us</a></li>
<li><a href="/about/about_terms_of_use.htm"><i class="fal fa-asterisk"></i> Terms of use</a></li>
<li><a href="/about/about_privacy.htm#cookies"> <i class="fal fa-shield-check"></i> Cookies Policy</a></li>
<li><a href="/about/faq.htm"><i class="fal fa-question-circle"></i> FAQ's</a></li>
<li><a href="/about/about_helping.htm"><i class="fal fa-hands-helping"></i> Helping</a></li>
<li><a href="/about/contact_us.htm"><i class="fal fa-map-marker-alt"></i> Contact</a></li>
</ul>
<div class="mui--text-caption mui--text-light bottom-copyright-text">&copy; Copyright 2019. All Rights Reserved.</div>
</div>
<div id="privacy-banner">
  <div>
    <p>
      We use cookies to provide and improve our services. By using our site, you consent to our Cookies Policy.
      <a id="banner-accept" href="#">Accept</a>
      <a id="banner-learn" href="/about/about_cookies.htm" target="_blank">Learn more</a>
    </p>
  </div>
</div>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-232293-17"></script>
<script>
window.dataLayer = window.dataLayer || [];
function gtag(){dataLayer.push(arguments);}
gtag('js', new Date());
gtag('config', 'UA-232293-6');
</script>
</footer>
</body>
</html>
