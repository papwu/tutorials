<!DOCTYPE html>
<html lang="en-US">
<head>
<title>Apache NiFi - Quick Guide</title>
<meta charset="utf-8">
<meta name="description" content="Apache NiFi - Quick Guide - Apache NiFi is a powerful, easy to use and reliable system to process and distribute data between disparate systems. It is based on Niagara Files technology dev"/>
<meta name="keywords" content="C, C++, Python, Java, HTML, CSS, JavaScript, SQL, PHP, jQuery, XML, DOM, Bootstrap, Tutorials, Articles, Programming, training, learning, quiz, preferences, examples, code"/>
<link rel="canonical" href="https://www.tutorialspoint.com/apache_nifi/apache_nifi_quick_guide.htm" />
<link rel="shortcut icon" href="/favicon.ico" type="image/x-icon" />
<meta name="viewport" content="width=device-width,initial-scale=1.0,user-scalable=yes">
<script src="/theme/js/script-min-v2.js?v=3"></script>
<link rel="stylesheet" href="/theme/css/style-min-v2.css?v=6">
<script src="//services.bilsyndication.com/adv1/?d=901" defer="" async=""></script>
<script> var vitag = vitag || {};</script>
<script> vitag.outStreamConfig = { enablePC: false, enableMobile: false };</script>  
<style>
.right-menu .mui-btn {
    background-color:#436679;
}
a.demo {
    background:#436679;
}
li.heading {
    background:#436679;
}
.course-box{background:#436679}
.home-intro-sub p{color:#436679}
</style>
</head>
<body>
<header id="header">
<!-- Top sub-menu Starts Here -->
<div class="mui-appbar mui-container-fulid top-menu">
<div class="mui-container">
<div class="top-menu-item home">
<a href="https://www.tutorialspoint.com/index.htm" target="_blank" title="TutorialsPoint - Home"><i class="fal fa-home"></i> <span>Home</span></a>
</div>
<div class="top-menu-item qa">
<a href="https://www.tutorialspoint.com/about/about_careers.htm" target="_blank" title="Job @ Tutorials Point"><i class="fa fa-suitcase"></i> <span>Jobs</span></a>
</div>
<div class="top-menu-item tools">
<a href="https://www.tutorialspoint.com/online_dev_tools.htm" target="_blank" title="Tools - Online Development and Testing Tools"><i class="fal fa-cogs"></i> <span>Tools</span></a>
</div>
<div class="top-menu-item coding-ground">
<a href="https://www.tutorialspoint.com/codingground.htm" target="_blank" title="Coding Ground - Free Online IDE and Terminal"><i class="fal fa-code"></i> <span>Coding Ground </span></a> 
</div>
<div class="top-menu-item current-affairs">
<a href="https://www.tutorialspoint.com/current_affairs.htm" target="_blank" title="Daily Current Affairs"><i class="fal fa-layer-plus"></i> <span>Current Affairs</span></a>
</div>
<div class="top-menu-item upsc-notes">
<a href="https://www.tutorialspoint.com/upsc_ias_exams.htm" target="_blank" title="UPSC IAS Exams Notes - TutorialsPoint"><i class="fal fa-user-tie"></i> <span>UPSC Notes</span></a>
</div>      
<div class="top-menu-item online-tutoris">
<a href="https://www.tutorialspoint.com/tutor_connect/index.php" target="_blank" title="Top Online Tutors - Tutor Connect"><i class="fal fa-user"></i> <span>Online Tutors</span></a>
</div>
<div class="top-menu-item whiteboard">
<a href="https://www.tutorialspoint.com/whiteboard.htm" target="_blank" title="Free Online Whiteboard"><i class="fal fa-chalkboard"></i> <span>Whiteboard</span></a>
</div>
<div class="top-menu-item net-meeting">
<a href="https://www.tutorialspoint.com/netmeeting.php" target="_blank" title="A free tool for online video conferencing"><i class="fal fa-chalkboard-teacher"></i> <span>Net Meeting</span></a> 
</div>
<div class="top-menu-item articles">
<a href="https://www.tutorix.com" target="_blank" title="Tutorx - The Best Learning App" rel="nofollow"><i class="fal fa-video"></i> <span>Tutorix</span></a> 
</div>        
<div class="social-menu-item">
<a href="https://www.facebook.com/tutorialspointindia" target="_blank" rel="nofollow" data-placement="bottom" title="tutorialspoint @ Facebook"><i class="fab fa-facebook-f"></i></a> 
<a href="https://www.twitter.com/tutorialspoint" target="_blank" rel="nofollow" data-placement="bottom" title="tutorialspoint @ Twitter"><i class="fab fa-twitter"></i></a>
<a href="https://www.linkedin.com/company/tutorialspoint" target="_blank" rel="nofollow" data-placement="bottom" title="tutorialspoint @ Linkedin"><i class="fab fa-linkedin-in"></i></a>
<a href="https://www.youtube.com/channel/UCVLbzhxVTiTLiVKeGV7WEBg" target="_blank" rel="nofollow" data-placement="bottom" title="tutorialspoint YouTube"><i class="fab fa-youtube"></i></a>
</div>        
</div>
</div>
<!-- Top sub-menu Ends Here -->
<!-- Top main-menu Starts Here -->
<div class="mui-appbar mui-container-fulid mui--appbar-line-height mui--z1" id="logo-menu">
<div class="mui-container">
<div class="left-menu">
<a href="https://www.tutorialspoint.com/index.htm" title="Tutorialspoint">
<img class="tp-logo" alt="tutorialspoint" src="/apache_nifi/images/logo.png">
</a>
<div class="mui-dropdown">
<a class="mui-btn mui-btn--primary categories" data-mui-toggle="dropdown"><i class="fa fa-th-large"></i> 
<span>Categories <span class="mui-caret"></span></span></a>            
<ul class="mui-dropdown__menu cat-menu">
<li>
<ul>
<li><a href="/academic_tutorials.htm"><i class="fa fa-caret-right"></i> Academic Tutorials</a></li>
<li><a href="/big_data_tutorials.htm"><i class="fa fa-caret-right"></i> Big Data &amp; Analytics </a></li>
<li><a href="/computer_programming_tutorials.htm"><i class="fa fa-caret-right"></i> Computer Programming </a></li>
<li><a href="/computer_science_tutorials.htm"><i class="fa fa-caret-right"></i> Computer Science </a></li>
<li><a href="/database_tutorials.htm"><i class="fa fa-caret-right"></i> Databases </a></li>
<li><a href="/devops_tutorials.htm"><i class="fa fa-caret-right"></i> DevOps </a></li>
<li><a href="/digital_marketing_tutorials.htm"><i class="fa fa-caret-right"></i> Digital Marketing </a></li>
<li><a href="/engineering_tutorials.htm"><i class="fa fa-caret-right"></i> Engineering Tutorials </a></li>
<li><a href="/upsc_ias_exams.htm"><i class="fa fa-caret-right"></i> Exams Syllabus </a></li>
<li><a href="/famous_monuments.htm"><i class="fa fa-caret-right"></i> Famous Monuments </a></li>
<li><a href="/gate_exams_tutorials.htm"><i class="fa fa-caret-right"></i> GATE Exams Tutorials</a></li>
<li><a href="/latest_technologies.htm"><i class="fa fa-caret-right"></i> Latest Technologies </a></li>
<li><a href="/machine_learning_tutorials.htm"><i class="fa fa-caret-right"></i> Machine Learning </a></li>
<li><a href="/mainframe_tutorials.htm"><i class="fa fa-caret-right"></i> Mainframe Development </a></li>
<li><a href="/management_tutorials.htm"><i class="fa fa-caret-right"></i> Management Tutorials </a></li>
<li><a href="/maths_tutorials.htm"><i class="fa fa-caret-right"></i> Mathematics Tutorials</a></li>
<li><a href="/microsoft_technologies_tutorials.htm"><i class="fa fa-caret-right"></i> Microsoft Technologies </a></li>
<li><a href="/misc_tutorials.htm"><i class="fa fa-caret-right"></i> Misc tutorials </a></li>
<li><a href="/mobile_development_tutorials.htm"><i class="fa fa-caret-right"></i> Mobile Development </a></li>
<li><a href="/java_technology_tutorials.htm"><i class="fa fa-caret-right"></i> Java Technologies </a></li>
<li><a href="/python_technologies_tutorials.htm"><i class="fa fa-caret-right"></i> Python Technologies </a></li>
<li><a href="/sap_tutorials.htm"><i class="fa fa-caret-right"></i> SAP Tutorials </a></li>
<li><a href="/scripting_lnaguage_tutorials.htm"><i class="fa fa-caret-right"></i>Programming Scripts </a></li>
<li><a href="/selected_reading.htm"><i class="fa fa-caret-right"></i> Selected Reading </a></li>
<li><a href="/software_quality_tutorials.htm"><i class="fa fa-caret-right"></i> Software Quality </a></li>
<li><a href="/soft_skill_tutorials.htm"><i class="fa fa-caret-right"></i> Soft Skills </a></li>
<li><a href="/telecom_tutorials.htm"><i class="fa fa-caret-right"></i> Telecom Tutorials </a></li>
<li><a href="/upsc_ias_exams.htm"><i class="fa fa-caret-right"></i> UPSC IAS Exams </a></li>
<li><a href="/web_development_tutorials.htm"><i class="fa fa-caret-right"></i> Web Development </a></li>
<li><a href="/sports_tutorials.htm"><i class="fa fa-caret-right"></i> Sports Tutorials </a></li>
<li><a href="/xml_technologies_tutorials.htm"><i class="fa fa-caret-right"></i> XML Technologies </a></li>
<li><a href="/multi_language_tutorials.htm"><i class="fa fa-caret-right"></i> Multi-Language Tutorials</a></li>
<li><a href="/questions_and_answers.htm"><i class="fa fa-caret-right"></i> Interview Questions</a></li>
</ul>
</li>
</ul>
<div class="clear"></div>
</div> 
</div>
<div class="right-menu">
<div class="toc-toggle">
<a href="javascript:void(0);"><i class="fa fa-bars"></i></a>
</div>
<div class="mobile-search-btn">
<a href="https://www.tutorialspoint.com/search.htm"><i class="fal fa-search"></i></a>
</div>
<div class="search-box">
<form method="get" class="" name="searchform" action="https://www.google.com/search" target="_blank" novalidate="">
<input type="hidden" name="sitesearch" value="www.tutorialspoint.com" class="user-valid valid">
<input class="header-search-box" type="text" id="search-string" name="q" placeholder="Search your favorite tutorials..." onfocus="if (this.value == 'Search your favorite tutorials...') {this.value = '';}" onblur="if (this.value == '') {this.value = 'Search your favorite tutorials...';}" autocomplete="off">
<button><i class="fal fa-search"></i></button>
</form>
</div>
<div class="menu-btn library-btn">
<a href="https://www.tutorialspoint.com/tutorialslibrary.htm"><i class="fal fa-cubes"></i> <span>Library</span></a>
</div>
<div class="menu-btn videos-btn">
<a href="https://www.tutorialspoint.com/videotutorials/index.htm"><i class="fal fa-video"></i> <span>Videos</span></a> 
</div>
<div class="menu-btn videos-btn">
<a href="https://www.tutorialspoint.com/questions/index.php"><i class="fa fa-location-arrow"></i> <span>Q/A</span></a>
</div>
<div class="menu-btn ebooks-btn">
<a href="https://store.tutorialspoint.com"><i class="fal fa-book"></i> <span>eBooks</span></a>
</div>
<div class="mui-dropdown">
<button class="mui-btn mui-btn--primary" data-mui-toggle="dropdown">
<span class="mui-caret"></span>
</button>
<ul class="mui-dropdown__menu">
<li><a href="https://www.tutorialspoint.com/tutorialslibrary.htm"><i class="fal fa-cubes"></i> <span>Library</span></a></li>
<li><a href="https://www.tutorialspoint.com/videotutorials/index.htm"><i class="fal fa-video"></i> <span>Videos</span></a></li>
<li><a href="https://store.tutorialspoint.com"><i class="fal fa-book"></i> <span>eBooks</span></a></li>
</ul>
</div>
</div>
</div>
</div>
<!-- Top main-menu Ends Here -->
</header>
<div class="mui-container-fluid content">
<div class="mui-container">
<!-- Tutorial ToC Starts Here -->
<div class="mui-col-md-3 tutorial-toc">
<div class="mini-logo">
<img src="/apache_nifi/images/apache-nifi-mini-logo.jpg" alt="Apache NiFi Tutorial" />
</div>
<ul class="toc chapters" >
<li class="heading">Apache NiFi Tutorial</li>
<li><a href="/apache_nifi/index.htm">Apache NiFi - Home</a></li>
<li><a href="/apache_nifi/apache_nifi_introduction.htm">Apache NiFi - Introduction</a></li>
<li><a href="/apache_nifi/apache_nifi_basic_concepts.htm">Apache NiFi - Basic Concepts</a></li>
<li><a href="/apache_nifi/apache_nifi_environment_setup.htm">Apache NiFi -  Environment Setup</a></li>
<li><a href="/apache_nifi/apache_nifi_user_interface.htm">Apache NiFi - User Interface</a></li>
<li><a href="/apache_nifi/apache_nifi_processors.htm">Apache NiFi - Processors</a></li>
<li><a href="/apache_nifi/apache_nifi_processors_categorization.htm">Apache NiFi - Processors Categorization</a></li>
<li><a href="/apache_nifi/apache_nifi_processors_relationship.htm">Apache NiFi - Processors Relationship</a></li>
<li><a href="/apache_nifi/apache_nifi_flowfile.htm">Apache NiFi - FlowFile</a></li>
<li><a href="/apache_nifi/apache_nifi_queues.htm">Apache NiFi - Queues</a></li>
<li><a href="/apache_nifi/apache_nifi_process_groups.htm">Apache NiFi - Process Groups</a></li>
<li><a href="/apache_nifi/apache_nifi_labels.htm">Apache NiFi - Labels</a></li>
<li><a href="/apache_nifi/apache_nifi_configuration.htm">Apache NiFi - Configuration</a></li>
<li><a href="/apache_nifi/apache_nifi_administration.htm">Apache NiFi - Administration</a></li>
<li><a href="/apache_nifi/apache_nifi_creating_flows.htm">Apache NiFi - Creating Flows</a></li>
<li><a href="/apache_nifi/apache_nifi_templates.htm">Apache NiFi - Templates</a></li>
<li><a href="/apache_nifi/apache_nifi_api.htm">Apache NiFi - API</a></li>
<li><a href="/apache_nifi/apache_nifi_data_provenance.htm">Apache NiFi - Data Provenance</a></li>
<li><a href="/apache_nifi/apache_nifi_monitoring.htm">Apache NiFi - Monitoring</a></li>
<li><a href="/apache_nifi/apache_nifi_upgrade.htm">Apache NiFi - Upgrade</a></li>
<li><a href="/apache_nifi/apache_nifi_remote_process_group.htm">Apache NiFi - Remote Process Group</a></li>
<li><a href="/apache_nifi/apache_nifi_controller_settings.htm">Apache NiFi -  Controller Settings</a></li>
<li><a href="/apache_nifi/apache_nifi_reporting_task.htm">Apache NiFi - Reporting Task</a></li>
<li><a href="/apache_nifi/apache_nifi_custom_processor.htm">Apache NiFi - Custom Processor</a></li>
<li><a href="/apache_nifi/apache_nifi_custom_controllers_service.htm">Apache NiFi - Custom Controllers Service</a></li>
<li><a href="/apache_nifi/apache_nifi_logging.htm">Apache NiFi - Logging</a></li>
<li class="heading">Apache NiFi Useful Resources</li>
<li><a href="/apache_nifi/apache_nifi_quick_guide.htm">Apache NiFi - Quick Guide</a></li>
<li><a href="/apache_nifi/apache_nifi_useful_resources.htm">Apache NiFi - Useful Resources</a></li>
<li><a href="/apache_nifi/apache_nifi_discussion.htm">Apache NiFi - Discussion</a></li>
</ul>
<ul class="toc reading">
<li class="sreading">Selected Reading</li>
<li><a target="_top" href="/upsc_ias_exams.htm">UPSC IAS Exams Notes</a></li>
<li><a target="_top" href="/developers_best_practices/index.htm">Developer's Best Practices</a></li>
<li><a target="_top" href="/questions_and_answers.htm">Questions and Answers</a></li>
<li><a target="_top" href="/effective_resume_writing.htm">Effective Resume Writing</a></li>
<li><a target="_top" href="/hr_interview_questions/index.htm">HR Interview Questions</a></li>
<li><a target="_top" href="/computer_glossary.htm">Computer Glossary</a></li>
<li><a target="_top" href="/computer_whoiswho.htm">Who is Who</a></li>
</ul>
</div>
<!-- Tutorial ToC Ends Here -->
<!-- Tutorial Content Starts Here -->
<div class="mui-col-md-6 tutorial-content">
<h1>Apache NiFi - Quick Guide</h1>
<hr/>
<div class="top-ad-heading">Advertisements</div>
<div style="text-align: center;">
<script><!--
google_ad_client = "pub-7133395778201029";
var width = document.getElementsByClassName("tutorial-content")[0].clientWidth - 40;
google_ad_width = width;
google_ad_height = 150;
google_ad_format = width + "x150_as";
google_ad_type = "image";
google_ad_channel = "";
//--></script>
<script src="https://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</div>
<div class="mui-container-fluid button-borders">
<div class="pre-btn">
<a href="/apache_nifi/apache_nifi_logging.htm"><i class="fal fa-chevron-circle-left"></i> Previous Page</a>
</div>
<div class="nxt-btn">
<a href="/apache_nifi/apache_nifi_useful_resources.htm">Next Page <i class="fal fa-chevron-circle-right"></i>&nbsp;</a>
</div>
</div>
<div class="clear"></div>
<h1>Apache NiFi - Introduction</h1>
<p>Apache NiFi is a powerful, easy to use and reliable system to process and distribute data between disparate systems. It is based on Niagara Files technology developed by NSA and then after 8 years donated to Apache Software foundation. It is distributed under Apache License Version 2.0, January 2004. The latest version for Apache NiFi is 1.7.1.</p>
<p>Apache NiFi is a real time data ingestion platform, which can transfer and manage data transfer between different sources and destination systems. It supports a wide variety of data formats like logs, geo location data, social feeds, etc. It also supports many protocols like SFTP, HDFS, and KAFKA, etc. This support to wide variety of data sources and protocols making this platform popular in many IT organizations.</p>
<h2>Apache NiFi- General Features</h2>
<p>The general features of Apache NiFi are as follows &minus;</p>
<ul class="list">
<li><p>Apache NiFi provides a web-based user interface, which provides seamless experience between design, control, feedback, and monitoring.</p></li>
<li><p>It is highly configurable. This helps users with guaranteed delivery, low latency, high throughput, dynamic prioritization, back pressure and modify flows on runtime.</p></li>
<li><p>It also provides data provenance module to track and monitor data from the start to the end of the flow.</p></li>
<li><p>Developers can create their own custom processors and reporting tasks according to their needs.</p></li>
<li><p>NiFi also provides support to secure protocols like SSL, HTTPS, SSH and other encryptions.</p></li>
<li><p>It also supports user and role management and also can be configured with LDAP for authorization.</p></li>
</ul>
<h2>Apache NiFi -Key Concepts</h2>
<p>The key concepts of Apache NiFi are as follows &minus;</p>
<ul class="list">
<li><p><b>Process Group</b> &minus; It is a group of NiFi flows, which helps a userto manage and keep flows in hierarchical manner.</p></li>
<li><p><b>Flow</b> &minus; It is created connecting different processors to transfer and modify data if required from one data source or sources to another destination data sources.</p></li>
<li><p><b>Processor</b> &minus;  A processor is a java module responsible for either fetching data from sourcing system or storing it in destination system. Other processors are also used to add attributes or change content in flowfile.</p></li>
<li><p><b>Flowfile</b> &minus; It is the basic usage of NiFi, which represents the single object of the data picked from source system in NiFi. NiFiprocessormakes changes to flowfile while it moves from the source processor to the destination. Different events like CREATE, CLONE, RECEIVE, etc. are performed on flowfile by different processors in a flow.</p></li>
<li><p><b>Event</b> &minus; Events represent the change in flowfile while traversing through a NiFi Flow. These events are tracked in data provenance.</p></li>
<li><p><b>Data provenance</b> &minus; It is a repository.It also has a UI, which enables users to check the information about a flowfile and helps in troubleshooting if any issues that arise during the processing of a flowfile.</p></li>
</ul>
<h2>Apache NiFi Advantages</h2>
<ul class="list">
<li><p>Apache NiFi enables data fetching from remote machines by using SFTP and guarantees data lineage.</p></li>
<li><p>Apache NiFi supports clustering, so it can work on multiple nodes with same flow processing different data, which increase the performance of data processing.</p></li>
<li><p>It also provides security policies on user level, process group level and other modules too.</p></li>
<li><p>Its UI can also run on HTTPS, which makes the interaction of users with NiFi secure.</p></li>
<li><p>NiFi supports around 188 processors and a user can also create custom plugins to support a wide variety of data systems.</p></li>
</ul>
<h2>Apache NiFi Disadvantages</h2>
<ul class="list">
<li><p>When node gets disconnected from NiFi cluster while a user is making any changes in it, then the flow.xml becomes invalid.Anode cannot connect back to the cluster unless admin manually copies flow.xml from the connected node.</p></li>
<li><p>Apache NiFi have state persistence issue in case of primary node switch, which sometimes makes processors not able to fetch data from sourcing systems.</p></li>
</ul>
<h1>Apache NiFi - Basic Concepts</h1>
<p>Apache NiFi consist of a web server, flow controller and a processor, which runs on Java Virtual Machine. It also has 3 repositories Flowfile Repository, Content Repository, and Provenance Repository as shown in the figure below.</p>
<img class="full-width" src="/apache_nifi/images/apache_web_server.jpg" alt="Apache Web Server" />
<h2>Flowfile Repository</h2>
<p>This repository stores the current state and attributes of every flowfile that goes through the data flows of apache NiFi. The default location of this repository is in the root directory of apache NiFi. The location of this repository can be changed by changing the property named "nifi.flowfile.repository.directory".</p>
<h2>Content Repository</h2>
<p>This repository contains all the content present in all the flowfiles of NiFi. Its default directory is also in the root directory of NiFi and it can be changed using "org.apache.nifi.controller.repository.FileSystemRepository" property. This directory uses large space in disk so it is advisable to have enough space in the installation disk.</p>
<h2>Provenance Repository</h2>
<p>The repository tracks and stores all the events of all the flowfiles that flow in NiFi. There are two provenance repositories - <b>volatile provenance repository</b> (in this repository all the provenance data get lost after restart) and <b>persistent provenance repository</b>. Its default directory is also in the root directory of NiFi and it can be changed using "org.apache.nifi.provenance.PersistentProvenanceRepository" and "org.apache.nifi.provenance.VolatileProvenanceRepositor" property for the respective repositories.</p>
<img class="center" src="/apache_nifi/images/provenance_repository.jpg" alt="Provenance Repository" />
<h1>Apache NiFi - Environment Setup</h1>
<p>In this chapter, we will learn about the environment setup ofApache NiFi. The steps for installation of Apache NiFi are as follows &minus;</p>
<p><b>Step 1</b> &minus; Install the current version of Java in your computer. Please set theJAVA_HOME in your machine. You can check the version as shown below:</p>
<p>In Windows Operating System (OS) (using command prompt) &minus;</p>
<pre class="result notranslate">
> java -version
</pre>
<p>In UNIX OS (Using Terminal):</p>
<pre class="result notranslate">
$ echo $JAVA_HOME
</pre>
<p>
<br>
</p>
<p><b>Step 2</b> &minus; DownloadApache NiFi from <a href="https://nifi.apache.org/download.html" rel="nofollow" target="_blank">https://nifi.apache.org/download.html</a></p>
<ul class="list">
<li><p>For windows OSdownload ZIP file.</p></li>
<li><p>For UNIX OSdownload TAR file.</p></li>
<li><p>For docker images,go to the following link <a href="https://hub.docker.com/r/apache/nifi/." rel="nofollow" target="_blank">https://hub.docker.com/r/apache/nifi/.</a></p></li>
</ul>
<p><b>Step 3</b> &minus; The installation process for Apache NiFi is very easy. The process differs with the OS &minus;</p>
<ul class="list">
<li><p><b>Windows OS</b> &minus; Unzip the zip package and the Apache NiFi is installed.</p></li>
<li><p><b>UNIX OS</b> &minus; Extract tar file in any location and the Logstash is installed.</p></li>
</ul>
<pre class="result notranslate">
$tar -xvf nifi-1.6.0-bin.tar.gz
</pre>
<p><b>Step 4</b> &minus; Open command prompt, go to the bin directory of NiFi. For example, C:\nifi-1.7.1\bin, and execute run-nifi.bat file.</p>
<pre class="result notranslate">
C:\nifi-1.7.1\bin&gt;run-nifi.bat
</pre>
<p><b>Step 5</b> &minus; It will take a few minutes to get the NiFi UI up. A user cancheck nifi-app.log, once NiFi UI is up then, a user can enter <b>http://localhost:8080/nifi/</b> to access UI.</p>
<h1>Apache NiFi - User Interface</h1>
<p>Apache is a web-based platform that can be accessed by a user using web UI. The NiFi UI is very interactive and provides a wide variety of information about NiFi. As shown in the image below, a user can access information about the following attributes &minus;</p>
<ul class="list">
<li>Active Threads</li>
<li>Total queued data</li>
<li>Transmitting Remote Process Groups</li>
<li>Not Transmitting Remote Process Groups</li>
<li>Running Components</li>
<li>Stopped Components</li>
<li>Invalid Components</li>
<li>Disabled Components</li>
<li>Up to date Versioned Process Groups</li>
<li>Locally modified Versioned Process Groups</li>
<li>Stale Versioned Process Groups</li>
<li>Locally modified and Stale Versioned Process Groups</li>
<li>Sync failure Versioned Process Groups</li>
</ul>
<img class="full-width" src="/apache_nifi/images/user_interface.jpg" alt="User Interface" />
<h2>Components of Apache NiFi</h2>
<p>Apache NiFi UI has the following components &minus;</p>
<h3>Processors</h3>
<p>User can drag the process icon on the canvas and select the desired processor for the data flow in NiFi.</p>
<img class="center" src="/apache_nifi/images/processor_icon.jpg" alt="Processor Icon" />
<img class="full-width" src="/apache_nifi/images/add_processor.jpg" alt="Add Processor" />
<h3>Input port</h3>
<p>Below icon is dragged to canvas to add the input port into any data flow.</p>
<p>Input port is used to get data from the processor, which is not present in that process group.</p>
<img class="center" src="/apache_nifi/images/input_port.jpg" alt="Input Port" />
<p>After dragging this icon, NiFi asks to enter the name of the Input port and then it is added to the NiFi canvas.</p>
<img class="center" src="/apache_nifi/images/add_port.jpg" alt="Add Port" />
<h3>Output port</h3>
<p>The below icon is dragged to canvas to add the output port into any data flow.</p>
<p>The output port is used to transfer data to the processor, which is not present in that process group.</p>
<img class="center" src="/apache_nifi/images/output_port.jpg" alt="Output Port" />
<p>After dragging this icon, NiFi asks to enter the name of the Output port and then it is added to the NiFi canvas.</p>
<img class="center" src="/apache_nifi/images/output_add_port.jpg" alt="Output Add Port" />
<h3>Process Group</h3>
<p>A user uses below icon to add process group in the NiFi canvas.</p>
<img class="center" src="/apache_nifi/images/gruop_icon.jpg" alt="Gruop Icon" />
<p>After dragging this icon, NiFi asks to enter the name of the Process Group and then it is added to the NiFi canvas.</p>
<img class="center" src="/apache_nifi/images/add_process_group.jpg" alt="Add Process Group" />
<h3>Remote Process Group</h3>
<p>This is used to add Remote process group in NiFi canvas.</p>
<img class="center" src="/apache_nifi/images/remote_process_group.jpg" alt="Remote Process Group" />
<h3>Funnel</h3>
<p>Funnel is used to transfer the output of a processor to multiple processors. User can use the below icon to add the funnel in a NiFi data flow.</p>
<img class="center" src="/apache_nifi/images/funnel_icon.jpg" alt="Funnel Icon" />
<h3>Template</h3>
<p>This icon is used to add a data flow template to NiFi canvas. This helps to reuse the data flow in the same or different NiFi instances.</p>
<img class="center" src="/apache_nifi/images/template_icon.jpg" alt="Template Icon" />
<p>After dragging, a user can select the templates already added in the NiFi.</p>
<h3>Label</h3>
<p>These are used to add text on NiFi canvas about any component present in NiFi. It offers a range of colors used by a user to add aesthetic sense.</p>
<img class="center" src="/apache_nifi/images/label_icon.jpg" alt="Label Icon" />
<h1>Apache NiFi - Processors</h1>
<p>Apache NiFi processors are the basic blocks of creating a data flow. Every processor has different functionality, which contributes to the creation of output flowfile. Dataflow shown in the image below is fetching file from one directory using GetFile processor and storing it in another directory using PutFile processor.</p>
<img class="full-width" src="/apache_nifi/images/putfile_processor.jpg" alt="PutFile processor" />
<h2>GetFile</h2>
<p>GetFile process is used to fetch files of a specific format from a specific directory. It also provides other options to user for more control on fetching. We will discuss it in properties section below.</p>
<img class="center" src="/apache_nifi/images/getfile.jpg" alt="GetFile" />
<h2>GetFile Settings</h2>
<p>Following are the different settings of GetFile processor &minus;</p>
<h3>Name</h3>
<p>In the Name setting, a user can define any name for the processors either according to the project or by that, which makes the name more meaningful.</p>
<h3>Enable</h3>
<p>A user can enable or disable the processor using this setting.</p>
<h3>Penalty Duration</h3>
<p>This setting lets a user to add the penalty time duration, in the event of flowfile failure.</p>
<h3>Yield Duration</h3>
<p>This setting is used to specify the yield time for processor. In this duration, the process is not scheduled again.</p>
<h3>Bulletin Level</h3>
<p>This setting is used to specify the log level of that processor.</p>
<h3>Automatically Terminate Relationships</h3>
<p>This has a list of check of all the available relationship of that particular process. By checking the boxes, a user can program processor to terminate the flowfile on that event and do not send it further in the flow.</p>
<img class="full-width" src="/apache_nifi/images/automatically_terminate_relationships.jpg" alt="Automatically Terminate Relationships" />
<h2>GetFile Scheduling</h2>
<p>These are the following scheduling options offered by the GetFile processor &minus;</p>
<h3>Schedule Strategy</h3>
<p>You can either schedule the process on time basis by selecting time driven or a specified CRON string by selecting a CRON driver option.</p>
<h3>Concurrent Tasks</h3>
<p>This option is used to define the concurrent task schedule for this processor.</p>
<h3>Execution</h3>
<p>A user can define whether to run the processor in all nodes or only in Primary node by using this option.</p>
<h3>Run Schedule</h3>
<p>It is used to define the time for time driven strategy or CRON expression for CRON driven strategy.</p>
<img class="full-width" src="/apache_nifi/images/run_schedule.jpg" alt="Run Schedule" />
<h2>GetFile Properties</h2>
<p>GetFile offers multiple properties as shown in the image below raging compulsory
properties like Input directory and file filter to optional properties like Path Filter and Maximum file Size. A user can manage file fetching process using these properties.</p>
<img class="full-width" src="/apache_nifi/images/getfile_properties.jpg" alt="GetFile Properties" />
<h2>GetFile Comments</h2>
<p>This Section is used to specify any information about processor.</p>
<img class="full-width" src="/apache_nifi/images/getfile_comments.jpg" alt="GetFile Comments" />
<h2>PutFile</h2>
<p>The PutFile processor is used to store the file from the data flow to a specific location.</p>
<img class="center" src="/apache_nifi/images/putfile.jpg" alt="PutFile" />
<h2>PutFile Settings</h2>
<p>The PutFile processor has the following settings &minus;</p>
<h3>Name</h3>
<p>In the Name setting, a user can define any name for the processors either according to the project or by that which makes the name more meaningful.</p>
<h3>Enable</h3>
<p>A user can enable or disable the processor using this setting.</p>
<h3>Penalty Duration</h3>
<p>This setting lets a user add the penalty time duration, in the event of flowfile failure.</p>
<h3>Yield Duration</h3>
<p>This setting is used to specify the yield time for processor. In this duration, the process does not get scheduled again.</p>
<h3>Bulletin Level</h3>
<p>This setting is used to specify the log level of that processor.</p>
<h3>Automatically Terminate Relationships</h3>
<p>This settings has a list of check of all the available relationship of that particular process. By checking the boxes, user can program processor to terminate the flowfile on that event and do not send it further in the flow.</p>
<img class="full-width" src="/apache_nifi/images/automatically_terminate.jpg" alt="Automatically Terminate" />
<h2>PutFile Scheduling</h2>
<p>These are the following scheduling options offered by the PutFile processor &minus;</p>
<h3>Schedule Strategy</h3>
<p>You can schedule the process on time basis either by selecting timer driven or a specified CRON string by selecting CRON driver option. There is also an Experimental strategy Event Driven, which will trigger the processor on a specific event.</p>
<h3>Concurrent Tasks</h3>
<p>This option is used to define the concurrent task schedule for this processor.</p>
<h3>Execution</h3>
<p>A user can define whether to run the processor in all nodes or only in primary node by using this option.</p>
<h3>Run Schedule</h3>
<p>It is used to define the time for timer driven strategy or CRON expression for CRON driven strategy.</p>
<img class="full-width" src="/apache_nifi/images/putfile_run_schedule.jpg" alt="Putfile Run Schedule" />
<h2>PutFile Properties</h2>
<p>The PutFile processor provides properties like Directory to specify the output directory for the purpose of file transfer and others to manage the transfer as shown in the image below.</p>
<img class="full-width" src="/apache_nifi/images/putfile_properties.jpg" alt="PutFile Properties" />
<h2>PutFile Comments</h2>
<p>This Section is used to specify any information about processor.</p>
<img class="full-width" src="/apache_nifi/images/putfile_comments.jpg" alt="Putfile Comments" />
<h1>Apache NiFi - Processors Categorization</h1>
<p>In this chapter, we will discuss process categorization in Apache NiFi.</p>
<h2>Data Ingestion Processors</h2>
<p>The processors under Data Ingestion category are used to ingest data into the NiFi data flow. These are mainly the starting point of any data flow in apache NiFi. Some of the processors that belong to these categories are GetFile, GetHTTP, GetFTP, GetKAFKA, etc.</p>
<h2>Routing and Mediation Processors</h2>
<p>Routing and Mediation processors are used to route the flowfiles to different processors or data flows according to the information in attributes or content of those flowfiles. These processors are also responsible to control the NiFi data flows. Some of the processors that belong to this category are RouteOnAttribute, RouteOnContent, ControlRate, RouteText, etc.</p>
<h2>Database Access Processors</h2>
<p>The processors of this Database Access category are capable of selecting or inserting data or executing and preparing other SQL statements from database. These processors mainly use data connection pool controller setting of Apache NiFi. Some of the processors that belong to this category are ExecuteSQL, PutSQL, PutDatabaseRecord, ListDatabaseTables, etc.</p>
<h2>Attribute Extraction Processors</h2>
<p>Attribute Extraction Processors are responsible to extract, analyze, change flowfile attributes processing in the NiFi data flow. Some of the processors that belong to this category are UpdateAttribute, EvaluateJSONPath, ExtractText, AttributesToJSON, etc.</p>
<h2>System Interaction Processors</h2>
<p>System Interaction processors are used to run processes or commands in any operating system. These processors also run scripts in many languages to interact with a variety of systems. Some of the processors that belong to this category are ExecuteScript, ExecuteProcess, ExecuteGroovyScript, ExecuteStreamCommand, etc.</p>
<h2>Data Transformation Processors</h2>
<p>Processors that belong to Data Transformation are capable of altering content of the flowfiles. These can be used to fully replace the data of a flowfile normally used when a user has to send flowfile as an HTTP body to invokeHTTP processor. Some of the processors that belong to this category are ReplaceText, JoltTransformJSON, etc.</p>
<h2>Sending Data Processors</h2>
<p>Sending Data Processors are generally the end processor in a data flow. These processors are responsible to store or send data to the destination server. After successful storing or sending the data, these processors DROP the flowfile with success relationship. Some of the processors that belong to this category are PutEmail, PutKafka, PutSFTP, PutFile, PutFTP, etc.</p>
<h2>Splitting and Aggregation Processors</h2>
<p>These processors are used to split and merge the content present in a flowfile. Some of the processors that belong to this category are SplitText, SplitJson, SplitXml, MergeContent, SplitContent, etc.</p>
<h2>HTTP Processors</h2>
<p>These processors deal with the HTTP and HTTPS calls. Some of the processors that belong to this category are InvokeHTTP, PostHTTP, ListenHTTP, etc.</p>
<h2>AWS Processors</h2>
<p>AWS processors are responsible to interaction with Amazon web services system. Some of the processors that belong to this category are GetSQS, PutSNS, PutS3Object, FetchS3Object, etc.</p>
<h1>Apache NiFi - Processors Relationship</h1>
<p>In an Apache NiFi data flow, flowfiles move from one to another processor through connection that gets validated using a relationship between processors. Whenever a connection is created, a developer selects one or more relationships between those processors.</p>
<img class="full-width" src="/apache_nifi/images/configure_processor.jpg" alt="Configure Processor" />
<p>As you can see in the above image, the check boxes in black rectangle are relationships. If a developer selects these check boxes then, the flowfile will terminate in that particular processor, when the relationship is success or failure or both.</p>
<h2>Success</h2>
<p>When a processor successfully processes a flowfile like store or fetch data from any datasource without getting any connection, authentication or any other error, then the flowfile goes to success relationship.</p>
<h2>Failure</h2>
<p>When a processor is not able to process a flowfile without errors like authentication error or connection problem, etc. then the flowfile goes to a failure relationship.</p>
<p>A developer can also transfer the flowfiles to other processors using connections. The developer can select and also load balance it, but load balancing is just released in version 1.8, which will not be covered in this tutorial.</p>
<img class="full-width" src="/apache_nifi/images/failure.jpg" alt="Failure" />
<p>As you can see in the above image the connection marked in red have failure relationship, which means all flowfiles with errors will go to the processor in left and respectively all the flowfiles without errors will be transferred to the connection marked in green.</p>
<p>Let us now proceed with the other relationships.</p>
<h3>comms.failure</h3>
<p>This relationship is met, when a Flowfile could not be fetched from the remote server due to a communications failure.</p>
<h3>not.found</h3>
<p>Any Flowfile for which we receive a ‘Not Found’ message from the remote server will move to <b>not.found</b> relationship.</p>
<h3>permission.denied</h3>
<p>When NiFi unable to fetch a flowfile from the remote server due to insufficient permission, it will move through this relationship.</p>
<h1>Apache NiFi - FlowFile</h1>
<p>A flowfile is a basic processing entity in Apache NiFi. It contains data contents and attributes, which are used by NiFi processors to process data. The file content normally contains the data fetched from source systems. The most common attributes of an Apache NiFi FlowFile are &minus;</p>
<img class="full-width" src="/apache_nifi/images/flowfile.jpg" alt="FlowFile" />
<h2>UUID</h2>
<p>This stands for Universally Unique Identifier, which is a unique identity of a flowfile generated by NiFi.</p>
<h2>Filename</h2>
<p>This attribute contains the filename of that flowfile and it should not contain any directory structure.</p>
<h2>File Size</h2>
<p>It contains the size of an Apache NiFi FlowFile.</p>
<h2>mime.type</h2>
<p>It specifies the MIME Type of this FlowFile.</p>
<h2>path</h2>
<p>This attribute contains the relative path of a file to which a flowfile belongs and does not contain the file name.</p>
<h1>Apache NiFi - Queues</h1>
<p>The Apache NiFi data flow connection has a queuing system to handle the large amount of data inflow. These queues can handle very large amount of FlowFiles to let the processor process them serially.</p>
<img class="center" src="/apache_nifi/images/queuing_system.jpg" alt="Queuing System" />
<p>The queue in the above image has 1 flowfile transferred through success relationship. A user can check the flowfile by selecting the <b>List queue</b> option in the drop down list. In case of any overload or error, a user can also clear the queue by selecting the <b>empty queue</b> option and then the user can restart the flow to get those files again in the data flow.</p>
<img class="full-width" src="/apache_nifi/images/list_queue.jpg" alt="List Queue" />
<p>The list of flowfiles in a queue, consist of position, UUID, Filename, File size, Queue Duration, and Lineage Duration. A user can see all the attributes and content of a flowfile by clicking the info icon present at the first column of the flowfile list.</p>
<img class="full-width" src="/apache_nifi/images/flowfile_details.jpg" alt="Flowfile Details" />
<h1>Apache NiFi - Process Groups</h1>
<p>In Apache NiFi, a user can maintain different data flows in different process groups. These groups can be based on different projects or the organizations, which Apache NiFi instance supports.</p>
<img class="full-width" src="/apache_nifi/images/process_group.jpg" alt="Process Group" />
<p>The fourth symbol in the menu at the top of the NiFi UI as shown in the above picture is used to add a process group in the NiFi canvas. The process group named
“Tutorialspoint.com_ProcessGroup” contains a data flow with four processors currently in stop stage as you can see in the above picture. Process groups can be created in hierarchical manner to manage the data flows in better structure, which is easy to understand.</p>
<img class="full-width" src="/apache_nifi/images/data_flow.jpg" alt="Data Flow" />
<p>In the footer of NiFi UI, you can see the process groups and can go back to the top of the process group a user is currently present in.</p>
<p>To see the full list of process groups present in NiFi, a user can go to the summary by using the menu present in the left top side of the NiFi UI. In summary, there is process groups tab where all the process groups are listed with parameters like Version State, Transferred/Size, In/Size, Read/Write, Out/Size, etc. as shown in the below picture.</p>
<img class="full-width" src="/apache_nifi/images/nifi_summary.jpg" alt="NiFi Summary" />
<h1>Apache NiFi - Labels</h1>
<p>Apache NiFi offers labels to enable a developer to write information about the components present in the NiFI canvas. The leftmost icon in the top menu of NiFi UI is used to add the label in NiFi canvas.</p>
<img class="center" src="/apache_nifi/images/nifi_canvas.jpg" alt="NiFI Canvas" />
<p>A developer can change the color of the label and the size of the text with a right-click on the label and choose the appropriate option from the menu.</p>
<img class="center" src="/apache_nifi/images/option_menu.jpg" alt="Option Menu" />
<h1>Apache NiFi - Configuration</h1>
<p>Apache NiFi is highly configurable platform. The nifi.properties file in conf directory</p>
<p>contains most of the configuration.</p>
<p>The commonly used properties of Apache NiFi are as follows &minus;</p>
<h2>Core properties</h2>
<p>This section contains the properties, which are compulsory to run a NiFi instance.</p>
<table class="table table-bordered">
<tr>
<th style="text-align:center;">S.No.</th>
<th style="text-align:center;">Property name</th>
<th style="text-align:center;">Default Value</th>
<th style="text-align:center;">description</th>
</tr>
<tr>
<td class="ts">1</td>
<td>nifi.flow.configuration.file</td>
<td>./conf/flow.xml.gz</td>
<td>This property contains the path to flow.xml file. This file contains all the data flows created in NiFi.</td>
</tr>
<tr>
<td class="ts">2</td>
<td>nifi.flow.configuration.archive.enabled</td>
<td>true</td>
<td>This property is used to enable or disable archiving in NiFi.</td>
</tr>
<tr>
<td class="ts">3</td>
<td>nifi.flow.configuration.archive.dir</td>
<td>./conf/archive/</td>
<td>This property is used to specify the archive directory.</td>
</tr>
<tr>
<td class="ts">4</td>
<td>nifi.flow.configuration.archive.max.time</td>
<td>30 days</td>
<td>This is used to specify the retention time for archiving content.</td>
</tr>
<tr>
<td class="ts">5</td>
<td>nifi.flow.configuration.archive.max.storage</td>
<td>500 MB</td>
<td>it contains the maximum size of archiving directory can grow.</td>
</tr>
<tr>
<td class="ts">6</td>
<td>nifi.authorizer.configuration.file</td>
<td>./conf/authorizers.xml</td>
<td>To specify the authorizer configuration file, which is used for user authorization.</td>
</tr>
<tr>
<td class="ts">7</td>
<td>nifi.login.identity.provider.configuration.file</td>
<td>./conf/login-identity-providers.xml</td>
<td>This property contains the configuration of login identity providers,</td>
</tr>
<tr>
<td class="ts">8</td>
<td>nifi.templates.directory</td>
<td>./conf/templates</td>
<td>This property is used to specify the directory, where NiFi templates will be stored.</td>
</tr>
<tr>
<td class="ts">9</td>
<td>nifi.nar.library.directory</td>
<td>./lib</td>
<td>This property contains the path to library, which NiFi will use to load all the components using NAR files present in this lib folder.</td>
</tr>
<tr>
<td class="ts">10</td>
<td>nifi.nar.working.directory</td>
<td>./work/nar/</td>
<td>This directory will be storing the unpacked nar files, once NiFi processes them.</td>
</tr>
<tr>
<td class="ts">11</td>
<td>nifi.documentation.working.directory</td>
<td>./work/docs/components</td>
<td>This directory contains the documentation of all components.</td>
</tr>
</table>
<h2>State Management</h2>
<p>These properties are used to store the state of the components helpful to start the processing, where components left after a restart and in the next schedule running.</p>
<table class="table table-bordered">
<tr>
<th style="text-align:center;">S.No.</th>
<th style="text-align:center;">Property name</th>
<th style="text-align:center;">Default Value</th>
<th style="text-align:center;">description</th>
</tr>
<tr>
<td class="ts">1</td>
<td>nifi.state.management.configuration.file</td>
<td>./conf/state-management.xml</td>
<td>This property contains the path to state-management.xml file. This file contains all component state present in the data flows of that NiFi instance.</td>
</tr>
<tr>
<td class="ts">2</td>
<td>nifi.state.management.provider.local</td>
<td>local-provider</td>
<td>It contains the ID of the local state provider.</td>
</tr>
<tr>
<td class="ts">3</td>
<td>nifi.state.management.provider.cluster</td>
<td>zk-provider</td>
<td>This property contains the ID of the cluster-wide state provider. This will be ignored if NiFi is not clustered but must be populated if running in a cluster.</td>
</tr>
<tr>
<td class="ts">4</td>
<td>nifi.state.management.
embedded.
zookeeper.
start</td>
<td>false</td>
<td>This property specifies whether or not this instance of NiFi should run an embedded ZooKeeper server.</td>
</tr>
<tr>
<td class="ts">5</td>
<td>nifi.state.management.
embedded.
zookeeper.properties</td>
<td>./conf/zookeeper.properties</td>
<td>This property contains the path of the properties file that provides the ZooKeeper properties to use if &lt;nifi.state.management.
embedded.
zookeeper.
start&gt; is set to true.</td>
</tr>
</table>
<h2>FlowFile Repository</h2>
<p>Let us now look into the important details of the FlowFile repository &minus;</p>
<table class="table table-bordered">
<tr>
<th style="text-align:center;">S.No.</th>
<th style="text-align:center;">Property name</th>
<th style="text-align:center;">Default Value</th>
<th style="text-align:center;">description</th>
</tr>
<tr>
<td class="ts">1</td>
<td>nifi.flowfile.repository.
implementation</td>
<td>org.apache.nifi.
controller.
repository.
WriteAhead
FlowFileRepository</td>
<td>This property is used to specify either to store the flowfiles in memory or disk. If a user want to stores the flowfiles in memory then change to "org.apache.nifi.controller.
repository.VolatileFlowFileRepository".</td>
</tr>
<tr>
<td class="ts">2</td>
<td>nifi.flowfile.repository.directory</td>
<td>./flowfile_repository</td>
<td>To specify the directory for flowfile repository.</td>
</tr>
</table>
<h1>Apache NiFi - Administration</h1>
<p>Apache NiFi offers support to multiple tools like ambari, zookeeper for administration purposes. NiFi also provides configuration in nifi.properties file to set up HTTPS and other things for administrators.</p>
<h2>zookeeper</h2>
<p>NiFi itself does not handle voting process in cluster. This means when a cluster is created, all the nodes are primary and coordinator. So, zookeeper is configured to manage the voting of primary node and coordinator. The nifi.properties file contains some properties to setup zookeeper.</p>
<table class="table table-bordered">
<tr>
<th style="text-align:center;">S.No.</th>
<th style="text-align:center;">Property name</th>
<th style="text-align:center;">Default Value</th>
<th style="text-align:center;">description</th>
</tr>
<tr>
<td class="ts">1</td>
<td>nifi.state.management.embedded.zookeeper.
properties</td>
<td>./conf/zookeeper.properties</td>
<td>To specify the path and name of zookeeper property file.</td>
</tr>
<tr>
<td class="ts">2</td>
<td>nifi.zookeeper.connect.string</td>
<td>empty</td>
<td>To specify the connection string of zookeeper.</td>
</tr>
<tr>
<td class="ts">3</td>
<td>nifi.zookeeper.connect.timeout</td>
<td>3 secs</td>
<td>To specify the connection timeout of zookeeper with NiFi.</td>
</tr>
<tr>
<td class="ts">4</td>
<td>nifi.zookeeper.session.timeout</td>
<td>3 secs</td>
<td>To specify the session timeout of zookeeper with NiFi.</td>
</tr>
<tr>
<td class="ts">5</td>
<td>nifi.zookeeper.root.node</td>
<td>/nifi</td>
<td>To specify root node for zookeeper.</td>
</tr>
<tr>
<td class="ts">6</td>
<td>nifi.zookeeper.auth.type</td>
<td>empty</td>
<td>To specify authentication type for zookeeper.</td>
</tr>
</table>
<h2>Enable HTTPS</h2>
<p>To use NiFi over HTTPS, administrators have to generate keystore and truststore and set some properties in the nifi.properties file. The TLS toolkit can be used to generate all the necessary keys to enable HTTPS in apache NiFi.</p>
<table class="table table-bordered">
<tr>
<th style="text-align:center;">S.No.</th>
<th style="text-align:center;">Property name</th>
<th style="text-align:center;">Default Value</th>
<th style="text-align:center;">description</th>
</tr>
<tr>
<td class="ts">1</td>
<td>nifi.web.https.port</td>
<td>empty</td>
<td>To specify https port number.</td>
</tr>
<tr>
<td class="ts">2</td>
<td>nifi.web.https.network.interface.default</td>
<td>empty</td>
<td>Default interface for https in NiFi.</td>
</tr>
<tr>
<td class="ts">3</td>
<td>nifi.security.keystore</td>
<td>empty</td>
<td>To specify the path and file name of keystore.</td>
</tr>
<tr>
<td class="ts">4</td>
<td>nifi.security.keystoreType</td>
<td>empty</td>
<td>To specify the type of keystore type like JKS.</td>
</tr>
<tr>
<td class="ts">5</td>
<td>nifi.security.keystorePasswd</td>
<td>empty</td>
<td>To specify keystore password.</td>
</tr>
<tr>
<td class="ts">6</td>
<td>nifi.security.truststore</td>
<td>empty</td>
<td>To specify the path and file name of truststore.</td>
</tr>
<tr>
<td class="ts">7</td>
<td>nifi.security.truststoreType</td>
<td>empty</td>
<td>To specify the type of truststore type like JKS.</td>
</tr>
<tr>
<td class="ts">8</td>
<td>nifi.security.truststorePasswd</td>
<td>empty</td>
<td>To specify truststore password.</td>
</tr>
</table>
<h2>Other properties for administration</h2>
<p>There are some other properties, which are used by administrators to manage the NiFi and for its service continuity.</p>
<table class="table table-bordered">
<tr>
<th style="text-align:center;">S.No.</th>
<th style="text-align:center;">Property name</th>
<th style="text-align:center;">Default Value</th>
<th style="text-align:center;">description</th>
</tr>
<tr>
<td class="ts">1</td>
<td>nifi.flowcontroller.graceful.shutdown.period</td>
<td>10 sec</td>
<td>To specify the time to gracefully shutdown the NiFi flowcontroller.</td>
</tr>
<tr>
<td class="ts">2</td>
<td>nifi.administrative.yield.duration</td>
<td>30 sec</td>
<td>To specify the administrative yield duration for NiFi.</td>
</tr>
<tr>
<td class="ts">3</td>
<td>nifi.authorizer.configuration.file</td>
<td>./conf/authorizers.xml</td>
<td>To specify the path and file name of authorizer configuration file.</td>
</tr>
<tr>
<td class="ts">4</td>
<td>nifi.login.identity.provider.configuration.file</td>
<td>./conf/login-identity-providers.xml</td>
<td>To specify the path and file name of login identity provider configuration file.</td>
</tr>
</table>
<h1>Apache NiFi - Creating Flows</h1>
<p>Apache NiFi offers a large number of components to help developers to create data flows for any type of protocols or data sources. To create a flow, a developer drags the components from menu bar to canvas and connects them by clicking and dragging the mouse from one component to other.</p>
<p>Generally, a NiFi has a listener component at the starting of the flow like getfile, which gets the data from source system. On the other end of there is a transmitter component like putfile and there are components in between, which process the data.</p>
<p>For example, let create a flow, which takes an empty file from one directory and add some text in that file and put it in another directory.</p>
<img class="full-width" src="/apache_nifi/images/creating_flow.jpg" alt="Creating Flow" />
<ul class="list">
<li><p>To begin with, drag the processor icon to the NiFi canvas and select GetFile processor from the list.</p></li>
<li><p>Create an input directory like <b>c:\inputdir.</b></p></li>
<li><p>Right-click on the processor and select configure and in properties tab add <b>Input Directory (c:\inputdir)</b> and click apply and go back to canvas.</p></li>
<li><p>Drag the processor icon to the canvas and select the ReplaceText processor from the list.</p></li>
<li><p>Right-click on the processor and select configure. In the <b>properties</b> tab, add some text like <b>“Hello tutorialspoint.com”</b> in the textbox of Replacement Value and click apply.</p></li>
<li><p>Go to settings tab, check the failure checkbox at right hand side, and then go back to the canvas.</p></li>
<li><p>Connect GetFIle processor to ReplaceText on success relationship.</p></li>
<li><p>Drag the processor icon to the canvas and select the PutFile processor from the list.</p></li>
<li><p>Create an output directory like <b>c:\outputdir</b>.</p></li>
<li><p>Right-click on the processor and select configure. In the properties tab, add <b>Directory (c:\outputdir)</b> and click apply and go back to canvas.</p></li>
<li><p>Go to settings tab and check the failure and success checkbox at right hand side and then go back to the canvas.</p></li>
<li><p>Connect the ReplaceText processor to PutFile on success relationship.</p></li>
<li><p>Now start the flow and add an empty file in input directory and you will see that, it will move to output directory and the text will be added to the file.</p></li>
</ul>
<p>By following the above steps, developers can choose any processor and other NiFi component to create suitable flow for their organisation or client.</p>
<h1>Apache NiFi - Templates</h1>
<p>Apache NiFi offers the concept of Templates, which makes it easier to reuse and distribute the NiFi flows. The flows can be used by other developers or in other NiFi clusters. It also helps NiFi developers to share their work in repositories like GitHub.</p>
<h2>Create Template</h2>
<p>Let us create a template for the flow, which we created in chapter no 15 “Apache NiFi - Creating Flows”.</p>
<img class="center" src="/apache_nifi/images/create_template.jpg" alt="Create Template" />
<p>Select all the components of the flow using shift key and then click on the create template icon at the left hand side of the NiFi canvas. You can also see a tool box as shown in the above image. Click on the icon <b>create template</b> marked in blue as in the above picture. Enter the name for the template. A developer can also add description, which is optional.</p>
<h2>Download Template</h2>
<p>Then go to the NiFi templates option in the menu present at the top right hand corner of NiFi UI as show in the picture below.</p>
<img class="center" src="/apache_nifi/images/download_template.jpg" alt="Download Template" />
<p>Now click the download icon (present at the right hand side in the list) of the template, you want to download. An XML file with the template name will get downloaded.</p>
<h2>Upload Template</h2>
<p>To use a template in NiFi, a developer will have to upload its xml file to NiFi using UI. There is an Upload Template icon (marked with blue in below image) beside Create Template icon click on that and browse the xml.</p>
<img class="center" src="/apache_nifi/images/upload_template.jpg" alt="Upload Template" />
<h2>Add Template</h2>
<p>In the top toolbar of NiFi UI, the template icon is before the label icon. The icon is marked in blue as shown in the picture below.</p>
<img class="full-width" src="/apache_nifi/images/add_template.jpg" alt="Add Template" />
<p>Drag the template icon and choose the template from the drop down list and click add. It will add the template to NiFi canvas.</p>
<h1>Apache NiFi - API</h1>
<p>NiFi offers a large number of API, which helps developers to make changes and get information of NiFi from any other tool or custom developed applications. In this tutorial, we will use postman app in google chrome to explain some examples.</p>
<p>To add postmantoyour Google Chrome, go to the below mentioned URL and click add to chrome button. You will now see a new app added toyour Google Chrome.</p>
<p><a href="https://chrome.google.com/webstore/detail/postman/fhbjgbiflinjbdggehcddcbncdddomop?hl=en" rel="nofollow" target="_blank">chrome web store</a></p>
<p>The current version of NiFi rest API is 1.8.0 and the documentation is present in the below mentioned URL.</p>
<p><a href="https://nifi.apache.org/docs/nifi-docs/rest-api/index.html" rel="nofollow" target="_blank">https://nifi.apache.org/docs/nifi-docs/rest-api/index.html</a></p>
<p>Following are the most used NiFi rest API Modules &minus;</p>
<ul class="list">
<li><p>http://&lt;nifi url&gt;:&lt;nifi port&gt;/nifi-api/&lt;<b>api-path</b>&gt;</p></li>
<li><p>In case HTTPS is enabled
https://&lt;nifi url&gt;:&lt;nifi port&gt;/nifi-api/&lt;<b>api-path</b>&gt;</p></li>
</ul>
<table class="table table-bordered">
<tr>
<th style="text-align:center;">S.No.</th>
<th style="text-align:center;">API module Name</th>
<th style="text-align:center;">api-path</th>
<th style="text-align:center;">Description</th>
</tr>
<tr>
<td class="ts">1</td>
<td>Access</td>
<td>/access</td>
<td>To authenticate user and get access token from NiFi.</td>
</tr>
<tr>
<td class="ts">2</td>
<td>Controller</td>
<td>/controller</td>
<td>To manage the cluster and create reporting task.</td>
</tr>
<tr>
<td class="ts">3</td>
<td>Controller Services</td>
<td>/controller-services</td>
<td>It is used to manage controller services and update controller service references.</td>
</tr>
<tr>
<td class="ts">4</td>
<td>Reporting Tasks</td>
<td>/reporting-tasks</td>
<td>To manage reporting tasks.</td>
</tr>
<tr>
<td class="ts">5</td>
<td>Flow</td>
<td>/flow</td>
<td>To get the data flow metadata and &nbsp;component status and query history</td>
</tr>
<tr>
<td class="ts">6</td>
<td>Process Groups</td>
<td>/process-groups</td>
<td>To upload and instantiate a template and create components.</td>
</tr>
<tr>
<td class="ts">7</td>
<td>Processors</td>
<td>/processors</td>
<td>To create and schedule a processor and set its properties.</td>
</tr>
<tr>
<td class="ts">8</td>
<td>Connections</td>
<td>/connections</td>
<td>To create a connection, set queue priority and update connection destination</td>
</tr>
<tr>
<td class="ts">9</td>
<td>FlowFile Queues</td>
<td>/flowfile-queues</td>
<td>To view queue contents, download flowfile content, and empty queue.</td>
</tr>
<tr>
<td class="ts">10</td>
<td>Remote Process Groups</td>
<td>/remote-process-groups</td>
<td>To create a remote group and enable transmission.</td>
</tr>
<tr>
<td class="ts">11</td>
<td>Provenance</td>
<td>/provenance</td>
<td>To query provenance, and search event lineage.</td>
</tr>
</table>
<p>Let us now consider an example and run on postman to get the details about the running NiFi instance.</p>
<h3>Request</h3>
<pre class="result notranslate">
GET http://localhost:8080/nifi-api/flow/about
</pre>
<h3>Response</h3>
<pre class="result notranslate">
{
   "about": {
      "title": "NiFi",
      "version": "1.7.1",
      "uri": "http://localhost:8080/nifi-api/",
      "contentViewerUrl": "../nifi-content-viewer/",
      "timezone": "SGT",
      "buildTag": "nifi-1.7.1-RC1",
      "buildTimestamp": "07/12/2018 12:54:43 SGT"
   }
}
</pre>
<h1>Apache NiFi - Data Provenance</h1>
<p>Apache NiFi logs and store every information about the events occur on the ingested data in the flow. Data provenance repository stores this information and provides UI to search this event information. Data provenance can be accessed for full NiFi level and processor level also.</p>
<img class="full-width" src="/apache_nifi/images/data_provenance.jpg" alt="Data Provenance" />
<p>The following table lists down the different fields in the NiFi Data Provenance event list have following fields &minus;</p>
<table class="table table-bordered">
<tr>
<th style="text-align:center;">S.No.</th>
<th style="text-align:center;">Field Name</th>
<th style="text-align:center;">Description</th>
</tr>
<tr>
<td class="ts">1</td>
<td>Date/Time</td>
<td>Date and time of event.</td>
</tr>
<tr>
<td class="ts">2</td>
<td>Type</td>
<td>Type of Event like &lsquo;CREATE&rsquo;.</td>
</tr>
<tr>
<td class="ts">3</td>
<td>FlowFileUuid</td>
<td>UUID of the flowfile on which the event is performed.</td>
</tr>
<tr>
<td class="ts">4</td>
<td>Size</td>
<td>Size of the flowfile.</td>
</tr>
<tr>
<td class="ts">5</td>
<td>Component Name</td>
<td>Name of the component which &nbsp;performed the event.</td>
</tr>
<tr>
<td class="ts">6</td>
<td>Component Type</td>
<td>Type of the component.</td>
</tr>
<tr>
<td class="ts">7</td>
<td>Show lineage</td>
<td>Last column has the show lineage icon, which is used to see the flowfile lineage as shown in the below image.</td>
</tr>
</table>
<img class="center" src="/apache_nifi/images/lineage_icon.jpg" alt="Lineage Icon" />
<p>To get more information about the event, a user can click on the information icon present in the first column of the NiFi Data Provenance UI.</p>
<p>There are some properties in nifi.properties file, which are used to manage NiFi Data Provenance repository.</p>
<table class="table table-bordered">
<tr>
<th style="text-align:center;">S.No.</th>
<th style="text-align:center;">Property Name</th>
<th style="text-align:center;">Default Value</th>
<th style="text-align:center;">Description</th>
</tr>
<tr>
<td class="ts">1</td>
<td>nifi.provenance.repository.directory.default</td>
<td>./provenance_repository</td>
<td>To specify the default path of NiFi data provenance .</td>
</tr>
<tr>
<td class="ts">2</td>
<td>nifi.provenance.repository.max.storage.time</td>
<td>24 hours</td>
<td>To specify the maximum retention time of NiFi data provenance.</td>
</tr>
<tr>
<td class="ts">3</td>
<td>nifi.provenance.repository.max.storage.size</td>
<td>1 GB</td>
<td>To specify the maximum storage of NiFi data provenance.</td>
</tr>
<tr>
<td class="ts">4</td>
<td>nifi.provenance.repository.rollover.time</td>
<td>30 secs</td>
<td>To specify the rollover time of NiFi data provenance.</td>
</tr>
<tr>
<td class="ts">5</td>
<td>nifi.provenance.repository.rollover.size</td>
<td>100 MB</td>
<td>To specify the rollover size of NiFi data provenance.</td>
</tr>
<tr>
<td class="ts">6</td>
<td>nifi.provenance.repository.indexed.fields</td>
<td>EventType, FlowFileUUID, Filename, ProcessorID, Relationship</td>
<td>To specify the fields used to search and index NiFi data provenance.</td>
</tr>
</table>
<h1>Apache NiFi - Monitoring</h1>
<p>In Apache NiFi, there are multiple ways to monitor the different statistics of the system like errors, memory usage, CPU usage, Data Flow statistics, etc. We will discuss the most popular ones in this tutorial.</p>
<h2>In built Monitoring</h2>
<p>In this section, we will learn more about in built monitoring in Apache NiFi.</p>
<h3>Bulletin Board</h3>
<p>The bulletin board shows the latest ERROR and WARNING getting generated by NiFi processors in real time. To access the bulletin board, a user will have to go the right hand drop down menu and select the Bulletin Board option. It refreshes automatically and a user can disable it also. A user can also navigate to the actual processor by double-clicking the error. A user can also filter the bulletins by working out with the following &minus;</p>
<ul class="list">
<li>by message</li>
<li>by name</li>
<li>by id</li>
<li>by group id</li>
</ul>
<h3>Data provenance UI</h3>
<p>To monitor the Events occurring on any specific processor or throughout NiFi, a user can access the Data provenance from the same menu as the bulletin board. A user can also filter the events in data provenance repository by working out with the following fields &minus;</p>
<ul class="list">
<li>by component name</li>
<li>by component type</li>
<li>by type</li>
</ul>
<h3>NiFi Summary UI</h3>
<p>Apache NiFi summary also can be accessed from the same menu as the bulletin board. This UI contains information about all the components of that particular NiFi instance or cluster. They can be filtered by name, by type or by URI. There are different tabs for different component types. Following are the components, which can be monitored in the NiFi summary UI &minus;</p>
<ul class="list">
<li>Processors</li>
<li>Input ports</li>
<li>Output ports</li>
<li>Remote process groups</li>
<li>Connections</li>
<li>Process groups</li>
</ul>
<p>In this UI, there is a link at the bottom right hand side named system diagnostics to check the JVM statistics.</p>
<h3>Reporting Tasks</h3>
<p>Apache NiFi provides multiple reporting tasks to support external monitoring systems like Ambari, Grafana, etc. A developer can create a custom reporting task or can configure the inbuilt ones to send the metrics of NiFi to the externals monitoring systems. The following table lists down the reporting tasks offered by NiFi 1.7.1.</p>
<table class="table table-bordered">
<tr>
<th style="text-align:center;">S.No.</th>
<th style="text-align:center;">Reporting Task Name</th>
<th style="text-align:center;">Description</th>
</tr>
<tr>
<td class="ts">1</td>
<td>AmbariReportingTask</td>
<td>To setup Ambari Metrics Service for NiFi.</td>
</tr>
<tr>
<td class="ts">2</td>
<td>ControllerStatusReportingTask</td>
<td>To report the information from the NiFi summary UI for the last 5 minute.</td>
</tr>
<tr>
<td class="ts">3</td>
<td>MonitorDiskUsage</td>
<td>To report and warn about the disk usage of a specific directory.</td>
</tr>
<tr>
<td class="ts">4</td>
<td>MonitorMemory</td>
<td>To monitor the amount of Java Heap used in a Java Memory pool of JVM.</td>
</tr>
<tr>
<td class="ts">5</td>
<td>SiteToSiteBulletinReportingTask</td>
<td>To report the errors and warning in bulletins using Site to Site protocol.</td>
</tr>
<tr>
<td class="ts">6</td>
<td>SiteToSiteProvenanceReportingTask</td>
<td>To report the NiFi Data Provenance events using Site to Site protocol.</td>
</tr>
</table>
<h3>NiFi API</h3>
<p>There is an API named system diagnostics, which can be used to monitor the NiFI stats in any custom developed application. Let us check the API in postman.</p>
<h3>Request</h3>
<pre class="result notranslate">
http://localhost:8080/nifi-api/system-diagnostics
</pre>
<h3>Response</h3>
<pre class="result notranslate">
{
   "systemDiagnostics": {
      "aggregateSnapshot": {
         "totalNonHeap": "183.89 MB",
         "totalNonHeapBytes": 192819200,
         "usedNonHeap": "173.47 MB",
         "usedNonHeapBytes": 181894560,
         "freeNonHeap": "10.42 MB",
         "freeNonHeapBytes": 10924640,
         "maxNonHeap": "-1 bytes",
         "maxNonHeapBytes": -1,
         "totalHeap": "512 MB",
         "totalHeapBytes": 536870912,
         "usedHeap": "273.37 MB",
         "usedHeapBytes": 286652264,
         "freeHeap": "238.63 MB",
         "freeHeapBytes": 250218648,
         "maxHeap": "512 MB",
         "maxHeapBytes": 536870912,
         "heapUtilization": "53.0%",
         "availableProcessors": 4,
         "processorLoadAverage": -1,
         "totalThreads": 71,
         "daemonThreads": 31,
         "uptime": "17:30:35.277",
         "flowFileRepositoryStorageUsage": {
            "freeSpace": "286.93 GB",
            "totalSpace": "464.78 GB",
            "usedSpace": "177.85 GB",
            "freeSpaceBytes": 308090789888,
            "totalSpaceBytes": 499057160192,
            "usedSpaceBytes": 190966370304,
            "utilization": "38.0%"
         },
         "contentRepositoryStorageUsage": [
            {
               "identifier": "default",
               "freeSpace": "286.93 GB",
               "totalSpace": "464.78 GB",
               "usedSpace": "177.85 GB",
               "freeSpaceBytes": 308090789888,
               "totalSpaceBytes": 499057160192,
               "usedSpaceBytes": 190966370304,
               "utilization": "38.0%"
            }
         ],
         "provenanceRepositoryStorageUsage": [
            {
               "identifier": "default",
               "freeSpace": "286.93 GB",
               "totalSpace": "464.78 GB",
               "usedSpace": "177.85 GB",
               "freeSpaceBytes": 308090789888,
               "totalSpaceBytes": 499057160192,
               "usedSpaceBytes": 190966370304,
               "utilization": "38.0%"
            }
         ],
         "garbageCollection": [
            {
               "name": "G1 Young Generation",
               "collectionCount": 344,
               "collectionTime": "00:00:06.239",
               "collectionMillis": 6239
            },
            {
               "name": "G1 Old Generation",
               "collectionCount": 0,
               "collectionTime": "00:00:00.000",
               "collectionMillis": 0
            }
         ],
         "statsLastRefreshed": "09:30:20 SGT",
         "versionInfo": {
            "niFiVersion": "1.7.1",
            "javaVendor": "Oracle Corporation",
            "javaVersion": "1.8.0_151",
            "osName": "Windows 7",
            "osVersion": "6.1",
            "osArchitecture": "amd64",
            "buildTag": "nifi-1.7.1-RC1",
            "buildTimestamp": "07/12/2018 12:54:43 SGT"
         }
      }
   }
}
</pre>
<h1>Apache NiFi - Upgrade</h1>
<p>Before starting the upgrade of Apache NiFi, read the release notes to know about the changes and additions. A user needs to evaluate the impact of these additions and changes in his/her current NiFi installation. Below is the link to get the release notes for the new releases of Apache NiFi.</p>
<p><a href="https://cwiki.apache.org/confluence/display/NIFI/Release+Notes" rel="nofollow" target="_blank">https://cwiki.apache.org/confluence/display/NIFI/Release+Notes</a></p>
<p>In a cluster setup, a user needs to upgrade NiFi installation of every Node in a cluster. Follow the steps given below to upgrade the Apache NiFi.</p>
<ul class="list">
<li><p>Backup all the custom NARs present in your current NiFi or lib or any other folder.</p></li>
<li><p>Download the new version of Apache NiFi. Below is the link to download the source and binaries of latest NiFi version.</p>
<p><a href="https://nifi.apache.org/download.html" rel="nofollow" target="_blank">https://nifi.apache.org/download.html</a></p></li>
<li><p>Create a new directory in the same installation directory of current NiFi and extract the new version of Apache NiFi.</p></li>
<li><p>Stop the NiFi gracefully. First stop all the processors and let all the flowfiles present in the flow get processed. Once, no more flowfile is there, stop the NiFi.</p></li>
<li><p>Copy the configuration of authorizers.xml from current NiFi installation to the new version.</p></li>
<li><p>Update the values in bootstrap-notification-services.xml, and bootstrap.conf of new NiFi version from the current one.</p></li>
<li><p>Add the custom logging from logback.xml to the new NiFi installation.</p></li>
<li><p>Configure the login identity provider in login-identity-providers.xml from the current version.</p></li>
<li><p>Update all the properties in nifi.properties of the new NiFi installation from current version.</p></li>
<li><p>Please make sure that the group and user of new version is same as the current version, to avoid any permission denied errors.</p></li>
<li><p>Copy the configuration from state-management.xml of current version to the new version.</p></li>
<li><p>Copy the contents of the following directories from current version of NiFi installation to the same directories in the new version.</p>
<ul class="list">
<li><p>./conf/flow.xml.gz</p></li>
<li><p>Also flow.xml.gz from the archive directory.</p></li>
<li><p>For provenance and content repositories change the values in nifi. properties file to the current repositories.</p></li>
<li><p>copy state from ./state/local or change in nifi.properties if any other external directory is specified.</p></li>
</ul>
</li>
<li><p>Recheck all the changes performed and check if they have an impact on any new changes added in the new NiFi version. If there is any impact, check for the solutions.</p></li>
<li><p>Start all the NiFi nodes and verify if all the flows are working correctly and repositories are storing data and Ui is retrieving it with any errors.</p></li>
<li><p>Monitor bulletins for some time to check for any new errors.</p></li>
<li><p>If the new version is working correctly, then the current version can be archived and deleted from the directories.</p></li>
</ul>
<h1>Apache NiFi - Remote Process Group</h1>
<p>Apache NiFi Remote Process Group or RPG enables flow to direct the FlowFiles in a flow to different NiFi instances using Site-to-Site protocol. As of version 1.7.1, NiFi does not offer balanced relationships, so RPG is used for load balancing in a NiFi data flow.</p>
<img class="center" src="/apache_nifi/images/remote_process.jpg" alt="Remote Process" />
<p>A developer can add the RPG from the top toolbar of NiFi UI by dragging the icon as shown in the above picture to canvas. To configure an RPG, a Developer has to add the following fields &minus;</p>
<table class="table table-bordered">
<tr>
<th style="text-align:center;">S.No.</th>
<th style="text-align:center;">Field Name</th>
<th style="text-align:center;">Description</th>
</tr>
<tr>
<td class="ts">1</td>
<td>URLs</td>
<td>To specify comma separated remote target NiFi URLs.</td>
</tr>
<tr>
<td class="ts">2</td>
<td>Transport Protocol</td>
<td>To specify the transport protocol for remote NiFi instances. It's either RAW or HTTP.</td>
</tr>
<tr>
<td class="ts">3</td>
<td>Local Network Interface</td>
<td>To specify the local network interface to send/receive data.</td>
</tr>
<tr>
<td class="ts">4</td>
<td>HTTP Proxy Server Hostname</td>
<td>To specify the proxy server's hostname for the purpose of transport in RPG.</td>
</tr>
<tr>
<td class="ts">5</td>
<td>HTTP Proxy Server Port</td>
<td>To specify the proxy server's port for the purpose of transport in RPG.</td>
</tr>
<tr>
<td class="ts">6</td>
<td>HTTP Proxy User</td>
<td>It is an optional field to specify the username for HTTP proxy.</td>
</tr>
<tr>
<td class="ts">7</td>
<td>HTTP Proxy Password</td>
<td>It is an optional field to specify the password for above username.</td>
</tr>
</table>
<p>A developer needs to enable it, before using it like we start processors before using them.</p>
<img class="center" src="/apache_nifi/images/nifi_flow.jpg" alt="NiFi Flow" />
<h1>Apache NiFi - Controller Settings</h1>
<p>Apache NiFi offers shared services, which can be shared by processors and reporting task is called controller settings. These are like Database connection pool, which can be used by processors accessing same database.</p>
<p>To access the controller settings, use the drop down menu at the right top corner of NiFi UI as shown in the below image.</p>
<img class="center" src="/apache_nifi/images/controller_settings.jpg" alt="Controller Settings" />
<p>There are many controller settings offered by Apache NiFi, we will discuss a commonly used one and how we set it up in NiFi.</p>
<h2>DBCPConnectionPool</h2>
<p>Add the plus sign in the Nifi Settings page after clicking the Controller settings option. Then select the DBCPConnectionPool from the list of controller settings. DBCPConnectionPool will be added in the main NiFi settings page as shown in the below image.</p>
<img class="full-width" src="/apache_nifi/images/connection_pool.jpg" alt="Connection Pool" />
<p>It contains the following information about the controller <b>setting:Name</b></p>
<ul class="list">
<li>Type</li>
<li>Bundle</li>
<li>State</li>
<li>Scope</li>
<li>Configure and delete icon</li>
</ul>
<p>Click on the configure icon and fill the required fields. The fields are listed down in the table below &minus;</p>
<table class="table table-bordered">
<tr>
<th style="text-align:center;">S.No.</th>
<th style="text-align:center;">Field Name</th>
<th style="text-align:center;">Default value</th>
<th style="text-align:center;">description</th>
</tr>
<tr>
<td class="ts">1</td>
<td>Database Connection URL</td>
<td>empty</td>
<td>To specify the connection URL to database.</td>
</tr>
<tr>
<td class="ts">2</td>
<td>Database Driver Class Name</td>
<td>empty</td>
<td>To specify the driver class name for database like com.mysql.jdbc.Driver for mysql.</td>
</tr>
<tr>
<td class="ts">3</td>
<td>Max Wait Time</td>
<td>500 millis</td>
<td>To specify time to wait for the data from a connection to database.</td>
</tr>
<tr>
<td class="ts">4</td>
<td>Max Total Connections</td>
<td class="ts">8</td>
<td>To specify the maximum number of allocated connection in database connection pool.</td>
</tr>
</table>
<p>To stop or configure a controller setting, first all the attached NiFi components should be stopped. NiFi also adds scope in controller settings to manage the configuration of it. Therefore, only the ones which shared the same settings will not get impacted and will use the same controller settings.</p>
<h1>Apache NiFi - Reporting Task</h1>
<p>Apache NiFi reporting tasks are similar to the controller services, which run in the background and send or log the statistics of NiFi instance. NiFi reporting task can also be accessed from the same page as controller settings, but in a different tab.</p>
<img class="full-width" src="/apache_nifi/images/reporting_task.jpg" alt="Reporting Task" />
<p>To add a reporting task, a developer needs to click on the plus button present at the top right hand side of the reporting tasks page. These reporting tasks are mainly used for monitoring the activities of a NiFi instance, in either the bulletins or the provenance. Mainly these reporting tasks uses Site-to-Site to transport the NiFi statistics data to other node or external system.</p>
<p>Let us now add a configured reporting task for more understanding.</p>
<h2>MonitorMemory</h2>
<p>This reporting task is used to generate bulletins, when a memory pool crosses specified percentage. Follow these steps to configure the MonitorMemory reporting task &minus;</p>
<ul class="list">
<li><p>Add in the plus sign and search for MonitorMemory in the list.</p></li>
<li><p>Select MonitorMemory and click on ADD.</p></li>
<li><p>Once it is added in the main page of reporting tasks main page, click on the configure icon.</p></li>
<li><p>In the properties tab, select the memory pool, which you want to monitor.</p></li>
<li><p>Select the percentage after which you want bulletins to alert the users.
<li><p>Start the reporting task.</p></li>
</ul>
<h1>Apache NiFi - Custom Processor</h1>
<p>Apache NiFi is an open source platform and gives developers the options to add their custom processor in the NiFi library. Follow these steps to create a custom processor.</p>
<ul class="list">
<li><p>Download Maven latest version from the link given below.</p>
<p><a href="https://maven.apache.org/download.cgi" rel="nofollow" target="_blank">https://maven.apache.org/download.cgi</a></p></li>
<li><p>Add an environment variable named M2_HOME and set value as the installation directory of maven.</p></li>
<li><p>Download Eclipse IDE from the below link.</p>
<p><a href="https://www.eclipse.org/downloads/download.php" rel="nofollow" target="_blank">https://www.eclipse.org/downloads/download.php</a>
</p></li>
<li><p>Open command prompt and execute Maven Archetype command.</p></li>
</ul>
<pre class="result notranslate">
&gt; mvn archetype:generate
</pre>
<ul class="list">
<li><p>Search for the nifi type in the archetype projects.</p></li>
<li><p>Select org.apache.nifi:nifi-processor-bundle-archetype project.</p></li>
<li><p>Then from the list of versions select the latest version i.e. 1.7.1 for this tutorial.</p></li>
<li><p>Enter the groupId, artifactId, version, package, and artifactBaseName etc.</p></li>
<li><p>Then a maven project will be created having to directories.</p>
<ul class="list">
<li><p>nifi-&lt;artifactBaseName&gt;-processors</p></li>
<li><p>nifi-&lt;artifactBaseName&gt;-nar</p></li>
</ul>
</li>
<li><p>Run the below command in nifi-&lt;artifactBaseName&gt;-processors directory to add the project in the eclipse.</p></li>
</ul>
<pre class="result notranslate">
mvn install eclipse:eclipse
</pre>
<ul clas="list">
<li><p>Open eclipse and select import from the file menu.</p></li>
<li><p>Then select “Existing Projects into workspace” and add the project from nifi-&lt;artifactBaseName&gt;-processors directory in eclipse.</p></li>
<li><p>Add your code in public void onTrigger(ProcessContext context, ProcessSession session) function, which runs when ever a processor is scheduled to run.</p></li>
<li><p>Then package the code to a NAR file by running the below mentioned command.</p></li>
</ul>
<pre class="result notranslate">
mvn clean install
</pre>
<ul class="list">
<li><p>A NAR file will be created at nifi-<artifactBaseName>-nar/target directory.</p></li>
<li><p>Copy the NAR file to the lib folder of Apache NiFi and restart the NiFi.</p></li>
<li><p>After successful restart of NiFi, check the processor list for the new custom processor.</p></li>
<li><p>For any errors, check ./logs/nifi.log file.</p></li>
</ul>
<h1>Apache NiFi - Custom Controllers Service</h1>
<p>Apache NiFi is an open source platform and gives developers the options to add their custom controllers service in Apache NiFi. The steps and tools are almost the same as used to create a custom processor.</p>
<ul class="list">
<li><p>Open command prompt and execute Maven Archetype command.</p></li>
</ul>
<pre class="result notranslate">
&gt; mvn archetype:generate
</pre>
<ul class="list">
<li><p>Search for the nifi type in the archetype projects.</p></li>
<li><p>Select <b>org.apache.nifi:nifi-service-bundle-archetype</b> project.</p></li>
<li><p>Then from the list of versions, select the latest version – 1.7.1 for this tutorial.</p></li>
<li><p>Enter the groupId, artifactId, version, package, and artifactBaseName, etc.</p></li>
<li><p>A maven project will be created having directories.</p>
<ul class="list">
<li><p>nifi-&lt;artifactBaseName&gt;</p></li>
<li><p>nifi-&lt;artifactBaseName&gt;-nar</p></li>
<li><p>nifi-&lt;artifactBaseName&gt;-api</p></li>
<li><p>nifi-&lt;artifactBaseName&gt;-api-nar</p></li>
</ul>
</li>
<li><p>Run the below command in nifi-&lt;artifactBaseName&gt; and nifi-&lt;artifactBaseName&gt;-api directories to add these two projects in the eclipse.</p>
<ul class="list">
<li><p>mvn install eclipse:eclipse</p></li>
</ul>
</li>
<li><p>Open eclipse and select import from the file menu.</p></li>
<li><p>Then select “Existing Projects into workspace” and add the project from nifi-&lt;artifactBaseName&gt; and nifi-&lt;artifactBaseName&gt;-api directories in eclipse.</p></li>
<li><p>Add your code in the source files.</p></li>
<li><p>Then package the code to a NAR file by running the below mentioned command.</p>
<ul class="list">
<li><p>mvn clean install</p></li>
</ul>
</li>
<li><p>Two NAR files will be created in each nifi-&lt;artifactBaseName&gt;/target and nifi-&lt;artifactBaseName&gt;-api/target directory.</p></li>
<li><p>Copy these NAR files to the lib folder of Apache NiFi and restart the NiFi.</p></li>
<li><p>After successful restart of NiFi, check the processor list for the new custom processor.</p></li>
<li><p>For any errors, check <b>./logs/nifi.log</b> file.</p></li>
</ul>
<h1>Apache NiFi - Logging</h1>
<p>Apache NiFi uses logback library to handle its logging. There is a file logback.xml present in the conf directory of NiFi, which is used to configure the logging in NiFi. The logs are generated in logs folder of NiFi and the log files are as described below.</p>
<h3>nifi-app.log</h3>
<p>This is the main log file of nifi, which logs all the activities of apache NiFi application ranging from NAR files loading to the run time errors or bulletins encountered by NiFi components. Below is the default appender in <b>logback.xml</b> file for <b>nifi-app.log</b> file.</p>
<pre class="prettyprint notranslate">
&lt;appender name="APP_FILE"
class="ch.qos.logback.core.rolling.RollingFileAppender"&gt;
   &lt;file&gt;${org.apache.nifi.bootstrap.config.log.dir}/nifi-app.log&lt;/file&gt;
   &lt;rollingPolicy
      class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy"&gt;
      &lt;fileNamePattern&gt;
         ${org.apache.nifi.bootstrap.config.log.dir}/
	      nifi-app_%d{yyyy-MM-dd_HH}.%i.log
      &lt;/fileNamePattern&gt;
      &lt;maxFileSize&gt;100MB&lt;/maxFileSize&gt;
      &lt;maxHistory&gt;30&lt;/maxHistory&gt;
   &lt;/rollingPolicy&gt;
   &lt;immediateFlush&gt;true&lt;/immediateFlush&gt;
   &lt;encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder"&gt;
      &lt;pattern&gt;%date %level [%thread] %logger{40} %msg%n&lt;/pattern&gt;
   &lt;/encoder&gt;
&lt;/appender&gt;
</pre>
<p>The appender name is APP_FILE, and the class is RollingFileAppender, which means logger is using rollback policy. By default, the max file size is 100 MB and can be changed to the required size. The maximum retention for APP_FILE is 30 log files and can be changed as per the user requirement.</p>
<h3>nifi-user.log</h3>
<p>This log contains the user events like web security, web api config, user authorization, etc. Below is the appender for nifi-user.log in logback.xml file.</p>
<pre class="prettyprint notranslate">
&lt;appender name="USER_FILE"
   class="ch.qos.logback.core.rolling.RollingFileAppender"&gt;
   &lt;file&gt;${org.apache.nifi.bootstrap.config.log.dir}/nifi-user.log&lt;/file&gt;
   &lt;rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy"&gt;
      &lt;fileNamePattern&gt;
         ${org.apache.nifi.bootstrap.config.log.dir}/
	      nifi-user_%d.log
      &lt;/fileNamePattern&gt;
      &lt;maxHistory&gt;30&lt;/maxHistory&gt;
   &lt;/rollingPolicy&gt;
   &lt;encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder"&gt;
      &lt;pattern&gt;%date %level [%thread] %logger{40} %msg%n&lt;/pattern&gt;
   &lt;/encoder&gt;
&lt;/appender&gt;
</pre>
<p>The appender name is USER_FILE. It follows the rollover policy. The maximum retention period for USER_FILE is 30 log files. Below is the default loggers for USER_FILE appender present in nifi-user.log.</p>
<pre class="prettyprint notranslate">
&lt;logger name="org.apache.nifi.web.security" level="INFO" additivity="false"&gt;
   &lt;appender-ref ref="USER_FILE"/&gt;
&lt;/logger&gt;
&lt;logger name="org.apache.nifi.web.api.config" level="INFO" additivity="false"&gt;
   &lt;appender-ref ref="USER_FILE"/&gt;
&lt;/logger&gt;
&lt;logger name="org.apache.nifi.authorization" level="INFO" additivity="false"&gt;
   &lt;appender-ref ref="USER_FILE"/&gt;
&lt;/logger&gt;
&lt;logger name="org.apache.nifi.cluster.authorization" level="INFO" additivity="false"&gt;
   &lt;appender-ref ref="USER_FILE"/&gt;
&lt;/logger&gt;
&lt;logger name="org.apache.nifi.web.filter.RequestLogger" level="INFO" additivity="false"&gt;
   &lt;appender-ref ref="USER_FILE"/&gt;
&lt;/logger&gt;
</pre>
<h3>nifi-bootstrap.log</h3>
<p>This log contains the bootstrap logs, apache NiFi’s standard output (all system.out written in the code mainly for debugging), and standard error (all system.err written in the code). Below is the default appender for the nifi-bootstrap.log in logback.log.</p>
<pre class="prettyprint notranslate">
&lt;appender name="BOOTSTRAP_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender"&gt;
   &lt;file&gt;${org.apache.nifi.bootstrap.config.log.dir}/nifi-bootstrap.log&lt;/file&gt;
   &lt;rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy"&gt;
      &lt;fileNamePattern&gt;
         ${org.apache.nifi.bootstrap.config.log.dir}/nifi-bootstrap_%d.log
      &lt;/fileNamePattern&gt;
      &lt;maxHistory&gt;5&lt;/maxHistory&gt;
   &lt;/rollingPolicy&gt;
   &lt;encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder"&gt;
      &lt;pattern&gt;%date %level [%thread] %logger{40} %msg%n&lt;/pattern&gt;
   &lt;/encoder&gt;
&lt;/appender&gt;
</pre>
<p>nifi-bootstrap.log file,s appender name is BOOTSTRAP_FILE, which also follows rollback policy. The maximum retention for BOOTSTRAP_FILE appender is 5 log files. Below is the default loggers for nifi-bootstrap.log file.</p>
<pre class="prettyprint notranslate">
&lt;logger name="org.apache.nifi.bootstrap" level="INFO" additivity="false"&gt;
   &lt;appender-ref ref="BOOTSTRAP_FILE" /&gt;
&lt;/logger&gt;
&lt;logger name="org.apache.nifi.bootstrap.Command" level="INFO" additivity="false"&gt;
   &lt;appender-ref ref="CONSOLE" /&gt;
   &lt;appender-ref ref="BOOTSTRAP_FILE" /&gt;
&lt;/logger&gt;
&lt;logger name="org.apache.nifi.StdOut" level="INFO" additivity="false"&gt;
   &lt;appender-ref ref="BOOTSTRAP_FILE" /&gt;
&lt;/logger&gt;
&lt;logger name="org.apache.nifi.StdErr" level="ERROR" additivity="false"&gt;
   &lt;appender-ref ref="BOOTSTRAP_FILE" /&gt;
&lt;/logger&gt;
</pre>
<div class="mui-container-fluid button-borders show">
<div class="pre-btn">
<a href="/apache_nifi/apache_nifi_logging.htm"><i class="fal fa-chevron-circle-left"></i> Previous Page</a>
</div>
<div class="nxt-btn">
<a href="/apache_nifi/apache_nifi_useful_resources.htm">Next Page <i class="fal fa-chevron-circle-right"></i>&nbsp;</a>
</div>
</div>
<div class="google-bottom-ads">
<div>Advertisements</div>
<script><!--
var width = 580;
var height = 400;
var format = "580x400_as";
if( window.innerWidth < 468 ){
   width = 300;
   height = 250;
   format = "300x250_as";
}
google_ad_client = "pub-7133395778201029";
google_ad_width = width;
google_ad_height = height;
google_ad_format = format;
google_ad_type = "image";
google_ad_channel ="";
//--></script>
<script src="https://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
<div class="space-bottom"></div>
</div>
</div>
<!-- Tutorial Content Ends Here -->
<!-- Right Column Starts Here -->
<div class="mui-col-md-2 google-right-ads">
<div class="space-top"></div>
<div class="google-right-ad" style="margin: 0px auto !important;margin-top:5px;">
<script><!--
google_ad_client = "pub-2537027957187252";
google_ad_width = 300;
google_ad_height = 250;
google_ad_format = "300x250_as";
google_ad_type = "image";
google_ad_channel ="";
//--></script>
<script src="https://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</div>
<div class="google-right-ad">
<div class="adsbyvli" data-ad-slot="vi_9012177"></div>
<script>(vitag.Init = window.vitag.Init || []).push(function(){viAPItag.display("vi_9012177")})</script>
</div>
<div class="space-bottom"></div>
<div class="google-right-ad">
<div class="adsbyvli" data-ad-slot="vi_9013289"></div>
<script>(vitag.Init = window.vitag.Init || []).push(function(){viAPItag.display("vi_9013289")})</script>
</div>
<div class="space-bottom" style="margin-bottom:15px;"></div>
</div>
<!-- Right Column Ends Here -->
</div>
</div>
<div class="clear"></div>
<footer id="footer">
<div class="mui--text-center">
<div class="mui--text-caption mui--text-light">
<a href="/index.htm" class="logo"><img class="img-responsive" src="/images/logo-black.png" alt="Tutorials Point" title="Tutorials Point"></a>
</div>
<ul class="mui-list--inline mui--text-body2 mui--text-light">
<li><a href="/about/index.htm"><i class="fal fa-globe"></i> About us</a></li>
<li><a href="/about/about_terms_of_use.htm"><i class="fal fa-asterisk"></i> Terms of use</a></li>
<li><a href="/about/about_privacy.htm#cookies"> <i class="fal fa-shield-check"></i> Cookies Policy</a></li>
<li><a href="/about/faq.htm"><i class="fal fa-question-circle"></i> FAQ's</a></li>
<li><a href="/about/about_helping.htm"><i class="fal fa-hands-helping"></i> Helping</a></li>
<li><a href="/about/contact_us.htm"><i class="fal fa-map-marker-alt"></i> Contact</a></li>
</ul>
<div class="mui--text-caption mui--text-light bottom-copyright-text">&copy; Copyright 2019. All Rights Reserved.</div>
</div>
<div id="privacy-banner">
  <div>
    <p>
      We use cookies to provide and improve our services. By using our site, you consent to our Cookies Policy.
      <a id="banner-accept" href="#">Accept</a>
      <a id="banner-learn" href="/about/about_cookies.htm" target="_blank">Learn more</a>
    </p>
  </div>
</div>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-232293-17"></script>
<script>
window.dataLayer = window.dataLayer || [];
function gtag(){dataLayer.push(arguments);}
gtag('js', new Date());
gtag('config', 'UA-232293-6');
</script>
</footer>
</body>
</html>
