<!DOCTYPE html>
<html lang="en-US">
<head>
<title>Salesforce - Quick Guide - Tutorialspoint</title>
<meta charset="utf-8">
<meta name="description" content="Salesforce - Quick Guide - Salesforce started as a cloud based solution for CRM. CRM stands for Customer Relationship Management. It involves managing all aspects of relationship between "/>
<meta name="keywords" content="C, C++, Python, Java, HTML, CSS, JavaScript, SQL, PHP, jQuery, XML, DOM, Bootstrap, Tutorials, Articles, Programming, training, learning, quiz, preferences, examples, code"/>
<link rel="canonical" href="https://www.tutorialspoint.com/salesforce/salesforce_quick_guide.htm" />
<link rel="shortcut icon" href="/favicon.ico" type="image/x-icon" />
<meta name="viewport" content="width=device-width,initial-scale=1.0,user-scalable=yes">
<script src="/theme/js/script-min-v2.js?v=3"></script>
<link rel="stylesheet" href="/theme/css/style-min-v2.css?v=6">
<script src="//services.bilsyndication.com/adv1/?d=901" defer="" async=""></script>
<script> var vitag = vitag || {};</script>
<script> vitag.outStreamConfig = { enablePC: false, enableMobile: false };</script>  
<style>
.right-menu .mui-btn {
    background-color:#cc1d74;
}
a.demo {
    background:#cc1d74;
}
li.heading {
    background:#cc1d74;
}
.course-box{background:#cc1d74}
.home-intro-sub p{color:#cc1d74}
</style>
</head>
<body>
<header id="header">
<!-- Top sub-menu Starts Here -->
<div class="mui-appbar mui-container-fulid top-menu">
<div class="mui-container">
<div class="top-menu-item home">
<a href="https://www.tutorialspoint.com/index.htm" target="_blank" title="TutorialsPoint - Home"><i class="fal fa-home"></i> <span>Home</span></a>
</div>
<div class="top-menu-item qa">
<a href="https://www.tutorialspoint.com/about/about_careers.htm" target="_blank" title="Job @ Tutorials Point"><i class="fa fa-suitcase"></i> <span>Jobs</span></a>
</div>
<div class="top-menu-item tools">
<a href="https://www.tutorialspoint.com/online_dev_tools.htm" target="_blank" title="Tools - Online Development and Testing Tools"><i class="fal fa-cogs"></i> <span>Tools</span></a>
</div>
<div class="top-menu-item coding-ground">
<a href="https://www.tutorialspoint.com/codingground.htm" target="_blank" title="Coding Ground - Free Online IDE and Terminal"><i class="fal fa-code"></i> <span>Coding Ground </span></a> 
</div>
<div class="top-menu-item current-affairs">
<a href="https://www.tutorialspoint.com/current_affairs.htm" target="_blank" title="Daily Current Affairs"><i class="fal fa-layer-plus"></i> <span>Current Affairs</span></a>
</div>
<div class="top-menu-item upsc-notes">
<a href="https://www.tutorialspoint.com/upsc_ias_exams.htm" target="_blank" title="UPSC IAS Exams Notes - TutorialsPoint"><i class="fal fa-user-tie"></i> <span>UPSC Notes</span></a>
</div>      
<div class="top-menu-item online-tutoris">
<a href="https://www.tutorialspoint.com/tutor_connect/index.php" target="_blank" title="Top Online Tutors - Tutor Connect"><i class="fal fa-user"></i> <span>Online Tutors</span></a>
</div>
<div class="top-menu-item whiteboard">
<a href="https://www.tutorialspoint.com/whiteboard.htm" target="_blank" title="Free Online Whiteboard"><i class="fal fa-chalkboard"></i> <span>Whiteboard</span></a>
</div>
<div class="top-menu-item net-meeting">
<a href="https://www.tutorialspoint.com/netmeeting.php" target="_blank" title="A free tool for online video conferencing"><i class="fal fa-chalkboard-teacher"></i> <span>Net Meeting</span></a> 
</div>
<div class="top-menu-item articles">
<a href="https://www.tutorix.com" target="_blank" title="Tutorx - The Best Learning App" rel="nofollow"><i class="fal fa-video"></i> <span>Tutorix</span></a> 
</div>        
<div class="social-menu-item">
<a href="https://www.facebook.com/tutorialspointindia" target="_blank" rel="nofollow" data-placement="bottom" title="tutorialspoint @ Facebook"><i class="fab fa-facebook-f"></i></a> 
<a href="https://www.twitter.com/tutorialspoint" target="_blank" rel="nofollow" data-placement="bottom" title="tutorialspoint @ Twitter"><i class="fab fa-twitter"></i></a>
<a href="https://www.linkedin.com/company/tutorialspoint" target="_blank" rel="nofollow" data-placement="bottom" title="tutorialspoint @ Linkedin"><i class="fab fa-linkedin-in"></i></a>
<a href="https://www.youtube.com/channel/UCVLbzhxVTiTLiVKeGV7WEBg" target="_blank" rel="nofollow" data-placement="bottom" title="tutorialspoint YouTube"><i class="fab fa-youtube"></i></a>
</div>        
</div>
</div>
<!-- Top sub-menu Ends Here -->
<!-- Top main-menu Starts Here -->
<div class="mui-appbar mui-container-fulid mui--appbar-line-height mui--z1" id="logo-menu">
<div class="mui-container">
<div class="left-menu">
<a href="https://www.tutorialspoint.com/index.htm" title="Tutorialspoint">
<img class="tp-logo" alt="tutorialspoint" src="/salesforce/images/logo.png">
</a>
<div class="mui-dropdown">
<a class="mui-btn mui-btn--primary categories" data-mui-toggle="dropdown"><i class="fa fa-th-large"></i> 
<span>Categories <span class="mui-caret"></span></span></a>            
<ul class="mui-dropdown__menu cat-menu">
<li>
<ul>
<li><a href="/academic_tutorials.htm"><i class="fa fa-caret-right"></i> Academic Tutorials</a></li>
<li><a href="/big_data_tutorials.htm"><i class="fa fa-caret-right"></i> Big Data &amp; Analytics </a></li>
<li><a href="/computer_programming_tutorials.htm"><i class="fa fa-caret-right"></i> Computer Programming </a></li>
<li><a href="/computer_science_tutorials.htm"><i class="fa fa-caret-right"></i> Computer Science </a></li>
<li><a href="/database_tutorials.htm"><i class="fa fa-caret-right"></i> Databases </a></li>
<li><a href="/devops_tutorials.htm"><i class="fa fa-caret-right"></i> DevOps </a></li>
<li><a href="/digital_marketing_tutorials.htm"><i class="fa fa-caret-right"></i> Digital Marketing </a></li>
<li><a href="/engineering_tutorials.htm"><i class="fa fa-caret-right"></i> Engineering Tutorials </a></li>
<li><a href="/upsc_ias_exams.htm"><i class="fa fa-caret-right"></i> Exams Syllabus </a></li>
<li><a href="/famous_monuments.htm"><i class="fa fa-caret-right"></i> Famous Monuments </a></li>
<li><a href="/gate_exams_tutorials.htm"><i class="fa fa-caret-right"></i> GATE Exams Tutorials</a></li>
<li><a href="/latest_technologies.htm"><i class="fa fa-caret-right"></i> Latest Technologies </a></li>
<li><a href="/machine_learning_tutorials.htm"><i class="fa fa-caret-right"></i> Machine Learning </a></li>
<li><a href="/mainframe_tutorials.htm"><i class="fa fa-caret-right"></i> Mainframe Development </a></li>
<li><a href="/management_tutorials.htm"><i class="fa fa-caret-right"></i> Management Tutorials </a></li>
<li><a href="/maths_tutorials.htm"><i class="fa fa-caret-right"></i> Mathematics Tutorials</a></li>
<li><a href="/microsoft_technologies_tutorials.htm"><i class="fa fa-caret-right"></i> Microsoft Technologies </a></li>
<li><a href="/misc_tutorials.htm"><i class="fa fa-caret-right"></i> Misc tutorials </a></li>
<li><a href="/mobile_development_tutorials.htm"><i class="fa fa-caret-right"></i> Mobile Development </a></li>
<li><a href="/java_technology_tutorials.htm"><i class="fa fa-caret-right"></i> Java Technologies </a></li>
<li><a href="/python_technologies_tutorials.htm"><i class="fa fa-caret-right"></i> Python Technologies </a></li>
<li><a href="/sap_tutorials.htm"><i class="fa fa-caret-right"></i> SAP Tutorials </a></li>
<li><a href="/scripting_lnaguage_tutorials.htm"><i class="fa fa-caret-right"></i>Programming Scripts </a></li>
<li><a href="/selected_reading.htm"><i class="fa fa-caret-right"></i> Selected Reading </a></li>
<li><a href="/software_quality_tutorials.htm"><i class="fa fa-caret-right"></i> Software Quality </a></li>
<li><a href="/soft_skill_tutorials.htm"><i class="fa fa-caret-right"></i> Soft Skills </a></li>
<li><a href="/telecom_tutorials.htm"><i class="fa fa-caret-right"></i> Telecom Tutorials </a></li>
<li><a href="/upsc_ias_exams.htm"><i class="fa fa-caret-right"></i> UPSC IAS Exams </a></li>
<li><a href="/web_development_tutorials.htm"><i class="fa fa-caret-right"></i> Web Development </a></li>
<li><a href="/sports_tutorials.htm"><i class="fa fa-caret-right"></i> Sports Tutorials </a></li>
<li><a href="/xml_technologies_tutorials.htm"><i class="fa fa-caret-right"></i> XML Technologies </a></li>
<li><a href="/multi_language_tutorials.htm"><i class="fa fa-caret-right"></i> Multi-Language Tutorials</a></li>
<li><a href="/questions_and_answers.htm"><i class="fa fa-caret-right"></i> Interview Questions</a></li>
</ul>
</li>
</ul>
<div class="clear"></div>
</div> 
</div>
<div class="right-menu">
<div class="toc-toggle">
<a href="javascript:void(0);"><i class="fa fa-bars"></i></a>
</div>
<div class="mobile-search-btn">
<a href="https://www.tutorialspoint.com/search.htm"><i class="fal fa-search"></i></a>
</div>
<div class="search-box">
<form method="get" class="" name="searchform" action="https://www.google.com/search" target="_blank" novalidate="">
<input type="hidden" name="sitesearch" value="www.tutorialspoint.com" class="user-valid valid">
<input class="header-search-box" type="text" id="search-string" name="q" placeholder="Search your favorite tutorials..." onfocus="if (this.value == 'Search your favorite tutorials...') {this.value = '';}" onblur="if (this.value == '') {this.value = 'Search your favorite tutorials...';}" autocomplete="off">
<button><i class="fal fa-search"></i></button>
</form>
</div>
<div class="menu-btn library-btn">
<a href="https://www.tutorialspoint.com/tutorialslibrary.htm"><i class="fal fa-cubes"></i> <span>Library</span></a>
</div>
<div class="menu-btn videos-btn">
<a href="https://www.tutorialspoint.com/videotutorials/index.htm"><i class="fal fa-video"></i> <span>Videos</span></a> 
</div>
<div class="menu-btn videos-btn">
<a href="https://www.tutorialspoint.com/questions/index.php"><i class="fa fa-location-arrow"></i> <span>Q/A</span></a>
</div>
<div class="menu-btn ebooks-btn">
<a href="https://store.tutorialspoint.com"><i class="fal fa-book"></i> <span>eBooks</span></a>
</div>
<div class="mui-dropdown">
<button class="mui-btn mui-btn--primary" data-mui-toggle="dropdown">
<span class="mui-caret"></span>
</button>
<ul class="mui-dropdown__menu">
<li><a href="https://www.tutorialspoint.com/tutorialslibrary.htm"><i class="fal fa-cubes"></i> <span>Library</span></a></li>
<li><a href="https://www.tutorialspoint.com/videotutorials/index.htm"><i class="fal fa-video"></i> <span>Videos</span></a></li>
<li><a href="https://store.tutorialspoint.com"><i class="fal fa-book"></i> <span>eBooks</span></a></li>
</ul>
</div>
</div>
</div>
</div>
<!-- Top main-menu Ends Here -->
</header>
<div class="mui-container-fluid content">
<div class="mui-container">
<!-- Tutorial ToC Starts Here -->
<div class="mui-col-md-3 tutorial-toc">
<div class="mini-logo">
<img src="/salesforce/images/salesforce-mini-logo.jpg" alt="Salesforce Tutorial" />
</div>
<ul class="toc chapters">
<li class="heading">Salesforce Tutorial</li>
<li><a href="/salesforce/index.htm">Salesforce - Home</a></li>
<li><a href="/salesforce/salesforce_overview.htm">Salesforce - Overview</a></li>
<li><a href="/salesforce/salesforce_architecture.htm">Salesforce - Architecture</a></li>
<li><a href="/salesforce/salesforce_environment.htm">Salesforce - Environment</a></li>
<li><a href="/salesforce/salesforce_sales_cloud.htm">Salesforce - Sales Cloud</a></li>
<li><a href="/salesforce/salesforce_service_cloud.htm" >Salesforce - Service Cloud</a></li>
<li><a href="/salesforce/salesforce_navigating_setup.htm" >Salesforce - Navigating Setup</a></li>
</ul>
<ul class="toc chapters">
<li class="heading">Salesforce Objects</li>
<li><a href="/salesforce/salesforce_standard_objects.htm" >Salesforce - Standard Objects</a></li>
<li><a href="/salesforce/salesforce_custom_objects.htm">Salesforce - Custom Objects</a></li>
<li><a href="/salesforce/salesforce_master_detail_relationship.htm" >Salesforce - Master Detail </a></li>
<li><a href="/salesforce/salesforce_lookup_relationship.htm" >Salesforce - Lookup Relationship</a></li>
<li><a href="/salesforce/salesforce_schema_builder.htm" >Salesforce - Schema Builder</a></li>
</ul>
<ul class="toc chapters">
<li class="heading">Data Security</li>
<li><a href="/salesforce/salesforce_control_access_organization.htm">Salesforce - Control Access Org</a></li>
<li><a href="/salesforce/salesforce_control_access_objects.htm">Salesforce - Control Access Objects</a></li>
<li><a href="/salesforce/salesforce_control_access_fields.htm">Salesforce - Control Access Fields</a></li>
<li><a href="/salesforce/salesforce_control_access_records.htm">Salesforce - Control Access Records</a></li>
<li><a href="/salesforce/salesforce_create_a_role_hierarchy.htm">Salesforce - Create a Role Hierarchy</a></li>
<li><a href="/salesforce/salesforce_define_sharing_rules.htm">Salesforce - Define Sharing Rules</a></li>
</ul>
<ul class="toc chapters">
<li class="heading">Process Builder</li>
<li><a href="/salesforce/salesforce_automate_business_processes.htm">Automate Business Processes</a></li>
<li><a href="/salesforce/salesforce_importing_data.htm">Salesforce - Importing Data</a></li>
<li><a href="/salesforce/salesforce_exporting_data.htm">Salesforce - Exporting Data</a></li>
<li><a href="/salesforce/salesforce_reports.htm">Salesforce - Reports</a></li>
<li><a href="/salesforce/salesforce_dashboards.htm">Salesforce - Dashboards</a></li>
<li><a href="/salesforce/salesforce_using_formula_fields.htm">Salesforce - Using Formula Fields</a></li>
</ul>
<ul class="toc chapters">
<li class="heading">Visualforce</li>
<li><a href="/salesforce/salesforce_visualforce_pages.htm">Salesforce - Visualforce Pages</a></li>
<li><a href="/salesforce/salesforce_variables_formulas.htm">Salesforce - Variables &amp; Formulas</a></li>
<li><a href="/salesforce/salesforce_standard_controllers.htm">Salesforce - Standard Controllers</a></li>
<li><a href="/salesforce/salesforce_records_fields_tables.htm">Salesforce - Records, Fields &amp; Tables</a></li>
<li><a href="/salesforce/salesforce_using_forms.htm">Salesforce - Using Forms</a></li>
<li><a href="/salesforce/salesforce_list_controllers.htm">Salesforce - List Controllers</a></li>
<li><a href="/salesforce/salesforce_static_resources.htm">Salesforce - Static Resources</a></li>
</ul>
<ul class="toc chapters">
<li class="heading">Salesforce Useful Resources</li>
<li><a href="/salesforce/salesforce_quick_guide.htm" >Salesforce - Quick Guide</a></li>
<li><a href="/salesforce/salesforce_useful_resources.htm" >Salesforce - Useful Resources</a></li>
<li><a href="/salesforce/salesforce_discussion.htm" >Salesforce - Discussion</a></li>
</ul>
<ul class="toc reading">
<li class="sreading">Selected Reading</li>
<li><a target="_top" href="/upsc_ias_exams.htm">UPSC IAS Exams Notes</a></li>
<li><a target="_top" href="/developers_best_practices/index.htm">Developer's Best Practices</a></li>
<li><a target="_top" href="/questions_and_answers.htm">Questions and Answers</a></li>
<li><a target="_top" href="/effective_resume_writing.htm">Effective Resume Writing</a></li>
<li><a target="_top" href="/hr_interview_questions/index.htm">HR Interview Questions</a></li>
<li><a target="_top" href="/computer_glossary.htm">Computer Glossary</a></li>
<li><a target="_top" href="/computer_whoiswho.htm">Who is Who</a></li>
</ul>
</div>
<!-- Tutorial ToC Ends Here -->
<!-- Tutorial Content Starts Here -->
<div class="mui-col-md-6 tutorial-content">
<h1>Salesforce - Quick Guide</h1>
<hr />
<div class="top-ad-heading">Advertisements</div>
<div style="text-align: center;">
<script><!--
google_ad_client = "pub-7133395778201029";
var width = document.getElementsByClassName("tutorial-content")[0].clientWidth - 40;
google_ad_width = width;
google_ad_height = 150;
google_ad_format = width + "x150_as";
google_ad_type = "image";
google_ad_channel = "";
//--></script>
<script src="https://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</div>
<div class="mui-container-fluid button-borders">
<div class="pre-btn">
<a href="/salesforce/salesforce_static_resources.htm"><i class="fal fa-chevron-circle-left"></i> Previous Page</a>
</div>
<div class="nxt-btn">
<a href="/salesforce/salesforce_useful_resources.htm">Next Page <i class="fal fa-chevron-circle-right"></i>&nbsp;</a>
</div>
</div>
<div class="clearer"></div>
<h1>Salesforce - Overview</h1>
<p>Salesforce started as a cloud based solution for CRM. CRM stands for Customer Relationship Management. It involves managing all aspects of relationship between an organization and its customers. For example, the contact details of the customer, the deals that are in progress or already completed, the support requests from a customer or a new lead from a new customer. Beyond the customer related information, it also involves storing and managing the details of the people and the concerned department from the seller organization that is managing the customer’s account and needs. This makes it easy to manage and enhance the relationship with the customer and hence better growth for the organization.</p>
<p>Following are the different features of the Salesforce platform &minus;</p>
<h2>Contact Management</h2>
<p>To view customer contact details, activity history, customer communications, and internal account discussions, etc. In short, it manages all the data pertaining to the contact with a customer.</p>
<h2>Opportunity Management</h2>
<p>It provides the details of the stage a deal is in, the products involved in the deal, the quotation for the deal etc. In short it manages all the data that helps in identifying, progressing and closing a deal.</p>
<h2>Salesforce Engage</h2>
<p>This feature is focused on making personalized contact with a customer for various campaigns designed by the marketing team. It also provides real-time sales alerts based on the level of engagement with a customer.</p>
<h2>Sales Collaboration</h2>
<p>This feature helps in quickly finding experts who can help in closing a deal based on customer queries and feedback. In short, it helps in bringing in a collaborative effort to engage an entire team in the deal and make the deal happen.</p>
<h2>Sales Performance Management</h2>
<p>It provides a metric-based goal setting, and also continuous feedback and rewards and recognition for the sales team. This helps in enhancing the performance of the sales team.</p>
<h2>Lead Management</h2>
<p>This feature initiates and tracks the leads that are in progress. It also helps in continually optimizing campaigns across every channel.</p>
<h2>Partner Management</h2>
<p>This feature helps in building a community with partners. It also helps in connecting directly with channel partners to share goals, objectives, and activities.</p>
<h2>Salesforce Mobile App</h2>
<p>This is the mobile platform to carry out all the above activities on a mobile platform.</p>
<h2>Workflow and Approvals</h2>
<p>It is a visual design to automate the business processes. The interface provides simple drag and drop options to make this design. It helps in creating a flexible approval process with deal discounts and expense management etc.</p>
<h2>Email Integration</h2>
<p>Salesforce can integrate to an existing email platform. This helps in providing flexibility to the existing team with no additional learning curve.</p>
<h2>Files Sync and Share</h2>
<p>This feature provides the sales team the power to easily share various files, discuss them and update them as needed. Also receive alerts when something in the file changes.</p>
<h2>Reports and Dashboards</h2>
<p>Dashboards offer a real-time picture of the business at a glance. With this, anyone can create detailed reports which can be accessed from anywhere.</p>
<h2>Sales Forecasting</h2>
<p>This feature helps in getting a real time view of the forecast of a sales team. It provides multi-currency support and an in-line editing mode to manage the sales forecast well.</p>
<h2>Territory Management</h2>
<p>This feature is used to create multiple territory models, preview them before rollout, and continually optimize and balance territories throughout the year.</p>
<h1>Salesforce - Architecture</h1>
<p>Salesforce delivers a highly customized experience to the customers, employees, and partners of an organization. Such a platform is used to customize standard functionality and create custom pages, components, apps, etc. Also it is done faster, mainly because of the superb architecture on which it is built. Below is a brief introduction to the Salesforce Architecture.</p>
<img src="/salesforce/images/sf_architecture.png" alt="SF Architecture" />
<h2>Architecture Salesforce</h2>
<p>The architecture of Salesforce can be put into layers for better understanding. The purpose and function of each layer is described below &minus;</p>
<h3>Trusted Multitenant Cloud</h3>
<p>Here multiple instances of one or multiple applications operate independently in a shared environment. The instances are referred as tenants and they logically separate from each other while physically remaining in the same hardware. It is called trusted because of both its robust nature and high security.</p>
<h3>Scalable Metadata Platform</h3>
<p>The metadata driven platform makes it easy for customization and scaling up as the amount of data or concurrent user instances increase.</p>
<h3>Enterprise Ecosystem</h3>
<p>The Enterprise Ecosystem of Sales is very large as a large number of partners contribute by creating and maintaining applications in this platform.</p>
<h3>CRM and Related Functionality</h3>
<p>Salesforce includes all aspects of CRM in its list of features and also extends it by providing features for creation of apps and integrating analytics, etc.</p>
<h3>APIs</h3>
<p>Salesforce provides powerful suite of APIs. This helps to develop and customize the Salesforce1 Mobile App.</p>
<h1>Salesforce - Environment</h1>
<p>As Salesforce is a cloud based system it does not need any software installation on your part. All you have to do is signup for a free trial and get started. The free trial account provides nearly all features which you need to learn to understand the basics of Salesforce platform. Let us now discuss the steps to get started with the Salesforce environment.</P>
<h2>Step 1</h2>
<p>Go to the link <a href="https://www.salesforce.com/in/?ir=1" target="_blank" rel="nofollow">Salesforce</a> and click on Free Trial.</P>
<p>It takes you to a window where you have to fill in some details about you and sign up.</p>
<h2>Step 2</h2>
<p>You will receive an activation mail for your account which also contains the details of your account and the duration of the trial period. Click on the link in the email to verify your email ID and activate the account.</p>
<h2>Step 3</h2>
<p>Again visit the link <a href="https://www.salesforce.com/in/?ir=1" target="_blank" rel="nofollow">Salesforce</a> and click on login. Give the login credentials which you just created. You will be directed to the following screen.</p>
<img src="/salesforce/images/environment_setup.JPG" alt="Environment Setup" />
<p></p>
<p>You are ready to learn as your environment is set up now. You may click on <b>Take Tour of Salesforce</b> to familiarize yourself with the user interface.</p>
<h1>Salesforce - Sales Cloud</h1>
<p>Sales Cloud part of the Salesforce.com platform which is focused on enhancing the effectiveness of the sales team of an organization and hence increases the amount of sales. It stands unique when compared to other sales methods as it provides both the account information of the customer as well as the information gathered from the social platforms about the product and customer. This helps in judging the potential of a sales lead and closing the sales faster.</p>
<p>Following are the Key <b>business Goals</b> achieved by using the Sales Cloud.</p>
<h3>Close more deals</h3>
<p>The availability of all the account information as well as product information for customer’s needs makes it easier to drive more number of leads to closure.</p>
<h3>Close deals faster</h3>
<p>Mobile apps and visual design of the workflows for business process approvals makes it faster to close the deals.</p>
<h3>Get more deals</h3>
<p>Continuous optimization of campaigns depending on the market response and closure interaction with channel partners gets more deals.</p>
<h3>Quicker decisions</h3>
<p>The availability of reports and dashboards gives a very detailed picture of the business scenario and also increases accuracy of sales forecasting. So the business decisions are taken quickly.</p>
<h2>Key Features of Sales Cloud</h2>
<p>In this section, we will discuss the key features of Sales Cloud. The features are described below &minus;</p>
<h3>Contact Management</h3>
<p>Gives complete information on customers including previous communications, discussions, key contact numbers and emails.</p>
<h3>Opportunity Management</h3>
<p>It helps create and change quotes in response to sales interaction and deal scenario.</p>
<h3>Salesforce Engage</h3>
<p>Gives alerts on active leads and create personalized campaigns.</p>
<h3>Lead Management</h3>
<p>Helps assign leads to right people and track the campaigns.</p>
<h3>Reports and Dashboards</h3>
<p>Helps create dashboards which can be drilled down for further information. This leads to faster decisions.</p>
<h3>Sales Forecasting</h3>
<p>Gives accurate view of sales forecasting which can be adjusted based on real-time data.</p>
<h3>Workflow and Approvals</h3>
<p>Helps simplify the approval process and automate any business process using visual drag and drop interface.</p>
<h3>Territory Management</h3>
<p>Helps create different territory models and apply rules to them.</p>
<h3>Files Sync and Share</h3>
<p>Search, share and find files faster. This leads to a greater collaboration.</p>
<h3>Sales Performance Management</h3>
<p>Helps create a link between sales data and sales goals. It also helps in creating performance summaries.</p>
<h3>Partner Management</h3>
<p>Easily connect with partners and give them a view of sales performance. It also helps in easy onboarding, training and supporting sales partners.</p>
<h1>Salesforce - Service Cloud</h1>
<p>This part of Salesforce platform is focused on providing support and help to the customers. This helps in retaining the customers, increasing their satisfaction and loyalty. Its uniqueness lies in providing faster service compared to traditional methods, giving individual attention to each customer needs and taking a proactive approach to customer issues. That ultimately enhances the customer’s experience hence loyalty which in turn creates a good impact on sales.</p>
<p>Following are the key <b>business Goals</b> achieved by using the Service Cloud &minus;</p>
<ul class="list">
<li><p><b>Personalized Service</b> &minus; Give each customer a good service experience based on their unique problems and history of purchases and complaints.</p></li>
<li><p><b>Always-on Service</b> &minus; Make the service available 24/7</p></li>
<li><p><b>Multi-channel support</b> &minus; Meet the customers on their preferred channels like mobile, phone, chat etc.</p></li>
<li><p><b>Faster support</b> &minus; Managing various service needs from a single console helps in delivering support services faster.</p></li>
</ul>
<h2>Key Features of Service Cloud</h2>
<p>In this section, we will discuss the key features of Service Cloud. These features help in accomplishing the business goals mentioned above. The features are described below &minus;</p>
<h3>Console for Service</h3>
<p>It is a unified platform for managing all cases assigned to an agent so that it can help in prioritizing the tasks at hand. This also helps give personalized experience to the customer of each case.</p>
<h3>Knowledge base</h3>
<p>Customer interactions and resolutions are captured and organized into a knowledgebase. This helps in faster issue resolution.</p>
<h3>Social Customer Service</h3>
<p>As more and more customers connect with the organization through social media, this feature helps deliver service on the social media platform itself without asking the customer to visit separate web pages for interaction.</p>
<h3>Live Agent</h3>
<p>This feature provides real-time online help with its unique chat service.</p>
<h3>Mobile Platform</h3>
<p>Salesforce1 platform is the mobile platform to manage customer service from any device and any place.</p>
<h3>Service Cloud Communities</h3>
<p>It allows customers to help themselves by helping each other. Many tools are available for self service on various trouble shooting requirements.</p>
<h1>Salesforce - Navigating Setup</h1>
<p>The Salesforce developer uses the setup area to configure and customize the interface. It is also used to add and support other users, and build various other functionalities. There are many paths to reach the same setup button. In this tutorial, we will see the most commonly used setup paths and configurations.</p>
<p>The Salesforce Home page has both classic and modern Lighting User Interface. We are referring to the modern lighting interface. All most all the features are available in both The classic and Lighting User Interface come with many features that prove beneficial to the users.</P>
<h2>Setup Location</h2>
<p>The setup link is located in the top right corner of the page as shown in the screenshot below. Clicking on the setup home takes us to the setup home page.</P>
<img src="/salesforce/images/setup_location.JPG" alt="setup location" />
<h2>Setup Home</h2>
<p>Below page shows the setup home where we see all the options available for the developer to configure and customize the option.</p>
<img src="/salesforce/images/setup_home.JPG" alt="Setup Home" />
<h2>Setup Options</h2>
<p>The following table lists down the important features which are frequently used in setup activity.</p>
<table class="table table-bordered">
<tr>
<th style="text-align:center">Sr.No</th>
<th style="text-align:center">Setting &amp; Purpose</th>
</tr>
<tr>
<td style="text-align:center;vertical-align:middle">1</td>
<td>
<p><b>Users</b></p>
<p>Create, Remove Users. Manage User profiles and Permissions.</p></td>
</tr>
<tr>
<td style="text-align:center;vertical-align:middle">2</td>
<td>
<p><b>Company Settings</b></p>
<p>Information related to your org. Like - Language, Maps and Locations, Domain etc.</p></td>
</tr>
<tr>
<td style="text-align:center;vertical-align:middle">3</td>
<td>
<p><b>Security</b></p>
<p>Expire Passwords, Access Policies, Session Management and Setup Audit Trails.</p></td>
</tr>
<tr>
<td style="text-align:center;vertical-align:middle">4</td>
<td>
<p><b>Environment</b></p>
<p>Jobs, Logs and Sandboxes.</p></td>
</tr>
<tr>
<td style="text-align:center;vertical-align:middle">5</td>
<td>
<p><b>Objects and Fields</b></p>
<p>Object Manager and Schema Builder.</p></td>
</tr>
<tr>
<td style="text-align:center;vertical-align:middle">6</td>
<td>
<p><b>User Interface</b></p>  
<p>App Menu, Custom Labels and Lighting App Builder.</p></td>
</tr>
<tr>
<td style="text-align:center;vertical-align:middle">7</td>
<td>
<p><b>Custom Code</b></p> 
<p>Custom Metadata Types, Email Services, Remote Access etc.</p></td>
</tr>
<tr>
<td style="text-align:center;vertical-align:middle">8</td>
<td>
<p><b>Analytics</b></p>
<p>Reports and Dashboards.</p></td>
</tr>
</table>
<h1>Salesforce - Standard Objects</h1>
<p>The Salesforce Platform stores data in relational tables. The records in these tables contain data for the structure of the platform itself as well as user created data. For example, the data about the configuration and settings of an account are already in-built as a relational table. But you can also create your own tables to store data specific to your business like the 'dispatch schedule' for a week assuming you are a courier company.</p>
<p>These relational tables are roughly referred to as API Objects or only objects in Salesforce. There are three kinds of Salesforce objects.</p>
<ul class="list">
<li><p><b>Standard Objects</b> &minus; The objects already created for you by the Salesforce platform.</p></li>
<li><p><b>Custom Objects</b> &minus; These are the objects created by you based on your business processes.</p></li>
<li><p><b>External Objects</b> &minus; The objects which you create map to the data stored outside your organization.</p></li>
</ul>
<p>In this tutorial, we will focus on the standard objects in Salesforce platform.</P>
<h2>Standard Objects</h2>
<p>These are the objects which already exist in the Salesforce platform to manage the configurations and settings of the environment. Once you log in to the salesforce platform, you can see the available objects.</p>
<h3>Example</h3>
<p>The most commonly referred standard object is called the <b>Account Object</b>. It is the object which stores the preliminary information about a customer, partner, competitor or another organization. We can explore the account object by following the steps below.</p>
<h3>Step 1</h3>
<p>Login to the Salesforce platform and follow the link path <b>Settings &rarr; Setup Home &rarr; Object Manager - Account.</b></p>
<img src="/salesforce/images/stnrd_obj_step_1.JPG" alt="Standard Object Step 1" />
<h3>Step 2</h3>
<p>In this step, click on the <b>Schema Builder</b>. It shows the complete Account table with field names and data types. There are fields marked red. The fields marked red indicate that it is mandatory to fill the fields when an account is created.</p>
<img src="/salesforce/images/stnrd_obj_step_2.JPG" alt="Standard Object Step 2" />
<p>Using the similar steps as above we can explore all the standard objects available.</p>
<h2>Important Standard Objects</h2>
<p>In this section, we will discuss the important standard objects in Salesforce. The following table lists down the objects &minus;</p>
<table class="table table-bordered">
<tr>
<th style="text-align:center">Object Name</th>
<th style="text-align:center">Meaning</th>
<th style="text-align:center">Usage</th>
</tr>
<tr>
<td class="ts"><b>Account</b></td>
<td>Represents an individual account, which is an organization or person involved in the business like customers, competitors, partners, etc.</td>
<td>Use this object to query and manage accounts in your organization.</td>
</tr>
<tr>
<td class="ts"><b>Account History</b></td>
<td>Represents the history of changes to the values in the fields of an account.</td>
<td>Use this object to identify changes to an account.</td>
</tr>
<tr>
<td class="ts"><b>Case</b></td>
<td>Represents a case, which is a customer issue or problem.</td>
<td>Use the case object to manage cases for your organization.</td>
</tr>
<tr>
<td class="ts"><b>Contact</b></td>
<td>Represents a contact, which is an individual associated with an account.</td>
<td>This object is used to manage individuals who are associated with an Account in the organization. </td>
</tr>
<tr>
<td class="ts"><b>User</b></td>
<td>Represents a user in the organization.</td>
<td>This object is used to query information about users and also helps to provide and modify the information concerning the users.</td>
</tr>
<tr>
<td class="ts"><b>Asset</b></td>
<td>Represents an item of commercial value, such as a product sold by the company or a competitor that a customer has purchased and installed.</td>
<td>This object is used to track assets previously sold into customer accounts. With asset tracking, a client application can quickly determine which products were previously sold or are currently installed at a specific account.</td>
</tr>
<tr>
<td class="ts"><b>Domain</b></td>
<td>Read-only object that represents a custom Web address assigned to a site in your organization.</td>
<td>This read-only object is used to object to query the domains that are associated with each website in your organization.</td>
</tr>
</table>
<h1>Salesforce - Custom Objects</h1>
<p>The organization’s data will always not fit into the existing standard objects. So we can extend and customize many sales force objects to meet this need. For example, a courier company can create a custom object to store the schedule and dispatch details for every week. So these objects store the data that is unique to the business. The custom objects can also have custom fields along with the standard fields available in Salesforce.</p>
<h2>Custom Object features</h2>
<p>Following are the features available on Custom Objects. The features help you perform the following features &minus;</p>
<ul class="list">
<li><p>Build page layouts to control which fields users can view and edit when entering data for the custom object record.</p></li>
<li><p>Import custom object records.</p></li>
<li><p>Create reports and dashboards to analyze custom object data.</p></li>
<li><p>Create a custom tab for the custom object, to display the object’s data.</p></li>
<li><p>Track tasks and events for custom object records.</p></li>
<li><p>Import custom object records.</p></li>
</ul>
<h2>Create a Custom Object</h2>
<p>To create a custom object, we go to the line path as shown in the following screenshot &minus;</p>
<img src="/salesforce/images/custom_obj_1.JPG" alt="custom object 1" />
<p>Now we fill in the details of the custom object we want to create. There are mandatory fields which should be filled before the object can be saved. In our case, we give the object a name called Delivery schedule and save it.</p>
<img src="/salesforce/images/custom_obj_2.JPG" alt="custom object 2" />
<h2>Create a Custom Field</h2>
<p>To Add more granularity to the business data, we can add custom fields on the custom object we created. In this case, let us add a field called delivery date to the custom object named Delivery schedule. To do this, we follow the path <b>Setup Home &rarr; Objects and Fields &rarr; Object Manager &rarr; Deliver Schedule</b>. Later, scroll down to the Fields and Relationship tab and click New. The page to add custom field appears wherein, we fill the details as shown below.</p>
<img src="/salesforce/images/custom_obj_3.JPG" alt="custom object 3" />
<p>Next, we can verify the successful addition of the above custom field by following the same link path as above. The custom field appears as shown in the following screenshot &minus;</p>
<img src="/salesforce/images/custom_obj_4.JPG" alt="custom object 4" />
<h1>Salesforce - Master Detail Relationship</h1>
<p>Unlike the relationships in relational database, the relationships in Salesforce are not through Primary and Foreign Keys. The relationships are maintained by using the <b>Relationship Fields</b>. It is a custom field which links one object record to another. Through the creation of relationships, we can display the data of all the related records in the record's details page.</p>
<p>The <b>Master Detail</b> relationship is used when we want to control the display of detail records based on the value in the master record. For example, in the courier company model a delivery schedule is always linked to a delivery location. If we remove a delivery location from our list, then all the related delivery schedules should also be eliminated. Such a dependency can be achieved through Master-detail relationship between the sales force objects.</p>
<h2>Features of Master-Detail Relationship</h2>
<p>In this section, we will discuss the features of Master-detail Relationship. The features are listed below &minus;</p>
<ul class="list">
<li><p>Deleting a Master Record, deletes all the detail records.</p></li>
<li><p>A detail record cannot be created without a Master record.</p></li>
<li><p>The permission on the detail record cannot be set. It inherits the permission from the master record.</p></li>
<li><p>The detail record also inherits the sharing rule from master records.</p></li>
<li><p>Both the master and detail records are automatically included in the report record types.</p></li>
</ul>
<h2>Creating Master-detail Relationship</h2>
<p>In the courier company example, we will consider the relationship between delivery location and delivery schedule. There is a many-to-one relationship between the delivery schedule records and the delivery location record.</p>
<p>Following are the steps followed to create this relationship &minus;</p>
<h3>Choose the Relationship Type</h3>
<p>In setup home, find the object named Delivery Schedule. In it under the Custom Fields and Relationships related list, click New. Choose the Master-detail Relationship as shown in the screenshot below.</p>
<img src="/salesforce/images/master_detail1.JPG" alt="Master Detail1" />
<h3>Choose the Related Object</h3>
<p>In the next step, select the object with which this relationship will be created. We choose DeliveryLocation.</p>
<img src="/salesforce/images/master_detail2.JPG" alt="Master Detail2" />
<h3>Name the Relationship and Field</h3>
<p>In this step, enter the Relationship Name as well as the name of the Field.</p>
<img src="/salesforce/images/master_detail3.JPG" alt="Master Detail3" />
<h3>Add field to page layout</h3>
<p>In the Next step we accept the defaults and move on to add the reference field to the page layout.</p>
<img src="/salesforce/images/master_detail4.JPG" alt="Master Detail4" />
<h3>Add Custom Related Lists</h3>
<p>Next, we specify the title for the related list that is associated layout with the parent.</p>
<img src="/salesforce/images/master_detail5.JPG" alt="Master Detail5" />
<p>This completes the creation of Master-Detail relationship between DeliveryLocation and Deliveryschedule.</p>
<h1>Salesforce - Lookup Relationship</h1>
<p>A Lookup relationship involves finding value of a field based on the value in another field in another object. It is mostly used in the case of commonly shared data between two objects.</p>
<h2>Example</h2>
<p>In the courier company, we have a delivery location which must be related to a delivery schedule. So we have a field "DeliverySchedule" in the object Delivery location that looks up for values from the other custom Object named "Delivery Schedule". Let us now see the steps to create such a lookup relation.</p>
<h2>Step 1</h2>
<p>First we identify the objects and the fields which need to have the relationship. In our example, these two objects are <b>Delivery Schedule</b> and <b>Delivery Location</b>.</p>
<h2>Step 2</h2>
<p>Create a Custom Object named DeliveryLocation as we did in the previous chapter. In it, go to the tab fields and relationships. Click <b>New &rarr; Custom Filed &rarr; Lookup Relationship</b>. Choose the field type as lookup field and enter the details as shown below.</p>
<img src="/salesforce/images/lookup_1.JPG" alt="Lookup 1" />
<h2>Step 3</h2>
<p>You can verify the lookup relationship created by going to the schema builder and choosing the two objects for display.</p>
<img src="/salesforce/images/lookup_final.JPG" alt="Lookup Final" />
<h1>Salesforce - Schema Builder</h1>
<p>The various objects and their relationships of a Salesforce application can be easily viewed using the Schema builder. And just not viewing, but we can also design, modify and implement new data models using schema builder.</p>
<p>Schema builder has a drag and drop interface which is used to perform all the activities. It shows all the relevant details like - field values, data types, relationship with directions etc.</p>
<h2>Accessing Schema Builder</h2>
<p>From Setup Home, navigate to <b>Objects and Fields &rarr; Object Manager &rarr; Schema Builder</b>.</p>
<img src="/salesforce/images/schema_builder.JPG" alt="schema builder" />
<h2>Viewing Objects </h2>
<p>We can see the various objects by selecting them form the left pane. The <b>Element</b> tab represents fields and relationships while the <b>Objects</b> tab represents the standard as well as custom objects.</p> 
<p>We have selected three objects named - Account, Delivery Schedule and Delivery Location as shown in the following screenshot.</p>
<img src="/salesforce/images/schema_builder_1.JPG" alt="Schema Builder 1" />
<h2>Changing Objects </h2>
<p>We can work on various schema objects by showing them in the canvas in the right pane. We can only modify the custom objects and cannot modify the standard objects as they are part of the Salesforce platform structure.</p>
<p>In the following screenshot, we can see various actions we can take on the custom schema objects.</p>
<img src="/salesforce/images/schema_builder_2.JPG" alt="Schema Builder 2" />
<h2>Creating Objects </h2>
<p>We can create new objects using the schema builder. Go to the <b>Elements</b> Tab. Drag the element named <b>Object</b> into the canvas. It prompts you to fill in the details of the object.</p>
<img src="/salesforce/images/schema_builder_3.JPG" alt="Schema Builder 3" />
<h1>Salesforce - Control Access Organization</h1>
<p>In an organization, different kinds of data are accessible by different types of users. Salesforce has the mechanism to limit the data access in the platform to both individual users as well as groups of users. There is a flexible but layered sharing model that makes it easy to assign different data sets to different sets of users. Also the access can be defined at the level of organization, objects, fields, or individual records.</p>
<h2>Levels of Data Access</h2>
<p>In this section, we will discuss the different levels of Data Access. There are four levels of data access.</p>
<h3>Organization Level</h3>
<p>It is created by maintaining a list of authorized users, setting password policies, and limiting login access to certain hours and certain locations.</p>
<h3>Objects Level</h3>
<p>It is done by setting permission on a particular object by allowing selective viewing, editing or deleting of any object in that record.</p>
<h3>Fields Level</h3>
<p>It is used to restrict access of users to certain fields even when the user has access to the object containing the field.</p>
<h3>Records Level</h3>
<p>This access level permits the user to access only certain records of an object.</p>
<p>In this chapter, we are going to focus on Control Access to the Organization using the three mechanisms described below.</p>
<h2>Create and Manage Users</h2>
<p>The administrators can create one or many users using the Admin Interface. Navigate to <b>setup home &rarr; Administration &rarr; Users</b>. It shows the options for adding one user or many.</p>
<img src="/salesforce/images/create_users.JPG" alt="Create Users" />
<p>It further asks for details of each users like Name, email Address, Role, Profile, etc. On filling those details, the users get created.</p>
<h2>Set Password Policies</h2>
<p>Password policies refer to the way the passwords are managed in the organization. For example, setting the expiry date of a password, the complexity requirement of a password and so on. All these options are customizable and we can also control the lock of policies. These password policies are set by navigating to <b>setup home &rarr; Security &rarr; Password Policies</b>.</p>
<img src="/salesforce/images/password_policies.JPG" alt="Password Policies" />
<h2>Restricting Access from IP Address</h2>
<p>This is an added security which allows only specific range of IP addresses to access the Salesforce platform of the organization. But if a valid user accesses the restricted page outside the trusted IP range then the system asks for additional challenge questions which should have been already configured. This is set by navigating to <b>setup home &rarr; Security &rarr; Network Access.</b>.</p>
<img src="/salesforce/images/restrict_ip.JPG" alt="Restrict IP" />
<h1>Salesforce - Control Access Objects</h1>
<p>The access restriction for different objects is managed by using profiles and permissions. The type of access (view, edit, create, etc.) can also customized thorough this mechanism. A user can have only one profile, but can have multiple permission sets. So through profiles the minimum basic permissions for the selected objects is granted while, through permission sets additional permissions beyond the profile can be granted.</p>
<p>Let us now see the details of the profiles creation and granting permission to understand how the object access is managed.</p>
<h2>User Profiles </h2>
<p>Profiles are created to address the requirements of a particular business function. For example, the HR department needs a profile which will have access to work history, medical history and attendance of employees. While the finance department will need profile which will access the attendance and remuneration details of an employee. Now depending on the user’s job role, the profile is attached to the user. Only one profile can be allocated for a user.</p>
<h3>Creating a Profile</h3>
<p>Go to the link path <b>Setup Home &rarr; Users &rarr; Profiles</b>. You can see some existing profiles which are pre-built in the salesforce platform. We can create new profiles by cloning the existing profiles and customizing them further based on our requirements.</p>
<img src="/salesforce/images/user_profiles.JPG" alt="User Profiles" />
<p>Let us now see an existing profile named the standard user. It shows all the types of settings available to this profile. For example, we can set object permissions for both standard objects as well as custom objects. We can also set different administrative permissions and general user permissions and so on.</p>
<img src="/salesforce/images/edit_profile.JPG" alt="Edit Profile" />
<p>In order to control the permission to each of the objects through this profile, we can scroll down and find the list of both standard objects and custom objects. Here we can use the check boxes to customize the <b>object access</b>.</p>
<h3>Assigning a Profile</h3>
<p>Once a new profile has been created, it can be assigned to users by going to the link path <b>Setup Home &rarr; Users &rarr; Users</b>. Now click on the edit to the left of the user name. You will be directed to a new window where in, you can change the profile from the dropdown.</p>
<img src="/salesforce/images/edit_profile_2.JPG" alt="Edit Profile 2" />
<h2>Permission Sets </h2>
<p>Permission sets are additional access given to a user on some objects which are not covered through their profiles. So it just extends users access to some objects based on their profiles. For example, when a new custom object is created, we create a permission set for those objects and attach those permission sets to the users who will need access to those objects. The same logic applies when we want to grant temporary access to specific objects for a user.</p>
<h3>Creating a Permission Set</h3>
<p>We create a permission set by going to the link path <b>Setup Home &rarr; Users &rarr; Permission Sets</b>. Click on the New button to create a new permission set.</p>
<img src="/salesforce/images/create_permi_set.JPG" alt="Create Permission Set" />
<p>Once created, we can edit the permission set and choose <b>Object Settings</b>. Here we can see the list of objects and the level of access to these objects. We can edit the access types for each of these objects.</p>
<img src="/salesforce/images/edit_permi_set.JPG" alt="Edit Permission Set" />
<h1>Salesforce - Control Access Fields</h1>
<p>There are scenarios in which we grant access to an object to a user but we also want to restrict the access to certain fields of that object. So using field level security, we can control the user's access to see, edit or delete certain fields of an object.</p>
<p>Field level access settings are achieved in two ways &minus;</p>
<ul class="list">
<li><p>Edit a single permission set or profile containing all the fields which require access restriction.</p></li>
<li><p>Edit permission on a single field to be applied in multiple profiles.</p></li>
</ul>
<h2>Example</h2>
<p>To give edit access to the field DeliverySchedule on the object DeliveryLocations, we go to the permission set named <b>CourierObjects</b> which we created in the last chapter. Then go to the Object settings and choose the object named DeliveryLocations. Click Edit and select the field wherein, we need to set the permission.</p>
<img src="/salesforce/images/field_edit_permi_set.JPG" alt="Field Edit Permission Set" />
<p>To set the field permission for one field across all profiles we open the object through schema builder and then right click on the specific field, choose manage <b>Manage Field Permissions</b>. We will now get the option to set the field permissions for many profiles for this single field.</p>
<img src="/salesforce/images/field_edit_permi_set2.JPG" alt="Field Edit Permission Set2" />
<h1>Salesforce - Control Access Records</h1>
<p>In this chapter, we will learn about the Control Access Records in Salesforce. Many times, beyond the access restriction for the objects and fields, we also need to restrict access to certain records of an object. This requires setting up of access restriction for a user based on the values in the records.</p>
<h2>Record Ownership</h2>
<p>A unique feature of Salesforce is the ownership of every stored record. Every record in every object has a field which marks the ownership of that record. A user who needs access to this record becomes part of the profile which is same as the profile of the owner of that record.</p>
<h2>Restriction Mechanism</h2>
<p>Access is granted at multiple levels like Object, Field and Records. Conflicts might come up between the access levels. There may be a read access on a record but the object containing it might not have read access for a user. In such case, the access type which is more restrictive (gives less access) will be applied. So a record without access permission will remain inaccessible even when the object containing it is accessible and an Object without access permissions will remain inaccessible even when it has some records to which the user has read access.</p>
<h2>Record Sharing Mechanism</h2>
<p>The Saleforce platform provides four distinct mechanisms to share the records of an object with the users.</p>
<ul class="list">
<li>Organization-wide defaults</li>
<li>Manual sharing</li>
<li>Role hierarchies</li>
<li>Sharing rules</li>
</ul>
<h3>Organization-wide defaults</h3>
<p>In this mechanism, a minimal access level is created and granted to all the users. So every user who is part of the organization, gets access to these records. Then, the access for additional records is customized by clubbing the users into role hierarchies, sharing rules and also through manual sharing with each of the user.</p>
<p>There are four types of sharing models which implement the organization-wide default settings.</p>
<table class="table table-bordered">
<tr>
<th style="text-align:center">Sr.No</th>
<th style="text-align:center">Settings &amp; Result</th>
</tr>
<tr>
<td class="ts">1</td>
<td>
<p><b>Public Read/Write</b></p>
<p>All users can view, edit, and report on all records.</p></td>
</tr>
<tr>
<td class="ts">2</td>
<td>
<p><b>Public Read Only</b></p>
<p>All users can view and report on records but not edit them. Only the owner, and users above that role in the hierarchy, can edit those records.</p></td>
</tr>
<tr>
<td class="ts">3</td>
<td>
<p><b>Private</b></p>
<p>Only the record owner, and users above that role in the hierarchy, can view, edit, and report on those records.</p></td>
</tr>
<tr>
<td class="ts">4</td>
<td>
<p><b>Controlled by Parent</b></p>
<p>A user can perform an action (such as view, edit, or delete) on a contact based on whether he or she can perform that same action on the record associated with it.</p></td>
</tr>
</table>
<h3>Manual Sharing</h3>
<p>In this access model, the record owners give the read and edit permissions to specific users. So it is a manual process in which individual or group of records are handled by the record owners. This is to be done for each user profile that needs the access.</p>
<p>In our subsequent chapters, we will discuss role hierarchies and sharing rules.</p>
<h1>Salesforce - Create a Role Hierarchy</h1>
<p>Role hierarchy is a mechanism to control the data access to the records on a salesforce object based on the job role of a user. For example, a manager needs to have access to all the data pertaining to the employees who report to him, but the employees have no access to the data that is only owned by their manager. In this manner, the access model looks similar to the org chart in an organization but it need not be exactly same as the Org chart.</p>
<p>The role hierarchy <b>automatically grants record access</b> to users above the record owner in the hierarchy. This option is enabled for all objects by default. To change this, we take help of custom objects and manual aces grants.</p>
<h2>Defining a Role Hierarchy</h2>
<p>In this section, we will discuss how to define a role hierarchy. The steps are described below &minus;</p>
<h3>Step 1</h3>
<p>To create a Role Hierarchy, we go to the link path <b>Setup Home &rarr; Users &rarr; Roles &rarr; Setup Roles.</b> The default role hierarchy appears as shown below.</p>
<img src="/salesforce/images/role_heirarchy_2.JPG" alt="Role Heirarchy 2" />
<p>The default view is Tree View, which is easiest to use. The other two views are <b>sorted list view</b> and <b>list view</b>. You can change this view as per your need.</p>
<h3>Step 2</h3>
<p>In the next step, we add a role to the existing hierarchy by filling in the role details. Click on <b>Add Role</b>. The next window appears asking for the following details.</p>
<img src="/salesforce/images/role_heirarchy_3.JPG" alt="Role Heirarchy 3" />
<p>While filling these details, we also take care to define if the users can only view the opportunities or can also edit the opportunities. On clicking save we get the Role created as shown below.</p>
<img src="/salesforce/images/role_heirarchy_4.JPG" alt="Role Heirarchy 4" />
<h3>Step 3</h3>
<p>In this step, you can assign users to the roles. Click on <b>Assign Users to Role</b>. Upon clicking, you will be directed to a window where you can select <b>All users</b> form the dropdown and move users from the left box to the right box.</p>
<img src="/salesforce/images/role_heirarchy_5.JPG" alt="Role Heirarchy 5" />
<p>In this way, you can create roles within the role hierarchy and add users to them. So the users can have access to the objects and data as per their roles.</p>
<h1>Salesforce - Define Sharing Rules</h1>
<p>In this chapter, we will discuss how to define sharing rules in Salesforce. Though we can manage the access to different objects and records through organization-wide settings and role hierarchies, we come across situations wherein, exceptions are required. We need to grant access to specific data to specific users who are not able to access the required data because of their roles. For example, to see the case history when a user has only access to the current case details. In such scenarios, we take help of sharing rules. Through this mechanism, we create a public group which will accommodate all the users who need such exception and then add sharing rules to such a group.</p>
<h2>Steps to Create Sharing Rules</h2>
<p>In this section, we will discuss the steps to create sharing rules. The steps are described below</p>
<h3>Step 1</h3>
<p>Create a public group which will have the users who need specific access. Go to the link path, <b>Setup home &rarr; Users &rarr; Public Groups &rarr; New Group</b>. We need to fill the required details. Also choose the group of users who will need to use the sharing rules. Keep the Grant access using Hierarchies checked so that the other users listed below in this hierarchy can inherit the access. Click <b>Save</b>.</p>
<img src="/salesforce/images/sharing_rule_group.JPG" alt="Sharing Rule Group" />
<h3>Step 2</h3>
<p>Now we create the sharing rule for the above public group. Go to the link path <b>Setup Home &rarr; Security &rarr; Sharing settings</b>. From the dropdown of <b>Manage Sharing settings for</b>, choose Campaigns.</p>
<img src="/salesforce/images/sharing_rule_1.JPG" alt="Sharing Rule 1" />
<p>Then under Campaign sharing rules, click on the button <b>New</b>. Provide the details for the new sharing rule as shown below. We select a criteria to give access to records for which the value of the field Campaign name is <b>camp_x</b>.</p>
<img src="/salesforce/images/sharing_rule_2.JPG" alt="Sharing Rule 2" />
<p>So now all the users under the newly created public group will get access to those records of campaign object where the campaign name is camp_x.</p>
<h1>Salesforce - Automate Business Processes</h1>
<p>The process builder tool helps in automating business processes. For example, all that goes into a record when a courier delivery is completed. This automation involves creating the following three steps &minus;</p>
<ul class="list">
<li>Select an Object to start the process.</li>
<li>Add criteria to the object to allow the start of the process.</li>
<li>Add action to the criterial to trigger the execution of the process.</li>
</ul>
<p>Let us now create a sample process which will add a record when the courier delivery is completed.</p>
<h2>Add object to start the process</h2>
<p>Go to the link <b>Setup home &rarr; Platfrom Tools &rarr; Process Automation &rarr; Process Builder</b>. Click <b>New</b> .Upon clicking <b>New</b>, the following window appears which asks for name of the process and description. We fill in the details as shown and click <b>Save</b>.</p>
<img src="/salesforce/images/proc_build_1.JPG" alt="proc build 1" />
<p>Next we get a process automation window. Click <b>New</b> to go to the next step. And choose the <b>Object delivery schedule</b> as shown below. Click <b>Save</b>.</p>
<img src="/salesforce/images/proc_build_2.JPG" alt="proc build 2" />
<h2>Add Criteria</h2>
<p>Click on the Add Criteria button in the canvas to add a condition for the process to be allowed to execute. Here we choose the delivery date as the filed which when updated will trigger the process. Click save to save the criteria.</p>
<img src="/salesforce/images/proc_build_4.JPG" alt="proc build 4" />
<h2>Add Action</h2>
<p>Next, we add action to trigger the start of the process when the condition is met.</p>
<img src="/salesforce/images/proc_build_5.JPG" alt="proc build 5" />
<p>With this setup, when a courier delivery is completed we are able to create a record to track the completion of the delivery.</p>
<h1>Salesforce - Importing Data</h1>
<p>In this chapter, we will learn how to import data in Salesforce. Salesforce provides a robust platform for data manipulation. We can Insert, View, Edit and Delete the relevant data with proper user permissions. At times, we need to add a large number of records to the respective Saleforce object in one go. Most likely these records have come from another source. The format of the incoming data has to match with the format in which the salesforce object is expecting it.</p>
<p>The import feature is available with CSV file structures from four sources. The sources are CSV, Outlook CSV, ACT! CSV and GMail CSV. In the example given below, we will use the normal csv file for importing data to the Salesforce platform.</p>
<p>The import happens in the following three steps &minus;</p>
<h2>Step 1</h2>
<p>Navigate to <b>Setup Home &rarr; Data &rarr; Data Import Wizard</b>. A page opens which gives instruction on how to proceed with the Wizard. The most important point to remember is the record limits which restricts the number of records to be imported in one go to 50000. Click the <b>Launch Wizard</b> button to start the import process. The following screen appears, asking us to choose the kind of object to which we can import the data.</p>
<img src="/salesforce/images/data_import_1.JPG" alt="Data Import 1" />
<p>We select <b>Accounts</b> and <b>Contacts</b> in the above screen and click <b>Next</b>.</p>
<h2>Step 2</h2>
<p>In this step, we choose the file containing the data to be imported. Also we are presented with the option of <b>Adding New Records</b> or <b>Updating the Existing Records</b> or both. We choose adding the new records as shown below.</p>
<img src="/salesforce/images/data_import_2.JPG" alt="Data Import 2" />
<p>We also select the field used to match the existing record with the incoming record. For this, we choose Account name and site under the dropdown <b>Match Account by</b>, and then we click <b>Next</b>.</p>
<h2>Step 3</h2>
<p>This is the last step before the import starts. In this step, we do the very important task of matching the incoming field names with the column names of the salesforce fields. Though Salesforce does automatic matching of most of the field names, still there may be some cases where we have to match the field names manually. As you can see below, we have unmapped fields which needs to be mapped. On successfully completing the mapping, click <b>Next</b> and the import starts.</p>
<img src="/salesforce/images/data_import_3.JPG" alt="Data Import 3" />
<h1>Salesforce - Exporting Data</h1>
<p>In this chapter, we will discuss how to export data from Salesforce. You can choose the objects from which data needs to be exported and also schedule a regular export form those objects. There is also a filtering option on how much data to export based on the age of the record.</p>
<p>Let us now see the steps to export data from Salesforce &minus;</p>
<h2>Step 1</h2>
<p>Navigate to the link <b>Setup Home &rarr; Data &rarr; Data Export</b>. It will present a window to schedule an export by mentioning the frequency along with the start and end date to select the records to be exported.</p>
<img src="/salesforce/images/data_export_1.JPG" alt="Data Export 1" />
<h2>Step 2</h2>
<p>In the next step, we choose the Salesforce objects the data of which need to be exported by selecting the check boxes as shown below.</p>
<img src="/salesforce/images/data_export_2.JPG" alt="Data Export 2" />
<h2>Step 3</h2>
<p>Upon clicking <b>Next</b> as in the above step, you will be directed to a window which mentions that you have to wait for some time for the exported data to be ready for download. So in this step, we wait for the download link to appear in the same screen. Also a hyperlink to download the data is sent to the email id of the person who scheduled the export.</p>
<img src="/salesforce/images/data_export_3.JPG" alt="Data Export 3" />
<h2>Step 4</h2>
<p>The Download links appear in this step.</p>
<img src="/salesforce/images/data_export_4.JPG" alt="Data Export 4" />
<h1>Salesforce - Reports</h1>
<p>Creating reports in Salesforce is not a very complicated process. The reports are created on top of one or more Salesforce objects. It has the flexibility of applying filters and joining data sets to create sophisticated reports. The interface is called the <b>Report builder</b>.</p>
<p>Go to the <b>Reports</b> icon in the left bar menu of the Lightning Experience Home Page. Follow the steps below to create a report.</p>
<h2>Step 1</h2>
<p>Click on <b>Create New Report</b>. Upon clicking, the following screen appears. We choose <b>Accounts</b> and click <b>Create</b>.</p>
<img src="/salesforce/images/Reports_1.JPG" alt="Reports 1" />
<h2>Step 2</h2>
<p>In this step ,we define certain settings for the report and get the resulting rows. We choose "My Accounts" from the dropdown <b>Show</b>. It brings all the records owned by the creator of the report. Next we choose the created date filter as <b>All Time</b> as shown below. We proceed by saving the report with the name - <b>Accounts report</b>.</p>
<img src="/salesforce/images/Reports_2.JPG" alt="Reports 2" />
<h2>Step 3</h2>
<p>Now, we will apply a filter to the above report. Click on the <b>Add filter</b> option in the white space just below the date filed filter. Choose the field <b>Billing State/Provinces</b>. Choose the <b>equal to</b> operator and type the value NY in the next text box. This filters out the row for NY as shown below.</p>
<img src="/salesforce/images/Reports_3.JPG" alt="Reports 3" />
<h1>Salesforce - Dashboards</h1>
<p>Dashboards provide more insights than reports as they combine the data from many reports and show a summarized result. Looking at many reports at a time gives the flexibility of combining the results from them quickly. Also summaries in dashboards help us decide on action plans quicker. The dashboards can contain charts, graphs and Tabular data.</p>
<p>Let us now see the steps to create a dashboard.</p>
<h2>Step 1</h2>
<p>Go to the Dashboard button on the left menu bar in the Salesforce Home Page. Now, click on the New Dashboard and the following window appears. Fill in the name and description.</p>
<img src="/salesforce/images/dashboard_1.JPG" alt="Dashboard 1" />
<h2>Step 2</h2>
<p>Next we add components to the dashboards. Components are graphical objects which present the summarized or tabular data with visual indicators like colors, etc. In our case we add two components as shown below.</p>
<p>Choose the <b>Opportunity Amount by Stage</b> report and present it as a line chart. </p>
<img src="/salesforce/images/dashboard_2.JPG" alt="Dashboard 2" />
<p>Similarly, we choose another component to be added. Choose the report <b>Leads Converted All Time</b> as shown below.</p>
<img src="/salesforce/images/dashboard_3.JPG" alt="Dashboard 3" />
<h2>Step 3</h2>
<p>In this step, we see both the components are visible in the dashboard. We can resize the components for better visibility. And there is still more place for additional components.</p>
<img src="/salesforce/images/dashboard_result.JPG" alt="Dashboard Result" />
<h1>Salesforce - Using Formula Fields</h1>
<p>Many times we need to manipulate the values of the fields stored in the Salesforce object by applying a few conditions or calculations. For example, we need to get the Account number value linked to the contact object, so that we can find the Account number from the contact name. In such scenarios, we create formula field in addition to the existing fields in the object.</p>
<p>Let us now see the steps to create formula field.</p>
<h2>Step 1</h2>
<p>Go to the link path <b>Setup Home &rarr; Object Manager &rarr; Contact</b>. Then scroll down to the <b>Fields and Relations</b> tab and add <b>New</b>. Choose <b>Formula</b> as the data type and click Next. The following window appears. Here we choose the return type as Text and also fill in the Field Name and Field Label.</p>
<img src="/salesforce/images/formula_field_3.JPG" alt="Formula Field 3" />
<h2>Step 2</h2>
<p>Clicking on Next brings takes you to the next window wherein, you have to select the field based on which the formula will be built. Let us now choose Account number from the Account table. Click <b>Insert</b> to insert this field into the Contact object.</p>
<img src="/salesforce/images/formula_field_4.JPG" alt="Formula Field 4" />
<h2>Step 3</h2>
<p>In this step, we can see the field Account Number appear under the fields of the Contact object as shown below.</p>
<img src="/salesforce/images/formula_field_5.JPG" alt="Formula Field 5" />
<h1>Salesforce - Visualforce Pages</h1>
<p>Visualforce pages are webpages that belong to Salesforce. These webpages are created using a unique tag-based Mark-up language. It is similar to HTML but it's primary use is to access, display and update the organization’s data. The page is accessed by using a URL similar to that of a traditional webserver page.</p>
<p>Each tag in visual force language corresponds to some user interface component like section of a page, a list view or a field of an object. Interestingly, it can be easily mixed up with HTML markup, CSS style and Java libraries, etc.</p>
<h2>Creating a Visualforce Page</h2>
<p>Go to the link <b>developer console &rarr; File &rarr; New &rarr; Visualforce page</b>. The new window opens asking for a page name. Let us now call it <b>HelloworldPage</b>. Let us now write the code as shown in the following diagram.</p>
<img src="/salesforce/images/vf_page_1.JPG" alt="Visualforce page 1" />
<p>Click <b>Save</b>. Then, click on <b>Preview</b>. This opens a new webpage showing the result as shown in the following screenshot.</p>
<img src="/salesforce/images/vf_page_2.JPG" alt="Visualforce page 2" />
<h2>Adding components</h2>
<p>In this section, we will learn how to add components to a program that is already created. Let us add some user interface components to the program created above. We add a block and a section in that block by using the following code.</p>
<img src="/salesforce/images/vf_page_3.JPG" alt="Visualforce page 3" />
<p>On previewing the page, we get the following output.</p>
<img src="/salesforce/images/vf_page_4.JPG" alt="Visualforce page 4" />
<h2>Setting Preferences</h2>
<p>We can set the various settings for easy navigation by going to <b>Help &rarr; Preferences</b>.</p>
<img src="/salesforce/images/vf_page_5.JPG" alt="Visualforce page 5" />
<h1>Salesforce - Variables &amp; Formulas</h1>
<p>The data from the Salesforce objects can be brought into the Visualforce page using variables and expressions. Like other normal programming language, the Visualforce language has expressions, operators and literals, etc. The basic building block of this language is expressions.</p>
<p>The syntax of a Visualforce expression is as below.</p>
<pre class="result notranslate">
{! expression }
</pre>
<h2>Example</h2>
<p>Let us use the global variable <b>$user</b>. We can write the following code to get the username, First name and login name.</p>
<img src="/salesforce/images/vf_variables_expressions.JPG" alt="Visualforce variables expressions" />
<p>On previewing the output, we get the following details.</p>
<img src="/salesforce/images/vf_variables_expressions2.JPG" alt="Visualforce variables expressions2" />
<p>Similarly, we can use many other variables and manipulate them using formula as shown in the code below.</p>
<img src="/salesforce/images/vf_variables_expressions3.JPG" alt="Visualforce variables expressions3" />
<p>On previewing the output, we get the following details.</p>
<img src="/salesforce/images/vf_variables_expressions4.JPG" alt="Visualforce variables expressions4" />
<h1>Salesforce - Standard Controllers</h1>
<p>Visualforce consists of many built-in controllers which can be used to access and display data. It works on the MVC (model-view-controller) approach. The controllers interact with the database and pull the data from the database to view the data through a webpage created by apex page.</p>
<p>To display a specific record or group of records, we need the record ID. When integrated with other Visualforce pages the ID can flow to the controller page automatically. But in a standalone page we need to specify the record ID manually to see the controller working.</p>
<h2>Example</h2>
<p>Let us create a Visualforce page to get the summary of a record in the Contact object. To do this, we use the component called <b>standardController</b> and put it in an apex block. The diagram given below shows the code to achieve this.</p>
<img src="/salesforce/images/vf_s_controller_1.JPG" alt="vf s controller 1" />
<p>Here we display some select fields from the Object. They are Name, Email and phone. If we go to the Preview window, we find that the page only displays the labels but no data. That is because we have not associated the result from the controller with any specific record.</p>
<p>So next we identify a record form the <b>Contact Object</b> to be attached to the result from the controller. Open the contacts object and click on any of contact name. It will open the following window from which we capture the ID of the record. The ID is highlighted in the URL. In your environment, it will be a similar string of characters.</p>
<img src="/salesforce/images/vf_s_controller_2.JPG" alt="vf s controller 2" />
<p>Finally, we add this ID of the record to the URL of the preview window of the Visualforce standard controller page we created. In the current example, the ID of the record is added as shown below.</p>
<pre class="result notranslate">
https://c.ap2.visual.force.com/apex/FirstPage?core.apexpages.request.devconsole=1&id=0032800000Wih9kAAB
</pre>
<p>On visiting the above URL from the Organization's salesforce account, we get the details of the record as shown below.</p>
<img src="/salesforce/images/vf_s_controller_3.JPG" alt="vf s controller 3" />
<h1>Salesforce - Records, Fields and Tables</h1>
<p>We have already seen how to get the values of a record using the standard controller. But we can also display the field values in a more formatted way by using additional controllers.</p>
<p>In this chapter, we will see how to display the fields of an object and the data of a details table in a Master-detail relation.</p>
<h2>Display Fields</h2>
<p>When we want to display the fields of a record in a formatted manner with column headers, rather than just the labels and values, we can use the <b>OutputField</b> option. The code given below shows the apex program to display the filled data from Contact. As you can see, we do not need the labels to be in place to indicate the field values.</p>
<img src="/salesforce/images/vf_s_record_fields_tables_code.JPG" alt="vf s record fields tables code" />
<p>To preview the result of the above code, we use the ID of the record as described in the previous chapter. The result shows the following output showing the field values of the records along with column headers.</p>
<img src="/salesforce/images/vf_s_record_fields_tables1.JPG" alt="vf s record fields tables1" />
<h2>Display Tables</h2>
<p>We can display all the records of a details table by taking a value from a master table. For example, we can display all the contacts associated with an account. In such case, we use the <b>iteration component</b> which in our case is the contacts table linked to account. Below is the code to display all the contacts associated with the Account table.</p>
<img src="/salesforce/images/vf_s_record_table_code.JPG" alt="vf s record table code" />
<p>On previewing the output form the above code, we get the following result.</p>
<img src="/salesforce/images/vf_s_record_table_result.JPG" alt="vf s record table result" />
<h1>Salesforce - Using Forms</h1>
<p>Salesforce is a data-driven platform. So viewing and editing data in its apps is a fundamental requirement. Like the traditional HTML forms, we can create similar forms in Saleforce for editing the data in Salesforce.</p>
<h2>Creating Input Form</h2>
<p>The Input forms are created using a Visualforce page. We open a new Visualforce page by using the path <b>Developer Console &rarr; File &rarr; New &rarr; Visualforce Page</b>. We write the code as shown below which uses <b>Contact</b> as the standard controller and the purpose is to edit the values in the 3 fields - Name, Email and Phone.</p>
<img src="/salesforce/images/visulaforce_forms_code_1.JPG" alt="visulaforce forms code 1" />
<p>Upon running the above code for the visualforce page, we get the following output..</p>
<img src="/salesforce/images/visulaforce_forms_result_1.JPG" alt="visulaforce forms result 1" />
<p>But we can improve the above form further by aligning the fields to one column and putting all the input fields and labels into a block. The code given below shows how we add a section and block to the form and also put the fields in one column.</p>
<img src="/salesforce/images/visulaforce_forms_code_2.JPG" alt="visulaforce forms code 2" />
<p>Upon running the above code for the Visualforce page, we receive the following output.</p>
<img src="/salesforce/images/visulaforce_forms_result_2.JPG" alt="visulaforce forms result 2" />
<h1>Salesforce - List Controllers</h1>
<p>In this chapter, we will discuss List Controllers in Salesforce. At times, we need to view a given set of records from a Salesforce object by applying filter criteria. This is achieved by using list controllers which allow you to create Visualforce pages that can display or act on a set of records. The standard list controllers can be used in the following set of objects.</p>
<ul class="list">
<li>Account</li>
<li>Asset</li>
<li>Campaign</li>
<li>Case</li>
<li>Contact</li>
<li>Contract</li>
<li>Idea</li>
<li>Lead</li>
<li>Opportunity</li>
<li>Order</li>
<li>Solution</li>
<li>User</li>
<li>Custom objects</li>
</ul>
<h2>Example</h2>
<p>We take the example of contact object. We fetch the records from this object and display it using list controllers. To achieve this, we create an apex page with the following code. The code creates a pageblock with column values matching the column names of the contact object.</p>
<img src="/salesforce/images/vf_list_controllers.JPG" alt="vf list controllers" />
<p>Upon running the above code, we receive the following output.</p>
<img src="/salesforce/images/vf_list_controllers_result.JPG" alt="vf list controllers result" />
<h1>Salesforce - Static Resources</h1>
<p>The user interface in a Visualforce base can display dynamic content the value of which keeps changing based on user responses. But there are times when we need some content which should not change with the change in values of other components in the page. For example, an image file may be required to remain constant. Such content which cannot be changed in a page is known as a static resource.</p>
<p>Following are a few static resources in Salesforce &minus;</p>
<ul class="list">
<li>Images</li>
<li>Javascript Files</li>
<li>Flash files</li>
<li>CSS files</li>
</ul>
<p>The steps to create a static resource are as below.</p>
<h2>Create a Static Resource container</h2>
<p>Go to <b>Develop &rarr; Static resource</b> and mention the values for name, description and file location for the static resource.</p>
<img src="/salesforce/images/startic_resource_1.JPG" alt="Startic Resource 1" />
<h2>Upload a Static Resource</h2>
<p>Click <b>Save</b> in the above screen to get the file attached to the User Interface controller.</p>
<img src="/salesforce/images/Static_resource.JPG" alt="Static Resource" />
<h2>Reference the Static Resource</h2>
<p>Next we create the apex code as in the following screenshot to reference the static object we created above.</p>
<img src="/salesforce/images/startic_resource_code.JPG" alt="Startic Resource Code" />
<h3>Output</h3>
<p>Running the above apex code will generate the following output. The output shows a static resource.</p>
<img src="/salesforce/images/startic_resource_result.JPG" alt="Startic Resource Result" />
<!--<h1>Create &amp; Edit Lightning Components</h1>
<img src="/salesforce/images/lighting_comp_1.JPG" alt="lighting comp 1" />
<p>&nbsp;</p>
<img src="/salesforce/images/lighting_comp_compenet.JPG" alt="lighting comp compenet" />
<p>&nbsp;</p>
<img src="/salesforce/images/lighting_comp_2.JPG" alt="lighting comp 2" />
<p>&nbsp;</p>
<img src="/salesforce/images/lighting_comp_result.JPG" alt="lighting comp result" />
<h1>Salesforce - Attributes &amp; Expressions</h1>
<img src="/salesforce/images/lightning_var_attr_comp.JPG" alt="lightning var attr comp" />
<p>&nbsp;</p>
<img src="/salesforce/images/lightning_var_attr_app.JPG" alt="lightning var attr app" />
<p>&nbsp;</p>
<img src="/salesforce/images/lightning_var_attr_result.JPG" alt="lightning var attr result" />-->
<div class="mui-container-fluid button-borders show">
<div class="pre-btn">
<a href="/salesforce/salesforce_static_resources.htm"><i class="fal fa-chevron-circle-left"></i> Previous Page</a>
</div>
<div class="nxt-btn">
<a href="/salesforce/salesforce_useful_resources.htm">Next Page <i class="fal fa-chevron-circle-right"></i>&nbsp;</a>
</div>
</div>
<div class="google-bottom-ads">
<div>Advertisements</div>
<script><!--
var width = 580;
var height = 400;
var format = "580x400_as";
if( window.innerWidth < 468 ){
   width = 300;
   height = 250;
   format = "300x250_as";
}
google_ad_client = "pub-7133395778201029";
google_ad_width = width;
google_ad_height = height;
google_ad_format = format;
google_ad_type = "image";
google_ad_channel ="";
//--></script>
<script src="https://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
<div class="space-bottom"></div>
</div>
</div>
<!-- Tutorial Content Ends Here -->
<!-- Right Column Starts Here -->
<div class="mui-col-md-2 google-right-ads">
<div class="space-top"></div>
<div class="google-right-ad" style="margin: 0px auto !important;margin-top:5px;">
<script><!--
google_ad_client = "pub-2537027957187252";
google_ad_width = 300;
google_ad_height = 250;
google_ad_format = "300x250_as";
google_ad_type = "image";
google_ad_channel ="";
//--></script>
<script src="https://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</div>
<div class="google-right-ad">
<div class="adsbyvli" data-ad-slot="vi_9012177"></div>
<script>(vitag.Init = window.vitag.Init || []).push(function(){viAPItag.display("vi_9012177")})</script>
</div>
<div class="space-bottom"></div>
<div class="google-right-ad">
<div class="adsbyvli" data-ad-slot="vi_9013289"></div>
<script>(vitag.Init = window.vitag.Init || []).push(function(){viAPItag.display("vi_9013289")})</script>
</div>
<div class="space-bottom" style="margin-bottom:15px;"></div>
</div>
<!-- Right Column Ends Here -->
</div>
</div>
<div class="clear"></div>
<footer id="footer">
<div class="mui--text-center">
<div class="mui--text-caption mui--text-light">
<a href="/index.htm" class="logo"><img class="img-responsive" src="/images/logo-black.png" alt="Tutorials Point" title="Tutorials Point"></a>
</div>
<ul class="mui-list--inline mui--text-body2 mui--text-light">
<li><a href="/about/index.htm"><i class="fal fa-globe"></i> About us</a></li>
<li><a href="/about/about_terms_of_use.htm"><i class="fal fa-asterisk"></i> Terms of use</a></li>
<li><a href="/about/about_privacy.htm#cookies"> <i class="fal fa-shield-check"></i> Cookies Policy</a></li>
<li><a href="/about/faq.htm"><i class="fal fa-question-circle"></i> FAQ's</a></li>
<li><a href="/about/about_helping.htm"><i class="fal fa-hands-helping"></i> Helping</a></li>
<li><a href="/about/contact_us.htm"><i class="fal fa-map-marker-alt"></i> Contact</a></li>
</ul>
<div class="mui--text-caption mui--text-light bottom-copyright-text">&copy; Copyright 2019. All Rights Reserved.</div>
</div>
<div id="privacy-banner">
  <div>
    <p>
      We use cookies to provide and improve our services. By using our site, you consent to our Cookies Policy.
      <a id="banner-accept" href="#">Accept</a>
      <a id="banner-learn" href="/about/about_cookies.htm" target="_blank">Learn more</a>
    </p>
  </div>
</div>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-232293-17"></script>
<script>
window.dataLayer = window.dataLayer || [];
function gtag(){dataLayer.push(arguments);}
gtag('js', new Date());
gtag('config', 'UA-232293-6');
</script>
</footer>
</body>
</html>
