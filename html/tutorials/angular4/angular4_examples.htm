<!DOCTYPE html>
<html lang="en-US">
<head>
<title>Angular 4 - Examples - Tutorialspoint</title>
<meta charset="utf-8">
<meta name="description" content="Angular 4 - Examples - In this chapter, we will discuss a few examples related to Angular 4."/>
<meta name="keywords" content="C, C++, Python, Java, HTML, CSS, JavaScript, SQL, PHP, jQuery, XML, DOM, Bootstrap, Tutorials, Articles, Programming, training, learning, quiz, preferences, examples, code"/>
<link rel="canonical" href="https://www.tutorialspoint.com/angular4/angular4_examples.htm" />
<link rel="shortcut icon" href="/favicon.ico" type="image/x-icon" />
<meta name="viewport" content="width=device-width,initial-scale=1.0,user-scalable=yes">
<script src="/theme/js/script-min-v2.js?v=3"></script>
<link rel="stylesheet" href="/theme/css/style-min-v2.css?v=6">
<script src="//services.bilsyndication.com/adv1/?d=901" defer="" async=""></script>
<script> var vitag = vitag || {};</script>
<script> vitag.outStreamConfig = { enablePC: false, enableMobile: false };</script>  
<style>
.right-menu .mui-btn {
    background-color:#b52e31;
}
a.demo {
    background:#b52e31;
}
li.heading {
    background:#b52e31;
}
.course-box{background:#b52e31}
.home-intro-sub p{color:#b52e31}
</style>
</head>
<body>
<header id="header">
<!-- Top sub-menu Starts Here -->
<div class="mui-appbar mui-container-fulid top-menu">
<div class="mui-container">
<div class="top-menu-item home">
<a href="https://www.tutorialspoint.com/index.htm" target="_blank" title="TutorialsPoint - Home"><i class="fal fa-home"></i> <span>Home</span></a>
</div>
<div class="top-menu-item qa">
<a href="https://www.tutorialspoint.com/about/about_careers.htm" target="_blank" title="Job @ Tutorials Point"><i class="fa fa-suitcase"></i> <span>Jobs</span></a>
</div>
<div class="top-menu-item tools">
<a href="https://www.tutorialspoint.com/online_dev_tools.htm" target="_blank" title="Tools - Online Development and Testing Tools"><i class="fal fa-cogs"></i> <span>Tools</span></a>
</div>
<div class="top-menu-item coding-ground">
<a href="https://www.tutorialspoint.com/codingground.htm" target="_blank" title="Coding Ground - Free Online IDE and Terminal"><i class="fal fa-code"></i> <span>Coding Ground </span></a> 
</div>
<div class="top-menu-item current-affairs">
<a href="https://www.tutorialspoint.com/current_affairs.htm" target="_blank" title="Daily Current Affairs"><i class="fal fa-layer-plus"></i> <span>Current Affairs</span></a>
</div>
<div class="top-menu-item upsc-notes">
<a href="https://www.tutorialspoint.com/upsc_ias_exams.htm" target="_blank" title="UPSC IAS Exams Notes - TutorialsPoint"><i class="fal fa-user-tie"></i> <span>UPSC Notes</span></a>
</div>      
<div class="top-menu-item online-tutoris">
<a href="https://www.tutorialspoint.com/tutor_connect/index.php" target="_blank" title="Top Online Tutors - Tutor Connect"><i class="fal fa-user"></i> <span>Online Tutors</span></a>
</div>
<div class="top-menu-item whiteboard">
<a href="https://www.tutorialspoint.com/whiteboard.htm" target="_blank" title="Free Online Whiteboard"><i class="fal fa-chalkboard"></i> <span>Whiteboard</span></a>
</div>
<div class="top-menu-item net-meeting">
<a href="https://www.tutorialspoint.com/netmeeting.php" target="_blank" title="A free tool for online video conferencing"><i class="fal fa-chalkboard-teacher"></i> <span>Net Meeting</span></a> 
</div>
<div class="top-menu-item articles">
<a href="https://www.tutorix.com" target="_blank" title="Tutorx - The Best Learning App" rel="nofollow"><i class="fal fa-video"></i> <span>Tutorix</span></a> 
</div>        
<div class="social-menu-item">
<a href="https://www.facebook.com/tutorialspointindia" target="_blank" rel="nofollow" data-placement="bottom" title="tutorialspoint @ Facebook"><i class="fab fa-facebook-f"></i></a> 
<a href="https://www.twitter.com/tutorialspoint" target="_blank" rel="nofollow" data-placement="bottom" title="tutorialspoint @ Twitter"><i class="fab fa-twitter"></i></a>
<a href="https://www.linkedin.com/company/tutorialspoint" target="_blank" rel="nofollow" data-placement="bottom" title="tutorialspoint @ Linkedin"><i class="fab fa-linkedin-in"></i></a>
<a href="https://www.youtube.com/channel/UCVLbzhxVTiTLiVKeGV7WEBg" target="_blank" rel="nofollow" data-placement="bottom" title="tutorialspoint YouTube"><i class="fab fa-youtube"></i></a>
</div>        
</div>
</div>
<!-- Top sub-menu Ends Here -->
<!-- Top main-menu Starts Here -->
<div class="mui-appbar mui-container-fulid mui--appbar-line-height mui--z1" id="logo-menu">
<div class="mui-container">
<div class="left-menu">
<a href="https://www.tutorialspoint.com/index.htm" title="Tutorialspoint">
<img class="tp-logo" alt="tutorialspoint" src="/angular4/images/logo.png">
</a>
<div class="mui-dropdown">
<a class="mui-btn mui-btn--primary categories" data-mui-toggle="dropdown"><i class="fa fa-th-large"></i> 
<span>Categories <span class="mui-caret"></span></span></a>            
<ul class="mui-dropdown__menu cat-menu">
<li>
<ul>
<li><a href="/academic_tutorials.htm"><i class="fa fa-caret-right"></i> Academic Tutorials</a></li>
<li><a href="/big_data_tutorials.htm"><i class="fa fa-caret-right"></i> Big Data &amp; Analytics </a></li>
<li><a href="/computer_programming_tutorials.htm"><i class="fa fa-caret-right"></i> Computer Programming </a></li>
<li><a href="/computer_science_tutorials.htm"><i class="fa fa-caret-right"></i> Computer Science </a></li>
<li><a href="/database_tutorials.htm"><i class="fa fa-caret-right"></i> Databases </a></li>
<li><a href="/devops_tutorials.htm"><i class="fa fa-caret-right"></i> DevOps </a></li>
<li><a href="/digital_marketing_tutorials.htm"><i class="fa fa-caret-right"></i> Digital Marketing </a></li>
<li><a href="/engineering_tutorials.htm"><i class="fa fa-caret-right"></i> Engineering Tutorials </a></li>
<li><a href="/upsc_ias_exams.htm"><i class="fa fa-caret-right"></i> Exams Syllabus </a></li>
<li><a href="/famous_monuments.htm"><i class="fa fa-caret-right"></i> Famous Monuments </a></li>
<li><a href="/gate_exams_tutorials.htm"><i class="fa fa-caret-right"></i> GATE Exams Tutorials</a></li>
<li><a href="/latest_technologies.htm"><i class="fa fa-caret-right"></i> Latest Technologies </a></li>
<li><a href="/machine_learning_tutorials.htm"><i class="fa fa-caret-right"></i> Machine Learning </a></li>
<li><a href="/mainframe_tutorials.htm"><i class="fa fa-caret-right"></i> Mainframe Development </a></li>
<li><a href="/management_tutorials.htm"><i class="fa fa-caret-right"></i> Management Tutorials </a></li>
<li><a href="/maths_tutorials.htm"><i class="fa fa-caret-right"></i> Mathematics Tutorials</a></li>
<li><a href="/microsoft_technologies_tutorials.htm"><i class="fa fa-caret-right"></i> Microsoft Technologies </a></li>
<li><a href="/misc_tutorials.htm"><i class="fa fa-caret-right"></i> Misc tutorials </a></li>
<li><a href="/mobile_development_tutorials.htm"><i class="fa fa-caret-right"></i> Mobile Development </a></li>
<li><a href="/java_technology_tutorials.htm"><i class="fa fa-caret-right"></i> Java Technologies </a></li>
<li><a href="/python_technologies_tutorials.htm"><i class="fa fa-caret-right"></i> Python Technologies </a></li>
<li><a href="/sap_tutorials.htm"><i class="fa fa-caret-right"></i> SAP Tutorials </a></li>
<li><a href="/scripting_lnaguage_tutorials.htm"><i class="fa fa-caret-right"></i>Programming Scripts </a></li>
<li><a href="/selected_reading.htm"><i class="fa fa-caret-right"></i> Selected Reading </a></li>
<li><a href="/software_quality_tutorials.htm"><i class="fa fa-caret-right"></i> Software Quality </a></li>
<li><a href="/soft_skill_tutorials.htm"><i class="fa fa-caret-right"></i> Soft Skills </a></li>
<li><a href="/telecom_tutorials.htm"><i class="fa fa-caret-right"></i> Telecom Tutorials </a></li>
<li><a href="/upsc_ias_exams.htm"><i class="fa fa-caret-right"></i> UPSC IAS Exams </a></li>
<li><a href="/web_development_tutorials.htm"><i class="fa fa-caret-right"></i> Web Development </a></li>
<li><a href="/sports_tutorials.htm"><i class="fa fa-caret-right"></i> Sports Tutorials </a></li>
<li><a href="/xml_technologies_tutorials.htm"><i class="fa fa-caret-right"></i> XML Technologies </a></li>
<li><a href="/multi_language_tutorials.htm"><i class="fa fa-caret-right"></i> Multi-Language Tutorials</a></li>
<li><a href="/questions_and_answers.htm"><i class="fa fa-caret-right"></i> Interview Questions</a></li>
</ul>
</li>
</ul>
<div class="clear"></div>
</div> 
</div>
<div class="right-menu">
<div class="toc-toggle">
<a href="javascript:void(0);"><i class="fa fa-bars"></i></a>
</div>
<div class="mobile-search-btn">
<a href="https://www.tutorialspoint.com/search.htm"><i class="fal fa-search"></i></a>
</div>
<div class="search-box">
<form method="get" class="" name="searchform" action="https://www.google.com/search" target="_blank" novalidate="">
<input type="hidden" name="sitesearch" value="www.tutorialspoint.com" class="user-valid valid">
<input class="header-search-box" type="text" id="search-string" name="q" placeholder="Search your favorite tutorials..." onfocus="if (this.value == 'Search your favorite tutorials...') {this.value = '';}" onblur="if (this.value == '') {this.value = 'Search your favorite tutorials...';}" autocomplete="off">
<button><i class="fal fa-search"></i></button>
</form>
</div>
<div class="menu-btn library-btn">
<a href="https://www.tutorialspoint.com/tutorialslibrary.htm"><i class="fal fa-cubes"></i> <span>Library</span></a>
</div>
<div class="menu-btn videos-btn">
<a href="https://www.tutorialspoint.com/videotutorials/index.htm"><i class="fal fa-video"></i> <span>Videos</span></a> 
</div>
<div class="menu-btn videos-btn">
<a href="https://www.tutorialspoint.com/questions/index.php"><i class="fa fa-location-arrow"></i> <span>Q/A</span></a>
</div>
<div class="menu-btn ebooks-btn">
<a href="https://store.tutorialspoint.com"><i class="fal fa-book"></i> <span>eBooks</span></a>
</div>
<div class="mui-dropdown">
<button class="mui-btn mui-btn--primary" data-mui-toggle="dropdown">
<span class="mui-caret"></span>
</button>
<ul class="mui-dropdown__menu">
<li><a href="https://www.tutorialspoint.com/tutorialslibrary.htm"><i class="fal fa-cubes"></i> <span>Library</span></a></li>
<li><a href="https://www.tutorialspoint.com/videotutorials/index.htm"><i class="fal fa-video"></i> <span>Videos</span></a></li>
<li><a href="https://store.tutorialspoint.com"><i class="fal fa-book"></i> <span>eBooks</span></a></li>
</ul>
</div>
</div>
</div>
</div>
<!-- Top main-menu Ends Here -->
</header>
<div class="mui-container-fluid content">
<div class="mui-container">
<!-- Tutorial ToC Starts Here -->
<div class="mui-col-md-3 tutorial-toc">
<div class="mini-logo">
<img src="/angular4/images/angular-4-mini-logo.jpg" alt="Angular 4 Tutorial" />
</div>
<ul class="toc chapters">
<li class="heading">Angular 4 Tutorial</li>
<li><a href="/angular4/index.htm">Angular 4 - Home</a></li>
<li><a href="/angular4/angular4_overview.htm">Angular 4 – Overview</a></li>
<li><a href="/angular4/angular4_environment_setup.htm">Angular 4 – Environment Setup</a></li>
<li><a href="/angular4/angular4_project_setup.htm">Angular 4 – Project Setup</a></li>
<li><a href="/angular4/angular4_components.htm">Angular 4 – Components</a></li>
<li><a href="/angular4/angular4_module.htm">Angular 4 – Module</a></li>
<li><a href="/angular4/angular4_data_binding.htm">Angular 4 – Data Binding</a></li>
<li><a href="/angular4/angular4_event_binding.htm">Angular 4 – Event Binding</a></li>
<li><a href="/angular4/angular4_templates.htm">Angular 4 – Templates</a></li>
<li><a href="/angular4/angular4_directives.htm">Angular 4 – Directives</a></li>
<li><a href="/angular4/angular4_pipes.htm">Angular 4 – Pipes</a></li>
<li><a href="/angular4/angular4_routing.htm">Angular 4 – Routing</a></li>
<li><a href="/angular4/angular4_services.htm">Angular 4 – Services</a></li>
<li><a href="/angular4/angular4_http_service.htm">Angular 4 – Http Service</a></li>
<li><a href="/angular4/angular4_forms.htm">Angular 4 – Forms</a></li>
<li><a href="/angular4/angular4_animations.htm">Angular 4 – Animations</a></li>
<li><a href="/angular4/angular4_materials.htm">Angular 4 – Materials</a></li>
<li><a href="/angular4/angular4_cli.htm">Angular 4 – CLI</a></li>
<li><a href="/angular4/angular4_examples.htm">Angular 4 – Examples</a></li>
</ul>
<ul class="toc chapters">
<li class="heading">Angular 4 Useful Resources</li>
<li><a href="/angular4/angular4_quick_guide.htm">Angular 4 - Quick Guide</a></li>
<li><a href="/angular4/angular4_useful_resources.htm">Angular 4 - Useful Resources</a></li>
<li><a href="/angular4/angular4_discussion.htm">Angular 4 - Discussion</a></li>
</ul>
<ul class="toc reading">
<li class="sreading">Selected Reading</li>
<li><a target="_top" href="/upsc_ias_exams.htm">UPSC IAS Exams Notes</a></li>
<li><a target="_top" href="/developers_best_practices/index.htm">Developer's Best Practices</a></li>
<li><a target="_top" href="/questions_and_answers.htm">Questions and Answers</a></li>
<li><a target="_top" href="/effective_resume_writing.htm">Effective Resume Writing</a></li>
<li><a target="_top" href="/hr_interview_questions/index.htm">HR Interview Questions</a></li>
<li><a target="_top" href="/computer_glossary.htm">Computer Glossary</a></li>
<li><a target="_top" href="/computer_whoiswho.htm">Who is Who</a></li>
</ul>
</div>
<!-- Tutorial ToC Ends Here -->
<!-- Tutorial Content Starts Here -->
<div class="mui-col-md-6 tutorial-content">
<h1>Angular 4 - Examples</h1>
<hr />
<div class="top-ad-heading">Advertisements</div>
<div style="text-align: center;">
<script><!--
google_ad_client = "pub-7133395778201029";
var width = document.getElementsByClassName("tutorial-content")[0].clientWidth - 40;
google_ad_width = width;
google_ad_height = 150;
google_ad_format = width + "x150_as";
google_ad_type = "image";
google_ad_channel = "";
//--></script>
<script src="https://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</div>
<div class="mui-container-fluid button-borders">
<div class="pre-btn">
<a href="/angular4/angular4_cli.htm"><i class="fal fa-chevron-circle-left"></i> Previous Page</a>
</div>
<div class="nxt-btn">
<a href="/angular4/angular4_quick_guide.htm">Next Page <i class="fal fa-chevron-circle-right"></i>&nbsp;</a>
</div>
</div>
<div class="clearer"></div>
<p>In this chapter, we will discuss a few examples related to Angular 4.</p>
<p>To begin with, we have created an example which shows a login form with input as <b>username</b> and <b>password</b>. Upon entering the correct values, it will enter inside and show another form wherein, you can enter the customer details. In addition, we have created four components - header, footer, userlogin and mainpage.</p>
<p>The components are created using the following command &minus;</p>
<h3>ng g component header</h3>
<pre class="result notranslate">
C:\ngexamples\aexamples&gt;ng g component header
installing component
   create src\app\header\header.component.css
   create src\app\header\header.component.html
   create src\app\header\header.component.spec.ts
   create src\app\header\header.component.ts
   update src\app\app.module.ts
</pre>
<h3>ng g component footer</h3>
<pre class="result notranslate">
C:\ngexamples\aexamples&gt;ng g component footer
installing component
   create src\app\footer\footer.component.css
   create src\app\footer\footer.component.html
   create src\app\footer\footer.component.spec.ts
   create src\app\footer\footer.component.ts
   update src\app\app.module.ts
</pre>
<h3>ng g component userlogin</h3>
<pre class="result notranslate">
C:\ngexamples\aexamples&gt;ng g component userlogin
installing component
   create src\app\userlogin\userlogin.component.css
   create src\app\userlogin\userlogin.component.html
   create src\app\userlogin\userlogin.component.spec.ts
   create src\app\userlogin\userlogin.component.ts
   update src\app\app.module.ts
</pre>
<h3>ng g component mainpage</h3>
<pre class="result notranslate">
C:\ngexamples\aexamples&gt;ng g component mainpage
installing component
   create src\app\mainpage\mainpage.component.css
   create src\app\mainpage\mainpage.component.html
   create src\app\mainpage\mainpage.component.spec.ts
   create src\app\mainpage\mainpage.component.ts
   update src\app\app.module.ts
</pre>
<p>In the <b>app.module.ts</b>, the parent module has all the components added when created. The file looks as follows &minus;</p>
<pre class="prettyprint notranslate">
import { BrowserModule } from '@angular/platform-browser';
import { NgModule } from '@angular/core';
import { ReactiveFormsModule } from '@angular/forms';

import { RouterModule, Routes} froms '@angular/router';
import { BrowserAnimationsModule } from '@angular/platform-browser/animations';
import {MdTableModule} from '@angular/material';

import {HttpModule} from "@angular/http";
import {MdInputModule} from '@angular/material';
import { AppComponent } from './app.component';

import { HeaderComponent } from './header/header.component';
import { FooterComponent } from './footer/footer.component';
import { UserloginComponent } from './userlogin/userlogin.component';
import { MainpageComponent } from './mainpage/mainpage.component';

const appRoutes: Routes = [
   {
      path: '',
      component: UserloginComponent
   },
   {
      path: 'app-mainpage',
      component: MainpageComponent
   }
];

@NgModule({
   declarations: [
      AppComponent,
      HeaderComponent,
      FooterComponent,
      UserloginComponent,
      MainpageComponent
   ],
   
   imports: [
      BrowserModule,
      ReactiveFormsModule,
      RouterModule.forRoot(appRoutes),
      BrowserAnimationsModule,
      HttpModule,
      MdTableModule,
      MdInputModule
   ],
   
   providers: [],
   bootstrap: [AppComponent]
})
export class AppModule { }
</pre>
<p>The components created above are added &minus;</p>
<pre class="result notranslate">
import { HeaderComponent } from './header/header.component';
import { FooterComponent } from './footer/footer.component';
import { UserloginComponent } from './userlogin/userlogin.component';
import { MainpageComponent } from './mainpage/mainpage.component';
</pre>
<p>The components are added in the declarations too &minus;</p>
<pre class="result notranslate">
declarations: [
   AppComponent,
   HeaderComponent,
   FooterComponent,
   UserloginComponent,
   MainpageComponent
],
</pre>
<p>In the parent <b>app.component.html</b>, we have added the main structure of the file that will be seen by the user.</p>
<pre class="result notranslate">
&lt;div class="mainpage"&gt;
   &lt;app-header&gt;&lt;/app-header&gt;
   &lt;router-outlet&gt;&lt;/router-outlet&gt;
   &lt;app-footer&gt;&lt;/app-footer&gt;
&lt;/div&gt;
</pre>
<p>We have created a div and added <b>&lt;app-header&gt;&lt;/app-header&gt;</b>, <b>&lt;router-outlet&gt;&lt;/router-outlet&gt;</b> and <b>&lt;app-footer&gt;&lt;/app-footer&gt;</b>.</p>
<p>The <b>&lt;router-outlet&gt;&lt;/router-outlet&gt;</b> is used for navigation between one page to another. Here, the pages are login-form and once it is successful it will redirect to the mainpage, i.e., the customer form.</p>
<p>To get the login-form first and later get the mainpage.component.html, the changes are done in <b>app.module.ts</b> as shown below &minus;</p>
<pre class="prettyprint notranslate">
import { BrowserModule } from '@angular/platform-browser';
import { NgModule } from '@angular/core';
import { ReactiveFormsModule } from '@angular/forms';

import { RouterModule, Routes} from '@angular/router';
import { BrowserAnimationsModule } from '@angular/platform-browser/animations';
import {MdTableModule} from '@angular/material';

import {HttpModule} from "@angular/http";
import {MdInputModule} from '@angular/material';
import { AppComponent } from './app.component';

import { HeaderComponent } from './header/header.component';
import { FooterComponent } from './footer/footer.component';
import { UserloginComponent } from './userlogin/userlogin.component';
import { MainpageComponent } from './mainpage/mainpage.component';

const appRoutes: Routes = [
   {
      path: '',
      component: UserloginComponent
   },
   {
      path: 'app-mainpage',
      component: MainpageComponent
   }
];

@NgModule({
   declarations: [
      AppComponent,
      HeaderComponent,
      FooterComponent,
      UserloginComponent,
      MainpageComponent
   ],
   
   imports: [
      BrowserModule,
      ReactiveFormsModule,
      RouterModule.forRoot(appRoutes),
      BrowserAnimationsModule,
      HttpModule,
      MdTableModule,
      MdInputModule
   ],
   providers: [],
   bootstrap: [AppComponent]
})
export class AppModule { }
</pre>
<p>We have imported <b>RouterModule</b> and <b>Routes</b> from <b>@anuglar/router</b>. In imports, the RouterModules takes appRoutes as the param which is defined above as &minus;</p>
<pre class="result notranslate">
const appRoutes: Routes = [
   {
      path: '',
      component: UserloginComponent
   },
   {
      path: 'app-mainpage',
      component: MainpageComponent
   }
];
</pre>
<p>Routes take the array of components and by default the userloginComponent is called.</p>
<p>In <b>userlogin.component.ts</b>, we have imported the router and navigated to mainpage.component.html based on the condition as shown below &minus;</p>
<pre class="prettyprint notranslate">
import { Component, OnInit } from '@angular/core';
import { FormGroup, FormControl, Validators} from '@angular/forms';
import { Router} from '@angular/router';

@Component({
   selector: 'app-userlogin',
   templateUrl: './userlogin.component.html',
   styleUrls: ['./userlogin.component.css']
})

export class UserloginComponent implements OnInit {
   formdata;
   constructor(private router: Router) { }
   ngOnInit() {
      this.formdata = new FormGroup({
         uname: new FormControl("", Validators.compose([
            Validators.required,
            Validators.minLength(6)
         ])),
         passwd: new FormControl("", this.passwordvalidation)
      });
   }
   
   passwordvalidation(formcontrol) {
      if (formcontrol.value.length &lt; 5) {
         return {"passwd" : true};
      }
   }
   
   onClickSubmit(data) {
      console.log(data.uname);
      if (data.uname=="systemadmin" && data.passwd=="admin123") {
         alert("Login Successful");
         this.router.navigate(['app-mainpage'])
      } else {
         alert("Invalid Login");
         return false;
      }
   }
}
</pre>
<p>Following is the .ts file for <b>app.component.ts</b>. Only the default details are present in it.</p>
<pre class="result notranslate">
import { Component } from '@angular/core';

@Component({
   selector: 'app-root',
   templateUrl: './app.component.html',
   styleUrls: ['./app.component.css']
})
export class AppComponent {title = 'app';}
</pre>
<p>Let us now display the details of each of the components files. To start with, we will first take the header component. For the new component, four files are created <b>header.component.ts, header.component.html, header.component.css, and header.component.spec.ts</b>.</p>
<h3>header.component.ts</h3>
<pre class="result notranslate">
import { Component, OnInit } from '@angular/core';

@Component({
   selector: 'app-header',
   templateUrl: './header.component.html',
   styleUrls: ['./header.component.css']
})

export class HeaderComponent implements OnInit {
   constructor() { }
   ngOnInit() {}
}
</pre>
<h3>header.component.html</h3>
<pre class="result notranslate">
&lt;div&gt;
   &lt;hr /&gt;
&lt;/div&gt;
</pre>
<p>We have not added any css. This makes the header.component.css file empty. Also, the <b>header.compoent.spec.ts</b> file is empty as the test cases are not considered here.</p>
<p>For the header, we will draw a horizontal line. A logo or any other detail can be added to make the header look more creative.</p>
<p>Let us now consider creating a footer component.</p>
<p>For the footer component, <b>footer.component.ts, footer.component.html, footer.component.spec.ts and footer.component.css</b> files are created.</p>
<h3>footer.component.ts</h3>
<pre class="prettyprint notranslate">
import { Component, OnInit } from '@angular/core';

@Component({
   selector: 'app-footer',
   templateUrl: './footer.component.html',
   styleUrls: ['./footer.component.css']
})

export class FooterComponent implements OnInit {
   constructor() { }
   ngOnInit() { }
}
</pre>
<h3>footer.component.html</h3>
<pre class="result notranslate">
&lt;hr/&gt;
</pre>
<p>As we have not added any css, the <b>footer.component.css</b> file is empty. Also, the <b>footer.compoent.spec.ts</b> file is empty as the test cases are not considered here.</p>
<p>For the footer, we will just draw a horizontal line as shown in the .html file.</p>
<p>Let us now see how the userlogin component works. The following files for userlogin component created are <b>userlogin.component.css, userlogin.component.html, userlogin.component.ts,</b> and <b>userlogin.component.spec.ts.</b></p>
<p>The details of the files are as follows &minus;</p>
<h3>userlogin.component.html</h3>
<pre class="prettyprint notranslate">
&lt;div class="form_container"&gt;
   &lt;form [formGroup]="formdata" (ngSubmit) = "onClickSubmit(formdata.value)" &gt;
      &lt;header&gt;Login&lt;/header&gt;
      &lt;label&gt;Username &lt;span&gt;*&lt;/span&gt;&lt;/label&gt;
      &lt;input type="text" name="uname" formControlName="uname"/&gt;
      
      &lt;div class="help"&gt;At least 6 character&lt;/div&gt;
      &lt;label&gt;Password &lt;span&gt;*&lt;/span&gt;&lt;/label&gt;
      &lt;input type="password" class="fortextbox" name="passwd" formControlName="passwd"/&gt;
      
      &lt;div class="help"&gt;Use upper and lowercase lettes as well&lt;/div&gt;
      &lt;button [disabled]="!formdata.valid" value="Login"&gt;Login&lt;/button&gt;
   &lt;/form&gt;
&lt;/div&gt;
</pre>
<p>Here, we have created form with two input controls <b>Username</b> and <b>Password</b>. This is a model driven form approach and the details of the same are explained in Chapter 14 - Forms.</p>
<p>We consider the username and password mandatory, hence the validation for the same is added in the ts. Upon clicking the submit button, the control is passed to the <b>onClickSubmit</b>, which is defined in the ts file.</p>
<h3>userlogin.component.ts</h3>
<pre class="prettyprint notranslate">
import { Component, OnInit } from '@angular/core';
import { FormGroup, FormControl, Validators} from '@angular/forms';
import { Router} from '@angular/router';

@Component({
   selector: 'app-userlogin',
   templateUrl: './userlogin.component.html',
   styleUrls: ['./userlogin.component.css']
})

export class UserloginComponent implements OnInit {
   formdata;
   constructor(private router: Router) { }
   ngOnInit() {
      this.formdata = new FormGroup({
         uname: new FormControl("", Validators.compose([
            Validators.required,
            Validators.minLength(6)
         ])),
         passwd: new FormControl("", this.passwordvalidation)
      });
   }
   passwordvalidation(formcontrol) {
      if (formcontrol.value.length &lt; 5) {
         return {"passwd" : true};
      }
   }
   onClickSubmit(data) {
      console.log(data.uname);
      if (data.uname == "systemadmin" &amp;&amp; data.passwd == "admin123") {
         alert("Login Successful");
         this.router.navigate(['app-mainpage'])
      }
   }
}
</pre>
<p>For the formcontrol and validation, the modules are imported as shown below</p>
<pre class="result notranslate">
import { FormGroup, FormControl, Validators} from '@angular/forms';
</pre>
<p>We need a router to navigate to a different component when the user and password are correct. For this, the router is imported as shown below &minus;</p>
<pre class="result notranslate">
import { Router} from '@angular/router';
</pre>
<p>In <b>ngOnInit</b>, the validation for the form is done. We need the username to be more than six characters and the field is mandatory. The same condition applies to password too.</p>
<p>Upon clicking submit, we can check if the username is <b>systemadmin</b> and the password is <b>admin123</b>. If yes, a dialog box appears that shows <b>Login Successful</b> and the router navigates to the app-mainpage, which is the selector of the mainpage component.</p>
<p>There is css added for the form in <b>userlogin.component.css</b> file &minus;</p>
<pre class="prettyprint notranslate">
.form_container{
   margin : 0 auto;
   width:600px;
}

form {
   background: white;
   width: 500px;
   box-shadow: 0px 0px 20px rgba(0, 0, 0, 0.7);
   font-family: lato;
   position: relative;
   color: #333;
   border-radius: 10px;
}

form header {
   background: #FF3838;
   padding: 30px 20px;
   color: white;
   font-size: 1.2em;
   font-weight: 600;
   border-radius: 10px 10px 0 0;
}

form label {
   margin-left: 20px;
   display: inline-block;
   margin-top: 30px;
   margin-bottom: 5px;
   position: relative;
}

form label span {
   color: #FF3838;
   font-size: 2em;
   position: absolute;
   left: 2.3em;
   top: -10px;
}
form input {
   display: block;
   width: 50%;
   margin-left: 20px;
   padding: 5px 20px;
   font-size: 1em;
   border-radius: 3px;
   outline: none;
   border: 1px solid #ccc;
}

form .help {
   margin-left: 20px;
   font-size: 0.8em;
   color: #777;
}

form button {
   position: relative;
   margin-top: 30px;
   margin-bottom: 30px;
   left: 50%;
   transform: translate(-50%, 0);
   font-family: inherit;
   color: white;
   background: #FF3838;
   outline: none;
   border: none;
   padding: 5px 15px;
   font-size: 1.3em;
   font-weight: 400;
   border-radius: 3px;
   box-shadow: 0px 0px 10px rgba(51, 51, 51, 0.4);
   cursor: pointer;
   transition: all 0.15s ease-in-out;
}
form button:hover {
   background: #ff5252;
}
</pre>
<p>The <b>userlogin.component.spec.ts</b> file is empty as there no test cases right now.</p>
<p>Let us now discuss how the mainpage component works. The files created for mainpage component are <b>mainpage.component.ts, mainpage.component.html, mainpage.component.css,</b> and <b>mainpage.component.spect.ts</b>.</p>
<h3>mainpage.component.ts</h3>
<pre class="prettyprint notranslate">
import { Component, OnInit, ViewChild} from '@angular/core';
import { FormGroup, FormControl, Validators} from '@angular/forms';

import {Http, Response, Headers, RequestOptions } from "@angular/http";
import 'rxjs/add/operator/map';

@Component({
   selector: 'app-mainpage',
   templateUrl: './mainpage.component.html',
   styleUrls: ['./mainpage.component.css']
})

export class MainpageComponent implements OnInit {
   formdata;
   cutomerdata;
   constructor(private http: Http) { }
   stateCtrl: FormControl;
   ngOnInit() {
      this.formdata = new FormGroup({
         fname: new FormControl("", Validators.compose([
            Validators.required,
            Validators.minLength(3)
         ])),
         lname: new FormControl("", Validators.compose([
            Validators.required,
            Validators.minLength(3)
         ])),
         address:new FormControl(""),
         phoneno:new FormControl("")
      });
   }
   onClickSubmit(data) {
      document.getElementById("custtable").style.display="";
      this.cutomerdata = [];
      for (var prop in data) {
         this.cutomerdata.push(data[prop]);
      }
      console.log(this.cutomerdata);
   }
}
</pre>
<p>We have created a customer form with firstname, lastname , address and phone number. The validation of the same is done with the <b>ngOnInit</b> function. Upon clicking submit, the control comes to the function <b>onClickSubmit</b>. Here, the table which is used to display the entered details is made visible.</p>
<p>The customerdata is converted from json to array so that we can use the same in ngFor on the table, which is done in the .html file as shown below.</p>
<h3>mainpage.component.html</h3>
<pre class="prettyprint notranslate">
&lt;div class="form_container"&gt;
   &lt;form [formGroup]="formdata" (ngSubmit) = "onClickSubmit(formdata.value)" &gt;
      &lt;header&gt;Customer Details&lt;/header&gt;
      &lt;label&gt;FirstName &lt;span&gt;*&lt;/span&gt;&lt;/label&gt;
      &lt;input type="text" name="fname" formControlName="fname"/&gt;
      &lt;label&gt;LastName &lt;span&gt;*&lt;/span&gt;&lt;/label&gt;
      
      &lt;input type="text" name="lname" formControlName="lname"/&gt;
      &lt;label&gt;Address &lt;span&gt;&lt;/span&gt;&lt;/label&gt;
      &lt;input type="text" name="address" formControlName="address"/&gt;
      &lt;label&gt;Phone No &lt;span&gt;&lt;/span&gt;&lt;/label&gt;
      &lt;input type="text" name="phoneno" formControlName="phoneno"/&gt;
      &lt;button [disabled]="!formdata.valid" value="Submit"&gt;Submit&lt;/button&gt;
   &lt;/form&gt;
&lt;/div&gt;
&lt;br/&gt;

&lt;div id="custtable" style="display:none;margin:0 auto;"&gt;
   &lt;table&gt;
      &lt;tr&gt;
         &lt;td&gt;FirstName&lt;/td&gt;
         &lt;td&gt;LastName&lt;/td&gt;
         &lt;td&gt;Address&lt;/td&gt;
         &lt;td&gt;Phone No&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
         &lt;td *ngFor="let data of cutomerdata"&gt;
            &lt;h5&gt;{{data}}&lt;/h5&gt;
         &lt;/td&gt;
      &lt;/tr&gt;
   &lt;/table&gt;
&lt;/div&gt;
</pre>
<p>Here, the first div has the customer details and the second div has the table, which will show the entered details. The display of the userlogin and the customer details is as shown below. This is the page with login form and header and footer.</p>
<img src="/angular4/images/login_mainpage.jpg" alt="Login Mainpage"/>
<p>Once you enter the details, the display is as shown below</p>
<img src="/angular4/images/login_mainpage2.jpg" alt="Login Mainpage-2"/>
<p>Upon clicking submit, a dialog box appears which shows Login Successful.</p>
<img src="/angular4/images/successful_login_mainpage.jpg" alt="Successful Login Mainpage"/>
<p>If the details are invalid, a dialog box appears which shows Invalid Login as shown below &minus;</p>
<img src="/angular4/images/invalid_login_mainpage.jpg" alt="Invalid Login Mainpage"/>
<p>If the login is successful, it will proceed to the next form of Customer Details as shown below &minus;</p>
<img src="/angular4/images/customer_details_login_mainpage.jpg" alt="Customer Details Login Mainpage"/>
<p>Once the details are entered and submitted, a dialog box appears which shows the Customer Details are added as shown in the screenshot below &minus;</p>
<img src="/angular4/images/customer_details_added.jpg" alt="Customer Details Added"/>
<p>When we click OK in the above screenshot, the details will appear as shown in the screenshot below &minus;</p>
<img src="/angular4/images/customer_details_shown_after_submmition.jpg" alt="Customer Details Shown After Submmition"/>
<div class="mui-container-fluid button-borders show">
<div class="pre-btn">
<a href="/angular4/angular4_cli.htm"><i class="fal fa-chevron-circle-left"></i> Previous Page</a>
</div>
<div class="nxt-btn">
<a href="/angular4/angular4_quick_guide.htm">Next Page <i class="fal fa-chevron-circle-right"></i>&nbsp;</a>
</div>
</div>
<div class="google-bottom-ads">
<div>Advertisements</div>
<script><!--
var width = 580;
var height = 400;
var format = "580x400_as";
if( window.innerWidth < 468 ){
   width = 300;
   height = 250;
   format = "300x250_as";
}
google_ad_client = "pub-7133395778201029";
google_ad_width = width;
google_ad_height = height;
google_ad_format = format;
google_ad_type = "image";
google_ad_channel ="";
//--></script>
<script src="https://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
<div class="space-bottom"></div>
</div>
</div>
<!-- Tutorial Content Ends Here -->
<!-- Right Column Starts Here -->
<div class="mui-col-md-2 google-right-ads">
<div class="space-top"></div>
<div class="google-right-ad" style="margin: 0px auto !important;margin-top:5px;">
<script><!--
google_ad_client = "pub-2537027957187252";
google_ad_width = 300;
google_ad_height = 250;
google_ad_format = "300x250_as";
google_ad_type = "image";
google_ad_channel ="";
//--></script>
<script src="https://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</div>
<div class="google-right-ad">
<div class="adsbyvli" data-ad-slot="vi_9012177"></div>
<script>(vitag.Init = window.vitag.Init || []).push(function(){viAPItag.display("vi_9012177")})</script>
</div>
<div class="space-bottom"></div>
<div class="google-right-ad">
<div class="adsbyvli" data-ad-slot="vi_9013289"></div>
<script>(vitag.Init = window.vitag.Init || []).push(function(){viAPItag.display("vi_9013289")})</script>
</div>
<div class="space-bottom" style="margin-bottom:15px;"></div>
</div>
<!-- Right Column Ends Here -->
</div>
</div>
<div class="clear"></div>
<footer id="footer">
<div class="mui--text-center">
<div class="mui--text-caption mui--text-light">
<a href="/index.htm" class="logo"><img class="img-responsive" src="/images/logo-black.png" alt="Tutorials Point" title="Tutorials Point"></a>
</div>
<ul class="mui-list--inline mui--text-body2 mui--text-light">
<li><a href="/about/index.htm"><i class="fal fa-globe"></i> About us</a></li>
<li><a href="/about/about_terms_of_use.htm"><i class="fal fa-asterisk"></i> Terms of use</a></li>
<li><a href="/about/about_privacy.htm#cookies"> <i class="fal fa-shield-check"></i> Cookies Policy</a></li>
<li><a href="/about/faq.htm"><i class="fal fa-question-circle"></i> FAQ's</a></li>
<li><a href="/about/about_helping.htm"><i class="fal fa-hands-helping"></i> Helping</a></li>
<li><a href="/about/contact_us.htm"><i class="fal fa-map-marker-alt"></i> Contact</a></li>
</ul>
<div class="mui--text-caption mui--text-light bottom-copyright-text">&copy; Copyright 2019. All Rights Reserved.</div>
</div>
<div id="privacy-banner">
  <div>
    <p>
      We use cookies to provide and improve our services. By using our site, you consent to our Cookies Policy.
      <a id="banner-accept" href="#">Accept</a>
      <a id="banner-learn" href="/about/about_cookies.htm" target="_blank">Learn more</a>
    </p>
  </div>
</div>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-232293-17"></script>
<script>
window.dataLayer = window.dataLayer || [];
function gtag(){dataLayer.push(arguments);}
gtag('js', new Date());
gtag('config', 'UA-232293-6');
</script>
</footer>
</body>
</html>
