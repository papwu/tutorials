<!DOCTYPE html>
<html lang="en-US">
<head>
<title>Subqueries to Solve Queries Questions</title>
<meta charset="utf-8">
<meta name="description" content="Subqueries to Solve Queries Questions - 1.	Which of the following are the types of sub-queries?"/>
<meta name="keywords" content="C, C++, Python, Java, HTML, CSS, JavaScript, SQL, PHP, jQuery, XML, DOM, Bootstrap, Tutorials, Articles, Programming, training, learning, quiz, preferences, examples, code"/>
<link rel="canonical" href="https://www.tutorialspoint.com/sql_certificate/subqueries_to_solve_queries_questions.htm" />
<link rel="shortcut icon" href="/favicon.ico" type="image/x-icon" />
<meta name="viewport" content="width=device-width,initial-scale=1.0,user-scalable=yes">
<script src="/theme/js/script-min-v2.js?v=3"></script>
<link rel="stylesheet" href="/theme/css/style-min-v2.css?v=6">
<script src="//services.bilsyndication.com/adv1/?d=901" defer="" async=""></script>
<script> var vitag = vitag || {};</script>
<script> vitag.outStreamConfig = { enablePC: false, enableMobile: false };</script>  
<style>
.right-menu .mui-btn {
    background-color:#08bab7;
}
a.demo {
    background:#08bab7;
}
li.heading {
    background:#08bab7;
}
.course-box{background:#08bab7}
.home-intro-sub p{color:#08bab7}
</style>
</head>
<body>
<header id="header">
<!-- Top sub-menu Starts Here -->
<div class="mui-appbar mui-container-fulid top-menu">
<div class="mui-container">
<div class="top-menu-item home">
<a href="https://www.tutorialspoint.com/index.htm" target="_blank" title="TutorialsPoint - Home"><i class="fal fa-home"></i> <span>Home</span></a>
</div>
<div class="top-menu-item qa">
<a href="https://www.tutorialspoint.com/about/about_careers.htm" target="_blank" title="Job @ Tutorials Point"><i class="fa fa-suitcase"></i> <span>Jobs</span></a>
</div>
<div class="top-menu-item tools">
<a href="https://www.tutorialspoint.com/online_dev_tools.htm" target="_blank" title="Tools - Online Development and Testing Tools"><i class="fal fa-cogs"></i> <span>Tools</span></a>
</div>
<div class="top-menu-item coding-ground">
<a href="https://www.tutorialspoint.com/codingground.htm" target="_blank" title="Coding Ground - Free Online IDE and Terminal"><i class="fal fa-code"></i> <span>Coding Ground </span></a> 
</div>
<div class="top-menu-item current-affairs">
<a href="https://www.tutorialspoint.com/current_affairs.htm" target="_blank" title="Daily Current Affairs"><i class="fal fa-layer-plus"></i> <span>Current Affairs</span></a>
</div>
<div class="top-menu-item upsc-notes">
<a href="https://www.tutorialspoint.com/upsc_ias_exams.htm" target="_blank" title="UPSC IAS Exams Notes - TutorialsPoint"><i class="fal fa-user-tie"></i> <span>UPSC Notes</span></a>
</div>      
<div class="top-menu-item online-tutoris">
<a href="https://www.tutorialspoint.com/tutor_connect/index.php" target="_blank" title="Top Online Tutors - Tutor Connect"><i class="fal fa-user"></i> <span>Online Tutors</span></a>
</div>
<div class="top-menu-item whiteboard">
<a href="https://www.tutorialspoint.com/whiteboard.htm" target="_blank" title="Free Online Whiteboard"><i class="fal fa-chalkboard"></i> <span>Whiteboard</span></a>
</div>
<div class="top-menu-item net-meeting">
<a href="https://www.tutorialspoint.com/netmeeting.php" target="_blank" title="A free tool for online video conferencing"><i class="fal fa-chalkboard-teacher"></i> <span>Net Meeting</span></a> 
</div>
<div class="top-menu-item articles">
<a href="https://www.tutorix.com" target="_blank" title="Tutorx - The Best Learning App" rel="nofollow"><i class="fal fa-video"></i> <span>Tutorix</span></a> 
</div>        
<div class="social-menu-item">
<a href="https://www.facebook.com/tutorialspointindia" target="_blank" rel="nofollow" data-placement="bottom" title="tutorialspoint @ Facebook"><i class="fab fa-facebook-f"></i></a> 
<a href="https://www.twitter.com/tutorialspoint" target="_blank" rel="nofollow" data-placement="bottom" title="tutorialspoint @ Twitter"><i class="fab fa-twitter"></i></a>
<a href="https://www.linkedin.com/company/tutorialspoint" target="_blank" rel="nofollow" data-placement="bottom" title="tutorialspoint @ Linkedin"><i class="fab fa-linkedin-in"></i></a>
<a href="https://www.youtube.com/channel/UCVLbzhxVTiTLiVKeGV7WEBg" target="_blank" rel="nofollow" data-placement="bottom" title="tutorialspoint YouTube"><i class="fab fa-youtube"></i></a>
</div>        
</div>
</div>
<!-- Top sub-menu Ends Here -->
<!-- Top main-menu Starts Here -->
<div class="mui-appbar mui-container-fulid mui--appbar-line-height mui--z1" id="logo-menu">
<div class="mui-container">
<div class="left-menu">
<a href="https://www.tutorialspoint.com/index.htm" title="Tutorialspoint">
<img class="tp-logo" alt="tutorialspoint" src="/sql_certificate/images/logo.png">
</a>
<div class="mui-dropdown">
<a class="mui-btn mui-btn--primary categories" data-mui-toggle="dropdown"><i class="fa fa-th-large"></i> 
<span>Categories <span class="mui-caret"></span></span></a>            
<ul class="mui-dropdown__menu cat-menu">
<li>
<ul>
<li><a href="/academic_tutorials.htm"><i class="fa fa-caret-right"></i> Academic Tutorials</a></li>
<li><a href="/big_data_tutorials.htm"><i class="fa fa-caret-right"></i> Big Data &amp; Analytics </a></li>
<li><a href="/computer_programming_tutorials.htm"><i class="fa fa-caret-right"></i> Computer Programming </a></li>
<li><a href="/computer_science_tutorials.htm"><i class="fa fa-caret-right"></i> Computer Science </a></li>
<li><a href="/database_tutorials.htm"><i class="fa fa-caret-right"></i> Databases </a></li>
<li><a href="/devops_tutorials.htm"><i class="fa fa-caret-right"></i> DevOps </a></li>
<li><a href="/digital_marketing_tutorials.htm"><i class="fa fa-caret-right"></i> Digital Marketing </a></li>
<li><a href="/engineering_tutorials.htm"><i class="fa fa-caret-right"></i> Engineering Tutorials </a></li>
<li><a href="/upsc_ias_exams.htm"><i class="fa fa-caret-right"></i> Exams Syllabus </a></li>
<li><a href="/famous_monuments.htm"><i class="fa fa-caret-right"></i> Famous Monuments </a></li>
<li><a href="/gate_exams_tutorials.htm"><i class="fa fa-caret-right"></i> GATE Exams Tutorials</a></li>
<li><a href="/latest_technologies.htm"><i class="fa fa-caret-right"></i> Latest Technologies </a></li>
<li><a href="/machine_learning_tutorials.htm"><i class="fa fa-caret-right"></i> Machine Learning </a></li>
<li><a href="/mainframe_tutorials.htm"><i class="fa fa-caret-right"></i> Mainframe Development </a></li>
<li><a href="/management_tutorials.htm"><i class="fa fa-caret-right"></i> Management Tutorials </a></li>
<li><a href="/maths_tutorials.htm"><i class="fa fa-caret-right"></i> Mathematics Tutorials</a></li>
<li><a href="/microsoft_technologies_tutorials.htm"><i class="fa fa-caret-right"></i> Microsoft Technologies </a></li>
<li><a href="/misc_tutorials.htm"><i class="fa fa-caret-right"></i> Misc tutorials </a></li>
<li><a href="/mobile_development_tutorials.htm"><i class="fa fa-caret-right"></i> Mobile Development </a></li>
<li><a href="/java_technology_tutorials.htm"><i class="fa fa-caret-right"></i> Java Technologies </a></li>
<li><a href="/python_technologies_tutorials.htm"><i class="fa fa-caret-right"></i> Python Technologies </a></li>
<li><a href="/sap_tutorials.htm"><i class="fa fa-caret-right"></i> SAP Tutorials </a></li>
<li><a href="/scripting_lnaguage_tutorials.htm"><i class="fa fa-caret-right"></i>Programming Scripts </a></li>
<li><a href="/selected_reading.htm"><i class="fa fa-caret-right"></i> Selected Reading </a></li>
<li><a href="/software_quality_tutorials.htm"><i class="fa fa-caret-right"></i> Software Quality </a></li>
<li><a href="/soft_skill_tutorials.htm"><i class="fa fa-caret-right"></i> Soft Skills </a></li>
<li><a href="/telecom_tutorials.htm"><i class="fa fa-caret-right"></i> Telecom Tutorials </a></li>
<li><a href="/upsc_ias_exams.htm"><i class="fa fa-caret-right"></i> UPSC IAS Exams </a></li>
<li><a href="/web_development_tutorials.htm"><i class="fa fa-caret-right"></i> Web Development </a></li>
<li><a href="/sports_tutorials.htm"><i class="fa fa-caret-right"></i> Sports Tutorials </a></li>
<li><a href="/xml_technologies_tutorials.htm"><i class="fa fa-caret-right"></i> XML Technologies </a></li>
<li><a href="/multi_language_tutorials.htm"><i class="fa fa-caret-right"></i> Multi-Language Tutorials</a></li>
<li><a href="/questions_and_answers.htm"><i class="fa fa-caret-right"></i> Interview Questions</a></li>
</ul>
</li>
</ul>
<div class="clear"></div>
</div> 
</div>
<div class="right-menu">
<div class="toc-toggle">
<a href="javascript:void(0);"><i class="fa fa-bars"></i></a>
</div>
<div class="mobile-search-btn">
<a href="https://www.tutorialspoint.com/search.htm"><i class="fal fa-search"></i></a>
</div>
<div class="search-box">
<form method="get" class="" name="searchform" action="https://www.google.com/search" target="_blank" novalidate="">
<input type="hidden" name="sitesearch" value="www.tutorialspoint.com" class="user-valid valid">
<input class="header-search-box" type="text" id="search-string" name="q" placeholder="Search your favorite tutorials..." onfocus="if (this.value == 'Search your favorite tutorials...') {this.value = '';}" onblur="if (this.value == '') {this.value = 'Search your favorite tutorials...';}" autocomplete="off">
<button><i class="fal fa-search"></i></button>
</form>
</div>
<div class="menu-btn library-btn">
<a href="https://www.tutorialspoint.com/tutorialslibrary.htm"><i class="fal fa-cubes"></i> <span>Library</span></a>
</div>
<div class="menu-btn videos-btn">
<a href="https://www.tutorialspoint.com/videotutorials/index.htm"><i class="fal fa-video"></i> <span>Videos</span></a> 
</div>
<div class="menu-btn videos-btn">
<a href="https://www.tutorialspoint.com/questions/index.php"><i class="fa fa-location-arrow"></i> <span>Q/A</span></a>
</div>
<div class="menu-btn ebooks-btn">
<a href="https://store.tutorialspoint.com"><i class="fal fa-book"></i> <span>eBooks</span></a>
</div>
<div class="mui-dropdown">
<button class="mui-btn mui-btn--primary" data-mui-toggle="dropdown">
<span class="mui-caret"></span>
</button>
<ul class="mui-dropdown__menu">
<li><a href="https://www.tutorialspoint.com/tutorialslibrary.htm"><i class="fal fa-cubes"></i> <span>Library</span></a></li>
<li><a href="https://www.tutorialspoint.com/videotutorials/index.htm"><i class="fal fa-video"></i> <span>Videos</span></a></li>
<li><a href="https://store.tutorialspoint.com"><i class="fal fa-book"></i> <span>eBooks</span></a></li>
</ul>
</div>
</div>
</div>
</div>
<!-- Top main-menu Ends Here -->
</header>
<div class="mui-container-fluid content">
<div class="mui-container">
<!-- Tutorial ToC Starts Here -->
<div class="mui-col-md-3 tutorial-toc">
<div class="mini-logo">
<img src="/sql_certificate/images/sql-fundamentals-mini-logo.jpg" alt="SQL Fundamentals Certification" />
</div>
<ul class="toc chapters">
<li class="heading">SQL Certificate Study Material</li>
<li><a target="_top" href="/sql_certificate/index.htm">SQL - Introduction</a></li>
<li><a target="_top" href="/sql_certificate/sql_exams_syllabus.htm">SQL - SQL Exams Syllabus</a></li>
<li><a target="_top" href="/sql_certificate/the_sql_select_statement.htm">SQL - The SQL SELECT Statement</a></li>
<li><a target="_top" href="/sql_certificate/restricting_and_sorting_data.htm">SQL - Restricting and Sorting Data</a></li>
<li><a target="_top" href="/sql_certificate/using_single_row_functions.htm">SQL - Using Single-Row Functions</a></li>
<li><a target="_top" href="/sql_certificate/conversion_functions.htm">SQL - Conversion Functions</a></li>
<li><a target="_top" href="/sql_certificate/conditional_expressions.htm">SQL - Conditional Expressions</a></li>
<li><a target="_top" href="/sql_certificate/using_the_group_functions.htm">SQL - Using the Group Functions</a></li>
<li><a target="_top" href="/sql_certificate/get_data_from_multiple_tables.htm">SQL - Get Data from Multiple Tables</a></li>
<li><a target="_top" href="/sql_certificate/subqueries_to_solve_queries.htm">SQL - Subqueries to Solve Queries</a></li>
<li><a target="_top" href="/sql_certificate/using_the_set_operators.htm">SQL - Using the Set Operators</a></li>
<li><a target="_top" href="/sql_certificate/manipulating_data.htm">SQL - Manipulating Data</a></li>
<li><a target="_top" href="/sql_certificate/using_ddl_statements.htm">SQL - Using DDL Statements</a></li>
<li><a target="_top" href="/sql_certificate/creating_other_schema_objects.htm">SQL - Creating Other Schema Objects</a></li>
</ul>
<ul class="toc chapters">
<li class="heading">SQL Certificate Questions Bank</li>
<li><a target="_top" href="/sql_certificate/the_sql_select_statement_questions.htm">SQL - The SQL SELECT Statement</a></li>
<li><a target="_top" href="/sql_certificate/restricting_and_sorting_data_questions.htm">SQL - Restricting and Sorting Data</a></li>
<li><a target="_top" href="/sql_certificate/using_single_row_functions_questions.htm">SQL - Using Single-Row Functions</a></li>
<li><a target="_top" href="/sql_certificate/conversion_functions_questions.htm">SQL - Conversion Functions</a></li>
<li><a target="_top" href="/sql_certificate/conditional_expressions_questions.htm">SQL - Conditional Expressions</a></li>
<li><a target="_top" href="/sql_certificate/using_the_group_functions_questions.htm">SQL - Using the Group Functions</a></li>
<li><a target="_top" href="/sql_certificate/get_data_from_multiple_tables_questions.htm">SQL - Get Data from Multiple Tables</a></li>
<li><a target="_top" href="/sql_certificate/subqueries_to_solve_queries_questions.htm">SQL - Subqueries to Solve Queries</a></li>
<li><a target="_top" href="/sql_certificate/using_the_set_operators_questions.htm">SQL - Using the Set Operators</a></li>
<li><a target="_top" href="/sql_certificate/manipulating_data_questions.htm">SQL - Manipulating Data</a></li>
<li><a target="_top" href="/sql_certificate/using_ddl_statements_questions.htm">SQL - Using DDL Statements</a></li>
<li><a target="_top" href="/sql_certificate/creating_other_schema_objects_questions.htm">SQL - Creating Other Schema Objects</a></li>
</ul>
<ul class="toc chapters">
<li class="heading">SQL Certificate Mock Exams</li>
<li><a target="_top" href="/sql_certificate/sql_certificate_mock_exams.htm">SQL Certificate - Mock Exams</a></li>
</ul>
<ul class="toc chapters">
<li class="heading">SQL Certificate Useful Resources</li>
<!--<li><a target="_top" href="/sql_certificate/sql_quick_guide.htm">SQL Certificate - Quick Guide</a></li>-->
<li><a target="_top" href="/sql_certificate/sql_useful_resources.htm">SQL Certificate - Useful Resources</a></li>
<li><a target="_top" href="/sql_certificate/sql_discussion.htm">SQL Certificate - Discussion</a></li>
</ul>
<ul class="toc reading">
<li class="sreading">Selected Reading</li>
<li><a target="_top" href="/upsc_ias_exams.htm">UPSC IAS Exams Notes</a></li>
<li><a target="_top" href="/developers_best_practices/index.htm">Developer's Best Practices</a></li>
<li><a target="_top" href="/questions_and_answers.htm">Questions and Answers</a></li>
<li><a target="_top" href="/effective_resume_writing.htm">Effective Resume Writing</a></li>
<li><a target="_top" href="/hr_interview_questions/index.htm">HR Interview Questions</a></li>
<li><a target="_top" href="/computer_glossary.htm">Computer Glossary</a></li>
<li><a target="_top" href="/computer_whoiswho.htm">Who is Who</a></li>
</ul>
</div>
<!-- Tutorial ToC Ends Here -->
<!-- Tutorial Content Starts Here -->
<div class="mui-col-md-6 tutorial-content">
<h1>Subqueries to Solve Queries Questions</h1>
<hr />
<div class="top-ad-heading">Advertisements</div>
<div style="text-align: center;">
<script><!--
google_ad_client = "pub-7133395778201029";
var width = document.getElementsByClassName("tutorial-content")[0].clientWidth - 40;
google_ad_width = width;
google_ad_height = 150;
google_ad_format = width + "x150_as";
google_ad_type = "image";
google_ad_channel = "";
//--></script>
<script src="https://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</div>
<div class="mui-container-fluid button-borders">
<div class="pre-btn">
<a href="/sql_certificate/get_data_from_multiple_tables_questions.htm"><i class="fal fa-chevron-circle-left"></i> Previous Page</a>
</div>
<div class="nxt-btn">
<a href="/sql_certificate/using_the_set_operators_questions.htm">Next Page <i class="fal fa-chevron-circle-right"></i>&nbsp;</a>
</div>
</div>
<div class="clearer"></div>
<p><b>1.	Which of the following are the types of sub-queries?</b></p>
<ol type="A" class="list">
<li>Ordered sub-queries</li>
<li>Grouped sub-queries</li>
<li>Single row sub-queries</li>
<li>None of the above</li>
</ol>
<p><b>Answer: C. </b>A subquery is a complete query nested in the SELECT,FROM, HAVING, or WHERE clause of another query.The subquery must be enclosed in parentheses and have a SELECT and a FROM clause, at a minimum. Single row sub-queries and multi-row sub-queries are the main types of sub-queries</p>
<p><b>2.Which of the following is true about sub-queries?</b></p>
<ol type="A" class="list">
<li>They execute after the main query executes</li>
<li>They execute in parallel to the main query</li>
<li>The user can execute the main query and then, if wanted, execute the sub-query</li>
<li>They execute before the main query executes. </li>
</ol>
<p><b>Answer: D. </b>The sub-query always executes before the execution of the main query.Subqueries are completed first.The result of the subquery is used as input for the outer query.</p>
<p><b>3.Which of the following is true about the result of a sub-query?</b></p>
<ol type="A" class="list">
<li>The result of a sub-query is generally ignored when executed.</li>
<li>The result of a sub-query doesn't give a result, it is just helpful in speeding up the main query execution</li>
<li>The result of a sub-query is used by the main query. </li>
<li>The result of a sub-query is always NULL</li>
</ol>
<p><b>Answer: C. </b> Subqueries are completed first.The result of the subquery is used as input for the outer query.</p>
<p><b>4.Which of the following clause is mandatorily used in a sub-query?</b></p>
<ol type="A" class="list">
<li>SELECT</li>
<li>WHERE</li>
<li>ORDER BY</li>
<li>GROUP BY</li>
</ol>
<p><b>Answer: A. </b>A sub-query is just like any other query which has to start with a SELECT clause. They are contained within an outer query.</p>
<p><b>5.	Which of the following is a method for writing a sub-query in a main query?</b></p>
<ol type="A" class="list">
<li>By using JOINS</li>
<li>By using WHERE clause</li>
<li>By using the GROUP BY clause</li>
<li>By writing a SELECT statement embedded in the clause of another SELECT statement</li>
</ol>
<p><b>Answer: D. </b>A subquery is a complete query nested in the SELECT, FROM, HAVING, or WHERE clause of another query.The subquery must be enclosed in parentheses and have a SELECT and a FROM clause, at a minimum.</p>
<p><b>6.In the given scenarios, which one would appropriately justify the usage of sub-query?</b></p>
<ol type="A" class="list">
<li>When we need to sum up values</li>
<li>When we need to convert character values into date or number values</li>
<li>When we need to select rows from a table with a condition that depends on the data from the same or different table. </li>
<li>None of the above</li>
</ol>
<p><b>Answer: C. </b></p>
<p><b>7.In which of the following clauses can a sub-query be used?</b></p>
<ol type="A" class="list">
<li>HAVING</li>
<li>WHERE</li>
<li>FROM </li>
<li>All of the above</li>
</ol>
<p><b>Answer: D. </b>A sub-query is not different from a normal query. It can make use of all the primary clauses of a SELECT statement.</p>
<p><b>8.Which of the following single-row operators can be used for writing a sub-query?</b></p>
<ol type="A" class="list">
<li> &#62;&#61; </li>
<li> &#60; </li>
<li> &#61; </li> 
<li>All of the above</li>
</ol>
<p><b>Answer: D. </b>Single-row operators include &#61;, &#62;, &#60;, &#62;&#61;, &#60;&#61;, and &#60;&#62;.</p>
<p><b>9.Which of the following multi-row operators can be used with a sub-query?</b></p>
<ol type="A" class="list">
<li>IN</li>
<li>ANY</li>
<li>ALL</li>
<li>All of the above</li>
</ol>
<p><b>Answer: D. </b>Multiple-row subqueries return more than one row of results.Operators that can be used with multiple-row subqueries include IN, ALL, ANY, and EXISTS.</p>
<p><b>10.What is true about the output obtained from a sub-query?</b></p>
<ol type="A" class="list">
<li>It remains in the buffer cache</li>
<li>It remains inside the sub-query and can be used later when needed</li>
<li>It is used to complete the outer (main) query</li>
<li>Both A and C</li>
</ol>
<p><b>Answer: C. </b>Subqueries are completed first.The result of the subquery is used as input for the outer query.</p>
<p><b>11.You need to find the salaries for all the employees who have a higher salary than the Vice President of a company 'ABC'.Which of the following queries will give you the required result? (Consider the table structure as given)</b></p>
<pre class="prettyprint notranslate">SQL> DESC employees
 Name			 Null?	  Type
 ----------------------- -------- ----------------
 EMPLOYEE_ID		 NOT NULL NUMBER(6)
 FIRST_NAME			  VARCHAR2(20)
 LAST_NAME		 NOT NULL VARCHAR2(25)
 EMAIL			 NOT NULL VARCHAR2(25)
 PHONE_NUMBER			  VARCHAR2(20)
 HIRE_DATE		 NOT NULL DATE
 JOB_ID 		 NOT NULL VARCHAR2(10)
 SALARY 			  NUMBER(8,2)
 COMMISSION_PCT 		  NUMBER(2,2)
 MANAGER_ID			  NUMBER(6)
 DEPARTMENT_ID			  NUMBER(4)</pre>
<ol type="A" class="list">
<li><pre class="prettyprint notranslate"> SELECT first_name, last_name, salary
FROM employees 
WHERE salary > (SELECT salary
FROM employees 
WHERE job_id = 'VICE-PRESIDENT'); </pre></li>
<li><pre class="prettyprint notranslate">SELECT first_name, last_name, salary
FROM employees 
WHERE salary = (SELECT salary
FROM employees 
WHERE job_id = 'VICE-PRESIDENT'); </pre></li>
<li><pre class="prettyprint notranslate">SELECT first_name, last_name, salary
FROM employees 
WHERE job_id = 'VICE-PRESIDENT'); </pre></li>
<li>None of the above</li>
</ol>
<p><b>Answer: A. </b>In the option 'A', the inner sub-query gives the VP's salary as a result to the outer query. </p>
<p><b>12.What among the following is true about sub-queries?</b></p>
<ol type="A" class="list">
<li>Sub-queries can be written on either side of a comparison operator</li>
<li>Parenthesis is not mandatory for sub-queries</li>
<li>Single-row sub-queries can use multi-row operators but vice versa is not possible</li>
<li>All of the above</li>
</ol>
<p><b>Answer: A. </b>Sub queries can be placed on left or right hand side of the comparison operator depending on the query indentation and usability.</p>
<p><b>13.	What will be the outcome of the following query? (Consider the given table structure)</b></p>
<pre class="prettyprint notranslate">SQL> DESC employees
 Name			 Null?	  Type
 ----------------------- -------- ----------------
 EMPLOYEE_ID		 NOT NULL NUMBER(6)
 FIRST_NAME			  VARCHAR2(20)
 LAST_NAME		 NOT NULL VARCHAR2(25)
 EMAIL			 NOT NULL VARCHAR2(25)
 PHONE_NUMBER			  VARCHAR2(20)
 HIRE_DATE		 NOT NULL DATE
 JOB_ID 		 NOT NULL VARCHAR2(10)
 SALARY 			  NUMBER(8,2)
 COMMISSION_PCT 		  NUMBER(2,2)
 MANAGER_ID			  NUMBER(6)
 DEPARTMENT_ID			  NUMBER(4)</pre>
<pre class="prettyprint notranslate">SELECT first_name, last_name, salary
FROM employees
WHERE salary ANY (SELECT salary FROM employees); </pre> 
<ol type="A" class="list">
<li>It executes successfully giving the desired results</li>
<li>It executes successfully but does not give the desired results</li>
<li>It throws an ORA error</li>
<li>It executes successfully and gives two values for each row obtained in the result set</li>
</ol>
<p><b>Answer: C. </b>Multi-row operators cannot be used in single-row sub-queries and vice versa.</p>
<p><b>14.Which of the following is true about single-row sub-queries?</b></p>
<ol type="A" class="list">
<li>They give one result from the main query</li>
<li>They give only one row in the result set</li>
<li>They return only one row from the inner SELECT statement</li>
<li>They give multiple rows from the main (outer) query</li>
</ol>
<p><b>Answer: C. </b>A single-row subquery can return a maximum of one value.</p>
<p><b>15.What is true about multi-row sub-queries?</b></p>
<ol type="A" class="list">
<li>They can return more than one column as the result of the inner query</li>
<li>They return multiple rows in the main query but only a single result set in the inner query</li>
<li>They return single row in the main query but multiple rows in the inner sub-query</li>
<li>They return more than one row from the inner SELECT statement</li>
</ol>
<p><b>Answer: D. </b>Multi-column sub-queries return more than one column in their result set, multi-row sub-queries return more than one row from the inner query.</p>
<p><b>16.What among the following is true about single-row sub-queries?</b></p>
<ol type="A" class="list">
<li>They return only one row</li>
<li>They use single-row operators</li>
<li>Both A and B</li>
<li>None of the above</li>
</ol>
<p><b>Answer: C. </b></p>
<p><b>17.Which of the following operators cannot be used in a sub-query?</b></p>
<ol type="A" class="list">
<li>AND</li>
<li> &#60; </li>
<li> &#62; </li>
<li> &#60;&#62; </li>
</ol>
<p><b>Answer: A. </b>Single-row operators include &#61;, &#62;, &#60;, &#62;&#61;, &#60;&#61;, and &#60;&#62;. Multi-row operators that can be used with multiple-row subqueries include IN, ALL, ANY, and EXISTS.
</p>
<p><b>Examine the exhibit and answer the questions 18 to 21 that follow. </b></p>
<img src="/sql_certificate/images/employees.jpg" alt="Table EMPLOYEES"/>
<img src="/sql_certificate/images/departments.jpg" alt="Table DEPARTMENTS"/>
<p><b>18.You need to find out the names of all employees who belong to the same department as the employee 'Jessica Butcher' who is in department 100 and has an employee ID 40. Which of the following queries will be correct?</b></p>
<ol type="A" class="list">
<li><pre class="prettyprint notranslate">SELECT first_name, last_name
FROM employees
WHERE last_name = 'Butcher'
And first_name = 'Jessica'; </pre></li>
<li><pre class="prettyprint notranslate">SELECT first_name, last_name
FROM employees
WHERE department =100; </pre></li>
<li><pre class="prettyprint notranslate">SELECT first_name, last_name
FROM employees
WHERE department  = (SELECT department
FROM employees
WHERE first_name = 'Jessica'
AND last_name = 'Butcher'); </pre></li>
<li><pre class="prettyprint notranslate">SELECT first_name, last_name
FROM employees
WHERE department  = (SELECT department
FROM employees
WHERE first_name = 'Jessica'
AND last_name = 'Butcher'
AND department = 100
AND employee_id = 40); </pre></li>
</ol>
<p><b>Answer: D. </b>'D' is more appropriate than 'C' because it filters on employee id which is unique and ensures that the sub-query will return single row only. 'C' can fail if there are more than one employee with the same first and last name.
</p>
<p><b>19.You need to find out the employees which belong to the department of 'Jessica Butcher' and have salary greater than the salary of 'Jessica Butcher' who has an employee ID of 40. Which of the following queries will work?</b></p>
<ol type="A" class="list">
<li><pre class="prettyprint notranslate">SELECT first_name, last_name
FROM employees
WHERE last_name = 'Butcher'
AND first_name = 'Jessica'
AND salary > 10000; </pre></li>
<li><pre class="prettyprint notranslate">SELECT first_name, last_name
FROM employees
WHERE department = 100; </pre></li>
<li><pre class="prettyprint notranslate">SELECT first_name, last_name
FROM employees
WHERE department = (SELECT department
			FROM employees
			WHERE first_name = 'Jessica'
			AND last_name = 'Butcher'
			AND employee_id = 40)
AND salary > (SELECT salary
			 FROM employees
			 WHERE first_name = 'Jessica'
			 AND last_name = 'Butcher'
			 AND employee_id = 40); </pre></li>
<li><pre class="prettyprint notranslate">SELECT first_name, last_name
FROM employees
WHERE department  = (SELECT department
			FROM employees
			WHERE first_name = 'Jessica'
			AND last_name = 'Butcher'
			AND department = 100); </pre></li>
</ol>
<p><b>Answer: C. </b>More than one sub-query can be written in one SQL statement to add more than one condition. </p>
<p><b>20.Based on the answers for questions 18th and 19th, what type of sub-queries is used by them?</b></p>
<ol type="A" class="list">
<li>Single row sub-query</li>
<li>Multiple row sub-query</li>
<li>Both A and B</li>
<li>Inline sub-query</li>
</ol>
<p><b>Answer: A. </b>The questions 18th and 19th given above demonstrate the usage sub-queries in a SELECT statement.</p>
<p><b>21.Consider two statements about outer and inner queries in context of SQL sub-queries?</b></p>
<p>i.  The inner queries can get data from only one table</p>
<p>ii. The inner queries can get data from more than one table</p>
<p>Which of the above statements are true?</p>
<ol type="A" class="list">
<li>(i) </li>
<li>(ii)</li>
<li>Both (i) and (ii)</li>
<li>Neither (i) nor (ii)</li>
</ol>
<p><b>Answer: B. </b>Sub-queries can fetch data from more than one table.</p>
<p><b>Examine the table structure as follows and answer the questions 22 to 27 that follow:</b></p>
<pre class="prettyprint notranslate">SQL> DESC employees
 Name			 Null?	  Type
 ----------------------- -------- ----------------
 EMPLOYEE_ID		 NOT NULL NUMBER(6)
 FIRST_NAME			  VARCHAR2(20)
 LAST_NAME		 NOT NULL VARCHAR2(25)
 EMAIL			 NOT NULL VARCHAR2(25)
 PHONE_NUMBER			  VARCHAR2(20)
 HIRE_DATE		 NOT NULL DATE
 JOB_ID 		 NOT NULL VARCHAR2(10)
 SALARY 			  NUMBER(8,2)
 COMMISSION_PCT 		  NUMBER(2,2)
 MANAGER_ID			  NUMBER(6)
 DEPARTMENT_ID			  NUMBER(4)</pre>
<p><b>22.What will be the outcome of the following query? (Choose the most appropriate answer) </b></p>
<pre class="prettyprint notranslate">SQL> DESC employees
 Name			 Null?	  Type
 ----------------------- -------- ----------------
 EMPLOYEE_ID		 NOT NULL NUMBER(6)
 FIRST_NAME			  VARCHAR2(20)
 LAST_NAME		 NOT NULL VARCHAR2(25)
 EMAIL			 NOT NULL VARCHAR2(25)
 PHONE_NUMBER			  VARCHAR2(20)
 HIRE_DATE		 NOT NULL DATE
 JOB_ID 		 NOT NULL VARCHAR2(10)
 SALARY 			  NUMBER(8,2)
 COMMISSION_PCT 		  NUMBER(2,2)
 MANAGER_ID			  NUMBER(6)
 DEPARTMENT_ID			  NUMBER(4)</pre>
<pre class="prettyprint notranslate">SELECT last_name, job_id, salary
FROM employees
WHERE salary = (SELECT max(salary)
FROM employees); </pre>
<ol type="A" class="list">
<li>It executes successfully and gives the employees who have salaries equal to the max salary.</li>
<li>It executes successfully but does not give the required results</li>
<li>It throws an error as a group function is used in the sub-query</li>
<li>It throws an error as a single row sub-query should contain a multi-row operator</li>
</ol>
<p><b>Answer: A. </b>A group function can be used within a sub-query.</p>
<p><b>23.What will be the outcome of the query that follows?</b></p>
<pre class="prettyprint notranslate">SELECT first_name, last_name, min(salary)
FROM employees
GROUP BY department_id 
HAVING MIN(salary) > 
		(SELECT min(salary)
		FROM employees
		WHERE department_id = 100); </pre> 
<ol type="A" class="list">
<li>It executes successfully and gives the names and minimum salary greater than department 100 of all employees </li>
<li>It executes successfully and gives the salaries of the employees in department 100 </li>
<li>It executes successfully and gives the names and minimum salaries of all the employees. </li>
<li>It throws an error. </li>
</ol>
<p><b>Answer: A. </b>HAVING clause can be used in sub-queries as shown</p>
<p><b>24.You need to find the job which has a maximum average salary.Which of the following queries will give you the required results?</b></p>
<ol type="A" class="list">
<li><pre class="prettyprint notranslate">SELECT job_id, avg(salary)
FROM employees
GROUP BY job_id; </pre> 
</li>
<li><pre class="prettyprint notranslate">SELECT job_id, avg(salary)
FROM employees
GROUP BY job_id
HAVING job_id in (SELECT max(avg(salary) FROM employees); </pre> 
</li>
<li><pre class="prettyprint notranslate">SELECT job_id, avg(salary)
FROM employees
GROUP BY job_id
HAVING max(avg(salary) in (SELECT max(avg(salary) FROM employees); </pre> 
</li>
<li><pre class="prettyprint notranslate">SELECT job_id, avg(salary)
FROM employees
GROUP BY job_id
HAVING avg(salary) in (SELECT max(avg(salary) FROM employees GROUP BY job_id); </pre> 
</li>
</ol>
<p><b>Answer: D. </b>Sub-queries can make use of group functions and HAVING clause to restrict the groups. </p>
<p><b>25.The following query throws an error. Choose the correct reason for the error as given in the options. </b></p>
<pre class="prettyprint notranslate">SELECT first_name, last_name
FROM employees
WHERE commission_pct  = (SELECT min(commission_pct )
          FROM employees
          GROUP BY department_id); </pre> 
<ol type="A" class="list">
<li>The GROUP BY clause is not required in the sub-query</li>
<li>A function cannot be used in a sub-query SELECT statement</li>
<li>The single row sub-query gives multiple records</li>
<li>The use of "=" operator is invalid; an IN operator will work correctly </li>
</ol>
<p><b>Answer: C, D. </b>The GROUP BY clause gives the minimum commission_pct  for each department and hence multiple results are fetched to the main query giving an error. </p>
<p><b>26.Consider the query given below.How many records will be returned as a result of the above query? (Assuming the no employee with job id XX exists in the company)</b></p>
<pre class="prettyprint notranslate">SELECT first_name, last_name
FROM employees
WHERE salary = (SELECT salary
		FROM employees
		WHERE job_id = 'XX');
</pre>
<ol type="A" class="list">
<li>1</li>
<li>NULL</li>
<li>0</li>
<li>The query raises ORA error because sub-query is invalid.</li>
</ol>
<p><b>Answer: C. </b>Since there is no employee with job_id "XX" in the company, the sub-query returns no result, which when equated to job_id in the main query gives a 0. </p>
<p><b>27.What happens if the WHERE condition in the query given in question 26 is replaced with a new one (WHERE job_id IS NOT NULL)? (Assume the number of records in 'employees' table is 14).</b></p>
<ol type="A" class="list">
<li>1</li>
<li>14</li>
<li>0</li>
<li>ORA error</li>
</ol>
<p><b>Answer:  D. </b>The query execution raises the exception "ORA-01427: single-row subquery returns more than one row".</p>
<p><b>28.Which of the following are valid multi row operators used for sub-queries?</b></p>
<ol type="A" class="list">
<li> &#60;&#61; </li>
<li> ANY &#62;&#61; </li>
<li> != </li>
<li> >= </li>
</ol>
<p><b>Answer: B. </b>Multiple-row subqueries return more than one row of results.Operators that can be used with multiple-row subqueries include IN, ALL, ANY, and EXISTS.The multi row operators IN, ANY, ALL must be used with single row operators as shown in the option B.</p>
<p><b>Examine the table structure as given. Consider the query given below and answer the questions 29 to 33 that follow</b></p>
<pre class="prettyprint notranslate">SQL> DESC employees
 Name			 Null?	  Type
 ----------------------- -------- ----------------
 EMPLOYEE_ID		 NOT NULL NUMBER(6)
 FIRST_NAME			  VARCHAR2(20)
 LAST_NAME		 NOT NULL VARCHAR2(25)
 EMAIL			 NOT NULL VARCHAR2(25)
 PHONE_NUMBER			  VARCHAR2(20)
 HIRE_DATE		 NOT NULL DATE
 JOB_ID 		 NOT NULL VARCHAR2(10)
 SALARY 			  NUMBER(8,2)
 COMMISSION_PCT 		  NUMBER(2,2)
 MANAGER_ID			  NUMBER(6)
 DEPARTMENT_ID			  NUMBER(4)</pre>
<pre class="prettyprint notranslate">SELECT first_name, last_name, salary, commission_pct 
FROM employees 
WHERE salary &#60; ANY  (SELECT salary
		FROM employees
		WHERE department_id  = 100)
AND department_id  &#60;&#62; 101; </pre>
<p><b>29.What does the ANY operator evaluates to in the above query?</b></p>
<ol type="A" class="list">
<li>TRUE</li>
<li>FALSE</li>
<li>NULL</li>
<li>0</li>
</ol>
<p><b>Answer: A. </b>The multi row operators return Boolean results. As there are results of salary in the department 100, it returns TRUE. If there are 0 results, it evaluates to FALSE.</p>
<p><b>30.What will be the outcome of the query if we assume that the department 100 has only one employee?</b></p>
<ol type="A" class="list">
<li>It executes successfully giving the one result</li>
<li>It executes successfully giving salaries of all the employees</li>
<li>NULL</li>
<li>It throws an ORA error</li>
</ol>
<p><b>Answer: D. </b>If the department 100 has one result (single row sub-query), the &#60; ANY operator gives the error as it is a multi-row operator.</p>
<p><b>31.What will be the outcome of the query given above if the &#60; ANY operator is replaced with &#61; ANY operator?
</b></p>
<ol type="A" class="list">
<li>Oracle will treat each value of the salary returned from the sub-query as it does with IN operator</li>
<li>There will be no difference in the results</li>
<li>The results will differ </li>
<li>The execution will thrown an ORA error</li>
</ol>
<p><b>Answer: A. </b> = ANY operator is equivalent to IN operator.</p>
<p><b>32.What can be said about the &#60; ANY operator in the query given above?</b></p>
<ol type="A" class="list">
<li>It gives the maximum value of salary</li>
<li>It gives the minimum value of salary</li>
<li>It means it gives the values that are lesser than the highest</li>
<li>None of the above</li>
</ol>
<p><b>Answer: C. </b>The multi row operator &#60; ANY evaluates to the statements "Less than the maximum" of the subquery. '&#62; ALL' More than the highest value returned by the subquery. '&#60; ALL' Less than the lowest value returned by the subquery. '&#60; ANY' Less than the highest value returned by the subquery. '&#60; ANY' More than the lowest value returned by the subquery. '= ANY' Equal to any value returned by the subquery (same as IN). '[NOT] EXISTS' Row must match a value in the subquery</p>
&#60;
<p><b>33.Assume that the &#60; ANY operator is replaced with the &#62; ANY. What is true about this operator?</b></p>
<ol type="A" class="list">
<li>It gives the maximum salary</li>
<li>It finds only the maximum salary from the sub-query</li>
<li>It gives more than the minimum salary</li>
<li>It gives the minimum salary</li>
</ol>
<p><b>Answer: C. </b>The multi row operator &#62; ANY evaluates to the statements "Greater than the minimum" of the subquery. '&#62; ALL' More than the highest value returned by the subquery. '&#60; ALL' Less than the lowest value returned by the subquery. '&#60; ANY' Less than the highest value returned by the subquery. '&#62; ANY' More than the lowest value returned by the subquery. '= ANY' Equal to any value returned by the subquery (same as IN). '[NOT] EXISTS' Row must match a value in the subquery
</p>
&#60;
<p><b>34. Examine the given table structure and consider the following query:</b></p>
<pre class="prettyprint notranslate">SQL> DESC employees
 Name			 Null?	  Type
 ----------------------- -------- ----------------
 EMPLOYEE_ID		 NOT NULL NUMBER(6)
 FIRST_NAME			  VARCHAR2(20)
 LAST_NAME		 NOT NULL VARCHAR2(25)
 EMAIL			 NOT NULL VARCHAR2(25)
 PHONE_NUMBER			  VARCHAR2(20)
 HIRE_DATE		 NOT NULL DATE
 JOB_ID 		 NOT NULL VARCHAR2(10)
 SALARY 			  NUMBER(8,2)
 COMMISSION_PCT 		  NUMBER(2,2)
 MANAGER_ID			  NUMBER(6)
 DEPARTMENT_ID			  NUMBER(4)</pre>
<pre class="prettyprint notranslate">SELECT employee_id, first_name, last_name
FROM employees
WHERE salary IN (SELECT max(salary)
		FROM employees
		GROUP BY department_id ); 
</pre>
<p>Which WHERE clause among the following is equivalent to that given in the above query? (Assume that the salaries are 2500, 3000, 3500,4000)</p>
<ol type="A" class="list">
<li><pre class="prettyprint notranslate">WHERE salary &#60; ANY (SELECT max(salary)
			FROM employees
			GROUP BY department_id ); </pre></li>
<li><pre class="prettyprint notranslate">WHERE salary &#60; ALL (SELECT max(salary)
			FROM employees
			GROUP BY department_id ); </pre></li>
<li><pre class="prettyprint notranslate">WHERE salary = (SELECT max(salary)
			FROM employees
			GROUP BY department_id ); </pre></li>
<li><pre class="prettyprint notranslate">WHERE salary IN (2500,3000,3500,4000); </pre></li>
</ol>
<p><b>Answer: D. </b>When the IN operator is used, Oracle treats individual results of the sub-query as shown in the option D. 
</p>
<p><b>Examine the structure of the EMPLOYEES table as given below and answer the questions 35 to 37 that follow.</b></p>
<pre class="prettyprint notranslate">SQL> DESC employees
 Name			 Null?	  Type
 ----------------------- -------- ----------------
 EMPLOYEE_ID		 NOT NULL NUMBER(6)
 FIRST_NAME			  VARCHAR2(20)
 LAST_NAME		 NOT NULL VARCHAR2(25)
 EMAIL			 NOT NULL VARCHAR2(25)
 PHONE_NUMBER			  VARCHAR2(20)
 HIRE_DATE		 NOT NULL DATE
 JOB_ID 		 NOT NULL VARCHAR2(10)
 SALARY 			  NUMBER(8,2)
 COMMISSION_PCT 		  NUMBER(2,2)
 MANAGER_ID			  NUMBER(6)
 DEPARTMENT_ID			  NUMBER(4)</pre>
&#60;
<p><b>35.	You need to find out which of the employees have a salary less than that of the salary for the job ID 'FIN_ACT'. Which of the following queries will give you the required output?</b></p>
<ol type="A" class="list">
<li><pre class="prettyprint notranslate">SELECT employee_id, first_name, last_name
FROM employees
WHERE salary &#60; ALL 
		(SELECT salary
		 FROM employees
		 WHERE job_id = 'FIN_ACT')
		 AND job_id &#60;&#62; 'FIN_ACT'; </pre></li>
<li><pre class="prettyprint notranslate">SELECT employee_id, first_name, last_name
FROM employees
WHERE salary > ALL 
		(SELECT salary
		FROM employees
		WHERE job_id = 'FIN_ACT')
		AND job_id &#60;&#62; 'FIN_ACT'; </pre></li>
<li><pre class="prettyprint notranslate">SELECT employee_id, first_name, last_name
FROM employees
WHERE salary &#60; ANY 
		(SELECT salary
		FROM employees
		WHERE job_id = 'FIN_ACT')
		AND job_id &#60;&#62; 'FIN_ACT'; </pre></li>
<li><pre class="prettyprint notranslate">SELECT employee_id, first_name, last_name
FROM employees
WHERE salary = 	(SELECT salary
		FROM employees
		WHERE job_id = 'FIN_ACT')
		AND job_id &#60;&#62; 'FIN_ACT'; </pre></li>
</ol>
<p><b>Answer: A. </b> &#60; ALL means less than the minimum. '&#62; ALL' More than the highest value returned by the subquery. '&#60; ALL' Less than the lowest value returned by the subquery. '&#60; ANY' Less than the highest value returned by the subquery. '&#62; ANY' More than the lowest value returned by the subquery. '= ANY' Equal to any value returned by the subquery (same as IN). '[NOT] EXISTS' Row must match a value in the subquery</p>
<p><b>36.What will be the outcome of the above query (the option A in the question above), if the &#60; ALL is replaced with the >ALL?
</b></p>
<ol type="A" class="list">
<li>It will execute successfully giving the same result.</li>
<li>It will throw an ORA error</li>
<li>It will execute successfully but give the employees' details who have salaries lesser than all the employees with job_id 'FI_ACCOUNTANT'. </li>
<li>None of the above</li>
</ol>
<p><b>Answer: C. </b> >ALL means less than the minimum. '&#62; ALL' More than the highest value returned by the subquery. '&#60; ALL' Less than the lowest value returned by the subquery. '&#60; ANY' Less than the highest value returned by the subquery. '&#62; ANY' More than the lowest value returned by the subquery. '= ANY' Equal to any value returned by the subquery (same as IN). '[NOT] EXISTS' Row must match a value in the subquery</p>
<p><b>37.You need to find the salaries for all employees who are not in the department 100. Which of the following queries will give you the required result?</b></p>
<ol type="A" class="list">
<li>
<pre class="prettyprint notranslate">SELECT employee_id, first_name, last_name
FROM employees
WHERE salary !=ALL 
		(SELECT salary
		FROM employees
		WHERE department_id  = 100)
		AND department_id  &#60;&#62; 100; </pre></li>
<li><pre class="prettyprint notranslate">SELECT employee_id, first_name, last_name
FROM employees
WHERE salary NOT IN 
		(SELECT salary
		FROM employees
		WHERE department_id  = 100)
		AND department_id  &#60;&#62; 100; </pre></li>
<li><pre class="prettyprint notranslate">SELECT employee_id, first_name, last_name
FROM employees
WHERE salary NOT ALL 
		(SELECT salary
		FROM employees
		WHERE department_id  = 100)
		AND department_id  &#60;&#62; 100; </pre></li>
<li><pre class="prettyprint notranslate">SELECT employee_id, first_name, last_name
FROM employees
WHERE salary != (SELECT salary
		FROM employees
		WHERE department_id  = 100)
		AND department_id  &#60;&#62; 100; </pre></li>
</ol>
<p><b>Answer: C. </b> NOT can be used with the multi row operators IN, ANY and ALL.</p>
<p>Examine the table structure as given. Consider the following query and answer the questions 38 and 39 that follow. You need to find the employees who do not have a sub-ordinate reporting to them. (Assume there are 0 expected results) </p>
<pre class="prettyprint notranslate">SQL> DESC employees
 Name			 Null?	  Type
 ----------------------- -------- ----------------
 EMPLOYEE_ID		 NOT NULL NUMBER(6)
 FIRST_NAME			  VARCHAR2(20)
 LAST_NAME		 NOT NULL VARCHAR2(25)
 EMAIL			 NOT NULL VARCHAR2(25)
 PHONE_NUMBER			  VARCHAR2(20)
 HIRE_DATE		 NOT NULL DATE
 JOB_ID 		 NOT NULL VARCHAR2(10)
 SALARY 			  NUMBER(8,2)
 COMMISSION_PCT 		  NUMBER(2,2)
 MANAGER_ID			  NUMBER(6)
 DEPARTMENT_ID			  NUMBER(4)</pre>
<pre class="prettyprint notranslate">SELECT first_name, last_name 
FROM employees
WHERE employee_id NOT IN 
		(SELECT manager_id
		FROM employees); </pre> 
<p><b>38.What will be the result of the query given above?</b></p>
<ol type="A" class="list">
<li>10</li>
<li>NULL</li>
<li>ORA error</li><li>0
</li>
</ol>
<p><b>Answer: D. </b>One of the values in the inner sub-query is NULL (all employees are not managers!)</p>
<p><b>39.Which of the following WHERE clauses should be added / modified to the above query to give the expected results?</b></p>
<ol type="A" class="list">
<li><pre class="prettyprint notranslate">WHERE employee_id != (SELECT manager_id FROM employees); </pre></li>
<li><pre class="prettyprint notranslate">WHERE employee_id IN (SELECT manager_id FROM employees);  </pre></li>
<li><pre class="prettyprint notranslate">WHERE employee_id &#60;&#62;ALL (SELECT manager_id FROM employees); </pre></li>
<li><pre class="prettyprint notranslate">WHERE employee_id NOT IN (SELECT manager_id
			FROM employees
			WHERE manager_id is NOT NULL); </pre></li>
</ol>
<p><b>Answer: B, D. </b>If the sub-query is likely to have NULL values, do not use the NOT IN operator or if using, modify the sub-query with an additional WHERE clause (option D)</p>
<p><b>40.What is true about sub-queries in general?</b></p>
<ol type="A" class="list">
<li>Sub-queries have to be executed separately from the main queries</li>
<li>Sub-queries can be executed at the will of the user, they are not related to the main query execution</li>
<li>Sub-queries are equal to two sequential queries where the results of inner query are used by the main query </li>
<li>All of the above </li>
</ol>
<p><b>Answer: C. </b></p>
<p><b>41.	Which of the following is true about sub-queries?</b></p>
<ol type="A" class="list">
<li>A sub-query can return 0 or more rows</li>
<li>A sub-query can be used only in the SELECT clause</li>
<li>Nesting of sub-queries is limited to 2 levels</li>
<li>Group functions cannot be used in sub-queries</li>
</ol>
<p><b>Answer: A. </b>A subquery is a complete query nested in the SELECT, FROM, HAVING, or WHERE clause of another query. The subquery must be enclosed in parentheses and have a SELECT and a FROM clause, at a minimum. A single-row subquery can return a maximum of one value. Multiple-column subqueries return more than one column to the outer query.</p>
<p><b>42.	Examine the table structure as given.</b></p>
<pre class="prettyprint notranslate">SQL> DESC employees
 Name			 Null?	  Type
 ----------------------- -------- ----------------
 EMPLOYEE_ID		 NOT NULL NUMBER(6)
 FIRST_NAME			  VARCHAR2(20)
 LAST_NAME		 NOT NULL VARCHAR2(25)
 EMAIL			 NOT NULL VARCHAR2(25)
 PHONE_NUMBER			  VARCHAR2(20)
 HIRE_DATE		 NOT NULL DATE
 JOB_ID 		 NOT NULL VARCHAR2(10)
 SALARY 			  NUMBER(8,2)
 COMMISSION_PCT 		  NUMBER(2,2)
 MANAGER_ID			  NUMBER(6)
 DEPARTMENT_ID			  NUMBER(4)</pre>
<p>Consider the following query.</p>
<pre class="prettyprint notranslate">SELECT first_name, last_name 
FROM employees
WHERE employee_id NOT IN 
		(SELECT manager_id, hire_date
		FROM employees 
		WHERE manager_id is not null); </pre> 
<p>This query returns an error. What is the reason for error?</p>
<ol type="A" class="list">
<li>The NOT IN operator used is invalid</li>
<li>The WHERE clause in the sub-query is incorrectly written</li>
<li>The column in the sub-query SELECT clause should only be one when there's an inequality used in the main query</li>
<li>The sub-query uses the same table as the main query</li>
</ol>
<p><b>Answer: C. </b>The columns selected in the sub-query should be same as on the other side of comparison operator. Any inequality of data type or number of columns would result in an ORA error.</p>
<p><b>43.A report has to be extracted which displays all the departments that have one or more employees assigned to them. Which of the following queries will give the required output? (Consider the table structure as given)</b></p>
<pre class="prettyprint notranslate">SQL> DESC employees
 Name			 Null?	  Type
 ----------------------- -------- ----------------
 EMPLOYEE_ID		 NOT NULL NUMBER(6)
 FIRST_NAME			  VARCHAR2(20)
 LAST_NAME		 NOT NULL VARCHAR2(25)
 EMAIL			 NOT NULL VARCHAR2(25)
 PHONE_NUMBER			  VARCHAR2(20)
 HIRE_DATE		 NOT NULL DATE
 JOB_ID 		 NOT NULL VARCHAR2(10)
 SALARY 			  NUMBER(8,2)
 COMMISSION_PCT 		  NUMBER(2,2)
 MANAGER_ID			  NUMBER(6)
 DEPARTMENT_ID			  NUMBER(4)</pre>
<ol type="A" class="list">
<li><pre class="prettyprint notranslate">SELECT department_name
FROM employees
WHERE department_id  IN (SELECT distinct (department_id )
			FROM employees); </pre></li>
<li><pre class="prettyprint notranslate">SELECT department_name
FROM employees
WHERE department_id  ANY (SELECT distinct (department_id )
			FROM employees); </pre></li>
<li><pre class="prettyprint notranslate">SELECT department_name
FROM employees
WHERE department_id  &#60; ANY (SELECT distinct (department_id )
			FROM employees); </pre></li>
<li><pre class="prettyprint notranslate">SELECT department_name
FROM employees
WHERE department_id  = ANY (SELECT distinct (department_id )
			FROM employees); </pre></li>
</ol>
<p><b>Answer: A, D. </b></p>
<p><b>44.What is the maximum level of sub-queries allowed in Oracle in a single SQL statement?</b></p>
<ol type="A" class="list">
<li>20</li>
<li>50</li>
<li>Unlimited</li>
<li>255 </li>
</ol>
<p><b>Answer: D. </b>Oracle supports the Nesting of queries to 255 levels.</p>
<p><b>45.	What should be the best practice to follow when we know what values we need to pass on to the main query in Oracle queries?</b></p>
<ol type="A" class="list">
<li>Using GROUP BY</li>
<li>Using sub-queries</li>
<li>Using HAVING</li>
<li>None of the above</li>
</ol>
<p>
<b>Answer: D. </b>It might become possible that the sub-queries give a NULL result, which results in 0 rows in the main result; hence it is a good practice to use them only if we know what values we need.</p>
<p><b>Examine the table structure as given. Consider the following query and answer the questions 46 and 47 that follow:
</b></p>
<pre class="prettyprint notranslate">SQL> DESC employees
 Name			 Null?	  Type
 ----------------------- -------- ----------------
 EMPLOYEE_ID		 NOT NULL NUMBER(6)
 FIRST_NAME			  VARCHAR2(20)
 LAST_NAME		 NOT NULL VARCHAR2(25)
 EMAIL			 NOT NULL VARCHAR2(25)
 PHONE_NUMBER			  VARCHAR2(20)
 HIRE_DATE		 NOT NULL DATE
 JOB_ID 		 NOT NULL VARCHAR2(10)
 SALARY 			  NUMBER(8,2)
 COMMISSION_PCT 		  NUMBER(2,2)
 MANAGER_ID			  NUMBER(6)
 DEPARTMENT_ID			  NUMBER(4)</pre>
<pre class="prettyprint notranslate">SELECT employee_id, first_name, last_name, job_id
FROM employees
WHERE job_id = (SELECT job_id FROM employees); </pre> 
<p><b>46.You need to find all the employees whose job ID is the same as that of an employee with ID as 210. Which of the following WHERE clauses would you add / modify to achieve this result? (Consider the table structure as given</b></p>
<ol type="A" class="list">
<li><pre class="prettyprint notranslate">WHERE job_id = (SELECT job_id FROM employees WHERE employee_id = 210); </pre></li>
<li><pre class="prettyprint notranslate">WHERE job_id IN (SELECT job_id FROM employees WHERE employee_id = 210); </pre></li>
<li><pre class="prettyprint notranslate">WHERE job_id > (SELECT job_id FROM employees WHERE employee_id = 210); </pre></li>
<li><pre class="prettyprint notranslate">WHERE job_id >= (SELECT job_id FROM employees WHERE employee_id = 210); </pre></li>
</ol>
<p><b>Answer: A. </b></p>
<p><b>47.Assume that you change the WHERE clause as given in the option A in question 46 as the following.</b></p>
<pre class="prettyprint notranslate">WHERE job_id = (SELECT job_id FROM employees WHERE employee_id &#60; 210); </pre>
<p>What will be the outcome of this change?</p>
<ol type="A" class="list">
<li>The results will be the same</li>
<li>ORA error thrown on execution</li>
<li>The results will differ</li>
<li>The query will execute successfully giving 0 rows. </li>
</ol>
<p><b>Answer: B. </b>The sub-query gives more than one result on the given change and hence a multi row operator should replace the "=" in the main query given above.</p>
<p><b>48.Examine the table structures as shown in the exhibit below.</b></p>
<img src="/sql_certificate/images/employees.jpg" alt="Table EMPLOYEES"/>
<img src="/sql_certificate/images/grade.jpg" alt="Table GRADE"/>
<p>You need to display the names of the employees who have the highest salary. Which of the following SQL statements will be correct?</p>
<ol type="A" class="list">
<li><pre class="prettyprint notranslate">SELECT first_name, last_name, grade
FROM employees, grade
WHERE (SELECT max (salary) FROM employees) BETWEEN losal and hisal; </pre></li>
<li><pre class="prettyprint notranslate">SELECT first_name, last_name, grade
FROM employees, grade
WHERE (SELECT max (salary) FROM employees) BETWEEN losal and hisal
AND salary BETWEEN losal and hisal; </pre></li>
<li><pre class="prettyprint notranslate">SELECT first_name, last_name, grade
FROM employees, grade
WHERE salary = (SELECT max (salary) FROM employees) 
AND salary BETWEEN losal and hisal; </pre></li>
<li><pre class="prettyprint notranslate">SELECT first_name, last_name, grade
FROM employees, grade
WHERE salary IN (SELECT max (salary) FROM employees) 
AND max(salary) BETWEEN losal and hisal; </pre></li>
</ol>
<p><b>Answer: B, C. </b>The sub-queries can be written on either side of the operator</p>
<p><b>49.What is the sub-query in the FROM clause of an SQL statement? (Choose the most appropriate answer)</b></p>
<ol type="A" class="list">
<li>Single row sub-query</li>
<li>Multi row sub-query</li>
<li>Inline View</li>
<li>Co-related sub-query</li>
</ol>
<p><b>Answer: C. </b>If a sub-query appears in the FROM clause of the SELECT statements,it forms an Inline view. Oracle internally creates a temporary view for the query execution.</p>
<p><b>50.What is the maximum number of nesting level allowed in an Inline View type sub-query?</b></p>
<ol type="A" class="list">
<li>255 </li>
<li>300 </li>
<li>216 </li>
<li>Unlimited </li>
</ol>
<p><b>Answer: D. </b>As there is no limit on the number of tables which can be joined, there is no limit on the number of inline view in a query.</p>
<p><b> 51.What is true about co-related sub-queries?</b></p>
<ol type="A" class="list">
<li>The tables used in the main query are also used in a co-related sub-query</li>
<li>The sub-queries which reference a column used in the main query are called co-related sub-queries</li>
<li>The sub-queries which are written without parenthesis are called co-related sub-queries</li>
<li>The sub-queries which mandatorily use different tables than those used in the main query are called co-related sub-queries</li>
</ol>
<p><b>Answer: B. </b>Correlated subquery references a column in the outer query and executes the subquery once for every row in the outer query while Uncorrelated subquery executes the subquery first and passes the value to the outer query.</p>
<p><b>52.Which of the following statements cannot be parent statements for a sub-query?</b></p>
<ol type="A" class="list">
<li>SELECT</li>
<li>GROUP BY</li>
<li>UPDATE</li>
<li>DELETE</li>
</ol>
<p><b>Answer: B. </b>The rest of the options can be in the main query (parent query) of a sub-query.</p>
<p><b>53.What is true about a co-related sub-query?</b></p>
<ol type="A" class="list">
<li>It is evaluated only once for the parent query</li>
<li>It is evaluated only thrice for the parent query</li>
<li>It is evaluated once for each row processed by the parent sub-query</li>
<li>All of the above</li>
</ol>
<p><b>Answer: C. </b>Correlated subquery references a column in the outer query and executes the subquery once for every row in the outer query;and the EXISTS operator is used to test whether the relationship or link is present.</p>
<p><b>54.Examine the given table structure. You need to write a query which returns the names of the employees whose salaries exceed their respective department's average salary. Which of the following will work? (Choose the most appropriate answer)</b></p>
<pre class="prettyprint notranslate">SQL> DESC employees
 Name			 Null?	  Type
 ----------------------- -------- ----------------
 EMPLOYEE_ID		 NOT NULL NUMBER(6)
 FIRST_NAME			  VARCHAR2(20)
 LAST_NAME		 NOT NULL VARCHAR2(25)
 EMAIL			 NOT NULL VARCHAR2(25)
 PHONE_NUMBER			  VARCHAR2(20)
 HIRE_DATE		 NOT NULL DATE
 JOB_ID 		 NOT NULL VARCHAR2(10)
 SALARY 			  NUMBER(8,2)
 COMMISSION_PCT 		  NUMBER(2,2)
 MANAGER_ID			  NUMBER(6)
 DEPARTMENT_ID			  NUMBER(4)</pre>
<ol type="A" class="list">
<li><pre class="prettyprint notranslate">SELECT employee_id, first_name, last_name
FROM employees e
WHERE salary > (SELECT avg (salary)
		FROM employees
		WHERE e.department_id  = department_id )
		ORDER BY department_id ; </pre></li>
<li><pre class="prettyprint notranslate">SELECT employee_id, first_name, last_name
FROM employees e
WHERE salary > ANY (SELECT avg(salary)
		FROM employees
		WHERE e.department_id  = department_id )
		ORDER BY department_id ; </pre></li>
<li><pre class="prettyprint notranslate">SELECT employee_id, first_name, last_name
FROM employees e
WHERE salary = (SELECT avg(salary)
		FROM employees
		WHERE e.department_id  = department_id )
		ORDER BY department_id ; </pre></li>
<li><pre class="prettyprint notranslate">SELECT employee_id, first_name, last_name
FROM employees e
WHERE salary &#60; ANY  (SELECT avg(salary)
		FROM employees
		WHERE e.department_id  = department_id )
		ORDER BY department_id ; </pre></li>
</ol>
<p><b>Answer: A. </b>Here the department ID is obtained, used to evaluate the parent query and if the salary in that row is greater than the average salary of the departments of that row, that result is returned.</p>
<p><b> 55.Examine the given table structure. Which of the following queries will display duplicate records in a table EMPLOYEES?</b></p>
<pre class="prettyprint notranslate">SQL> DESC employees
 Name			 Null?	  Type
 ----------------------- -------- ----------------
 EMPLOYEE_ID		 NOT NULL NUMBER(6)
 FIRST_NAME			  VARCHAR2(20)
 LAST_NAME		 NOT NULL VARCHAR2(25)
 EMAIL			 NOT NULL VARCHAR2(25)
 PHONE_NUMBER			  VARCHAR2(20)
 HIRE_DATE		 NOT NULL DATE
 JOB_ID 		 NOT NULL VARCHAR2(10)
 SALARY 			  NUMBER(8,2)
 COMMISSION_PCT 		  NUMBER(2,2)
 MANAGER_ID			  NUMBER(6)
 DEPARTMENT_ID			  NUMBER(4)</pre>
<ol type="A" class="list">
<li><pre class="prettyprint notranslate">SELECT *
FROM employees E
WHERE exists (SELECT 1 FROM employees E1
		WHERE E.employee_id = E1.employee_id); </pre></li>
<li><pre class="prettyprint notranslate">SELECT *
FROM employees E
WHERE exists (SELECT 1 FROM employees E1
		WHERE E.employee_id = E1.employee_id
		AND E.ROWID &#60; E1.ROWID); </pre></li>
<li><pre class="prettyprint notranslate">SELECT *
FROM employees E
WHERE exists (SELECT 1 FROM employees E1
		WHERE E.ROWID &#60; E1.ROWID); </pre></li>
<li><pre class="prettyprint notranslate">SELECT *
FROM employees E
WHERE = ANY (SELECT 1 FROM employees E1
		WHERE E.employee_id = E1.employee_id
		And E.ROWID &#60; E1.ROWID); </pre></li>
</ol>
<p><b>Answer: A. </b>Correlated subquery references a column in the outer query and executes the subquery once for every row in the outer query;and the EXISTS operator is used to test whether the relationship or link is present. It can be used to find the duplicate rows in a table where duplicity is subjected to a column or set of columns.</p>
<p><b>Examine the structures for the tables DEPARTMENTS and EMPLOYEES and answer the questions 56 and 57 that follow. 
</b></p>
<pre class="prettyprint notranslate">SQL> DESC employees
 Name			 Null?	  Type
 ----------------------- -------- ----------------
 EMPLOYEE_ID		 NOT NULL NUMBER(6)
 FIRST_NAME			  VARCHAR2(20)
 LAST_NAME		 NOT NULL VARCHAR2(25)
 EMAIL			 NOT NULL VARCHAR2(25)
 PHONE_NUMBER			  VARCHAR2(20)
 HIRE_DATE		 NOT NULL DATE
 JOB_ID 		 NOT NULL VARCHAR2(10)
 SALARY 			  NUMBER(8,2)
 COMMISSION_PCT 		  NUMBER(2,2)
 MANAGER_ID			  NUMBER(6)
 DEPARTMENT_ID			  NUMBER(4)</pre>
<pre class="prettyprint notranslate">SQL> DESC departments
 Name			 Null?	  Type
 ----------------------- -------- ----------------
 DEPARTMENT_ID		 NOT NULL NUMBER(4)
 DEPARTMENT_NAME	 NOT NULL VARCHAR2(30)
 MANAGER_ID			  NUMBER(6)
 LOCATION_ID			  NUMBER(4)</pre>
<p><b>56.Which of the following queries will display the system date and count of records in the DEPARTMENTS and EMPLOYEES table?</b></p>
<ol type="A" class="list">
<li><pre class="prettyprint notranslate">SELECT sysdate,
		(SELECT * FROM departments) dept_count,
		(SELECT * FROM employees) emp_count
FROM DUAL; </pre></li>
<li><pre class="prettyprint notranslate">SELECT sysdate,
		(SELECT count(*) FROM departments) dept_count,
		(SELECT count(*) FROM employees) emp_count
FROM DUAL
GROUP BY department_id ; </pre></li>
<li><pre class="prettyprint notranslate">SELECT sysdate,
		(SELECT * FROM departments) dept_count,
		(SELECT * FROM employees) emp_count
FROM DUAL
GROUP BY employee_id; </pre></li>
<li><pre class="prettyprint notranslate">SELECT sysdate,
		(SELECT count(*) FROM departments) dept_count,
		(SELECT count(*) FROM employees) emp_count
FROM DUAL; </pre></li>
</ol>
<p><b>Answer: D. </b>A single-row subquery can also be nested in the outer query's SELECT clause. In this case, the value the subquery returns is available for every row of output the outer query generates. Typically, this technique is used to perform calculations with a value produced from a subquery.</p>
<p><b>57.Which of the following queries will tell whether a given employee is a manager in a Company 'XYZ'?</b></p>
<ol type="A" class="list">
<li><pre class="prettyprint notranslate">SELECT employee_id, manager_id
FROM employees A
WHERE employee_id ANY (SELECT manager_id from employees B)
ORDER BY manager_id desc; </pre></li>
<li><pre class="prettyprint notranslate">SELECT employee_id, manager_id
FROM employees A
WHERE employee_id &#60; ALL (SELECT manager_id from employees B)</pre></li>
<li><pre class="prettyprint notranslate">SELECT employee_id, manager_id
FROM employees A
WHERE employee_id IN (SELECT manager_id from employees B)
ORDER BY manager_id desc; </pre></li>
<li><pre class="prettyprint notranslate">SELECT employee_id, manager_id
FROM employees A
WHERE employee_id in (SELECT manager_id from employees B)
GROUP BY department_id ; </pre></li>
</ol>
<p><b>Answer: C. </b></p>
<p><b>
Examine the exhibit and answer the question 58 that follows:
</b></p>
<img src="/sql_certificate/images/employees.jpg" alt="Table EMPLOYEES"/>
<img src="/sql_certificate/images/departments.jpg" alt="Table DEPARTMENTS"/>
<img src="/sql_certificate/images/locations.jpg" alt="Table LOCATIONS"/>
<p><b>58.Which of the following queries will give you maximum salary of an employee in a particular city?</b></p>
<ol type="A" class="list">
<li><pre class="prettyprint notranslate">SELECT max (salary), city
FROM
(SELECT salary, department_id , loc, city
FROM employees natural join departments natural join locations); </pre></li>
<li><pre class="prettyprint notranslate">SELECT salary, city
FROM
(SELECT salary, department_id , loc, city
FROM employees natural join departments natural join locations); </pre></li>
<li><pre class="prettyprint notranslate">SELECT max (salary), city
FROM
(SELECT salary, department_id , loc, city
FROM employees natural join departments natural join locations)
GROUP BY city; </pre></li>
<li><pre class="prettyprint notranslate">SELECT max (avg(salary)), city
FROM
(SELECT salary, department_id , loc, city
FROM employees natural join departments natural join locations); </pre></li>
</ol>
<p><b>Answer: C. </b>When a multiple-column subquery is used in the outer query's FROM clause, it creates a temporary table that can be referenced by other clauses of the outer query. This temporary table is more formally called an inline view. The subquery's results are treated like any other table in the FROM clause. If the temporary table contains grouped data, the grouped subsets are treated as separate rows of data in a table.</p>
<p><b>Examine the table structures as given below.</b></p>
<pre class="prettyprint notranslate">SQL> DESC employees
 Name			 Null?	  Type
 ----------------------- -------- ----------------
 EMPLOYEE_ID		 NOT NULL NUMBER(6)
 FIRST_NAME			  VARCHAR2(20)
 LAST_NAME		 NOT NULL VARCHAR2(25)
 EMAIL			 NOT NULL VARCHAR2(25)
 PHONE_NUMBER			  VARCHAR2(20)
 HIRE_DATE		 NOT NULL DATE
 JOB_ID 		 NOT NULL VARCHAR2(10)
 SALARY 			  NUMBER(8,2)
 COMMISSION_PCT 		  NUMBER(2,2)
 MANAGER_ID			  NUMBER(6)
 DEPARTMENT_ID			  NUMBER(4)</pre>
<pre class="prettyprint notranslate">SQL> DESC departments
 Name			 Null?	  Type
 ----------------------- -------- ----------------
 DEPARTMENT_ID		 NOT NULL NUMBER(4)
 DEPARTMENT_NAME	 NOT NULL VARCHAR2(30)
 MANAGER_ID			  NUMBER(6)
 LOCATION_ID			  NUMBER(4)</pre>
<p>Consider the following query and answer the questions that 59 to 62 that follow.</p>
<pre class="prettyprint notranslate">SELECT  department_name
FROM departments d INNER JOIN employees e
ON (d.employee_id = e.employee_id)
GROUP BY department_name; </pre>
<p><b> 59.Which of the following queries can replace the above query by using sub-queries giving the same result?</b></p>
<ol type="A" class="list">
<li><pre class="prettyprint notranslate">SELECT department_name
FROM departments
WHERE department_id  = ANY (SELECT department_id  FROM employees); </pre></li>
<li><pre class="prettyprint notranslate">SELECT department_name
FROM departments
WHERE department_id  IN (SELECT distinct(department_id ) FROM employees); </pre></li>
<li><pre class="prettyprint notranslate">SELECT department_name
FROM departments
WHERE department_id  = (SELECT distinct(department_id ) FROM employees); </pre></li>
<li><pre class="prettyprint notranslate">SELECT department_name
FROM departments
WHERE department_id  ANY (SELECT distinct(department_id ) FROM employees); </pre></li>
</ol>
<p><b>Answer: A, B. </b></p>
<p><b> 60.Assume that the sub-query as shown in the query given above is modified to the following.</b></p>
<pre class="prettyprint notranslate">(SELECT distinct (department_id ) FROM employees ORDER BY department_id ); </pre>
<p>What will be the outcome as a result of this change? (Choose the most appropriate answer)</p>
<ol type="A" class="list">
<li>It will order the department_id  fetched from the sub-query and display them in ascending order</li>
<li>It will throw an ORA error as the ORDER BY clause should be accompanied by the GROUP BY clause</li>
<li>It will throw an ORA error because an ORDER BY clause cannot be used inside a sub-query</li>
<li>It will execute successfully.</li>
</ol>
<p><b>Answer: C. </b>A subquery, except one in the FROM clause, can't have an ORDER BY clause.If you need to display output in a specific order, include an ORDER BY clause as the outer query's last clause.</p>
<p><b>61.Assume that the query given above is modified as the below one.</b></p>
<pre class="prettyprint notranslate">SELECT department_name
FROM departments
WHERE department_id  = ANY (SELECT department_id  FROM employees)
ORDER BY department_id  desc; </pre>
<p>What will be the outcome as a result of this change? (Choose the most appropriate answer)</p>
<ol type="A" class="list">
<li>It will order the department_id  fetched from the sub-query and display them in ascending order</li>
<li>It will order the department_id  fetched from the sub-query and display them in descending order</li>
<li>It will throw an ORA error because an ORDER BY clause cannot be used inside a sub-query</li>
<li>None of the above</li>
</ol>
<p><b>Answer: D. </b>A subquery, except one in the FROM clause, can't have an ORDER BY clause.If you need to display output in a specific order, include an ORDER BY clause as the outer query's last clause.</p>
<p><b>62.Which of the following can be used to order results in a sub-query?</b></p>
<ol type="A" class="list">
<li>ORDER BY</li>
<li>HAVING</li>
<li>GROUP BY</li>
<li>All of the above</li>
</ol>
<p><b>Answer: C. </b>By default, the GROUP BY clause performs ordering in a sub-query.</p>
<p><b>Examine the exhibit below and answer the questions 63 to 65 that follow:</b></p>
<img src="/sql_certificate/images/audit.jpg" alt="Table AUDIT"/>
<p>Consider the following query:</p>
<pre class="prettyprint notranslate">SELECT au_id, au_title
FROM audit
WHERE au_details in (SELECT au_details
		  FROM audit
		  WHERE au_title like 'S%')
		  ORDER BY au_title; </pre>
<p><b>63.What will be the outcome of the query given above?</b></p>
<ol type="A" class="list">
<li>It gives all AU_ID and AU_TITLEs starting with the letter 'S%'</li>
<li>It gives all AU_ID and AU_TITLEs starting with the letter 'S%' ordered by the titles in ascending order</li>
<li>It throws an ORA error</li>
<li>It returns a 0 value</li>
</ol>
<p><b>Answer: C. </b>A column with a CLOB, BLOB, NCLOB or an ARRAY cannot be used in a sub-query.</p>
<p><b> 64.	What will be the outcome of the following query?</b></p>
<pre class="prettyprint notranslate">SELECT *
FROM employees
WHERE salary BETWEEN (SELECT max(salary)
			FROM employees
			WHERE department_id  = 100) 
AND (SELECT min(salary) FROM employees where department_id  = 100); </pre>
<p>This query returns an error. What is the reason for the error?</p>
<ol type="A" class="list">
<li>A GROUP BY clause should be used as the function MAX is used</li>
<li>Both the sub-queries cannot use the same department ID in the same outer query</li>
<li>BETWEEN operator cannot be used with a sub-query</li>
<li>SELECT clause should have columns mentioned and not a asterix (*)</li>
</ol>
<p><b>Answer: C. </b>The BETWEEN operator can be used within a sub-query but not with a sub-query.</p>
<p><b>65.What is true about using NOT IN when writing queries with sub-queries in them?</b></p>
<ol type="A" class="list">
<li>NOT IN ignores all the NULL values and gives only the NOT NULL values</li>
<li>NOT IN puts all the NULL values at the last and gives the NOT NULL to be displayed first</li>
<li>NOT IN should be not be used if a NULL value is expected in the result set</li>
<li>NOT IN is just a negation of the operator IN and can be changed without any caveat.</li>
</ol>
<p><b>Answer: C. </b>SQL handles NULL values in a different way and hence it is a good practice to avoid NOT IN if the result set might contain a NULL.</p>
<p><b>Consider the following table structures and answer the questions 66 to 72 that follow:</b></p>
<img src="/sql_certificate/images/employees.jpg" alt="Table EMPLOYEES"/>
<img src="/sql_certificate/images/departments.jpg" alt="Table DEPARTMENTS"/>
<p><b>66.	You need to find out the names and IDs of the departments in which the least salary is greater than the highest salary in the department 10. Which of the following queries will give the required result.</b></p>
<ol type="A" class="list">
<li><pre class="prettyprint notranslate">SELECT department_id , min(salary)
FROM employees
GROUP BY department_id 
HAVING min(salary) >
		(
		select max(salary)
		FROM employees
		where department_id  = 10
		)</pre></li>
<li><pre class="prettyprint notranslate">SELECT department_id , min(salary)
FROM employees
GROUP BY department_id 
HAVING min(salary) > ANY
		(
		select max(salary)
		FROM employees
		)</pre></li>
<li><pre class="prettyprint notranslate">SELECT department_id , min(salary)
FROM employees
HAVING max(salary) &#60; ANY
		(
		select min(salary)
		FROM employees
		where department_id  = 10
		)</pre></li>
<li><pre class="prettyprint notranslate">SELECT department_id , min(salary)
FROM employees
GROUP BY department_id 
HAVING min(salary) &#62; ALL
		(
		select max(salary)
		FROM employees
		where department_id  = 10
		)</pre></li>
</ol>
<p><b>Answer: A. </b></p>
<p><b>67.Write a query to find the employees whose salary is equal to the salary of at least one employee in department of id 10. (Choose the best answer)</b></p>
<ol type="A" class="list">
<li><pre class="prettyprint notranslate">SELECT employee_id, Salary
FROM employees
WHERE salary in
		(
		SELECT salary
		FROM employees
		where department_id  = 10
		)</pre></li>
<li><pre class="prettyprint notranslate">SELECT employee_id, Salary
FROM employees
WHERE salary =ANY
		(
		SELECT salary
		FROM employees
		where department_id  = 10
		)</pre></li>
<li><pre class="prettyprint notranslate">SELECT employee_id, Salary
FROM employees
WHERE salary ALL
		(
		SELECT salary
		FROM employees
		where department_id  = 10
		)</pre></li>
<li><pre class="prettyprint notranslate">SELECT employee_id, Salary
FROM employees
WHERE salary  &#60; ANY
		(
		SELECT salary
		FROM employees
		where department_id  = 10
		)</pre></li>
</ol>
<p><b>Answer: A, B. </b></p>
<p><b>68.You need to find out all the employees who have salary greater than at least one employee in the department 10. Which of the following queries will give you the required output?</b></p>
<ol type="A" class="list">
<li><pre class="prettyprint notranslate">SELECT employee_id, Salary
FROM employees
WHERE salary >= ANY
		(
		SELECT salary
		FROM employees
		where department_id  = 10
		)</pre></li>
<li><pre class="prettyprint notranslate">SELECT employee_id, Salary
FROM employees
WHERE salary > ANY
		(
		SELECT salary
		FROM employees
		where department_id  = 10
		)</pre></li>
<li><pre class="prettyprint notranslate">SELECT employee_id, Salary
FROM employees
WHERE salary &#60; ANY
		(
		SELECT salary
		FROM employees
		where department_id  = 10
		)</pre></li>
<li><pre class="prettyprint notranslate">SELECT employee_id, Salary
FROM employees
WHERE salary = ALL
		(
		SELECT salary
		FROM employees
		where department_id  = 10
		)</pre></li>
</ol>
<p><b>Answer: B. </b></p>
<p><b>69.You need to find out all the employees who have salary lesser than the salary of all the employees in the department 10. Which of the following queries will give you the required output?</b></p>
<ol type="A" class="list">
<li><pre class="prettyprint notranslate">SELECT employee_id, Salary
FROM employees
WHERE salary > ALL
		(
		SELECT salary
		FROM employees
		where department_id  = 10
		)</pre></li>
<li><pre class="prettyprint notranslate">SELECT employee_id, Salary
FROM employees
WHERE salary =ALL
		(
		SELECT salary
		FROM employees
		where department_id  = 10
		)</pre></li>
<li><pre class="prettyprint notranslate">SELECT employee_id, Salary
FROM employees
WHERE salary &#60; ALL
		(
		SELECT salary
		FROM employees
		where department_id  = 10
		)</pre></li>
<li><pre class="prettyprint notranslate">SELECT employee_id, Salary
FROM employees
WHERE salary &#60; ANY
		(
		SELECT salary
		FROM employees
		where department_id  = 10
		)</pre></li>
</ol>
<p><b>Answer: C. </b>Multiple-row subqueries return more than one row of results. Operators that can be used with multiple-row subqueries include IN, ALL, ANY, and EXISTS.Multiple-column subqueries return more than one column to the outer query. The columns of data are passed to the outer query in the same order in which they're listed in the subquery's SELECT clause.</p>
<p><b>70.You need to find out all the employees who have their manager and department matching with the employee having an Employee ID of 121 or 200. Which of the following queries will give you the required output?</b></p>
<ol type="A" class="list">
<li><pre class="prettyprint notranslate">SELECT employee_id, manager_id,department_id 
FROM employees
WHERE (manager_id,department_id ) = ANY
		(
		select manager_id,
		department_id 
		FROM employees
		where employee_id in (121,200)
		)</pre></li>
<li><pre class="prettyprint notranslate">SELECT employee_id, manager_id,department_id 
FROM employees
WHERE (manager_id,department_id ) &#60; ANY
		(
		select manager_id,
		department_id 
		FROM employees
		where employee_id in (121,200)
		)</pre></li>
<li><pre class="prettyprint notranslate">SELECT employee_id, manager_id,department_id 
FROM employees
WHERE (manager_id,department_id ) &#62; ANY
		(
		select manager_id,
		department_id 
		FROM employees
		where employee_id in (121,200)
		)</pre></li>
<li><pre class="prettyprint notranslate">SELECT employee_id, manager_id,department_id 
FROM employees
WHERE (manager_id,department_id ) in
		(
		select manager_id,
		department_id 
		FROM employees
		where employee_id in (121,200)
		)</pre></li>
</ol>
<p><b>Answer: A, D. </b>Multiple-row subqueries return more than one row of results. Operators that can be used with multiple-row subqueries include IN, ALL, ANY, and EXISTS. Multiple-column subqueries return more than one column to the outer query. The columns of data are passed to the outer query in the same order in which they're listed in the subquery's SELECT clause.</p>
<p><b>71.You need to find the department name of an employee with employee ID 200. Which of the following queries will be correct? (Choose the most appropriate answer)</b></p>
<ol type="A" class="list">
<li><pre class="prettyprint notranslate">SELECT employee_id, first_name, last_name,department_id ,
(SELECT department_name
FROM departments d, employees E
WHERE d.department_id  = e.department_id 
And employee_id = 200
)
FROM employees e</pre></li>
<li><pre class="prettyprint notranslate">SELECT employee_id, first_name, last_name,department_id ,
(SELECT department_ID
FROM departments d
WHERE d.department_id  = department_id 
)
FROM employees e
WHERE employee_id = 200; </pre></li>
<li><pre class="prettyprint notranslate">SELECT employee_id, first_name, last_name,department_id ,
(SELECT department_name
FROM departments d
WHERE d.department_id  = e.department_id 
And employee_id = 200
)
FROM employees e</pre></li>
<li><pre class="prettyprint notranslate">SELECT employee_id, first_name, last_name,department_id ,
(SELECT department_name
FROM departments d,employee E 
WHERE d.department_id  = e.department_id 
)
FROM employees e</pre></li>
</ol>
<p><b>Answer: C. </b></p>
<p><b>72.You need to find the highest earning employee with the job ID as 'SA_REP'. Which of the following queries will be correct? (Choose the most appropriate answer)</b></p>
<ol type="A" class="list">
<li><pre class="prettyprint notranslate">SELECT job_id, employee_id, Salary
FROM employees e
WHERE job_id  =
(
SELECT  distinct salary
FROM employees E1
WHERE E.job_id  = E1.job_id 
AND E.salary &#60;&#61;  E1.salary
AND job_id  = 'SA_REP' 
</pre></li>
<li><pre class="prettyprint notranslate">SELECT department_id , employee_id, Salary
FROM employees E
WHERE 1 =
(
SELECT  count(distinct salary)
FROM employees E1
WHERE E.job_id  = E1.job_id 
AND E.salary &#60;&#61;  E1.salary
AND job_id  = 'SA_REP'
)</pre></li>
<li><pre class="prettyprint notranslate">SELECT department_id , employee_id, Salary
FROM employees E
WHERE 0 =
(
SELECT  count(distinct salary)
FROM employees E1
WHERE E.job_id  = E1.job_id 
AND E.salary =  E1.salary
AND job_id  = 'SA_REP'
)</pre></li>
<li><pre class="prettyprint notranslate">SELECT department_id , employee_id, Salary
FROM employees E
WHERE 1 =
(
SELECT salary
FROM employees E1
WHERE E.job_id  &#60; E1.job_id 
AND E.salary &#60;&#61;  E1.salary
AND job_id  = 'SA_REP'
)</pre></li>
</ol>
<p><b>Answer: B. </b></p>
<p><b>Consider the EMPLOYEES table structure as shown in the exhibit and answer the questions 73 to 77 that follow:
</b></p>
<img src="/sql_certificate/images/employees.jpg" alt="Table EMPLOYEES"/>
<p><b>73.You need to find the job which has at least one employee in it. Which of the following queries will be correct? (Choose the most appropriate answer)</b></p>
<ol type="A" class="list">
<li><pre class="prettyprint notranslate">SELECT employee_id, Job_id
FROM employees E
WHERE exists
(
SELECT 1
FROM employees E1
WHERE E.job_id  = E1.job_id )</pre></li>
<li><pre class="prettyprint notranslate">SELECT employee_id, Job_id 
FROM employees E
WHERE exists
(
SELECT *
FROM employees E1
WHERE E.job_id  = E1.job_id )</pre></li>
<li><pre class="prettyprint notranslate">SELECT employee_id, Job_id 
FROM employees E
WHERE not exists
(
SELECT *
FROM employees E1
WHERE E.job_id  = E1.job_id )</pre></li>
<li><pre class="prettyprint notranslate">SELECT employee_id, Job_id 
FROM employees E
WHERE exists
(
SELECT 1
FROM employees E1
WHERE E.job_id  &#60; E1.job_id )</pre></li>
</ol>
<p><b>Answer: A. </b>The EXISTS operator is used to check and match records between queries. It returns a BOOLEAN value. Correlated subquery references a column in the outer query and executes the subquery once for every row in the outer query;and the EXISTS operator is used to test whether the relationship or link is present. An Uncorrelated subquery executes the subquery first and passes the value to the outer query.</p>
<p><b>74.You need to find the job which has no employees in it. Which of the following queries will be correct? (Choose the most appropriate answer)</b></p>
<ol type="A" class="list">
<li><pre class="prettyprint notranslate">SELECT employee_id, Job_id 
FROM employees E
WHERE exists
(
SELECT *
FROM employees E1
WHERE E.job_id  = E1.job_id )</pre></li>
<li><pre class="prettyprint notranslate">SELECT employee_id, Job_id 
FROM employees E
WHERE not exists
(
SELECT 1
FROM employees E1
WHERE E.job_id  = E1.job_id )</pre></li>
<li><pre class="prettyprint notranslate">SELECT employee_id, Job_id 
FROM employees E
WHERE not exists
(
SELECT *
FROM employees E1
WHERE E.job_id  = E1.job_id )</pre></li>
<li><pre class="prettyprint notranslate">SELECT employee_id, Job_id 
FROM employees E
WHERE exists
(
SELECT 1
FROM employees E1
WHERE E.job_id  &#60; E1.job_id )</pre></li>
</ol>
<p><b>Answer: B. </b>The NOT EXISTS is the negation operator for EXISTS.</p>
<p><b>75.You need to find the 3rd maximum salary from the EMPLOYEES table. Which of the following queries will give you the required results? (Choose the most appropriate answer)</b></p>
<ol type="A" class="list">
<li><pre class="prettyprint notranslate">SELECT * 
FROM employees E
WHERE salary = (SELECT count(distinct salary ) 
		FROM employees 
		WHERE e.salary = salary 
		); </pre></li>
<li><pre class="prettyprint notranslate">SELECT * 
FROM employees E
WHERE 1 = (SELECT count(distinct salary ) 
		FROM employees 
		WHERE e.salary &#60; salary 
		); </pre></li>
<li><pre class="prettyprint notranslate">SELECT * 
FROM employees E
WHERE 2 = (SELECT count(distinct salary ) 
		FROM employees 
		WHERE e.salary >salary 
		); </pre></li>
<li><pre class="prettyprint notranslate">SELECT * 
FROM employees E
WHERE 3 = (SELECT count(distinct salary ) 
		FROM employees 
		WHERE e.salary &#60;= salary 
		); </pre></li>
</ol>
<p><b>Answer: D. </b></p>
<p><b>76.	You need to find the maximum salary by using the user input for getting the value of N. Which of the following queries will give you the required results? (Choose the most appropriate answer)</b></p>
<ol type="A" class="list">
<li><pre class="prettyprint notranslate">SELECT salary FROM 
(
	SELECT rowid as user_sal 
	FROM (SELECT distinct salary  from employees ORDER BY salary  desc)
) 
WHERE user_sal&#61;&#38;N ; </pre></li>
<li><pre class="prettyprint notranslate">SELECT salary FROM 
(	
	SELECT rownum as user_sal
	FROM (SELECT distinct salary  FROM employees   		GROUP BY salary )
) 
WHERE user_sal &#60;&#61; &#38;N ; </pre></li>
<li><pre class="prettyprint notranslate">SELECT salary FROM 
(
	SELECT rownum as user_sal, salary 	FROM (SELECT distinct salary  FROM employees 		 ORDER BY salary  desc)
) 
WHERE user_sal=&#38;N ; </pre></li>
<li><pre class="prettyprint notranslate">SELECT salary FROM 
(
	SELECT max(rownum) as user_sal, salary 	FROM (SELECT distinct salary  FROM employees 		ORDER BY salary  desc)
) 
WHERE user_sal=&#38;N ; </pre></li>
</ol>
<p><b>Answer: C. </b>ROWNUM is a pseudo column used for finding the nth order results.</p>
<p><b>77.What will happen if a value is provided to the &#38;N variable in the above query (option C in question 76) does not match with any row? (Choose the best answer)</b></p>
<ol type="A" class="list">
<li>The statement would throw an ORA error</li>
<li>The statement would return all the rows in the table</li>
<li>The statement would return NULL as the output result.</li>
<li>The statement would return no rows in the result. </li>
</ol>
<p><b>Answer: D. </b></p>
<p><b>78.What is the maximum level up to which Sub-queries can be nested?</b></p>
<ol type="A" class="list">
<li>255</li>
<li>100</li>
<li>2</li>
<li>16</li>
</ol>
<p><b>Answer: A. </b></p>
<p><b>79.What is true about the EXISTS operator in SQL queries with respect to sub-queries?</b></p>
<ol type="A" class="list">
<li>The columns selected in the sub-queries are important</li>
<li>The inner query's should return rows, any result is what is important, not what is SELECTED
</li>
<li>Both A and B</li>
<li>Neither A nor B </li>
</ol>
<p><b>Answer: B. </b></p>
<p><b>80.What is true about the ANY operator used for sub-queries?</b></p>
<ol type="A" class="list">
<li>Returns rows that match all the values in a list/sub-query</li>
<li>Returns rows that match the first 5 values in a list/sub-query</li>
<li>Returns rows that match any value in a list/sub-query</li>
<li>Returns the value 0 when all the rows match in a list/sub-query</li>
</ol>
<p><b>Answer: C. </b></p>
<p><b>81.What is true about the ALL operator used for sub-queries? (Choose the most appropriate answer.)</b></p>
<ol type="A" class="list">
<li>Returns rows that match all the values in a list/sub-query</li>
<li>Returns rows that match only some values in a list/sub-query</li>
<li>Returns rows only if all the values match in a list/sub-query</li>
<li>All of the above</li>
</ol>
<p><b>Answer: C. </b>'&#62; ALL' More than the highest value returned by the subquery. '&#60; ALL' Less than the lowest value returned by the subquery. '&#60; ANY' Less than the highest value returned by the subquery. '&#62; ANY' More than the lowest value returned by the subquery. '= ANY' Equal to any value returned by the subquery (same as IN). '[NOT] EXISTS' Row must match a value in the subquery.</p>
<p><b>82.What is true about using sub-queries in INSERT statements in Oracle?</b></p>
<ol type="A" class="list">
<li>They can be used in the INSERT clause without any restriction</li>
<li>They can be used in the INSERT clause only for Numeric values</li>
<li>The SELECT list of a sub-query should be the same as the column list of the INSERT statement.</li>
<li>None of the above</li>
</ol>
<p><b>Answer: C. </b></p>
<p><b>Examine the table structures as given below and answer the questions 83 to 86 that follow.</b></p>
<pre class="prettyprint notranslate">SQL> DESC employees
 Name			 Null?	  Type
 ----------------------- -------- ----------------
 EMPLOYEE_ID		 NOT NULL NUMBER(6)
 FIRST_NAME			  VARCHAR2(20)
 LAST_NAME		 NOT NULL VARCHAR2(25)
 EMAIL			 NOT NULL VARCHAR2(25)
 PHONE_NUMBER			  VARCHAR2(20)
 HIRE_DATE		 NOT NULL DATE
 JOB_ID 		 NOT NULL VARCHAR2(10)
 SALARY 			  NUMBER(8,2)
 COMMISSION_PCT 		  NUMBER(2,2)
 MANAGER_ID			  NUMBER(6)
 DEPARTMENT_ID			  NUMBER(4)</pre>
<pre class="prettyprint notranslate">SQL> DESC departments
 Name			 Null?	  Type
 ----------------------- -------- ----------------
 DEPARTMENT_ID		 NOT NULL NUMBER(4)
 DEPARTMENT_NAME	 NOT NULL VARCHAR2(30)
 MANAGER_ID			  NUMBER(6)
 LOCATION_ID			  NUMBER(4)</pre>
<p><b>83.You need to find the details of all employees who were hired for the job ID 'SA_REP' in the month of June, 2013. Which of the following queries will give the required results? (Consider the table structure as given)</b></p>
<ol type="A" class="list">
<li><pre class="prettyprint notranslate">SELECT first_name 
FROM employees 
WHERE employee_id  =
(	SELECT employee_id 
	FROM employees 
	WHERE to_char(hiredate, 'MM/YYYY')= '02/1981'
	AND job_id  = 'SA_REP'
); </pre></li>
<li><pre class="prettyprint notranslate">SELECT first_name 
FROM employees 
WHERE employee_id  = ANY
(	SELECT employee_id 
	FROM employees 
	WHERE to_char(hiredate, 'MM/YYYY')= '02/1981'
	AND job_id  = 'SA_REP'
); </pre></li>
<li><pre class="prettyprint notranslate">SELECT first_name 
FROM employees 
WHERE employee_id  ANY
(	SELECT employee_id 
	FROM employees 
	WHERE to_char(hiredate, 'MM/YYYY')= '02/1981'
	AND job_id  = 'SA_REP'
); </pre></li>
<li><pre class="prettyprint notranslate">SELECT first_name 
FROM employees 
WHERE employee_id  exists
(	SELECT employee_id 
	FROM employees 
	WHERE to_char(hiredate, 'MM/YYYY')= '02/1981'
	AND job_id  = 'SA_REP'
); </pre></li>
</ol>
<p><b>Answer: B. </b></p>
<p><b>84.Which of the following statements are equivalent? </b></p>
<ol type="A" class="list">
<li><pre class="prettyprint notranslate">SELECT employee_id , salary
FROM employees 
WHERE salary &#60; ALL (SELECT salary FROM employees WHERE department_id=100); </pre></li>
<li><pre class="prettyprint notranslate">SELECT employee_id , salary
FROM employees WHERE salary &#60; (SELECT min(salary) FROM employees WHERE department_id=100); </pre></li>
<li><pre class="prettyprint notranslate">SELECT employee_id 
FROM employees 
WHERE salary not &#62;&#61; ANY (SELECT salary FROM employees WHERE department_id=100); </pre></li>
<li>None of the above</li>
</ol>
<p><b>Answer: A, B. </b></p>
<p><b>85.Consider the following two queries:</b></p>
<b>Query 1:</b>
<pre class="prettyprint notranslate">SELECT first_name 
FROM employees e join departments d
ON e.department_id  = d.department_id
WHERE department_name='ACCOUNTS'; </pre>
<b>Query 2:</b>
<pre class="prettyprint notranslate">SELECT first_name 
FROM employees  e 
WHERE department_id  = ANY (SELECT department_id 		FROM departments d 
		WHERE department_name='ACCOUNTS'); </pre>
<p>What can be said about the two statements?</p>
<ol type="A" class="list">
<li>Both the queries should generate the same result.</li>
<li>Both the queries will throw an error.</li>
<li>If there are two departments with the same name, both the queries will fail.</li>
<li>Both the queries will run successfully even if there is more than one department named 'ACCOUNTS'. </li>
</ol>
<p><b>Answer: A, D. </b></p>
<p><b> 86.You need to display all the employees who have the highest salary in a department 100. You fire a query as below.</b></p>
<pre class="prettyprint notranslate"> 
SELECT E.first_name, E.last_name , E.salary
FROM employees E
WHERE E.salary > ALL (SELECT E1.salary
      FROM employees E1
      WHERE E.department_id  =E1.department_id 
      AND E.department_id  = 100); </pre>
<p>What will be the outcome of the above query?</p>
<ol type="A" class="list">
<li>It executes successfully and gives the required results</li>
<li>It executes successfully but doesn't give the required output</li>
<li>It throws an ORA error on execution</li>
<li>It executes successfully and gives the required result when >ALL is replaced with >=ALL </li>
</ol>
<p><b>Answer: B, D. </b> >ALL will not give the required result as there may be two employees with the same salary and who are the highest earners in the department 100</p>
<p><b>Consider table structures as shown in the exhibit and answer the questions 87 to 89 that follow:</b></p>
<img src="/sql_certificate/images/employees.jpg" alt="Table EMPLOYEES"/>
<img src="/sql_certificate/images/departments.jpg" alt="Table DEPARTMENTS"/>
<p><b>87.You need to fetch the first names (in a reverse alphabetical order) of all the employees in the department ID = 100 and who have the maximum salary in the JOB ID = 'SA_REP'. Which of the following queries will give the required output? (Choose the most appropriate output)</b></p>
<ol type="A" class="list">
<li><pre class="prettyprint notranslate">SELECT E.first_name, job_id , salary
FROM employees E
WHERE salary =
		(SELECT max(salary)
		FROM employees E1
		WHERE E1.department_id  = 100
		GROUP BY job_id )
AND job_id  = 'SA_REP'
ORDER BY first_name; </pre></li>
<li><pre class="prettyprint notranslate">SELECT E.first_name, job_id , salary
FROM employees E
WHERE salary in
		(SELECT max(salary)
		FROM employees E1
		where E1.department_id  = 100)
ORDER BY first_name; </pre></li>
<li><pre class="prettyprint notranslate">SELECT E.first_name, job_id , salary
FROM employees E
WHERE salary IN
		(SELECT max(salary)
		FROM employees E1
		where job_id  = 'SA_REP'
		GROUP BY job_id )
AND WHERE E.department_id  = 100
ORDER BY first_name desc; </pre></li>
<li><pre class="prettyprint notranslate">SELECT E.first_name, job_id , salary
FROM employees E
WHERE salary IN
		(SELECT max(salary)
		FROM employees E1
		WHERE E1.department_id  = 100
		GROUP BY job_id )
ORDER BY first_name ; </pre></li>
</ol>
<p><b>Answer: C. </b></p>
<p><b> 88.In the queries given above (option C is the correct answer), you need to display all the employees with the JOB ID 'SA_REP' who have the maximum salary in the department 100. Which of the following queries will give the required output?
</b></p>
<ol type="A" class="list">
<li><pre class="prettyprint notranslate">SELECT E.first_name, job_id , salary
FROM employees E
WHERE salary IN
		(SELECT max(salary)
		FROM employees E1
		WHERE E1.department_id  = 100
		GROUP BY job_id )
AND job_id  = 'SA_REP'
ORDER BY first_name; </pre></li>
<li><pre class="prettyprint notranslate">SELECT E.first_name, job_id , salary
FROM employees E
WHERE salary in
		(SELECT max(salary)
		FROM employees E1
		WHERE E1.department_id  = 100)
ORDER BY first_name; </pre></li>
<li><pre class="prettyprint notranslate">SELECT E.first_name, job_id , salary
FROM employees E
WHERE salary in
		(SELECT max(salary)
		FROM employees E1
		WHERE job_id  = 'SA_REP'
		GROUP BY job_id )
And WHERE E.department_id  = 100
ORDER BY first_name desc; </pre></li>
<li><pre class="prettyprint notranslate">SELECT E.first_name, job_id , salary
FROM employees E
WHERE salary in
		(SELECT max(salary)
		FROM employees E1
		WHERE E1.department_id  = 100
		GROUP BY job_id )
ORDER BY first_name ; </pre></li>
</ol>
<p><b>Answer: A. </b></p>
<p><b> 89.Select the query which will give you the maximum salary and maximum comm percentage. The query should also give the maximum comm percentage paid if the highest salaried employee gets the maximum comm percentage.</b></p>
<ol type="A" class="list">
<li><pre class="prettyprint notranslate">SELECT employee_id, max(salary), max(commission_pct )
FROM employees E
GROUP BY salary, commission_pct ; </pre></li>
<li><pre class="prettyprint notranslate">SELECT employee_id, max(salary), max(commission_pct )
FROM employees E
GROUP BY salary; </pre></li>
<li><pre class="prettyprint notranslate">SELECT employee_id, max(salary)
FROM employees E
GROUP BY salary, commission_pct 
HAVING max(commission_pct ) = 100; </pre></li>
<li><pre class="prettyprint notranslate">SELECT employee_id,
(SELECT max(salary) FROM employees) * (SELECT max(commission_pct ) FROM employees)
FROM DUAL; </pre></li>
</ol>
<p><b>Answer: D. </b>A single-row subquery can also be nested in the outer query's SELECT clause. In this case, the value the subquery returns is available for every row of output the outer query generates. Typically, this technique is used to perform calculations with a value produced from a subquery.</p>
<p><b>90.What is true about the sub-queries used in the SELECT clause of an SQL statement?</b></p>
<ol type="A" class="list">
<li>These sub-queries are the same in all aspects as those used in the FROM or WHERE clauses</li>
<li>These sub-queries have to mandatorily be single row sub-queries</li>
<li>We can use multi row operators when writing such sub-queries</li>
<li>None of the above</li>
</ol>
<p><b>Answer: B. </b></p>
<p><b>91.What will be the outcome of the following query? (Consider the table structure as given)</b></p>
<pre class="prettyprint notranslate">SQL> DESC employees
 Name			 Null?	  Type
 ----------------------- -------- ----------------
 EMPLOYEE_ID		 NOT NULL NUMBER(6)
 FIRST_NAME			  VARCHAR2(20)
 LAST_NAME		 NOT NULL VARCHAR2(25)
 EMAIL			 NOT NULL VARCHAR2(25)
 PHONE_NUMBER			  VARCHAR2(20)
 HIRE_DATE		 NOT NULL DATE
 JOB_ID 		 NOT NULL VARCHAR2(10)
 SALARY 			  NUMBER(8,2)
 COMMISSION_PCT 		  NUMBER(2,2)
 MANAGER_ID			  NUMBER(6)
 DEPARTMENT_ID			  NUMBER(4)</pre>
<pre class="prettyprint notranslate">SELECT sysdate,
(SELECT max(salary) FROM employees GROUP BY department_id )
FROM DUAL; </pre>

<ol type="A" class="list">
<li>It gives the system date and the maximum salary for each department</li>
<li>It gives the maximum salary for all the departments</li>
<li>It throws an ORA error</li>
<li>It executes successfully with 0 rows</li>
</ol>
<p><b>Answer: C. </b>A Multi row sub-query cannot be used in the SELECT clause of an SQL statement. Only a single-row subquery can be nested in the outer query's SELECT clause.</p>
<p><b>Examine the given table structure. Consider the following query and answer the questions 92 to 95 that follow:
</b></p>
<pre class="prettyprint notranslate">SQL> DESC employees
 Name			 Null?	  Type
 ----------------------- -------- ----------------
 EMPLOYEE_ID		 NOT NULL NUMBER(6)
 FIRST_NAME			  VARCHAR2(20)
 LAST_NAME		 NOT NULL VARCHAR2(25)
 EMAIL			 NOT NULL VARCHAR2(25)
 PHONE_NUMBER			  VARCHAR2(20)
 HIRE_DATE		 NOT NULL DATE
 JOB_ID 		 NOT NULL VARCHAR2(10)
 SALARY 			  NUMBER(8,2)
 COMMISSION_PCT 		  NUMBER(2,2)
 MANAGER_ID			  NUMBER(6)
 DEPARTMENT_ID			  NUMBER(4)</pre>
<pre class="prettyprint notranslate">SELECT salary
FROM employees
WHERE salary > ALL (10, 20, 30); </pre>
<p><b> 92.Which of the following queries are equivalent to the above query?</b></p>
<ol type="A" class="list">
<li><pre class="prettyprint notranslate">SELECT salary
FROM employees
WHERE salary >10 or salary > 20 and salary >30; </pre></li>
<li><pre class="prettyprint notranslate">SELECT salary
FROM employees
WHERE salary &#60;10 and salary &#60; 20 and salary &#60;30; </pre></li>
<li><pre class="prettyprint notranslate">SELECT salary
FROM employees
WHERE salary &#62;10 and salary &#62; 20 and salary &#62;30; </pre></li>
<li><pre class="prettyprint notranslate">SELECT salary
FROM employees
WHERE salary &#62;10 and salary &#62; 20 or salary &#60; 30; </pre></li>
</ol>
<p><b>Answer: C. </b>The question shows the ALL clause in a simplified manner when it is followed by a list.</p>
<p><b> 93.	If in the above query the list (10,20,30) is replaced by a sub-query, which of the following queries will give the required output for the department number 100?</b></p>
<ol type="A" class="list">
<li><pre class="prettyprint notranslate">SELECT E.salary
FROM employees E
WHERE E.salary > (SELECT  E1.salary
FROM employees E1
WHERE E1.department_id  = 100); </pre></li>
<li><pre class="prettyprint notranslate">SELECT E.salary
FROM employees E
WHERE E.salary >ALL (SELECT  E1.salary
FROM employees E1
WHERE E1.department_id  = 100); </pre></li>
<li><pre class="prettyprint notranslate">SELECT E.salary
FROM employees E
WHERE E.salary = (SELECT  E1.salary
FROM employees E1
WHERE E1.department_id  = 100); </pre></li>
<li><pre class="prettyprint notranslate">SELECT E.salary
FROM employees E
WHERE E.salary >= (SELECT  E1.salary
FROM employees E1
WHERE E1.department_id  = 100); </pre></li>
</ol>
<p><b>Answer: B. </b>The question shows the ALL clause in a simplified manner when it is followed by a sub-query</p>
<p><b>94.With respect to the question 14 above, what among the following will be an equivalent query if ALL has to be replaced with ANY?</b></p>
<ol type="A" class="list">
<li><pre class="prettyprint notranslate">SELECT E.salary
FROM employees E
WHERE NOT EXISTS (E.salary =ANY (SELECT  E1.salary
FROM employees E1
WHERE E1.department_id  = 100); </pre></li>
<li><pre class="prettyprint notranslate">SELECT E.salary
FROM employees E
WHERE E.salary >ANY (SELECT  E1.salary
FROM employees E1
WHERE E1.department_id  = 100); </pre></li>
<li><pre class="prettyprint notranslate">SELECT E.salary
FROM employees E
WHERE E.salary =ANY (SELECT  E1.salary
FROM employees E1
WHERE E1.department_id  = 100); </pre></li>
<li><pre class="prettyprint notranslate">SELECT E.salary
FROM employees E
WHERE NOT ( E.salary &#60;&#61; ANY (SELECT  E1.salary
FROM employees E1
WHERE E1.department_id  = 100)); </pre>
</li>
</ol>
<p><b>Answer: D. </b>The NOT operator used while using '&#60;&#61; ANY' is used for negation of the results returned by the sub-query</p>
<p><b>95.With respect to the question 94, if the operator ANY is not to be used, which of the following queries will be correct?</b></p>
<ol type="A" class="list">
<li><pre class="prettyprint notranslate">SELECT E.salary
FROM employees E
WHERE NOT EXISTS (E.salary = ANY (SELECT  E1.salary
FROM employees E1
WHERE E1.department_id  = 100); </pre></li>
<li><pre class="prettyprint notranslate">SELECT E.salary
FROM employees E
WHERE NOT EXISTS (SELECT  E1.salary
FROM employees E1
WHERE E1.department_id  = 100
And E.salary &#60;&#61; E1.salary); </pre></li>
<li>Either A or B</li>
<li>None of the above</li>
</ol>
<p><b>Answer: B. </b>Correlated subquery references a column in the outer query and executes the subquery once for every row in the outer query;and the EXISTS operator is used to test whether the relationship or link is present. An Uncorrelated subquery executes the subquery first and passes the value to the outer query.</b></p>
<p><b>Examine the given table structures. Consider the following query and answer the questions 96 to 98 that follow:
</b></p>
<pre class="prettyprint notranslate">SQL> DESC employees
 Name			 Null?	  Type
 ----------------------- -------- ----------------
 EMPLOYEE_ID		 NOT NULL NUMBER(6)
 FIRST_NAME			  VARCHAR2(20)
 LAST_NAME		 NOT NULL VARCHAR2(25)
 EMAIL			 NOT NULL VARCHAR2(25)
 PHONE_NUMBER			  VARCHAR2(20)
 HIRE_DATE		 NOT NULL DATE
 JOB_ID 		 NOT NULL VARCHAR2(10)
 SALARY 			  NUMBER(8,2)
 COMMISSION_PCT 		  NUMBER(2,2)
 MANAGER_ID			  NUMBER(6)
 DEPARTMENT_ID			  NUMBER(4)</pre>
<pre class="prettyprint notranslate">SELECT salary
FROM employees
WHERE salary > ANY (10, 20, 30); </pre>
<p><b>96.	Which of the following queries are equivalent to the above query?</b></p>
<ol type="A" class="list">
<li><pre class="prettyprint notranslate">SELECT salary
FROM employees
WHERE salary >10 or salary > 20 and or >30; </pre></li>
<li><pre class="prettyprint notranslate">SELECT salary
FROM employees
WHERE salary &#60;10 and salary &#60; 20 and salary &#60;30; </pre></li>
<li><pre class="prettyprint notranslate">SELECT salary
FROM employees
WHERE salary &#62;10 and salary &#62; 20 or salary &#62;30; </pre></li>
<li><pre class="prettyprint notranslate">SELECT salary
FROM employees
WHERE salary &#62;10 and salary &#62; 20 or salary &#60; 30; </pre></li>
</ol>
<p><b>Answer: A. </b>The question shows the ANY clause in a simplified manner when it is followed by a list.</p>
<p><b> 97.	In the above query, if the list (10, 20, 30) is replaced by a sub-query, which of the following queries will give the required output for the department number 100?</b></p>
<ol type="A" class="list">
<li><pre class="prettyprint notranslate">SELECT E.salary
FROM employees E
WHERE E.salary > (SELECT  E1.salary
FROM employees E1
WHERE E1.department_id  = 100); </pre></li>
<li><pre class="prettyprint notranslate">SELECT E.salary
FROM employees E
WHERE E.salary >ANY (SELECT  E1.salary
FROM employees E1
WHERE E1.department_id  = 100); </pre></li>
<li><pre class="prettyprint notranslate">SELECT E.salary
FROM employees E
WHERE E.salary = (SELECT  E1.salary
FROM employees E1
WHERE E1.department_id  = 100); </pre></li>
<li><pre class="prettyprint notranslate">SELECT E.salary
FROM employees E
WHERE E.salary >= (SELECT  E1.salary
FROM employees E1
WHERE E1.department_id  = 100); </pre></li>
</ol>
<p><b>Answer: B. </b>The question shows the ANY clause in a simplified manner when it is followed by a sub-query</p>
<p><b>98.With respect to the question 97 above, what among the following will be an equivalent query if ANY is removed? </b></p>
<ol type="A" class="list">
<li><pre class="prettyprint notranslate">SELECT E.salary
FROM employees E
WHERE NOT EXISTS (E.salary =ANY (SELECT  E1.salary
FROM employees E1
WHERE E1.department_id  = 100); </pre></li>
<li><pre class="prettyprint notranslate">SELECT E.salary
FROM employees E
WHERE EXISTS (SELECT  E1.salary
FROM employees E1
WHERE E1.department_id  = 100
And E.salary >E1.salary); </pre></li>
<li><pre class="prettyprint notranslate">SELECT E.salary
FROM employees E
WHERE EXISTS (SELECT  E1.salary
FROM employees E1
WHERE E1.department_id  = 100
); </pre></li>
<li><pre class="prettyprint notranslate">SELECT E.salary
FROM employees E
WHERE IN (SELECT  E1.salary
FROM employees E1
WHERE E1.department_id  = 100); </pre></li>
</ol>
<p><b>Answer: B. </b>The EXISTS operator can substitute the ANY operator. Correlated subquery references a column in the outer query and executes the subquery once for every row in the outer query;and the EXISTS operator is used to test whether the relationship or link is present.</p>
<p><b> 99.Examine the given table structure. How many rows will get generated if the sub-query mentioned returns 0 rows?</b></p>
<pre class="prettyprint notranslate">SQL> DESC employees
 Name			 Null?	  Type
 ----------------------- -------- ----------------
 EMPLOYEE_ID		 NOT NULL NUMBER(6)
 FIRST_NAME			  VARCHAR2(20)
 LAST_NAME		 NOT NULL VARCHAR2(25)
 EMAIL			 NOT NULL VARCHAR2(25)
 PHONE_NUMBER			  VARCHAR2(20)
 HIRE_DATE		 NOT NULL DATE
 JOB_ID 		 NOT NULL VARCHAR2(10)
 SALARY 			  NUMBER(8,2)
 COMMISSION_PCT 		  NUMBER(2,2)
 MANAGER_ID			  NUMBER(6)
 DEPARTMENT_ID			  NUMBER(4)</pre>
<pre class="prettyprint notranslate">SELECT E.salary
FROM employees E
WHERE E.salary > ANY ( select E1.salary FROM employees E1 where E1.department_id  = 100); </pre> 
<ol type="A" class="list">
<li>1 row</li>
<li>No rows</li>
<li>Either A or B</li>
<li>None of the above</li>
</ol>
<p><b>Answer: B. </b>If the sub-query returns zero rows, the '> ANY' condition evaluates to FALSE, hence "No rows" are returned.</p>
<p><b>100.  A subquery must be placed in the outer query's HAVING clause if:</b></p>
<ol type="A" class="list">
<li>The inner query needs to reference the value returned to the outer query.</li>
<li>The value returned by the inner query is to be compared to grouped data in the outer query.</li>
<li>The subquery returns more than one value to the outer query.</li>
<li>None of the above. Subqueries can't be used in the outer query's HAVING clause.</li>
</ol>
<p><b>Answer: B. </b>A HAVING clause is used when the group results of a query need to be restricted based on some condition. If a subquery's result must be compared with a group function, you must nest the inner query in the outer query's HAVING clause.</p>
<div class="mui-container-fluid button-borders show">
<div class="pre-btn">
<a href="/sql_certificate/get_data_from_multiple_tables_questions.htm"><i class="fal fa-chevron-circle-left"></i> Previous Page</a>
</div>
<div class="nxt-btn">
<a href="/sql_certificate/using_the_set_operators_questions.htm">Next Page <i class="fal fa-chevron-circle-right"></i>&nbsp;</a>
</div>
</div>
<div class="google-bottom-ads">
<div>Advertisements</div>
<script><!--
var width = 580;
var height = 400;
var format = "580x400_as";
if( window.innerWidth < 468 ){
   width = 300;
   height = 250;
   format = "300x250_as";
}
google_ad_client = "pub-7133395778201029";
google_ad_width = width;
google_ad_height = height;
google_ad_format = format;
google_ad_type = "image";
google_ad_channel ="";
//--></script>
<script src="https://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
<div class="space-bottom"></div>
</div>
</div>
<!-- Tutorial Content Ends Here -->
<!-- Right Column Starts Here -->
<div class="mui-col-md-2 google-right-ads">
<div class="space-top"></div>
<div class="google-right-ad" style="margin: 0px auto !important;margin-top:5px;">
<script><!--
google_ad_client = "pub-2537027957187252";
google_ad_width = 300;
google_ad_height = 250;
google_ad_format = "300x250_as";
google_ad_type = "image";
google_ad_channel ="";
//--></script>
<script src="https://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</div>
<div class="google-right-ad">
<div class="adsbyvli" data-ad-slot="vi_9012177"></div>
<script>(vitag.Init = window.vitag.Init || []).push(function(){viAPItag.display("vi_9012177")})</script>
</div>
<div class="space-bottom"></div>
<div class="google-right-ad">
<div class="adsbyvli" data-ad-slot="vi_9013289"></div>
<script>(vitag.Init = window.vitag.Init || []).push(function(){viAPItag.display("vi_9013289")})</script>
</div>
<div class="space-bottom" style="margin-bottom:15px;"></div>
</div>
<!-- Right Column Ends Here -->
</div>
</div>
<div class="clear"></div>
<footer id="footer">
<div class="mui--text-center">
<div class="mui--text-caption mui--text-light">
<a href="/index.htm" class="logo"><img class="img-responsive" src="/images/logo-black.png" alt="Tutorials Point" title="Tutorials Point"></a>
</div>
<ul class="mui-list--inline mui--text-body2 mui--text-light">
<li><a href="/about/index.htm"><i class="fal fa-globe"></i> About us</a></li>
<li><a href="/about/about_terms_of_use.htm"><i class="fal fa-asterisk"></i> Terms of use</a></li>
<li><a href="/about/about_privacy.htm#cookies"> <i class="fal fa-shield-check"></i> Cookies Policy</a></li>
<li><a href="/about/faq.htm"><i class="fal fa-question-circle"></i> FAQ's</a></li>
<li><a href="/about/about_helping.htm"><i class="fal fa-hands-helping"></i> Helping</a></li>
<li><a href="/about/contact_us.htm"><i class="fal fa-map-marker-alt"></i> Contact</a></li>
</ul>
<div class="mui--text-caption mui--text-light bottom-copyright-text">&copy; Copyright 2019. All Rights Reserved.</div>
</div>
<div id="privacy-banner">
  <div>
    <p>
      We use cookies to provide and improve our services. By using our site, you consent to our Cookies Policy.
      <a id="banner-accept" href="#">Accept</a>
      <a id="banner-learn" href="/about/about_cookies.htm" target="_blank">Learn more</a>
    </p>
  </div>
</div>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-232293-17"></script>
<script>
window.dataLayer = window.dataLayer || [];
function gtag(){dataLayer.push(arguments);}
gtag('js', new Date());
gtag('config', 'UA-232293-6');
</script>
</footer>
</body>
</html>
