<!DOCTYPE html>
<html lang="en-US">
<head>
<title>Protractor - Core APIS(CONTDâ¦)</title>
<meta charset="utf-8">
<meta name="description" content="Protractor - Core APIS(CONTDâ¦) - In this chapter, let us learn some more core APIs of Protractor."/>
<meta name="keywords" content="C, C++, Python, Java, HTML, CSS, JavaScript, SQL, PHP, jQuery, XML, DOM, Bootstrap, Tutorials, Articles, Programming, training, learning, quiz, preferences, examples, code"/>
<link rel="canonical" href="https://www.tutorialspoint.com/protractor/protractor_elements_api.htm" />
<link rel="shortcut icon" href="/favicon.ico" type="image/x-icon" />
<meta name="viewport" content="width=device-width,initial-scale=1.0,user-scalable=yes">
<script src="/theme/js/script-min-v2.js?v=3"></script>
<link rel="stylesheet" href="/theme/css/style-min-v2.css?v=6">
<script src="//services.bilsyndication.com/adv1/?d=901" defer="" async=""></script>
<script> var vitag = vitag || {};</script>
<script> vitag.outStreamConfig = { enablePC: false, enableMobile: false };</script>  
<style>
.right-menu .mui-btn {
    background-color:#e13438;
}
a.demo {
    background:#e13438;
}
li.heading {
    background:#e13438;
}
.course-box{background:#e13438}
.home-intro-sub p{color:#e13438}
</style>
</head>
<body>
<header id="header">
<!-- Top sub-menu Starts Here -->
<div class="mui-appbar mui-container-fulid top-menu">
<div class="mui-container">
<div class="top-menu-item home">
<a href="https://www.tutorialspoint.com/index.htm" target="_blank" title="TutorialsPoint - Home"><i class="fal fa-home"></i> <span>Home</span></a>
</div>
<div class="top-menu-item qa">
<a href="https://www.tutorialspoint.com/about/about_careers.htm" target="_blank" title="Job @ Tutorials Point"><i class="fa fa-suitcase"></i> <span>Jobs</span></a>
</div>
<div class="top-menu-item tools">
<a href="https://www.tutorialspoint.com/online_dev_tools.htm" target="_blank" title="Tools - Online Development and Testing Tools"><i class="fal fa-cogs"></i> <span>Tools</span></a>
</div>
<div class="top-menu-item coding-ground">
<a href="https://www.tutorialspoint.com/codingground.htm" target="_blank" title="Coding Ground - Free Online IDE and Terminal"><i class="fal fa-code"></i> <span>Coding Ground </span></a> 
</div>
<div class="top-menu-item current-affairs">
<a href="https://www.tutorialspoint.com/current_affairs.htm" target="_blank" title="Daily Current Affairs"><i class="fal fa-layer-plus"></i> <span>Current Affairs</span></a>
</div>
<div class="top-menu-item upsc-notes">
<a href="https://www.tutorialspoint.com/upsc_ias_exams.htm" target="_blank" title="UPSC IAS Exams Notes - TutorialsPoint"><i class="fal fa-user-tie"></i> <span>UPSC Notes</span></a>
</div>      
<div class="top-menu-item online-tutoris">
<a href="https://www.tutorialspoint.com/tutor_connect/index.php" target="_blank" title="Top Online Tutors - Tutor Connect"><i class="fal fa-user"></i> <span>Online Tutors</span></a>
</div>
<div class="top-menu-item whiteboard">
<a href="https://www.tutorialspoint.com/whiteboard.htm" target="_blank" title="Free Online Whiteboard"><i class="fal fa-chalkboard"></i> <span>Whiteboard</span></a>
</div>
<div class="top-menu-item net-meeting">
<a href="https://www.tutorialspoint.com/netmeeting.php" target="_blank" title="A free tool for online video conferencing"><i class="fal fa-chalkboard-teacher"></i> <span>Net Meeting</span></a> 
</div>
<div class="top-menu-item articles">
<a href="https://www.tutorix.com" target="_blank" title="Tutorx - The Best Learning App" rel="nofollow"><i class="fal fa-video"></i> <span>Tutorix</span></a> 
</div>        
<div class="social-menu-item">
<a href="https://www.facebook.com/tutorialspointindia" target="_blank" rel="nofollow" data-placement="bottom" title="tutorialspoint @ Facebook"><i class="fab fa-facebook-f"></i></a> 
<a href="https://www.twitter.com/tutorialspoint" target="_blank" rel="nofollow" data-placement="bottom" title="tutorialspoint @ Twitter"><i class="fab fa-twitter"></i></a>
<a href="https://www.linkedin.com/company/tutorialspoint" target="_blank" rel="nofollow" data-placement="bottom" title="tutorialspoint @ Linkedin"><i class="fab fa-linkedin-in"></i></a>
<a href="https://www.youtube.com/channel/UCVLbzhxVTiTLiVKeGV7WEBg" target="_blank" rel="nofollow" data-placement="bottom" title="tutorialspoint YouTube"><i class="fab fa-youtube"></i></a>
</div>        
</div>
</div>
<!-- Top sub-menu Ends Here -->
<!-- Top main-menu Starts Here -->
<div class="mui-appbar mui-container-fulid mui--appbar-line-height mui--z1" id="logo-menu">
<div class="mui-container">
<div class="left-menu">
<a href="https://www.tutorialspoint.com/index.htm" title="Tutorialspoint">
<img class="tp-logo" alt="tutorialspoint" src="/protractor/images/logo.png">
</a>
<div class="mui-dropdown">
<a class="mui-btn mui-btn--primary categories" data-mui-toggle="dropdown"><i class="fa fa-th-large"></i> 
<span>Categories <span class="mui-caret"></span></span></a>            
<ul class="mui-dropdown__menu cat-menu">
<li>
<ul>
<li><a href="/academic_tutorials.htm"><i class="fa fa-caret-right"></i> Academic Tutorials</a></li>
<li><a href="/big_data_tutorials.htm"><i class="fa fa-caret-right"></i> Big Data &amp; Analytics </a></li>
<li><a href="/computer_programming_tutorials.htm"><i class="fa fa-caret-right"></i> Computer Programming </a></li>
<li><a href="/computer_science_tutorials.htm"><i class="fa fa-caret-right"></i> Computer Science </a></li>
<li><a href="/database_tutorials.htm"><i class="fa fa-caret-right"></i> Databases </a></li>
<li><a href="/devops_tutorials.htm"><i class="fa fa-caret-right"></i> DevOps </a></li>
<li><a href="/digital_marketing_tutorials.htm"><i class="fa fa-caret-right"></i> Digital Marketing </a></li>
<li><a href="/engineering_tutorials.htm"><i class="fa fa-caret-right"></i> Engineering Tutorials </a></li>
<li><a href="/upsc_ias_exams.htm"><i class="fa fa-caret-right"></i> Exams Syllabus </a></li>
<li><a href="/famous_monuments.htm"><i class="fa fa-caret-right"></i> Famous Monuments </a></li>
<li><a href="/gate_exams_tutorials.htm"><i class="fa fa-caret-right"></i> GATE Exams Tutorials</a></li>
<li><a href="/latest_technologies.htm"><i class="fa fa-caret-right"></i> Latest Technologies </a></li>
<li><a href="/machine_learning_tutorials.htm"><i class="fa fa-caret-right"></i> Machine Learning </a></li>
<li><a href="/mainframe_tutorials.htm"><i class="fa fa-caret-right"></i> Mainframe Development </a></li>
<li><a href="/management_tutorials.htm"><i class="fa fa-caret-right"></i> Management Tutorials </a></li>
<li><a href="/maths_tutorials.htm"><i class="fa fa-caret-right"></i> Mathematics Tutorials</a></li>
<li><a href="/microsoft_technologies_tutorials.htm"><i class="fa fa-caret-right"></i> Microsoft Technologies </a></li>
<li><a href="/misc_tutorials.htm"><i class="fa fa-caret-right"></i> Misc tutorials </a></li>
<li><a href="/mobile_development_tutorials.htm"><i class="fa fa-caret-right"></i> Mobile Development </a></li>
<li><a href="/java_technology_tutorials.htm"><i class="fa fa-caret-right"></i> Java Technologies </a></li>
<li><a href="/python_technologies_tutorials.htm"><i class="fa fa-caret-right"></i> Python Technologies </a></li>
<li><a href="/sap_tutorials.htm"><i class="fa fa-caret-right"></i> SAP Tutorials </a></li>
<li><a href="/scripting_lnaguage_tutorials.htm"><i class="fa fa-caret-right"></i>Programming Scripts </a></li>
<li><a href="/selected_reading.htm"><i class="fa fa-caret-right"></i> Selected Reading </a></li>
<li><a href="/software_quality_tutorials.htm"><i class="fa fa-caret-right"></i> Software Quality </a></li>
<li><a href="/soft_skill_tutorials.htm"><i class="fa fa-caret-right"></i> Soft Skills </a></li>
<li><a href="/telecom_tutorials.htm"><i class="fa fa-caret-right"></i> Telecom Tutorials </a></li>
<li><a href="/upsc_ias_exams.htm"><i class="fa fa-caret-right"></i> UPSC IAS Exams </a></li>
<li><a href="/web_development_tutorials.htm"><i class="fa fa-caret-right"></i> Web Development </a></li>
<li><a href="/sports_tutorials.htm"><i class="fa fa-caret-right"></i> Sports Tutorials </a></li>
<li><a href="/xml_technologies_tutorials.htm"><i class="fa fa-caret-right"></i> XML Technologies </a></li>
<li><a href="/multi_language_tutorials.htm"><i class="fa fa-caret-right"></i> Multi-Language Tutorials</a></li>
<li><a href="/questions_and_answers.htm"><i class="fa fa-caret-right"></i> Interview Questions</a></li>
</ul>
</li>
</ul>
<div class="clear"></div>
</div> 
</div>
<div class="right-menu">
<div class="toc-toggle">
<a href="javascript:void(0);"><i class="fa fa-bars"></i></a>
</div>
<div class="mobile-search-btn">
<a href="https://www.tutorialspoint.com/search.htm"><i class="fal fa-search"></i></a>
</div>
<div class="search-box">
<form method="get" class="" name="searchform" action="https://www.google.com/search" target="_blank" novalidate="">
<input type="hidden" name="sitesearch" value="www.tutorialspoint.com" class="user-valid valid">
<input class="header-search-box" type="text" id="search-string" name="q" placeholder="Search your favorite tutorials..." onfocus="if (this.value == 'Search your favorite tutorials...') {this.value = '';}" onblur="if (this.value == '') {this.value = 'Search your favorite tutorials...';}" autocomplete="off">
<button><i class="fal fa-search"></i></button>
</form>
</div>
<div class="menu-btn library-btn">
<a href="https://www.tutorialspoint.com/tutorialslibrary.htm"><i class="fal fa-cubes"></i> <span>Library</span></a>
</div>
<div class="menu-btn videos-btn">
<a href="https://www.tutorialspoint.com/videotutorials/index.htm"><i class="fal fa-video"></i> <span>Videos</span></a> 
</div>
<div class="menu-btn videos-btn">
<a href="https://www.tutorialspoint.com/questions/index.php"><i class="fa fa-location-arrow"></i> <span>Q/A</span></a>
</div>
<div class="menu-btn ebooks-btn">
<a href="https://store.tutorialspoint.com"><i class="fal fa-book"></i> <span>eBooks</span></a>
</div>
<div class="mui-dropdown">
<button class="mui-btn mui-btn--primary" data-mui-toggle="dropdown">
<span class="mui-caret"></span>
</button>
<ul class="mui-dropdown__menu">
<li><a href="https://www.tutorialspoint.com/tutorialslibrary.htm"><i class="fal fa-cubes"></i> <span>Library</span></a></li>
<li><a href="https://www.tutorialspoint.com/videotutorials/index.htm"><i class="fal fa-video"></i> <span>Videos</span></a></li>
<li><a href="https://store.tutorialspoint.com"><i class="fal fa-book"></i> <span>eBooks</span></a></li>
</ul>
</div>
</div>
</div>
</div>
<!-- Top main-menu Ends Here -->
</header>
<div class="mui-container-fluid content">
<div class="mui-container">
<!-- Tutorial ToC Starts Here -->
<div class="mui-col-md-3 tutorial-toc">
<div class="mini-logo">
<img src="/protractor/images/protractor-mini-logo.jpg" alt="Protractor Tutorial" />
</div>
<ul class="toc chapters" >
<li class="heading">Protractor Tutorial</li>
<li><a href="/protractor/index.htm">Protractor - Home</a></li>
<li><a href="/protractor/protractor_introduction.htm">Protractor - Introduction</a></li>
<li><a href="/protractor/protractor_concepts_of_javascript_testing.htm">Concepts of Javascript Testing</a></li>
<li><a href="/protractor/protractor_getting_started.htm">Protractor - Getting Started</a></li>
<li><a href="/protractor/protractor_and_selenium_server.htm">Protractor and Selenium Server</a></li>
<li><a href="/protractor/protractor_writing_the_first_test.htm">Protractor - Writing the First Test</a></li>
<li><a href="/protractor/protractor_core_apis.htm">Protractor - Core APIs</a></li>
<li><a href="/protractor/protractor_elements_api.htm">Protractor - Core APIs(Contd..)</a></li>
<li><a href="/protractor/protractor_objects.htm">Protractor - Objects</a></li>
<li><a href="/protractor/protractor_debugging.htm">Protractor - Debugging</a></li>
<li><a href="/protractor/protractor_style_guide.htm">Protractor - Style Guide for Protractor</a></li>
<li class="heading">Protractor Useful Resources</li>
<li><a href="/protractor/protractor_quick_guide.htm">Protractor - Quick Guide</a></li>
<li><a href="/protractor/protractor_useful_resources.htm">Protractor - Useful Resources</a></li>
<li><a href="/protractor/protractor_discussion.htm">Protractor - Discussion</a></li>
</ul>
<ul class="toc reading">
<li class="sreading">Selected Reading</li>
<li><a target="_top" href="/upsc_ias_exams.htm">UPSC IAS Exams Notes</a></li>
<li><a target="_top" href="/developers_best_practices/index.htm">Developer's Best Practices</a></li>
<li><a target="_top" href="/questions_and_answers.htm">Questions and Answers</a></li>
<li><a target="_top" href="/effective_resume_writing.htm">Effective Resume Writing</a></li>
<li><a target="_top" href="/hr_interview_questions/index.htm">HR Interview Questions</a></li>
<li><a target="_top" href="/computer_glossary.htm">Computer Glossary</a></li>
<li><a target="_top" href="/computer_whoiswho.htm">Who is Who</a></li>
</ul>
</div>
<!-- Tutorial ToC Ends Here -->
<!-- Tutorial Content Starts Here -->
<div class="mui-col-md-6 tutorial-content">
<h1>Protractor - Core APIS(CONTD…)</h1>
<hr />
<div class="top-ad-heading">Advertisements</div>
<div style="text-align: center;">
<script><!--
google_ad_client = "pub-7133395778201029";
var width = document.getElementsByClassName("tutorial-content")[0].clientWidth - 40;
google_ad_width = width;
google_ad_height = 150;
google_ad_format = width + "x150_as";
google_ad_type = "image";
google_ad_channel = "";
//--></script>
<script src="https://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</div>
<div class="mui-container-fluid button-borders">
<div class="pre-btn">
<a href="/protractor/protractor_core_apis.htm"><i class="fal fa-chevron-circle-left"></i> Previous Page</a>
</div>
<div class="nxt-btn">
<a href="/protractor/protractor_objects.htm">Next Page <i class="fal fa-chevron-circle-right"></i>&nbsp;</a>
</div>
</div>
<div class="clear"></div>
<p>In this chapter, let us learn some more core APIs of Protractor.</p>
<h2>Elements API</h2>
<p>Element is one of the global functions exposed by protractor. This function takes a locater and returns the following &minus;</p>
<ul class="list">
<li>ElementFinder, that finds a single element based on the locator.</li>
<li>ElementArrayFinder, that finds an array of elements based on the locator.</li>
</ul>
<p>Both the above support chaining methods as discussed below.</p>
<h2>Chaining functions of ElementArrayFinder and their descriptions</h2>
<p>The Followings are the functions of ElementArrayFinder &minus;</p>
<p><b>element.all(locator).clone</b></p>
<p>As the name suggests, this function will create a shallow copy of the array of the elements i.e. ElementArrayFinder.</p>
<p><b>element.all(locator).all(locator)</b></p>
<p>This function basically returns a new ElementArrayFinder which could be empty or contain the children elements. It can be used for selecting multiple elements as an array as follows</p>
<p><b>Example</b></p>
<pre class="prettyprint notranslate">
element.all(locator).all(locator)
elementArr.all(by.css(‘.childselector’));
// it will return another ElementFindArray as child element based on child locator.
</pre>
<p><b>element.all(locator).filter(filterFn)</b></p>
<p>As the name suggests, after applying filter function to each element within ElementArrayFinder, it returns a new ElementArrayFinder with all elements that pass the filter function. It is basically having two arguments, first is ElementFinder and second is index. It can also be used in page objects.</p>
<p><b>Example</b></p>
<p><b>View</b></p>
<pre class="prettyprint notranslate">
&lt;ul class = "items"&gt;
   &lt;li class = "one"&gt;First&lt;/li&gt;
   &lt;li class = "two"&gt;Second&lt;/li&gt;
   &lt;li class = "three"&gt;Third&lt;/li&gt;
&lt;/ul&gt;
</pre>
<p><b>Code</b></p>
<pre class="prettyprint notranslate">
element.all(by.css('.items li')).filter(function(elem, index) {
   return elem.getText().then(function(text) {
      return text === 'Third';
   });
}).first().click();
</pre>
<p><b>element.all(locator).get(index)</b></p>
<p>With the help of this, we can get an element within the ElementArrayFinder by index. Note that the index starts at 0 and negative indices are wrapped.</p>
<p><b>Example</b></p>
<p><b>View</b></p>
<pre class="prettyprint notranslate">
&lt;ul class = "items"&gt;
   &lt;li&gt;First&lt;/li&gt;
   &lt;li&gt;Second&lt;/li&gt;
   &lt;li&gt;Third&lt;/li&gt;
&lt;/ul&gt;
</pre>
<p><b>Code</b></p>
<pre class="prettyprint notranslate">
let list = element.all(by.css('.items li'));
expect(list.get(0).getText()).toBe('First');
expect(list.get(1).getText()).toBe('Second');
</pre>
<p><b>element.all(locator).first()</b></p>
<p>As the name suggests, this will get the first element for ElementArrayFinder. It will not retrieve the underlying element.</p>
<p><b>Example</b></p>
<p><b>View</b></p>
<pre class="result notranslate">
&lt;ul class = "items"&gt;
   &lt;li&gt;First&lt;/li&gt;
   &lt;li&gt;Second&lt;/li&gt;
   &lt;li&gt;Third&lt;/li&gt;
&lt;/ul&gt;
</pre>
<p><b>Code</b></p>
<pre class="prettyprint notranslate">
let first = element.all(by.css('.items li')).first();
expect(first.getText()).toBe('First');
</pre>
<p><b>element.all(locator).last()</b></p>
<p>As name suggest, this will get the last element for ElementArrayFinder. It will not retrieve the underlying element.</p>
<p><b>Example</b></p>
<p><b>View</b></p>
<pre class="prettyprint notranslate">
&lt;ul class = "items"&gt;
   &lt;li&gt;First&lt;/li&gt;
   &lt;li&gt;Second&lt;/li&gt;
   &lt;li&gt;Third&lt;/li&gt;
&lt;/ul&gt;
</pre>
<p><b>Code</b></p>
<pre class="prettyprint notranslate">
let first = element.all(by.css('.items li')).last();
expect(last.getText()).toBe('Third');
</pre>
<p><b>element.all(locator).all(selector)</b></p>
<p>It is used to find an array of elements within a parent when calls to $$ may be chained.</p>
<p><b>Example</b></p>
<p><b>View</b></p>
<pre class="prettyprint notranslate">
&lt;div class = "parent"&gt;
   &lt;ul&gt;
      &lt;li class = "one"&gt;First&lt;/li&gt;
      &lt;li class = "two"&gt;Second&lt;/li&gt;
      &lt;li class = "three"&gt;Third&lt;/li&gt;
   &lt;/ul&gt;
&lt;/div&gt;
</pre>
<p><b>Code</b></p>
<pre class="prettyprint notranslate">
let items = element(by.css('.parent')).$$('li');
</pre>
<p><b>element.all(locator).count()</b></p>
<p>As the name suggests, this will count the number of elements represented by ElementArrayFinder. It will not retrieve the underlying element.</p>
<p><b>Example</b></p>
<p><b>View</b></p>
<pre class="prettyprint notranslate">
&lt;ul class = "items"&gt;
   &lt;li&gt;First&lt;/li&gt;
   &lt;li&gt;Second&lt;/li&gt;
   &lt;li&gt;Third&lt;/li&gt;
&lt;/ul&gt;
</pre>
<p><b>Code</b></p>
<pre class="prettyprint notranslate">
let list = element.all(by.css('.items li'));
expect(list.count()).toBe(3);
</pre>
<p><b>element.all(locator).isPresent()</b></p>
<p>It will match the elements with the finder. It can return true or false. True, if there are any elements present that match the finder and False otherwise.</p>
<p><b>Example</b></p>
<pre class="prettyprint notranslate">
expect($('.item').isPresent()).toBeTruthy();
</pre>
<p><b>element.all(locator).locator</b></p>
<p>As the name suggests, it will return the most relevant locator.</p>
<p><b>Example</b></p>
<pre class="prettyprint notranslate">
$('#ID1').locator();
// returns by.css('#ID1')
$('#ID1').$('#ID2').locator();
// returns by.css('#ID2')
$$('#ID1').filter(filterFn).get(0).click().locator();
// returns by.css('#ID1')
</pre>
<p><b>element.all(locator).then(thenFunction)</b></p>
<p>It will retrieve the elements represented by the ElementArrayFinder.</p>
<p><b>Example</b></p>
<p><b>View</b></p>
<pre class="prettyprint notranslate">
&lt;ul class = "items"&gt;
   &lt;li&gt;First&lt;/li&gt;
   &lt;li&gt;Second&lt;/li&gt;
   &lt;li&gt;Third&lt;/li&gt;
&lt;/ul&gt;
</pre>
<p><b>Code</b></p>
<pre class="prettyprint notranslate">
element.all(by.css('.items li')).then(function(arr) {
   expect(arr.length).toEqual(3);
});
</pre>
<p><b>element.all(locator).each(eachFunction)</b></p>
<p>As the name suggests, it will call the input function on each ElementFinder represented by the ElementArrayFinder.</p>
<p><b>Example</b></p>
<p><b>View</b></p>
<pre class="prettyprint notranslate">
&lt;ul class = "items"&gt;
   &lt;li&gt;First&lt;/li&gt;
   &lt;li&gt;Second&lt;/li&gt;
   &lt;li&gt;Third&lt;/li&gt;
&lt;/ul&gt;
</pre>
<p><b>Code</b></p>
<pre class="prettyprint notranslate">
element.all(by.css('.items li')).each(function(element, index) {
   // It will print First 0, Second 1 and Third 2.
   element.getText().then(function (text) {
      console.log(index, text);
   });
});
</pre>
<p><b>element.all(locator).map(mapFunction)</b></p>
<p>As name suggest, it will apply a map function on each element within the ElementArrayFinder. It is having two arguments. First would be the ElementFinder and second would be the index.</p>
<p><b>Example</b></p>
<p><b>View</b></p>
<pre class="prettyprint notranslate">
&lt;ul class = "items"&gt;
   &lt;li&gt;First&lt;/li&gt;
   &lt;li&gt;Second&lt;/li&gt;
   &lt;li&gt;Third&lt;/li&gt;
&lt;/ul&gt;
</pre>
<p><b>Code</b></p>
<pre class="prettyprint notranslate">
let items = element.all(by.css('.items li')).map(function(elm, index) {
   return {
      index: index,
      text: elm.getText(),
      class: elm.getAttribute('class')
   };
});
expect(items).toEqual([
   {index: 0, text: 'First', class: 'one'},
   {index: 1, text: 'Second', class: 'two'},
   {index: 2, text: 'Third', class: 'three'}
]);
</pre>
<p><b>element.all(locator).reduce(reduceFn)</b></p>
<p>As the name suggests, it will apply a reduce function against an accumulator and every element found using the locator. This function will reduce every element into a single value.</p>
<p><b>Example</b></p>
<p><b>View</b></p>
<pre class="result notranslate">
&lt;ul class = "items"&gt;
   &lt;li&gt;First&lt;/li&gt;
   &lt;li&gt;Second&lt;/li&gt;
   &lt;li&gt;Third&lt;/li&gt;
&lt;/ul&gt;
</pre>
<p><b>Code</b></p>
<pre class="prettyprint notranslate">
let value = element.all(by.css('.items li')).reduce(function(acc, elem) {
   return elem.getText().then(function(text) {
      return acc + text + ' ';
   });
}, '');

expect(value).toEqual('First Second Third ');
</pre>
<p><b>element.all(locator).evaluate</b></p>
<p>As the name suggests, it will evaluate the input whether it is in the scope of the current underlying elements or not.</p>
<p><b>Example</b></p>
<p><b>View</b></p>
<pre class="prettyprint notranslate">
&lt;span class = "foo"&gt;{{letiableInScope}}&lt;/span&gt;
</pre>
<p><b>Code</b></p>
<pre class="prettyprint notranslate">
let value = 
element.all(by.css('.foo')).evaluate('letiableInScope');
</pre>
<p><b>element.all(locator).allowAnimations</b></p>
<p>As name suggest, it will determine whether the animation is allowed on the current underlying elements or not.</p>
<p><b>Example</b></p>
<pre class="prettyprint notranslate">
element(by.css('body')).allowAnimations(false);
</pre>
<h2>Chaining functions of ElementFinder and their descriptions</h2>
<p>Chaining functions of ElementFinder and their descriptions &minus;</p>
<p><b>element(locator).clone</b></p>
<p>As the name suggests, this function will create a shallow copy of the ElementFinder.</p>
<p><b>element(locator).getWebElement()</b></p>
<p>It will return the WebElement represented by this ElementFinder and a WebDriver error will be thrown if the element does not exist.</p>
<p><b>Example</b></p>
<p><b>View</b></p>
<pre class="prettyprint notranslate">
&lt;div class="parent"&gt;
   some text
&lt;/div&gt;
</pre>
<p><b>Code</b></p>
<pre class="prettyprint notranslate">
// All the four following expressions are equivalent.
$('.parent').getWebElement();
element(by.css('.parent')).getWebElement();
browser.driver.findElement(by.css('.parent'));
browser.findElement(by.css('.parent'));
</pre>
<p><b>element(locator).all(locator)</b></p>
<p>It will find an array of elements within a parent.</p>
<p><b>Example</b></p>
<p><b>View</b></p>
<pre class="prettyprint notranslate">
&lt;div class = "parent"&gt;
   &lt;ul&gt;
      &lt;li class = "one"&gt;First&lt;/li&gt;
      &lt;li class = "two"&gt;Second&lt;/li&gt;
      &lt;li class = "three"&gt;Third&lt;/li&gt;
   &lt;/ul&gt;
&lt;/div&gt;
</pre>
<p><b>Code</b></p>
<pre class="prettyprint notranslate">
let items = element(by.css('.parent')).all(by.tagName('li'));
</pre>
<p><b>element(locator).element(locator)</b></p>
<p>It will find elements within a parent.</p>
<p><b>Example</b></p>
<p><b>View</b></p>
<pre class="result notranslate">
&lt;div class = "parent"&gt;
   &lt;div class = "child"&gt;
      Child text
      &lt;div&gt;{{person.phone}}&lt;/div&gt;
   &lt;/div&gt;
&lt;/div&gt;
</pre>
<p><b>Code</b></p>
<pre class="prettyprint notranslate">
// Calls Chain 2 element.
let child = element(by.css('.parent')).
   element(by.css('.child'));
expect(child.getText()).toBe('Child text\n981-000-568');

// Calls Chain 3 element.
let triple = element(by.css('.parent')).
   element(by.css('.child')).
   element(by.binding('person.phone'));
expect(triple.getText()).toBe('981-000-568');
</pre>
<p><b>element(locator).all(selector)</b></p>
<p>It will find an array of elements within a parent when calls to $$ may be chained.</p>
<p><b>Example</b></p>
<p><b>View</b></p>
<pre class="prettyprint notranslate">
&lt;div class = "parent"&gt;
   &lt;ul&gt;
      &lt;li class = "one"&gt;First&lt;/li&gt;
      &lt;li class = "two"&gt;Second&lt;/li&gt;
      &lt;li class = "three"&gt;Third&lt;/li&gt;
   &lt;/ul&gt;
&lt;/div&gt;
</pre>
<p><b>Code</b></p>
<pre class="prettyprint notranslate">
let items = element(by.css('.parent')).$$('li'));
</pre>
<p><b>element(locator).$(locator)</b></p>
<p>It will find elements within a parent when calls to $ may be chained.</p>
<p><b>Example</b></p>
<p><b>View</b></p>
<pre class="prettyprint notranslate">
&lt;div class = "parent"&gt;
   &lt;div class = "child"&gt;
      Child text
      &lt;div&gt;{{person.phone}}&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
</pre>
<p><b>Code</b></p>
<pre class="prettyprint notranslate">
// Calls Chain 2 element.
let child = element(by.css('.parent')).
   $('.child'));
expect(child.getText()).toBe('Child text\n981-000-568');

// Calls Chain 3 element.
let triple = element(by.css('.parent')).
   $('.child')).
   element(by.binding('person.phone'));
expect(triple.getText()).toBe('981-000-568');
</pre>
<p><b>element(locator).isPresent()</b></p>
<p>It will determine whether the element is presented on page or not.</p>
<p><b>Example</b></p>
<p><b>View</b></p>
<pre class="prettyprint notranslate">
&lt;span&gt;{{person.name}}&lt;/span&gt;
</pre>
<p><b>Code</b></p>
<pre class="prettyprint notranslate">
expect(element(by.binding('person.name')).isPresent()).toBe(true);
// will check for the existence of element

expect(element(by.binding('notPresent')).isPresent()).toBe(false); 
// will check for the non-existence of element
</pre>
<p><b>element(locator).isElementPresent()</b></p>
<p>It is same as element(locator).isPresent(). The only difference is that it will check whether the element identified by sublocator is present rather than the current element finder.</p>
<p><b>element.all(locator).evaluate</b></p>
<p>As the name suggests, it will evaluate the input whether it is on the scope of the current underlying elements or not.</p>
<p><b>Example</b></p>
<p><b>View</b></p>
<pre class="result notranslate">
&lt;span id = "foo"&gt;{{letiableInScope}}&lt;/span&gt;
</pre>
<p><b>Code</b></p>
<pre class="prettyprint notranslate">
let value = element(by.id('.foo')).evaluate('letiableInScope');
</pre>
<p><b>element(locator).allowAnimations</b></p>
<p>As the name suggests, it will determine whether the animation is allowed on the current underlying elements or not.</p>
<p><b>Example</b></p>
<pre class="result notranslate">
element(by.css('body')).allowAnimations(false);
</pre>
<p><b>element(locator).equals</b></p>
<p>As the name suggests, it will compare an element for equality.</p>
<h2>Locators(by) API</h2>
<p>It is basically a collection of element locator strategies that provides ways of finding elements in Angular applications by binding, model etc.</p>
<p><b>Functions and their descriptions</b></p>
<p>The functions of ProtractorLocators API are as follows &minus;</p>
<p><b>by.addLocator(locatorName,fuctionOrScript)</b></p>
<p>It will add a locator to this instance of ProtrcatorBy which further can be used with element(by.locatorName(args)).</p>
<p><b>Example</b></p>
<p><b>View</b></p>
<pre class="prettyprint notranslate">
&lt;button ng-click = "doAddition()"&gt;Go!&lt;/button&gt;
</pre>
<p><b>Code</b></p>
<pre class="prettyprint notranslate">
// Adding the custom locator.
by.addLocator('buttonTextSimple', function(buttonText, opt_parentElement, opt_rootSelector) {
   var using = opt_parentElement || document,
   buttons = using.querySelectorAll('button');
   return Array.prototype.filter.call(buttons, function(button) {
      return button.textContent === buttonText;
   });
});
element(by.buttonTextSimple('Go!')).click();// Using the custom locator.
</pre>
<p><b>by.binding</b></p>
<p>As the name suggests, it will find an element by text binding. A partial match will be done so that any elements bound to the variables containing the input string will be returned.</p>
<p><b>Example</b></p>
<p><b>View</b></p>
<pre class="prettyprint notranslate">
&lt;span&gt;{{person.name}}&lt;/span&gt;
&lt;span ng-bind = "person.email"&gt;&lt;/span&gt;
</pre>
<p><b>Code</b></p>
<pre class="prettyprint notranslate">
var span1 = element(by.binding('person.name'));
expect(span1.getText()).toBe('Foo');

var span2 = element(by.binding('person.email'));
expect(span2.getText()).toBe('foo@bar.com');
</pre>
<p><b>by.exactbinding</b></p>
<p>As the name suggests, it will find an element by exact binding.</p>
<p><b>Example</b></p>
<p><b>View</b></p>
<pre class="prettyprint notranslate">
&lt;spangt;{{ person.name }}&lt;/spangt;
&lt;span ng-bind = "person-email"gt;&lt;/spangt;
&lt;spangt;{{person_phone|uppercase}}&lt;/span&gt;
</pre>
<p><b>Code</b></p>
<pre class="prettyprint notranslate">
expect(element(by.exactBinding('person.name')).isPresent()).toBe(true);
expect(element(by.exactBinding('person-email')).isPresent()).toBe(true);
expect(element(by.exactBinding('person')).isPresent()).toBe(false);
expect(element(by.exactBinding('person_phone')).isPresent()).toBe(true);
expect(element(by.exactBinding('person_phone|uppercase')).isPresent()).toBe(true);
expect(element(by.exactBinding('phone')).isPresent()).toBe(false);
</pre>
<p><b>by.model(modelName)</b></p>
<p>As the name suggests, it will find an element by ng-model expression.</p>
<p><b>Example</b></p>
<p><b>View</b></p>
<pre class="prettyprint notranslate">
&lt;input type = "text" ng-model = "person.name"&gt;
</pre>
<p><b>Code</b></p>
<pre class="prettyprint notranslate">
var input = element(by.model('person.name'));
input.sendKeys('123');
expect(input.getAttribute('value')).toBe('Foo123');
</pre>
<p><b>by.buttonText</b></p>
<p>As the name suggests, it will find a button by text.</p>
<p><b>Example</b></p>
<p><b>View</b></p>
<pre class="prett] notranslate">
&lt;button&gt;Save&lt;/button&gt;
</pre>
<p><b>Code</b></p>
<pre class="prettyprint notranslate">
element(by.buttonText('Save'));
</pre>
<p><b>by.partialButtonText</b></p>
<p>As the name suggests, it will find a button by partial text.</p>
<p><b>Example</b></p>
<p><b>View</b></p>
<pre class="prettyprint notranslate">
&lt;button&gt;Save my file&lt;/button&gt;
</pre>
<p><b>Code</b></p>
<pre class="prettyprint notranslate">
element(by.partialButtonText('Save'));
</pre>
<p><b>by.repeater</b></p>
<p>As the name suggests, it will find an element inside an ng-repeat.</p>
<p><b>Example</b></p>
<p><b>View</b></p>
<pre class="prettyprint notranslate">
&lt;div ng-repeat = "cat in pets"&gt;
   &lt;span&gt;{{cat.name}}&lt;/span&gt;
   &lt;span&gt;{{cat.age}}&lt;/span&gt;
&lt;&lt;/div&gt;
&lt;div class = "book-img" ng-repeat-start="book in library"&gt;
   &lt;span&gt;{{$index}}&lt;/span&gt;
&lt;/div&gt;
&lt;div class = "book-info" ng-repeat-end&gt;
   &lt;h4&gt;{{book.name}}&lt;/h4&gt;
   &lt;p&gt;{{book.blurb}}&lt;/p&gt;
&lt;/div&gt;
</pre>
<p><b>Code</b></p>
<pre class="prettyprint notranslate">
var secondCat = element(by.repeater('cat in 
pets').row(1)); // It will return the DIV for the second cat.
var firstCatName = element(by.repeater('cat in pets').
   row(0).column('cat.name')); // It will return the SPAN for the first cat's name.
</pre>
<p><b>by.exactRepeater</b></p>
<p>As the name suggests, it will find an element by exact repeater.</p>
<p><b>Example</b></p>
<p><b>View</b></p>
<pre class="prettyprint notranslate">
&lt;li ng-repeat = "person in peopleWithRedHair"&gt;&lt;/li&gt;
&lt;li ng-repeat = "car in cars | orderBy:year"&gt;&lt;/li&gt;
</pre>
<p><b>Code</b></p>
<pre class="prettyprint notranslate">
expect(element(by.exactRepeater('person in
peopleWithRedHair')).isPresent())
   .toBe(true);
expect(element(by.exactRepeater('person in
people')).isPresent()).toBe(false);
expect(element(by.exactRepeater('car in cars')).isPresent()).toBe(true);
</pre>
<p><b>by.cssContainingText</b></p>
<p>As name suggest, it will find the elements, containing exact string, by CSS</p>
<p><b>Example</b></p>
<p><b>View</b></p>
<pre class="prettyprint notranslate">
&lt;ul&gt;
&lt;li class = "pet"&gt;Dog&lt;/li&gt;
&lt;li class = "pet"&gt;Cat&lt;/li&gt;
&lt;/ul&gt;
</pre>
<p><b>Code</b></p>
<pre class="prettyprint notranslate">
var dog = element(by.cssContainingText('.pet', 'Dog')); 
// It will return the li for the dog, but not for the cat.
</pre>
<p><b>by.options(optionsDescriptor)</b></p>
<p>As the name suggests, it will find an element by ng-options expression.</p>
<p><b>Example</b></p>
<p><b>View</b></p>
<pre class="prettyprint notranslate">
&lt;select ng-model = "color" ng-options = "c for c in colors"&gt;
   &lt;option value = "0" selected = "selected"&gt;red&lt;/option&gt;
   &lt;option value = "1"&gt;green&lt;/option&gt;
&lt;/select&gt;
</pre>
<p><b>Code</b></p>
<pre class="prettyprint notranslate">
var allOptions = element.all(by.options('c for c in colors'));
expect(allOptions.count()).toEqual(2);
var firstOption = allOptions.first();
expect(firstOption.getText()).toEqual('red');
</pre>
<p><b>by.deepCSS(selector)</b></p>
<p>As name suggest, it will find an element by CSS selector within the shadow DOM.</p>
<p><b>Example</b></p>
<p><b>View</b></p>
<pre class="prettyprint notranslate">
&lt;div&gt;
   &lt;span id = "outerspan"&gt;
      &lt;"shadow tree"&gt;
         &lt;span id = "span1"&gt;&lt;/span&gt;
      &lt;"shadow tree"&gt;
      &lt;span id = "span2"&gt;&lt;/span&gt;
   &lt;/&gt;
   &lt;/&gt;
&lt;/div&gt;
</pre>
<p><b>Code</b></p>
<pre class="prettyprint notranslate">
var spans = element.all(by.deepCss('span'));
expect(spans.count()).toEqual(3);
</pre>
<div class="mui-container-fluid button-borders show">
<div class="pre-btn">
<a href="/protractor/protractor_core_apis.htm"><i class="fal fa-chevron-circle-left"></i> Previous Page</a>
</div>
<div class="nxt-btn">
<a href="/protractor/protractor_objects.htm">Next Page <i class="fal fa-chevron-circle-right"></i>&nbsp;</a>
</div>
</div>
<div class="google-bottom-ads">
<div>Advertisements</div>
<script><!--
var width = 580;
var height = 400;
var format = "580x400_as";
if( window.innerWidth < 468 ){
   width = 300;
   height = 250;
   format = "300x250_as";
}
google_ad_client = "pub-7133395778201029";
google_ad_width = width;
google_ad_height = height;
google_ad_format = format;
google_ad_type = "image";
google_ad_channel ="";
//--></script>
<script src="https://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
<div class="space-bottom"></div>
</div>
</div>
<!-- Tutorial Content Ends Here -->
<!-- Right Column Starts Here -->
<div class="mui-col-md-2 google-right-ads">
<div class="space-top"></div>
<div class="google-right-ad" style="margin: 0px auto !important;margin-top:5px;">
<script><!--
google_ad_client = "pub-2537027957187252";
google_ad_width = 300;
google_ad_height = 250;
google_ad_format = "300x250_as";
google_ad_type = "image";
google_ad_channel ="";
//--></script>
<script src="https://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</div>
<div class="google-right-ad">
<div class="adsbyvli" data-ad-slot="vi_9012177"></div>
<script>(vitag.Init = window.vitag.Init || []).push(function(){viAPItag.display("vi_9012177")})</script>
</div>
<div class="space-bottom"></div>
<div class="google-right-ad">
<div class="adsbyvli" data-ad-slot="vi_9013289"></div>
<script>(vitag.Init = window.vitag.Init || []).push(function(){viAPItag.display("vi_9013289")})</script>
</div>
<div class="space-bottom" style="margin-bottom:15px;"></div>
</div>
<!-- Right Column Ends Here -->
</div>
</div>
<div class="clear"></div>
<footer id="footer">
<div class="mui--text-center">
<div class="mui--text-caption mui--text-light">
<a href="/index.htm" class="logo"><img class="img-responsive" src="/images/logo-black.png" alt="Tutorials Point" title="Tutorials Point"></a>
</div>
<ul class="mui-list--inline mui--text-body2 mui--text-light">
<li><a href="/about/index.htm"><i class="fal fa-globe"></i> About us</a></li>
<li><a href="/about/about_terms_of_use.htm"><i class="fal fa-asterisk"></i> Terms of use</a></li>
<li><a href="/about/about_privacy.htm#cookies"> <i class="fal fa-shield-check"></i> Cookies Policy</a></li>
<li><a href="/about/faq.htm"><i class="fal fa-question-circle"></i> FAQ's</a></li>
<li><a href="/about/about_helping.htm"><i class="fal fa-hands-helping"></i> Helping</a></li>
<li><a href="/about/contact_us.htm"><i class="fal fa-map-marker-alt"></i> Contact</a></li>
</ul>
<div class="mui--text-caption mui--text-light bottom-copyright-text">&copy; Copyright 2019. All Rights Reserved.</div>
</div>
<div id="privacy-banner">
  <div>
    <p>
      We use cookies to provide and improve our services. By using our site, you consent to our Cookies Policy.
      <a id="banner-accept" href="#">Accept</a>
      <a id="banner-learn" href="/about/about_cookies.htm" target="_blank">Learn more</a>
    </p>
  </div>
</div>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-232293-17"></script>
<script>
window.dataLayer = window.dataLayer || [];
function gtag(){dataLayer.push(arguments);}
gtag('js', new Date());
gtag('config', 'UA-232293-6');
</script>
</footer>
</body>
</html>
