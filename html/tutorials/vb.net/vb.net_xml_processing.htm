<!DOCTYPE html>
<html lang="en-US">
<head>
<title>VB.Net - XML Processing - Tutorialspoint</title>
<meta charset="utf-8">
<meta name="description" content="VB.Net - XML Processing - The Extensible Markup Language (XML) is a markup language much like HTML or SGML. This is recommended by the World Wide Web Consortium and available as an open "/>
<meta name="keywords" content="C, C++, Python, Java, HTML, CSS, JavaScript, SQL, PHP, jQuery, XML, DOM, Bootstrap, Tutorials, Articles, Programming, training, learning, quiz, preferences, examples, code"/>
<link rel="canonical" href="https://www.tutorialspoint.com/vb.net/vb.net_xml_processing.htm" />
<link rel="shortcut icon" href="/favicon.ico" type="image/x-icon" />
<meta name="viewport" content="width=device-width,initial-scale=1.0,user-scalable=yes">
<script src="/theme/js/script-min-v2.js?v=3"></script>
<link rel="stylesheet" href="/theme/css/style-min-v2.css?v=6">
<script src="//services.bilsyndication.com/adv1/?d=901" defer="" async=""></script>
<script> var vitag = vitag || {};</script>
<script> vitag.outStreamConfig = { enablePC: false, enableMobile: false };</script>  
<style>
.right-menu .mui-btn {
    background-color:#2c6ed5;
}
a.demo {
    background:#2c6ed5;
}
li.heading {
    background:#2c6ed5;
}
.course-box{background:#2c6ed5}
.home-intro-sub p{color:#2c6ed5}
</style>
</head>
<body>
<header id="header">
<!-- Top sub-menu Starts Here -->
<div class="mui-appbar mui-container-fulid top-menu">
<div class="mui-container">
<div class="top-menu-item home">
<a href="https://www.tutorialspoint.com/index.htm" target="_blank" title="TutorialsPoint - Home"><i class="fal fa-home"></i> <span>Home</span></a>
</div>
<div class="top-menu-item qa">
<a href="https://www.tutorialspoint.com/about/about_careers.htm" target="_blank" title="Job @ Tutorials Point"><i class="fa fa-suitcase"></i> <span>Jobs</span></a>
</div>
<div class="top-menu-item tools">
<a href="https://www.tutorialspoint.com/online_dev_tools.htm" target="_blank" title="Tools - Online Development and Testing Tools"><i class="fal fa-cogs"></i> <span>Tools</span></a>
</div>
<div class="top-menu-item coding-ground">
<a href="https://www.tutorialspoint.com/codingground.htm" target="_blank" title="Coding Ground - Free Online IDE and Terminal"><i class="fal fa-code"></i> <span>Coding Ground </span></a> 
</div>
<div class="top-menu-item current-affairs">
<a href="https://www.tutorialspoint.com/current_affairs.htm" target="_blank" title="Daily Current Affairs"><i class="fal fa-layer-plus"></i> <span>Current Affairs</span></a>
</div>
<div class="top-menu-item upsc-notes">
<a href="https://www.tutorialspoint.com/upsc_ias_exams.htm" target="_blank" title="UPSC IAS Exams Notes - TutorialsPoint"><i class="fal fa-user-tie"></i> <span>UPSC Notes</span></a>
</div>      
<div class="top-menu-item online-tutoris">
<a href="https://www.tutorialspoint.com/tutor_connect/index.php" target="_blank" title="Top Online Tutors - Tutor Connect"><i class="fal fa-user"></i> <span>Online Tutors</span></a>
</div>
<div class="top-menu-item whiteboard">
<a href="https://www.tutorialspoint.com/whiteboard.htm" target="_blank" title="Free Online Whiteboard"><i class="fal fa-chalkboard"></i> <span>Whiteboard</span></a>
</div>
<div class="top-menu-item net-meeting">
<a href="https://www.tutorialspoint.com/netmeeting.php" target="_blank" title="A free tool for online video conferencing"><i class="fal fa-chalkboard-teacher"></i> <span>Net Meeting</span></a> 
</div>
<div class="top-menu-item articles">
<a href="https://www.tutorix.com" target="_blank" title="Tutorx - The Best Learning App" rel="nofollow"><i class="fal fa-video"></i> <span>Tutorix</span></a> 
</div>        
<div class="social-menu-item">
<a href="https://www.facebook.com/tutorialspointindia" target="_blank" rel="nofollow" data-placement="bottom" title="tutorialspoint @ Facebook"><i class="fab fa-facebook-f"></i></a> 
<a href="https://www.twitter.com/tutorialspoint" target="_blank" rel="nofollow" data-placement="bottom" title="tutorialspoint @ Twitter"><i class="fab fa-twitter"></i></a>
<a href="https://www.linkedin.com/company/tutorialspoint" target="_blank" rel="nofollow" data-placement="bottom" title="tutorialspoint @ Linkedin"><i class="fab fa-linkedin-in"></i></a>
<a href="https://www.youtube.com/channel/UCVLbzhxVTiTLiVKeGV7WEBg" target="_blank" rel="nofollow" data-placement="bottom" title="tutorialspoint YouTube"><i class="fab fa-youtube"></i></a>
</div>        
</div>
</div>
<!-- Top sub-menu Ends Here -->
<!-- Top main-menu Starts Here -->
<div class="mui-appbar mui-container-fulid mui--appbar-line-height mui--z1" id="logo-menu">
<div class="mui-container">
<div class="left-menu">
<a href="https://www.tutorialspoint.com/index.htm" title="Tutorialspoint">
<img class="tp-logo" alt="tutorialspoint" src="/vb.net/images/logo.png">
</a>
<div class="mui-dropdown">
<a class="mui-btn mui-btn--primary categories" data-mui-toggle="dropdown"><i class="fa fa-th-large"></i> 
<span>Categories <span class="mui-caret"></span></span></a>            
<ul class="mui-dropdown__menu cat-menu">
<li>
<ul>
<li><a href="/academic_tutorials.htm"><i class="fa fa-caret-right"></i> Academic Tutorials</a></li>
<li><a href="/big_data_tutorials.htm"><i class="fa fa-caret-right"></i> Big Data &amp; Analytics </a></li>
<li><a href="/computer_programming_tutorials.htm"><i class="fa fa-caret-right"></i> Computer Programming </a></li>
<li><a href="/computer_science_tutorials.htm"><i class="fa fa-caret-right"></i> Computer Science </a></li>
<li><a href="/database_tutorials.htm"><i class="fa fa-caret-right"></i> Databases </a></li>
<li><a href="/devops_tutorials.htm"><i class="fa fa-caret-right"></i> DevOps </a></li>
<li><a href="/digital_marketing_tutorials.htm"><i class="fa fa-caret-right"></i> Digital Marketing </a></li>
<li><a href="/engineering_tutorials.htm"><i class="fa fa-caret-right"></i> Engineering Tutorials </a></li>
<li><a href="/upsc_ias_exams.htm"><i class="fa fa-caret-right"></i> Exams Syllabus </a></li>
<li><a href="/famous_monuments.htm"><i class="fa fa-caret-right"></i> Famous Monuments </a></li>
<li><a href="/gate_exams_tutorials.htm"><i class="fa fa-caret-right"></i> GATE Exams Tutorials</a></li>
<li><a href="/latest_technologies.htm"><i class="fa fa-caret-right"></i> Latest Technologies </a></li>
<li><a href="/machine_learning_tutorials.htm"><i class="fa fa-caret-right"></i> Machine Learning </a></li>
<li><a href="/mainframe_tutorials.htm"><i class="fa fa-caret-right"></i> Mainframe Development </a></li>
<li><a href="/management_tutorials.htm"><i class="fa fa-caret-right"></i> Management Tutorials </a></li>
<li><a href="/maths_tutorials.htm"><i class="fa fa-caret-right"></i> Mathematics Tutorials</a></li>
<li><a href="/microsoft_technologies_tutorials.htm"><i class="fa fa-caret-right"></i> Microsoft Technologies </a></li>
<li><a href="/misc_tutorials.htm"><i class="fa fa-caret-right"></i> Misc tutorials </a></li>
<li><a href="/mobile_development_tutorials.htm"><i class="fa fa-caret-right"></i> Mobile Development </a></li>
<li><a href="/java_technology_tutorials.htm"><i class="fa fa-caret-right"></i> Java Technologies </a></li>
<li><a href="/python_technologies_tutorials.htm"><i class="fa fa-caret-right"></i> Python Technologies </a></li>
<li><a href="/sap_tutorials.htm"><i class="fa fa-caret-right"></i> SAP Tutorials </a></li>
<li><a href="/scripting_lnaguage_tutorials.htm"><i class="fa fa-caret-right"></i>Programming Scripts </a></li>
<li><a href="/selected_reading.htm"><i class="fa fa-caret-right"></i> Selected Reading </a></li>
<li><a href="/software_quality_tutorials.htm"><i class="fa fa-caret-right"></i> Software Quality </a></li>
<li><a href="/soft_skill_tutorials.htm"><i class="fa fa-caret-right"></i> Soft Skills </a></li>
<li><a href="/telecom_tutorials.htm"><i class="fa fa-caret-right"></i> Telecom Tutorials </a></li>
<li><a href="/upsc_ias_exams.htm"><i class="fa fa-caret-right"></i> UPSC IAS Exams </a></li>
<li><a href="/web_development_tutorials.htm"><i class="fa fa-caret-right"></i> Web Development </a></li>
<li><a href="/sports_tutorials.htm"><i class="fa fa-caret-right"></i> Sports Tutorials </a></li>
<li><a href="/xml_technologies_tutorials.htm"><i class="fa fa-caret-right"></i> XML Technologies </a></li>
<li><a href="/multi_language_tutorials.htm"><i class="fa fa-caret-right"></i> Multi-Language Tutorials</a></li>
<li><a href="/questions_and_answers.htm"><i class="fa fa-caret-right"></i> Interview Questions</a></li>
</ul>
</li>
</ul>
<div class="clear"></div>
</div> 
</div>
<div class="right-menu">
<div class="toc-toggle">
<a href="javascript:void(0);"><i class="fa fa-bars"></i></a>
</div>
<div class="mobile-search-btn">
<a href="https://www.tutorialspoint.com/search.htm"><i class="fal fa-search"></i></a>
</div>
<div class="search-box">
<form method="get" class="" name="searchform" action="https://www.google.com/search" target="_blank" novalidate="">
<input type="hidden" name="sitesearch" value="www.tutorialspoint.com" class="user-valid valid">
<input class="header-search-box" type="text" id="search-string" name="q" placeholder="Search your favorite tutorials..." onfocus="if (this.value == 'Search your favorite tutorials...') {this.value = '';}" onblur="if (this.value == '') {this.value = 'Search your favorite tutorials...';}" autocomplete="off">
<button><i class="fal fa-search"></i></button>
</form>
</div>
<div class="menu-btn library-btn">
<a href="https://www.tutorialspoint.com/tutorialslibrary.htm"><i class="fal fa-cubes"></i> <span>Library</span></a>
</div>
<div class="menu-btn videos-btn">
<a href="https://www.tutorialspoint.com/videotutorials/index.htm"><i class="fal fa-video"></i> <span>Videos</span></a> 
</div>
<div class="menu-btn videos-btn">
<a href="https://www.tutorialspoint.com/questions/index.php"><i class="fa fa-location-arrow"></i> <span>Q/A</span></a>
</div>
<div class="menu-btn ebooks-btn">
<a href="https://store.tutorialspoint.com"><i class="fal fa-book"></i> <span>eBooks</span></a>
</div>
<div class="mui-dropdown">
<button class="mui-btn mui-btn--primary" data-mui-toggle="dropdown">
<span class="mui-caret"></span>
</button>
<ul class="mui-dropdown__menu">
<li><a href="https://www.tutorialspoint.com/tutorialslibrary.htm"><i class="fal fa-cubes"></i> <span>Library</span></a></li>
<li><a href="https://www.tutorialspoint.com/videotutorials/index.htm"><i class="fal fa-video"></i> <span>Videos</span></a></li>
<li><a href="https://store.tutorialspoint.com"><i class="fal fa-book"></i> <span>eBooks</span></a></li>
</ul>
</div>
</div>
</div>
</div>
<!-- Top main-menu Ends Here -->
</header>
<div class="mui-container-fluid content">
<div class="mui-container">
<!-- Tutorial ToC Starts Here -->
<div class="mui-col-md-3 tutorial-toc">
<div class="mini-logo">
<img src="/vb.net/images/vb.net-mini-logo.jpg" alt="VB.Net Programming Tutorial" />
</div>
<ul class="toc chapters">
<li class="heading">VB.Net Basic Tutorial</li>
<li><a href="/vb.net/index.htm">VB.Net - Home</a></li>
<li><a href="/vb.net/vb.net_overview.htm">VB.Net - Overview</a></li>
<li><a href="/vb.net/vb.net_environment_setup.htm">VB.Net - Environment Setup</a></li>
<li><a href="/vb.net/vb.net_program_structure.htm">VB.Net - Program Structure</a></li>
<li><a href="/vb.net/vb.net_basic_syntax.htm">VB.Net - Basic Syntax</a></li>
<li><a href="/vb.net/vb.net_data_types.htm">VB.Net - Data Types</a></li>
<li><a href="/vb.net/vb.net_variables.htm">VB.Net - Variables</a></li>
<li><a href="/vb.net/vb.net_constants.htm">VB.Net - Constants</a></li>
<li><a href="/vb.net/vb.net_modifiers.htm">VB.Net - Modifiers</a></li>
<li><a href="/vb.net/vb.net_statements.htm">VB.Net - Statements</a></li>
<li><a href="/vb.net/vb.net_directives.htm">VB.Net - Directives</a></li>
<li><a href="/vb.net/vb.net_operators.htm">VB.Net - Operators</a></li>
<li><a href="/vb.net/vb.net_decision_making.htm">VB.Net - Decision Making</a></li>
<li><a href="/vb.net/vb.net_loops.htm">VB.Net - Loops</a></li>
<li><a href="/vb.net/vb.net_strings.htm">VB.Net - Strings</a></li>
<li><a href="/vb.net/vb.net_date_time.htm">VB.Net - Date &amp; Time</a></li>
<li><a href="/vb.net/vb.net_arrays.htm">VB.Net - Arrays</a></li>
<li><a href="/vb.net/vb.net_collections.htm">VB.Net - Collections</a></li>
<li><a href="/vb.net/vb.net_functions.htm">VB.Net - Functions</a></li>
<li><a href="/vb.net/vb.net_subs.htm">VB.Net - Subs</a></li>
<li><a href="/vb.net/vb.net_classes_objects.htm">VB.Net - Classes &amp; Objects</a></li>
<li><a href="/vb.net/vb.net_exception_handling.htm">VB.Net - Exception Handling</a></li>
<li><a href="/vb.net/vb.net_file_handling.htm">VB.Net - File Handling</a></li>
<li><a href="/vb.net/vb.net_basic_controls.htm">VB.Net - Basic Controls</a></li>
<li><a href="/vb.net/vb.net_dialog_boxes.htm">VB.Net - Dialog Boxes</a></li>
<li><a href="/vb.net/vb.net_advanced_forms.htm">VB.Net - Advanced Forms</a></li>
<li><a href="/vb.net/vb.net_event_handling.htm">VB.Net - Event Handling</a></li>
</ul>
<ul class="toc chapters">
<li class="heading">VB.Net Advanced Tutorial</li>
<li><a href="/vb.net/vb.net_regular_expressions.htm">VB.Net - Regular Expressions</a></li>
<li><a href="/vb.net/vb.net_database_access.htm">VB.Net - Database Access</a></li>
<li><a href="/vb.net/vb.net_excel_sheet.htm">VB.Net - Excel Sheet</a></li>
<li><a href="/vb.net/vb.net_send_email.htm">VB.Net - Send Email</a></li>
<li><a href="/vb.net/vb.net_xml_processing.htm">VB.Net - XML Processing</a></li>
<li><a href="/vb.net/vb.net_web_programming.htm">VB.Net - Web Programming</a></li>
</ul>
<ul class="toc chapters">
<li class="heading">VB.Net Useful Resources</li>
<li><a href="/vb.net/vb.net_quick_guide.htm">VB.Net - Quick Guide</a></li>
<li><a href="/vb.net/vb.net_useful_resources.htm">VB.Net - Useful Resources</a></li>
<li><a href="/vb.net/vb.net_discussion.htm">VB.Net - Discussion</a></li>

</ul>
<ul class="toc reading">
<li class="sreading">Selected Reading</li>
<li><a target="_top" href="/upsc_ias_exams.htm">UPSC IAS Exams Notes</a></li>
<li><a target="_top" href="/developers_best_practices/index.htm">Developer's Best Practices</a></li>
<li><a target="_top" href="/questions_and_answers.htm">Questions and Answers</a></li>
<li><a target="_top" href="/effective_resume_writing.htm">Effective Resume Writing</a></li>
<li><a target="_top" href="/hr_interview_questions/index.htm">HR Interview Questions</a></li>
<li><a target="_top" href="/computer_glossary.htm">Computer Glossary</a></li>
<li><a target="_top" href="/computer_whoiswho.htm">Who is Who</a></li>
</ul>
</div>
<!-- Tutorial ToC Ends Here -->
<!-- Tutorial Content Starts Here -->
<div class="mui-col-md-6 tutorial-content">
<h1>VB.Net - XML Processing</h1>
<hr />
<div class="top-ad-heading">Advertisements</div>
<div style="text-align: center;">
<script><!--
google_ad_client = "pub-7133395778201029";
var width = document.getElementsByClassName("tutorial-content")[0].clientWidth - 40;
google_ad_width = width;
google_ad_height = 150;
google_ad_format = width + "x150_as";
google_ad_type = "image";
google_ad_channel = "";
//--></script>
<script src="https://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</div>
<div class="mui-container-fluid button-borders">
<div class="pre-btn">
<a href="/vb.net/vb.net_send_email.htm"><i class="fal fa-chevron-circle-left"></i> Previous Page</a>
</div>
<div class="nxt-btn">
<a href="/vb.net/vb.net_web_programming.htm">Next Page <i class="fal fa-chevron-circle-right"></i>&nbsp;</a>
</div>
</div>
<div class="clearer"></div>
<p>The Extensible Markup Language (XML) is a markup language much like HTML or SGML. This is recommended by the World Wide Web Consortium and available as an open standard.</p>
<p>The <b>System.Xml</b> namespace in the .Net Framework contains classes for processing XML documents. Following are some of the commonly used classes in the System.Xml namespace.</p>
<table class="table table-bordered">
<tr>
<th style="text-align:center;width:9%;">Sr.No.</th>
<th style="text-align:center;">Class &amp; Description</th></tr>
<tr>
<td class="ts">1</td>
<td>
<p><b>XmlAttribute</b></p>
<p>Represents an attribute. Valid and default values for the attribute are defined in a document type definition (DTD) or schema.</p></td>
</tr>
<tr>
<td class="ts">2</td>
<td><p><b>XmlCDataSection</b></p>
<p>Represents a CDATA section.</p></td>
</tr>
<tr>
<td class="ts">3</td>
<td><p><b>XmlCharacterData</b></p>
<p>Provides text manipulation methods that are used by several classes.</p></td>
</tr>
<tr>
<td class="ts">4</td>
<td><p><b>XmlComment</b></p>
<p>Represents the content of an XML comment.</p></td>
</tr>
<tr>
<td class="ts">5</td>
<td><p><b>XmlConvert</b></p>
<p>Encodes and decodes XML names and provides methods for converting between common language runtime types and XML Schema definition language (XSD) types. When converting data types, the values returned are locale independent.</p></td>
</tr>
<tr>
<td class="ts">6</td>
<td><p><b>XmlDeclaration</b></p>
<p>Represents the XML declaration node &lt;?xml version='1.0'...?&gt;.</p></td>
</tr>
<tr>
<td class="ts">7</td>
<td><p><b>XmlDictionary</b></p>
<p>Implements a dictionary used to optimize Windows Communication Foundation (WCF)'s XML reader/writer implementations.</p></td>
</tr>
<tr>
<td class="ts">8</td>
<td><p><b>XmlDictionaryReader</b></p>
<p>An abstract class that the Windows Communication Foundation (WCF) derives from XmlReader to do serialization and deserialization.</p></td></tr>
<tr>
<td class="ts">9</td>
<td>
<p><b>XmlDictionaryWriter</b></p>
<p>Represents an abstract class that Windows Communication Foundation (WCF) derives from XmlWriter to do serialization and deserialization.</p></td>
</tr>
<tr>
<td class="ts">10</td>
<td><p><b>XmlDocument</b></p>
<p>Represents an XML document.</p></td>
</tr>
<tr>
<td class="ts">11</td>
<td><p><b>XmlDocumentFragment</b></p>
<p>Represents a lightweight object that is useful for tree insert operations.</p></td>
</tr>
<tr>
<td class="ts">12</td>
<td><p><b>XmlDocumentType</b></p>
<p>Represents the document type declaration.</p></td>
</tr>
<tr>
<td class="ts">13</td>
<td><p><b>XmlElement</b></p>
<p>Represents an element.</p></td>
</tr>
<tr>
<td class="ts">14</td>
<td><p><b>XmlEntity</b></p>
<p>Represents an entity declaration, such as &lt;!ENTITY... &gt;.</p></td>
</tr>
<tr>
<td class="ts">15</td>
<td><p><b>XmlEntityReference</b></p>
<p>Represents an entity reference node.</p></td>
</tr>
<tr>
<td class="ts">16</td>
<td><p><b>XmlException</b></p>
<p>Returns detailed information about the last exception.</p></td>
</tr>
<tr>
<td class="ts">17</td>
<td><p><b>XmlImplementation</b></p>
<p>Defines the context for a set of XmlDocument objects.</p></td>
</tr>
<tr>
<td class="ts">18</td>
<td><p><b>XmlLinkedNode</b></p>
<p>Gets the node immediately preceding or following this node.</p></td>
</tr>
<tr>
<td class="ts">19</td>
<td><p><b>XmlNode</b></p>
<p>Represents a single node in the XML document.</p></td>
</tr>
<tr>
<td class="ts">20</td>
<td><p><b>XmlNodeList</b></p>
<p>Represents an ordered collection of nodes.</p></td>
</tr>
<tr>
<td class="ts">21</td>
<td><p><b>XmlNodeReader</b></p>
<p>Represents a reader that provides fast, non-cached forward only access to XML data in an XmlNode.</p></td>
</tr>
<tr>
<td class="ts">22</td>
<td><p><b>XmlNotation</b></p>
<p>Represents a notation declaration, such as &lt;!NOTATION... &gt;.</p></td>
</tr>
<tr>
<td class="ts">23</td>
<td><p><b>XmlParserContext</b></p>
<p>Provides all the context information required by the XmlReader to parse an XML fragment.</p></td>
</tr>
<tr>
<td class="ts">24</td>
<td><p><b>XmlProcessingInstruction</b></p>
<p>Represents a processing instruction, which XML defines to keep processor-specific information in the text of the document.</p></td>
</tr>
<tr>
<td class="ts">25</td>
<td><p><b>XmlQualifiedName</b></p>
<p>Represents an XML qualified name.</p></td>
</tr>
<tr>
<td class="ts">26</td>
<td><p><b>XmlReader</b></p>
<p>Represents a reader that provides fast, noncached, forward-only access to XML data.</p></td>
</tr>
<tr>
<td class="ts">27</td>
<td><p><b>XmlReaderSettings</b></p>
<p>Specifies a set of features to support on the XmlReader object created by the Create method.</p></td>
</tr>
<tr>
<td class="ts">28</td>
<td><p><b>XmlResolver</b></p>
<p>Resolves external XML resources named by a Uniform Resource Identifier (URI).</p></td>
</tr>
<tr>
<td class="ts">29</td>
<td><p><b>XmlSecureResolver</b></p>
<p>Helps to secure another implementation of XmlResolver by wrapping the XmlResolver object and restricting the resources that the underlying XmlResolver has access to.</p></td>
</tr>
<tr>
<td class="ts">30</td>
<td><p><b>XmlSignificantWhitespace</b></p>
<p>Represents white space between markup in a mixed content node or white space within an xml:space= 'preserve' scope. This is also referred to as significant white space.</p></td>
</tr>
<tr>
<td class="ts">31</td>
<td><p><b>XmlText</b></p>
<p>Represents the text content of an element or attribute.</p></td>
</tr>
<tr>
<td class="ts">32</td>
<td><p><b>XmlTextReader</b></p>
<p>Represents a reader that provides fast, non-cached, forward-only access to XML data.</p></td>
</tr>
<tr>
<td class="ts">33</td>
<td><p><b>XmlTextWriter</b></p>
<p>Represents a writer that provides a fast, non-cached, forward-only way of generating streams or files containing XML data that conforms to the W3C Extensible Markup Language (XML) 1.0 and the Namespaces in XML recommendations.</p></td>
</tr>
<tr>
<td class="ts">34</td>
<td><p><b>XmlUrlResolver</b></p>
<p>Resolves external XML resources named by a Uniform Resource Identifier (URI).</p></td>
</tr>
<tr>
<td class="ts">35</td>
<td><p><b>XmlWhitespace</b></p>
<p>Represents white space in element content.</p></td>
</tr>
<tr>
<td class="ts">36</td>
<td><p><b>XmlWriter</b></p>
<p>Represents a writer that provides a fast, non-cached, forward-only means of generating streams or files containing XML data.</p></td>
</tr>
<tr>
<td class="ts">37</td>
<td><p><b>XmlWriterSettings</b></p>
<p>Specifies a set of features to support on the XmlWriter object created by the XmlWriter.Create method.</p></td>
</tr>
</table>
<h2>XML Parser APIs</h2>
<p>The two most basic and broadly used APIs to XML data are the SAX and DOM interfaces.</p>
<ul class="list">
<li><p><b>Simple API for XML (SAX)</b> &minus; Here, you register callbacks for events of interest and then let the parser proceed through the document. This is useful when your documents are large or you have memory limitations, it parses the file as it reads it from disk, and the entire file is never stored in memory.</p></li>
<li><p><b>Document Object Model (DOM) API</b> &minus; This is World Wide Web Consortium recommendation wherein the entire file is read into memory and stored in a hierarchical (tree-based) form to represent all the features of an XML document.</p></li>
</ul>
<p>SAX obviously can't process information as fast as DOM can when working with large files. On the other hand, using DOM exclusively can really kill your resources, especially if used on a lot of small files.</p>
<p>SAX is read-only, while DOM allows changes to the XML file. Since these two different APIs literally complement each other there is no reason why you can't use them both for large projects.</p>
<p>For all our XML code examples, let's use a simple XML file movies.xml as an input &minus;</p>
<pre class="prettyprint notranslate">
&lt;?xml version = "1.0"?&gt;

&lt;collection shelf = "New Arrivals"&gt;
   &lt;movie title = "Enemy Behind"&gt;
      &lt;type&gt;War, Thriller&lt;/type&gt;
      &lt;format&gt;DVD&lt;/format&gt;
      &lt;year&gt;2003&lt;/year&gt;
      &lt;rating&gt;PG&lt;/rating&gt;
      &lt;stars&gt;10&lt;/stars&gt;
      &lt;description&gt;Talk about a US-Japan war&lt;/description&gt;
   &lt;/movie&gt;

   &lt;movie title = "Transformers"&gt;
      &lt;type&gt;Anime, Science Fiction&lt;/type&gt;
      &lt;format&gt;DVD&lt;/format&gt;
      &lt;year&gt;1989&lt;/year&gt;
      &lt;rating&gt;R&lt;/rating&gt;
      &lt;stars&gt;8&lt;/stars&gt;
      &lt;description&gt;A schientific fiction&lt;/description&gt;
   &lt;/movie&gt;

   &lt;movie title = "Trigun"&gt;
      &lt;type&gt;Anime, Action&lt;/type&gt;
      &lt;format&gt;DVD&lt;/format&gt;
      &lt;episodes&gt;4&lt;/episodes&gt;
      &lt;rating&gt;PG&lt;/rating&gt;
      &lt;stars&gt;10&lt;/stars&gt;
      &lt;description&gt;Vash the Stampede!&lt;/description&gt;
   &lt;/movie&gt;

   &lt;movie title = "Ishtar"&gt;
      &lt;type&gt;Comedy&lt;/type&gt;
      &lt;format&gt;VHS&lt;/format&gt;
      &lt;rating&gt;PG&lt;/rating&gt;
      &lt;stars&gt;2&lt;/stars&gt;
      &lt;description&gt;Viewable boredom&lt;/description&gt;
   &lt;/movie&gt;
&lt;/collection&gt;
</pre>
<h2>Parsing XML with SAX API</h2>
<p>In SAX model, you use the <b>XmlReader</b> and <b>XmlWriter</b> classes to work with the XML data.</p>
<p>The <b>XmlReader</b> class is used to read XML data in a fast, forward-only and non-cached manner. It reads an XML document or a stream.</p>
<h2>Example 1</h2>
<p>This example demonstrates reading XML data from the file movies.xml.</p>
<p>Take the following steps &minus;</p>
<ul class="list">
<li><p>Add the movies.xml file in the bin\Debug folder of your application.</p></li>
<li><p>Import the System.Xml namespace in Form1.vb file.</p></li>
<li><p>Add a label in the form and change its text to 'Movies Galore'.</p></li>
<li><p>Add three list boxes and three buttons to show the title, type and description of a movie from the xml file.</p></li>
<li><p>Add the following code using the code editor window.</p></li>
</ul>
<pre class="prettyprint notranslate">
Imports System.Xml
Public Class Form1
   Private Sub Form1_Load(sender As Object, e As EventArgs) Handles MyBase.Load
      ' Set the caption bar text of the form.   
      Me.Text = "tutorialspoint.com"
   End Sub
   
   Private Sub Button1_Click(sender As Object, e As EventArgs) Handles Button1.Click
      ListBox1().Items.Clear()
      Dim xr As XmlReader = XmlReader.Create("movies.xml")
      Do While xr.Read()
         If xr.NodeType = XmlNodeType.Element AndAlso xr.Name = "movie" Then
            ListBox1.Items.Add(xr.GetAttribute(0))
         End If
      Loop
   End Sub
   
   Private Sub Button2_Click(sender As Object, e As EventArgs) Handles Button2.Click
      ListBox2().Items.Clear()
      Dim xr As XmlReader = XmlReader.Create("movies.xml")
      Do While xr.Read()
         If xr.NodeType = XmlNodeType.Element AndAlso xr.Name = "type" Then
            ListBox2.Items.Add(xr.ReadElementString)
         Else
            xr.Read()
         End If
      Loop
   End Sub
   
   Private Sub Button3_Click(sender As Object, e As EventArgs) Handles Button3.Click
      ListBox3().Items.Clear()
      Dim xr As XmlReader = XmlReader.Create("movies.xml")
      Do While xr.Read()
         If xr.NodeType = XmlNodeType.Element AndAlso xr.Name = "description" Then
            ListBox3.Items.Add(xr.ReadElementString)
         Else
            xr.Read()
         End If
      Loop
   End Sub
End Class
</pre>
<p>Execute and run the above code using <b>Start</b> button available at the Microsoft Visual Studio tool bar. Clicking on the buttons would display, title, type and description of the movies from the file.</p>
<img src="/vb.net/images/vb.net_xml_processing1.jpg" alt="VB.Net XML Processing Example 1"/>
<p>The <b>XmlWriter</b> class is used to write XML data into a stream, a file or a TextWriter object. It also works in a forward-only, non-cached manner.</p>
<h2>Example 2</h2>
<p>Let us create an XML file by adding some data at runtime. Take the following steps &minus;</p>
<ul class="list">
<li><p>Add a WebBrowser control and a button control in the form.</p></li>
<li><p>Change the Text property of the button to Show Authors File.</p></li>
<li><p>Add the following code in the code editor.</p></li>
</ul>
<pre class="prettyprint notranslate">
Imports System.Xml
Public Class Form1
   Private Sub Form1_Load(sender As Object, e As EventArgs) Handles MyBase.Load
      ' Set the caption bar text of the form.   
      Me.Text = "tutorialspoint.com"
   End Sub
   Private Sub Button1_Click(sender As Object, e As EventArgs) Handles Button1.Click
      Dim xws As XmlWriterSettings = New XmlWriterSettings()
      xws.Indent = True
      xws.NewLineOnAttributes = True
      Dim xw As XmlWriter = XmlWriter.Create("authors.xml", xws)
      xw.WriteStartDocument()
      xw.WriteStartElement("Authors")
      xw.WriteStartElement("author")
      xw.WriteAttributeString("code", "1")
      xw.WriteElementString("fname", "Zara")
      xw.WriteElementString("lname", "Ali")
      xw.WriteEndElement()
      xw.WriteStartElement("author")
      xw.WriteAttributeString("code", "2")
      xw.WriteElementString("fname", "Priya")
      xw.WriteElementString("lname", "Sharma")
      xw.WriteEndElement()
      xw.WriteStartElement("author")
      xw.WriteAttributeString("code", "3")
      xw.WriteElementString("fname", "Anshuman")
      xw.WriteElementString("lname", "Mohan")
      xw.WriteEndElement()
      xw.WriteStartElement("author")
      xw.WriteAttributeString("code", "4")
      xw.WriteElementString("fname", "Bibhuti")
      xw.WriteElementString("lname", "Banerjee")
      xw.WriteEndElement()
      xw.WriteStartElement("author")
      xw.WriteAttributeString("code", "5")
      xw.WriteElementString("fname", "Riyan")
      xw.WriteElementString("lname", "Sengupta")
      xw.WriteEndElement()
      xw.WriteEndElement()
      xw.WriteEndDocument()
      xw.Flush()
      xw.Close()
      WebBrowser1.Url = New Uri(AppDomain.CurrentDomain.BaseDirectory + "authors.xml")
   End Sub
End Class
</pre>
<ul class="list">
<li><p>Execute and run the above code using <b>Start</b> button available at the Microsoft Visual Studio tool bar. Clicking on the Show Author File would display the newly created authors.xml file on the web browser.</p></li>
</ul>
<img src="/vb.net/images/vb.net_xml_processing2.jpg" alt="VB.Net XML Processing Example 2"/>
<h2>Parsing XML with DOM API</h2>
<p>According to the Document Object Model (DOM), an XML document consists of nodes and attributes of the nodes. The <b>XmlDocument</b> class is used to implement the XML DOM parser of the .Net Framework. It also allows you to modify an existing XML document by inserting, deleting or updating data in the document.</p>
<p>Following are some of the commonly used methods of the <b>XmlDocument</b> class &minus;</p>
<table class="table table-bordered">
<tr>
<th style="text-align:center;width:9%;">Sr.No.</th>
<th style="text-align:center;">Method Name &amp; Description</th>
</tr>
<tr>
<td class="ts">1</td>
<td>
<p><b>AppendChild</b></p>
<p>Adds the specified node to the end of the list of child nodes, of this node.</p>
</td>
</tr>
<tr>
<td class="ts">2</td>
<td>
<p><b>CreateAttribute(String)</b></p>
<p>Creates an XmlAttribute with the specified Name.</p>
</td>
</tr>
<tr>
<td class="ts">3</td>
<td>
<p><b>CreateComment</b></p>
<p>Creates an XmlComment containing the specified data.</p>
</td>
</tr>
<tr>
<td class="ts">4</td>
<td>
<p><b>CreateDefaultAttribute</b></p>
<p>Creates a default attribute with the specified prefix, local name and namespace URI.</p>
</td>
</tr>
<tr>
<td class="ts">5</td>
<td>
<p><b>CreateElement(String)</b></p>
<p>Creates an element with the specified name.</p>
</td>
</tr>
<tr>
<td class="ts">6</td>
<td>
<p><b>CreateNode(String, String, String)</b></p>
<p>Creates an XmlNode with the specified node type, Name, and NamespaceURI.</p>
</td>
</tr>
<tr>
<td class="ts">7</td>
<td>
<p><b>CreateNode(XmlNodeType, String, String)</b></p>
<p>Creates an XmlNode with the specified XmlNodeType, Name, and NamespaceURI.</p>
</td>
</tr>
<tr>
<td class="ts">8</td>
<td>
<p><b>CreateNode(XmlNodeType, String, String, String)</b></p>
<p>Creates a XmlNode with the specified XmlNodeType, Prefix, Name, and NamespaceURI.</p>
</td>
</tr>
<tr>
<td class="ts">9</td>
<td>
<p><b>CreateProcessingInstruction</b></p>
<p>Creates an XmlProcessingInstruction with the specified name and data.</p>
</td>
</tr>
<tr>
<td class="ts">10</td>
<td>
<p><b>CreateSignificantWhitespace</b></p>
<p>Creates an XmlSignificantWhitespace node.</p>
</td>
</tr>
<tr>
<td class="ts">11</td>
<td>
<p><b>CreateTextNode</b></p>
<p>Creates an XmlText with the specified text.</p>
</td>
</tr>
<tr>
<td class="ts">12</td>
<td>
<p><b>CreateWhitespace</b></p>
<p>Creates an XmlWhitespace node.</p>
</td>
</tr>
<tr>
<td class="ts">13</td>
<td>
<p><b>CreateXmlDeclaration</b></p>
<p>Creates an XmlDeclaration node with the specified values.</p>
</td>
</tr>
<tr>
<td class="ts">14</td>
<td>
<p><b>GetElementById</b></p>
<p>Gets the XmlElement with the specified ID.</p>
</td>
</tr>
<tr>
<td class="ts">15</td>
<td>
<p><b>GetElementsByTagName(String)</b></p>
<p>Returns an XmlNodeList containing a list of all descendant elements that match the specified Name.</p>
</td>
</tr>
<tr>
<td class="ts">16</td>
<td>
<p><b>GetElementsByTagName(String, String)</b></p>
<p>Returns an XmlNodeList containing a list of all descendant elements that match the specified LocalName and NamespaceURI.</p>
</td>
</tr>
<tr>
<td class="ts">17</td>
<td>
<p><b>InsertAfter</b></p>
<p>Inserts the specified node immediately after the specified reference node.</p>
</td>
</tr>
<tr>
<td class="ts">18</td>
<td>
<p><b>InsertBefore</b></p>
<p>Inserts the specified node immediately before the specified reference node.</p>
</td>
</tr>
<tr>
<td class="ts">19</td>
<td>
<p><b>Load(Stream)</b></p>
<p>Loads the XML document from the specified stream.</p>
</td>
</tr>
<tr>
<td class="ts">20</td>
<td>
<p><b>Load(String)</b></p>
<p>Loads the XML document from the specified URL.</p>
</td>
</tr>
<tr>
<td class="ts">21</td>
<td>
<p><b>Load(TextReader)</b></p>
<p>Loads the XML document from the specified TextReader.</p>
</td>
</tr>
<tr>
<td class="ts">22</td>
<td>
<p><b>Load(XmlReader)</b></p>
<p>Loads the XML document from the specified XmlReader.</p>
</td>
</tr>
<tr>
<td class="ts">23</td>
<td>
<p><b>LoadXml</b></p>
<p>Loads the XML document from the specified string.</p>
</td>
</tr>
<tr>
<td class="ts">24</td>
<td>
<p><b>PrependChild</b></p>
<p>Adds the specified node to the beginning of the list of child nodes for this node.</p>
</td>
</tr>
<tr>
<td class="ts">25</td>
<td>
<p><b>ReadNode</b></p>
<p>Creates an XmlNode object based on the information in the XmlReader. The reader must be positioned on a node or attribute.</p>
</td>
</tr>
<tr>
<td class="ts">26</td>
<td>
<p><b>RemoveAll</b></p>
<p>Removes all the child nodes and/or attributes of the current node.</p>
</td>
</tr>
<tr>
<td class="ts">27</td>
<td>
<p><b>RemoveChild</b></p>
<p>Removes specified child node.</p>
</td>
</tr>
<tr>
<td class="ts">28</td>
<td>
<p><b>ReplaceChild</b></p>
<p>Replaces the child node oldChild with newChild node.</p>
</td>
</tr>
<tr>
<td class="ts">29</td>
<td>
<p><b>Save(Stream)</b></p>
<p>Saves the XML document to the specified stream.</p>
</td>
</tr>
<tr>
<td class="ts">30</td>
<td>
<p><b>Save(String)</b></p>
<p>Saves the XML document to the specified file.</p>
</td>
</tr>
<tr>
<td class="ts">31</td>
<td>
<p><b>Save(TextWriter)</b></p>
<p>Saves the XML document to the specified TextWriter.</p>
</td>
</tr>
<tr>
<td class="ts">32</td>
<td>
<p><b>Save(XmlWriter)</b></p>
<p>Saves the XML document to the specified XmlWriter.</p>
</td>
</tr>
</table>
<h2>Example 3</h2>
<p>In this example, let us insert some new nodes in the xml document authors.xml and then show all the authors' first names in a list box.</p>
<p>Take the following steps &minus;</p>
<ul class="list">
<li><p>Add the authors.xml file in the bin/Debug folder of your application( it should be there if you have tried the last example)</p></li>
<li><p>Import the System.Xml namespace</p></li>
<li><p>Add a list box and a button control in the form and set the text property of the button control to Show Authors.</p></li>
<li><p>Add the following code using the code editor.</p></li>
</ul>
<pre class="prettyprint notranslate">
Imports System.Xml
Public Class Form1
   Private Sub Form1_Load(sender As Object, e As EventArgs) Handles MyBase.Load
      ' Set the caption bar text of the form.   
      Me.Text = "tutorialspoint.com"
   End Sub
   
   Private Sub Button1_Click(sender As Object, e As EventArgs) Handles Button1.Click
      ListBox1.Items.Clear()
      
      Dim xd As XmlDocument = New XmlDocument()
      xd.Load("authors.xml")
      
      Dim newAuthor As XmlElement = xd.CreateElement("author")
      newAuthor.SetAttribute("code", "6")
      
      Dim fn As XmlElement = xd.CreateElement("fname")
      fn.InnerText = "Bikram"
      newAuthor.AppendChild(fn)
      
      Dim ln As XmlElement = xd.CreateElement("lname")
      ln.InnerText = "Seth"
      newAuthor.AppendChild(ln)
      xd.DocumentElement.AppendChild(newAuthor)
      
      Dim tr As XmlTextWriter = New XmlTextWriter("movies.xml", Nothing)
      tr.Formatting = Formatting.Indented
      xd.WriteContentTo(tr)
      tr.Close()
      
      Dim nl As XmlNodeList = xd.GetElementsByTagName("fname")
      
      For Each node As XmlNode In nl
         ListBox1.Items.Add(node.InnerText)
      Next node
   End Sub
End Class
</pre>
<ul class="list">
<li><p>Execute and run the above code using <b>Start</b> button available at the Microsoft Visual Studio tool bar. Clicking on the Show Author button would display the first names of all the authors including the one we have added at runtime.</p></li>
</ul>
<img src="/vb.net/images/vb.net_xml_processing3.jpg" alt="VB.Net XML Processing Example 3"/>
<div class="mui-container-fluid button-borders show">
<div class="pre-btn">
<a href="/vb.net/vb.net_send_email.htm"><i class="fal fa-chevron-circle-left"></i> Previous Page</a>
</div>
<div class="nxt-btn">
<a href="/vb.net/vb.net_web_programming.htm">Next Page <i class="fal fa-chevron-circle-right"></i>&nbsp;</a>
</div>
</div>
<div class="google-bottom-ads">
<div>Advertisements</div>
<script><!--
var width = 580;
var height = 400;
var format = "580x400_as";
if( window.innerWidth < 468 ){
   width = 300;
   height = 250;
   format = "300x250_as";
}
google_ad_client = "pub-7133395778201029";
google_ad_width = width;
google_ad_height = height;
google_ad_format = format;
google_ad_type = "image";
google_ad_channel ="";
//--></script>
<script src="https://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
<div class="space-bottom"></div>
</div>
</div>
<!-- Tutorial Content Ends Here -->
<!-- Right Column Starts Here -->
<div class="mui-col-md-2 google-right-ads">
<div class="space-top"></div>
<div class="google-right-ad" style="margin: 0px auto !important;margin-top:5px;">
<script><!--
google_ad_client = "pub-2537027957187252";
google_ad_width = 300;
google_ad_height = 250;
google_ad_format = "300x250_as";
google_ad_type = "image";
google_ad_channel ="";
//--></script>
<script src="https://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</div>
<div class="google-right-ad">
<div class="adsbyvli" data-ad-slot="vi_9012177"></div>
<script>(vitag.Init = window.vitag.Init || []).push(function(){viAPItag.display("vi_9012177")})</script>
</div>
<div class="space-bottom"></div>
<div class="google-right-ad">
<div class="adsbyvli" data-ad-slot="vi_9013289"></div>
<script>(vitag.Init = window.vitag.Init || []).push(function(){viAPItag.display("vi_9013289")})</script>
</div>
<div class="space-bottom" style="margin-bottom:15px;"></div>
</div>
<!-- Right Column Ends Here -->
</div>
</div>
<div class="clear"></div>
<footer id="footer">
<div class="mui--text-center">
<div class="mui--text-caption mui--text-light">
<a href="/index.htm" class="logo"><img class="img-responsive" src="/images/logo-black.png" alt="Tutorials Point" title="Tutorials Point"></a>
</div>
<ul class="mui-list--inline mui--text-body2 mui--text-light">
<li><a href="/about/index.htm"><i class="fal fa-globe"></i> About us</a></li>
<li><a href="/about/about_terms_of_use.htm"><i class="fal fa-asterisk"></i> Terms of use</a></li>
<li><a href="/about/about_privacy.htm#cookies"> <i class="fal fa-shield-check"></i> Cookies Policy</a></li>
<li><a href="/about/faq.htm"><i class="fal fa-question-circle"></i> FAQ's</a></li>
<li><a href="/about/about_helping.htm"><i class="fal fa-hands-helping"></i> Helping</a></li>
<li><a href="/about/contact_us.htm"><i class="fal fa-map-marker-alt"></i> Contact</a></li>
</ul>
<div class="mui--text-caption mui--text-light bottom-copyright-text">&copy; Copyright 2019. All Rights Reserved.</div>
</div>
<div id="privacy-banner">
  <div>
    <p>
      We use cookies to provide and improve our services. By using our site, you consent to our Cookies Policy.
      <a id="banner-accept" href="#">Accept</a>
      <a id="banner-learn" href="/about/about_cookies.htm" target="_blank">Learn more</a>
    </p>
  </div>
</div>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-232293-17"></script>
<script>
window.dataLayer = window.dataLayer || [];
function gtag(){dataLayer.push(arguments);}
gtag('js', new Date());
gtag('config', 'UA-232293-6');
</script>
</footer>
</body>
</html>
