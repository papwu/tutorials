<!DOCTYPE html>
<html lang="en-US">
<head>
<title>Creating and Deploying using Serverless Framework</title>
<meta charset="utf-8">
<meta name="description" content="Creating and Deploying using Serverless Framework - AWS Lambda can be created and deployed using serverless framework. It allows you to create AWS Lambda triggers and also deploy the same by creating the required"/>
<meta name="keywords" content="C, C++, Python, Java, HTML, CSS, JavaScript, SQL, PHP, jQuery, XML, DOM, Bootstrap, Tutorials, Articles, Programming, training, learning, quiz, preferences, examples, code"/>
<link rel="canonical" href="https://www.tutorialspoint.com/aws_lambda/aws_lambda_creating_and_deploying_using_serverless_framework.htm" />
<link rel="shortcut icon" href="/favicon.ico" type="image/x-icon" />
<meta name="viewport" content="width=device-width,initial-scale=1.0,user-scalable=yes">
<script src="/theme/js/script-min-v2.js?v=3"></script>
<link rel="stylesheet" href="/theme/css/style-min-v2.css?v=6">
<script src="//services.bilsyndication.com/adv1/?d=901" defer="" async=""></script>
<script> var vitag = vitag || {};</script>
<script> vitag.outStreamConfig = { enablePC: false, enableMobile: false };</script>  
<style>
.right-menu .mui-btn {
    background-color:#f68535;
}
a.demo {
    background:#f68535;
}
li.heading {
    background:#f68535;
}
.course-box{background:#f68535}
.home-intro-sub p{color:#f68535}
</style>
</head>
<body>
<header id="header">
<!-- Top sub-menu Starts Here -->
<div class="mui-appbar mui-container-fulid top-menu">
<div class="mui-container">
<div class="top-menu-item home">
<a href="https://www.tutorialspoint.com/index.htm" target="_blank" title="TutorialsPoint - Home"><i class="fal fa-home"></i> <span>Home</span></a>
</div>
<div class="top-menu-item qa">
<a href="https://www.tutorialspoint.com/about/about_careers.htm" target="_blank" title="Job @ Tutorials Point"><i class="fa fa-suitcase"></i> <span>Jobs</span></a>
</div>
<div class="top-menu-item tools">
<a href="https://www.tutorialspoint.com/online_dev_tools.htm" target="_blank" title="Tools - Online Development and Testing Tools"><i class="fal fa-cogs"></i> <span>Tools</span></a>
</div>
<div class="top-menu-item coding-ground">
<a href="https://www.tutorialspoint.com/codingground.htm" target="_blank" title="Coding Ground - Free Online IDE and Terminal"><i class="fal fa-code"></i> <span>Coding Ground </span></a> 
</div>
<div class="top-menu-item current-affairs">
<a href="https://www.tutorialspoint.com/current_affairs.htm" target="_blank" title="Daily Current Affairs"><i class="fal fa-layer-plus"></i> <span>Current Affairs</span></a>
</div>
<div class="top-menu-item upsc-notes">
<a href="https://www.tutorialspoint.com/upsc_ias_exams.htm" target="_blank" title="UPSC IAS Exams Notes - TutorialsPoint"><i class="fal fa-user-tie"></i> <span>UPSC Notes</span></a>
</div>      
<div class="top-menu-item online-tutoris">
<a href="https://www.tutorialspoint.com/tutor_connect/index.php" target="_blank" title="Top Online Tutors - Tutor Connect"><i class="fal fa-user"></i> <span>Online Tutors</span></a>
</div>
<div class="top-menu-item whiteboard">
<a href="https://www.tutorialspoint.com/whiteboard.htm" target="_blank" title="Free Online Whiteboard"><i class="fal fa-chalkboard"></i> <span>Whiteboard</span></a>
</div>
<div class="top-menu-item net-meeting">
<a href="https://www.tutorialspoint.com/netmeeting.php" target="_blank" title="A free tool for online video conferencing"><i class="fal fa-chalkboard-teacher"></i> <span>Net Meeting</span></a> 
</div>
<div class="top-menu-item articles">
<a href="https://www.tutorix.com" target="_blank" title="Tutorx - The Best Learning App" rel="nofollow"><i class="fal fa-video"></i> <span>Tutorix</span></a> 
</div>        
<div class="social-menu-item">
<a href="https://www.facebook.com/tutorialspointindia" target="_blank" rel="nofollow" data-placement="bottom" title="tutorialspoint @ Facebook"><i class="fab fa-facebook-f"></i></a> 
<a href="https://www.twitter.com/tutorialspoint" target="_blank" rel="nofollow" data-placement="bottom" title="tutorialspoint @ Twitter"><i class="fab fa-twitter"></i></a>
<a href="https://www.linkedin.com/company/tutorialspoint" target="_blank" rel="nofollow" data-placement="bottom" title="tutorialspoint @ Linkedin"><i class="fab fa-linkedin-in"></i></a>
<a href="https://www.youtube.com/channel/UCVLbzhxVTiTLiVKeGV7WEBg" target="_blank" rel="nofollow" data-placement="bottom" title="tutorialspoint YouTube"><i class="fab fa-youtube"></i></a>
</div>        
</div>
</div>
<!-- Top sub-menu Ends Here -->
<!-- Top main-menu Starts Here -->
<div class="mui-appbar mui-container-fulid mui--appbar-line-height mui--z1" id="logo-menu">
<div class="mui-container">
<div class="left-menu">
<a href="https://www.tutorialspoint.com/index.htm" title="Tutorialspoint">
<img class="tp-logo" alt="tutorialspoint" src="/aws_lambda/images/logo.png">
</a>
<div class="mui-dropdown">
<a class="mui-btn mui-btn--primary categories" data-mui-toggle="dropdown"><i class="fa fa-th-large"></i> 
<span>Categories <span class="mui-caret"></span></span></a>            
<ul class="mui-dropdown__menu cat-menu">
<li>
<ul>
<li><a href="/academic_tutorials.htm"><i class="fa fa-caret-right"></i> Academic Tutorials</a></li>
<li><a href="/big_data_tutorials.htm"><i class="fa fa-caret-right"></i> Big Data &amp; Analytics </a></li>
<li><a href="/computer_programming_tutorials.htm"><i class="fa fa-caret-right"></i> Computer Programming </a></li>
<li><a href="/computer_science_tutorials.htm"><i class="fa fa-caret-right"></i> Computer Science </a></li>
<li><a href="/database_tutorials.htm"><i class="fa fa-caret-right"></i> Databases </a></li>
<li><a href="/devops_tutorials.htm"><i class="fa fa-caret-right"></i> DevOps </a></li>
<li><a href="/digital_marketing_tutorials.htm"><i class="fa fa-caret-right"></i> Digital Marketing </a></li>
<li><a href="/engineering_tutorials.htm"><i class="fa fa-caret-right"></i> Engineering Tutorials </a></li>
<li><a href="/upsc_ias_exams.htm"><i class="fa fa-caret-right"></i> Exams Syllabus </a></li>
<li><a href="/famous_monuments.htm"><i class="fa fa-caret-right"></i> Famous Monuments </a></li>
<li><a href="/gate_exams_tutorials.htm"><i class="fa fa-caret-right"></i> GATE Exams Tutorials</a></li>
<li><a href="/latest_technologies.htm"><i class="fa fa-caret-right"></i> Latest Technologies </a></li>
<li><a href="/machine_learning_tutorials.htm"><i class="fa fa-caret-right"></i> Machine Learning </a></li>
<li><a href="/mainframe_tutorials.htm"><i class="fa fa-caret-right"></i> Mainframe Development </a></li>
<li><a href="/management_tutorials.htm"><i class="fa fa-caret-right"></i> Management Tutorials </a></li>
<li><a href="/maths_tutorials.htm"><i class="fa fa-caret-right"></i> Mathematics Tutorials</a></li>
<li><a href="/microsoft_technologies_tutorials.htm"><i class="fa fa-caret-right"></i> Microsoft Technologies </a></li>
<li><a href="/misc_tutorials.htm"><i class="fa fa-caret-right"></i> Misc tutorials </a></li>
<li><a href="/mobile_development_tutorials.htm"><i class="fa fa-caret-right"></i> Mobile Development </a></li>
<li><a href="/java_technology_tutorials.htm"><i class="fa fa-caret-right"></i> Java Technologies </a></li>
<li><a href="/python_technologies_tutorials.htm"><i class="fa fa-caret-right"></i> Python Technologies </a></li>
<li><a href="/sap_tutorials.htm"><i class="fa fa-caret-right"></i> SAP Tutorials </a></li>
<li><a href="/scripting_lnaguage_tutorials.htm"><i class="fa fa-caret-right"></i>Programming Scripts </a></li>
<li><a href="/selected_reading.htm"><i class="fa fa-caret-right"></i> Selected Reading </a></li>
<li><a href="/software_quality_tutorials.htm"><i class="fa fa-caret-right"></i> Software Quality </a></li>
<li><a href="/soft_skill_tutorials.htm"><i class="fa fa-caret-right"></i> Soft Skills </a></li>
<li><a href="/telecom_tutorials.htm"><i class="fa fa-caret-right"></i> Telecom Tutorials </a></li>
<li><a href="/upsc_ias_exams.htm"><i class="fa fa-caret-right"></i> UPSC IAS Exams </a></li>
<li><a href="/web_development_tutorials.htm"><i class="fa fa-caret-right"></i> Web Development </a></li>
<li><a href="/sports_tutorials.htm"><i class="fa fa-caret-right"></i> Sports Tutorials </a></li>
<li><a href="/xml_technologies_tutorials.htm"><i class="fa fa-caret-right"></i> XML Technologies </a></li>
<li><a href="/multi_language_tutorials.htm"><i class="fa fa-caret-right"></i> Multi-Language Tutorials</a></li>
<li><a href="/questions_and_answers.htm"><i class="fa fa-caret-right"></i> Interview Questions</a></li>
</ul>
</li>
</ul>
<div class="clear"></div>
</div> 
</div>
<div class="right-menu">
<div class="toc-toggle">
<a href="javascript:void(0);"><i class="fa fa-bars"></i></a>
</div>
<div class="mobile-search-btn">
<a href="https://www.tutorialspoint.com/search.htm"><i class="fal fa-search"></i></a>
</div>
<div class="search-box">
<form method="get" class="" name="searchform" action="https://www.google.com/search" target="_blank" novalidate="">
<input type="hidden" name="sitesearch" value="www.tutorialspoint.com" class="user-valid valid">
<input class="header-search-box" type="text" id="search-string" name="q" placeholder="Search your favorite tutorials..." onfocus="if (this.value == 'Search your favorite tutorials...') {this.value = '';}" onblur="if (this.value == '') {this.value = 'Search your favorite tutorials...';}" autocomplete="off">
<button><i class="fal fa-search"></i></button>
</form>
</div>
<div class="menu-btn library-btn">
<a href="https://www.tutorialspoint.com/tutorialslibrary.htm"><i class="fal fa-cubes"></i> <span>Library</span></a>
</div>
<div class="menu-btn videos-btn">
<a href="https://www.tutorialspoint.com/videotutorials/index.htm"><i class="fal fa-video"></i> <span>Videos</span></a> 
</div>
<div class="menu-btn videos-btn">
<a href="https://www.tutorialspoint.com/questions/index.php"><i class="fa fa-location-arrow"></i> <span>Q/A</span></a>
</div>
<div class="menu-btn ebooks-btn">
<a href="https://store.tutorialspoint.com"><i class="fal fa-book"></i> <span>eBooks</span></a>
</div>
<div class="mui-dropdown">
<button class="mui-btn mui-btn--primary" data-mui-toggle="dropdown">
<span class="mui-caret"></span>
</button>
<ul class="mui-dropdown__menu">
<li><a href="https://www.tutorialspoint.com/tutorialslibrary.htm"><i class="fal fa-cubes"></i> <span>Library</span></a></li>
<li><a href="https://www.tutorialspoint.com/videotutorials/index.htm"><i class="fal fa-video"></i> <span>Videos</span></a></li>
<li><a href="https://store.tutorialspoint.com"><i class="fal fa-book"></i> <span>eBooks</span></a></li>
</ul>
</div>
</div>
</div>
</div>
<!-- Top main-menu Ends Here -->
</header>
<div class="mui-container-fluid content">
<div class="mui-container">
<!-- Tutorial ToC Starts Here -->
<div class="mui-col-md-3 tutorial-toc">
<div class="mini-logo">
<img src="/aws_lambda/images/aws_lambda-mini-logo.jpg" alt="AWS Lambda Tutorial" />
</div>
<ul class="toc chapters">
<li class="heading">AWS Lambda Tutorial</li>
<li><a href="/aws_lambda/index.htm">AWS Lambda - Home</a></li>
<li><a href="/aws_lambda/aws_lambda_overview.htm">AWS Lambda - Overview</a></li>
<li><a href="/aws_lambda/aws_lambda_environment_setup.htm">AWS Lambda - Environment Setup</a></li>
<li><a href="/aws_lambda/aws_lambda_introduction.htm">AWS Lambda - Introduction</a></li>
<li><a href="/aws_lambda/aws_lambda_building_the_lambda_function.htm">Building the Lambda function</a></li>
<li><a href="/aws_lambda/aws_lambda_function_in_nodejs.htm">Function in NODEJS</a></li>
<li><a href="/aws_lambda/aws_lambda_function_in_java.htm">Function in Java</a></li>
<li><a href="/aws_lambda/aws_lambda_function_in_python.htm">Function in Python</a></li>
<li><a href="/aws_lambda/aws_lambda_function_in_go.htm">Function in Go</a></li>
<li><a href="/aws_lambda/aws_lambda_function_in_csharp.htm">Function in C#</a></li>
<li><a href="/aws_lambda/aws_lambda_configuring_lambda_function.htm">Configuring Lambda Function</a></li>
<li><a href="/aws_lambda/aws_lambda_creating_and_deploying_using_aws_console.htm">Creating &amp; Deploying using AWS Console</a></li>
<li><a href="/aws_lambda/aws_lambda_creating_and_deploying_using_aws_cli.htm">Creating &amp; Deploying using AWS CLI</a></li>
<li><a href="/aws_lambda/aws_lambda_creating_and_deploying_using_serverless_framework.htm">Creating &amp; Deploying using Serverless Framework</a></li>
<li><a href="/aws_lambda/aws_lambda_executing_and_invoking_lambda_function.htm">AWS Executing &amp; Invoking Lambda Function</a></li>
<li><a href="/aws_lambda/aws_lambda_deleting_lambda_function.htm">Deleting Lambda Function</a></li>
<li><a href="/aws_lambda/aws_lambda_working_with_amazon_api_gateway.htm">Working with Amazon API Gateway</a></li>
<li><a href="/aws_lambda/aws_lambda_using_lambda_function_with_amazon_s3.htm">Lambda Function with Amazon S3</a></li>
<li><a href="/aws_lambda/aws_lambda_using_lambda_function_with_amazon_dynamodb.htm"> Lambda Function with Amazon DynamoDB</a></li>
<li><a href="/aws_lambda/aws_lambda_using_lambda_function_with_scheduled_events.htm">Lambda Function with Scheduled Events</a></li>
<li><a href="/aws_lambda/aws_lambda_using_lambda_function_with_amazon_sns.htm">Lambda Function with Amazon SNS</a></li>
<li><a href="/aws_lambda/aws_lambda_using_lambda_function_with_cloudtrail.htm">Lambda Function with CloudTrail</a></li>
<li><a href="/aws_lambda/aws_lambda_using_lambda_function_with_amazon_kinesis.htm"> Lambda Function with Amazon Kinesis</a></li>
<li><a href="/aws_lambda/aws_lambda_using_lambda_function_with_custom_user_applications.htm">Lambda Function with Custom User Applications</a></li>
<li><a href="/aws_lambda/aws_lambda_using_aws_lambdaedge_with_cloudfront.htm">AWS Lambda@Edge with CloudFront</a></li>
<li><a href="/aws_lambda/aws_lambda_monitoring_and_troubleshooting_using_cloudwatch.htm">Monitoring and TroubleShooting using Cloudwatch</a></li>
<li><a href="/aws_lambda/aws_lambda_additional_example.htm">AWS Lambda - Additional Example</a></li>
<ul class="toc chapters">
<li class="heading">AWS Lambda Useful resources</li>
<li><a href="/aws_lambda/aws_lambda_quick_guide.htm">AWS Lambda - Quick Guide</a></li>
<li><a href="/aws_lambda/aws_lambda_useful_resources.htm">AWS Lambda - Useful resources</a></li>
<li><a href="/aws_lambda/aws_lambda_discussion.htm">AWS Lambda - Discussion</a></li>
</ul>
<ul class="toc reading">
<li class="sreading">Selected Reading</li>
<li><a target="_top" href="/upsc_ias_exams.htm">UPSC IAS Exams Notes</a></li>
<li><a target="_top" href="/developers_best_practices/index.htm">Developer's Best Practices</a></li>
<li><a target="_top" href="/questions_and_answers.htm">Questions and Answers</a></li>
<li><a target="_top" href="/effective_resume_writing.htm">Effective Resume Writing</a></li>
<li><a target="_top" href="/hr_interview_questions/index.htm">HR Interview Questions</a></li>
<li><a target="_top" href="/computer_glossary.htm">Computer Glossary</a></li>
<li><a target="_top" href="/computer_whoiswho.htm">Who is Who</a></li>
</ul>
</div>
<!-- Tutorial ToC Ends Here -->
<!-- Tutorial Content Starts Here -->
<div class="mui-col-md-6 tutorial-content">
<h1>Creating and Deploying using Serverless Framework</h1>
<hr />
<div class="top-ad-heading">Advertisements</div>
<div style="text-align: center;">
<script><!--
google_ad_client = "pub-7133395778201029";
var width = document.getElementsByClassName("tutorial-content")[0].clientWidth - 40;
google_ad_width = width;
google_ad_height = 150;
google_ad_format = width + "x150_as";
google_ad_type = "image";
google_ad_channel = "";
//--></script>
<script src="https://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</div>
<div class="mui-container-fluid button-borders">
<div class="pre-btn">
<a href="/aws_lambda/aws_lambda_creating_and_deploying_using_aws_cli.htm"><i class="fal fa-chevron-circle-left"></i> Previous Page</a>
</div>
<div class="nxt-btn">
<a href="/aws_lambda/aws_lambda_executing_and_invoking_lambda_function.htm">Next Page <i class="fal fa-chevron-circle-right"></i>&nbsp;</a>
</div>
</div>
<div class="clearer"></div>
<p>AWS Lambda can be created and deployed using serverless framework. It allows you to create AWS Lambda triggers and also deploy the same by creating the required roles. Serverless framework allows to handle big projects in an easier way. The events and resources required are written in one place and just a few commands helps in deploying the full functionality on AWS console.</p>
<p>In this chapter, you will learn in detail how to get started with AWS serverless framework.</p>
<h2>Install Serverless Framework using npm install</h2>
<p>To begin with, you need to first install <b>nodejs</b>. You can check for nodejs as follows &minus;</p>
<img src="/aws_lambda/images/install_server.jpg" alt="Install Server" />
<p>You will have to use the following command to install serverless using npm package &minus;</p>
<pre class="result notranslate">
npm install -g serverless
</pre>
<p></p>
<img src="/aws_lambda/images/severless.jpg" alt="Severless" />
<p>Once npm is done, execute serverless command which shows the list of command to be used to create and deploy AWS Lambda function. Observe the screenshots given below &minus;</p>
<img src="/aws_lambda/images/framework_command.jpg" alt="Framework Command" />
<p></p>
<img src="/aws_lambda/images/framework_prompt.jpg" alt="Framework Prompt" />
<p>You can also use sls instead of serverless. <b>sls</b> is the shorthand command for serverless.</p>
<img src="/aws_lambda/images/shorthand.jpg" alt="Shorthand" />
<p>In case you need help on the command <b>sls,</b> you can use the following command &minus;</p>
<pre class="result notranslate">
sls create --help
</pre>
<p></p>
<img src="/aws_lambda/images/help.jpg" alt="Help" />
<p>For creating a serverless framework, you have to follow the steps given below &minus;</p>
<h3>Step 1</h3>
<p>To start using serverless framework, we need to add the credentials. By this, you can the user first in AWS console as follows &minus;</p>
<img src="/aws_lambda/images/add_user.jpg" alt="Add User" />
<h3>Step 2</h3>
<p>Click on <b>Next:Permissions</b> button to add permissions. You will have to attach the existing policies or Administrator Access to this user.</p>
<img src="/aws_lambda/images/set_permission.jpg" alt="Set Permission" />
<p></p>
<img src="/aws_lambda/images/summary_review.jpg" alt="Summary Review" />
<h3>Step 3</h3>
<p>Click <b>Create User</b> to add the user. It will display the access key and secret key which we need to configure the serverless framework &minus;</p>
<img src="/aws_lambda/images/create_user.jpg" alt="Create User" />
<h2>Configure AWS Serverless Framework</h2>
<p>Let us see how to configure AWS serverless framework. You can use the following command for this purpose &minus;</p>
<pre class="result notranslate">
sls config credentials --provider aws --key accesskey --secret secretkey
</pre>
<p></p>
<img src="/aws_lambda/images/configure_framework.jpg" alt="Configure Framework" />
<p>Note that the details of credentials entered, that is the <b>access key</b> and <b>secret key</b> are stored in the <b>file /aws/credentials</b>.</p>
<p>First, create a folder where you want your project files to be stored.</p>
<img src="/aws_lambda/images/create_folder.jpg" alt="Create Folder" />
<p>Next, we will start the work in <b>aws-serverless</b> folder.</p>
<h2>Create AWS Lambda using Serverless Framework</h2>
<p>Now, let us create a Lambda function with the serverless framework using the Steps given below &minus;</p> 
<h3>Step 1</h3>
<p>Following are the details for serverless <b>create</b> command &minus;</p>
<img src="/aws_lambda/images/create_command.jpg" alt="Create Command" />
<h3>Step 2</h3>
<p>Now, we need to assign the template which are as follows &minus;</p>
<p><b>AWS-nodejs, aws-nodejs-typescript, aws-nodejs-ecma-script, aws-python, aws-python3, aws-groovy-gradle etc.</b></p>
<h3>Step 3</h3>
<p>We shall make use of <b>aws-nodejs</b> template to create our first project using serverless framework. The command for the same purpose is as shown here &minus;</p>
<pre class="result notranslate">
sls create --template aws-nodejs
</pre>
<p></p>
<img src="/aws_lambda/images/nodejs.jpg" alt="Nodejs" />
<p>Note that this command creates a boilerplate for template aws-nodejs.</p>
<h3>Step 4</h3>
<p>Now, open the folder created in an IDE. Here we are using Visual Studio code and the folder structure is as follows &minus;</p>
<img src="/aws_lambda/images/visual_studio_framework.jpg" alt="Visual Studio Framework" />
<h3>Step 5</h3>
<p>There are 2 files created: <b>handler.js</b> and <b>Serverless.yml</b></p>
<p>The AWS Lambda basic function details are shown in <b>handler.js</b> as follows &minus;</p>
<pre class="prettyprint notranslate">
'use strict';

module.exports.hello = (event, context, callback) =&gt; {
   const response = {
      statusCode: 200,
      body: JSON.stringify({
         message: 'Go Serverless v1.0! Your function executed successfully!',
         input: event,
      }),
   };
   callback(null, response);

   // Use this code if you don't use the http event with the LAMBDA-PROXY integration
   // callback(null, { message: 'Go Serverless v1.0! Your function executed successfully!', event });
};
</pre>
<p>This file <b>Serverless.yml</b> has the configuration details of the serverless framework as shown below &minus;</p>
<pre class="prettyprint notranslate">
# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config Examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!
service: aws-nodejs # NOTE: update this with your service name

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
# frameworkVersion: "=X.X.X"

provider:
 name: aws
 runtime: nodejs6.10

# you can overwrite defaults here
#  stage: dev
#  region: us-east-1

# you can add statements to the Lambda function's IAM Role here
#  iamRoleStatements:
#    - Effect: "Allow"
#      Action:
#        - "s3:ListBucket"
#      Resource: { "Fn::Join" : ["", ["arn:aws:s3:::", { "Ref" : "ServerlessDeploymentBucket" } ] ]  }
#    - Effect: "Allow"
#      Action:
#        - "s3:PutObject"
#      Resource:
#        Fn::Join:
#          - ""
#          - - "arn:aws:s3:::"
#            - "Ref" : "ServerlessDeploymentBucket"
#            - "/*"

# you can define service wide environment variables here
#  environment:
#    variable1: value1

# you can add packaging information here
#package:
#  include:
#    - include-me.js
#    - include-me-dir/**
#  exclude:
#    - exclude-me.js
#    - exclude-me-dir/**

functions:
 hello:
   handler: handler.hello

#    The following are a few example events you can configure
#    NOTE: Please make sure to change your handler code to work with those events
#    Check the event documentation for details
#    events:
#      - http:
#          path: users/create
#          method: get
#      - s3: ${env:BUCKET}
#      - schedule: rate(10 minutes)
#      - sns: greeter-topic
#      - stream: arn:aws:dynamodb:region:XXXXXX:table/foo/stream/1970-01-01T00:00:00.000
#      - alexaSkill: amzn1.ask.skill.xx-xx-xx-xx
#      - alexaSmartHome: amzn1.ask.skill.xx-xx-xx-xx
#      - iot:
#          sql: "SELECT * FROM 'some_topic'"
#      - cloudwatchEvent:
#          event:
#            Example:
#              - "aws.ec2"
#            detail-type:
#              - "EC2 Instance State-change Notification"
#            detail:
#              state:
#                - pending
#      - cloudwatchLog: '/aws/lambda/hello'
#      - cognitoUserPool:
#          pool: MyUserPool
#          trigger: PreSignUp

#    Define function environment variables here
#    environment:
#      variable2: value2

# you can add CloudFormation resource templates here
#resources:
#  resources:
#    NewResource:
#      Type: AWS::S3::Bucket
#      Properties:
#        BucketName: my-new-bucket
#  Outputs:
#     NewOutput:
#       Description: "Description for the output"
#       Value: "Some output value"
</pre>
<p>Now, we need to add changes in serverless.yml file as per our requirements. You can use the commands as given below &minus;</p>
<p>You can use the following command for <b>Service</b> &minus;</p>
<pre class="result notranslate">
service: aws-nodejs # NOTE: update this with your service name
</pre>
<p>Now, change the service here and add the name given to our folder as shown &minus;</p>
<pre class="result notranslate">
service: aws-serverless # NOTE: update this with your service name
</pre>
<p>The provider details are as shown &minus;</p>
<pre class="result notranslate">
provider:
   name: aws
   runtime: nodejs6.10
</pre> 
<p>The provider is <b>aws</b> and runtime is <b>nodejs6.10</b>. We need to add the <b>region</b> in which we will be working and the <b>stage</b>, that is <b>dev or prod</b> environment for the project. So here are the updated details of provider:provider &minus;</p>
<pre class="result notranslate">
name: aws
runtime: nodejs6.10
# you can overwrite defaults here
stage: prod
region: us-east-1
</pre> 
<h3>IAM Role</h3>
<p>The <b>iam role</b>, that is, the code for permission to work with Lambda is shown here in the <b>.yml</b> file &minus;</p>
<pre class="prettyprint notranslate">
#  iamRoleStatements:
#    - Effect: "Allow"
#      Action:
#        - "s3:ListBucket"
#      Resource: { "Fn::Join" : ["", ["arn:aws:s3:::", { "Ref" : "ServerlessDeploymentBucket" } ] ]  }
#    - Effect: "Allow"
#      Action:
#        - "s3:PutObject"
#      Resource:
#        Fn::Join:
#          - ""
#          - - "arn:aws:s3:::"
#            - "Ref" : "ServerlessDeploymentBucket"
#            - "/*"
</pre>
<p>Note that we need to give the details of the role, that is the permission required with other AWS services, in the above section.</p>
<h3>AWS Lambda Handler Details</h3>
<p>The name of the export function in <b>handler.js</b> is hello. So the handler is name of the file followed by export name.</p>
<pre class="result notranslate">
functions:
   hello:
      handler: handler.hello
</pre>	
<p>The resource details about the s3 service added as shown below here &minus;</p>
<pre class="prettyprint notranslate">
# you can add CloudFormation resource templates here
#resources:
#  resources:
#    NewResource:
#      Type: AWS::S3::Bucket
#      Properties:
#        BucketName: my-new-bucket
#  Outputs:
#     NewOutput:
#       Description: "Description for the output"
#       Value: "Some output value"
</pre>
<h2>Deploy AWS Lambda using Serverless Framework</h2>
<p>Let us deploy the above lambda function to AWS console. You can use the following Steps for this purpose &minus;</p>
<h3>Step 1</h3>
<p>First, you will have to use the following command &minus;</p>
<pre class="result notranslate">
 sls deploy
</pre>
<p></p>
<img src="/aws_lambda/images/deploy.jpg" alt="Deploy" />
<h3>Step 2</h3>
<p>Now, you should see the function in AWS console now as shown. The details of serverless AWS are logged in AWS cloud formation. For this purpose, go to AWS service and select <b>CloudFormation</b>. The details of the AWS Lambda are displayed as follows &minus;</p>
<img src="/aws_lambda/images/cloud_framework.jpg" alt="Cloud Framework" />
<p>Observe that the name given is project name followed by the stage used.</p>
<img src="/aws_lambda/images/stage_used.jpg" alt="Stage Used" />
<h3>Step 3</h3>
<p>It creates the iam role for AWS Lambda and log group for AWS cloudwatch. S3 bucket is created which has the code details stored and the configuration details.</p>
<p>This is created by the command <b>sls deploy</b>. You need not specify the iam role, instead it is created by default during the <b>deploy</b> stage.</p>
<img src="/aws_lambda/images/serverless_prod.jpg" alt="Serverless Prod" />
<h3>Step 4</h3>
<p>The detailed flow of events is displayed below in the cloud formation service.</p>
<img src="/aws_lambda/images/detailed_flow.jpg" alt="Detailed Flow" />
<p></p>
<img src="/aws_lambda/images/hello.jpg" alt="Hello" />
<h2>AWS Lambda Code</h2>
<p>The AWS Lambda code and its execution settings are shown in the screenshot given below &minus;</p>
<img src="/aws_lambda/images/lambda_code.jpg" alt="Lambda Code" />
<p>When you test the Lambda function, you can find the following output &minus;</p>
<img src="/aws_lambda/images/lambda_framework.jpg" alt="Lambda framework" />
<p></p>
<img src="/aws_lambda/images/execution_framework.jpg" alt="Execution Framework" />
<p>The Log output for the above function is shown here &minus;</p>
<img src="/aws_lambda/images/framework_output.jpg" alt="Framework Output" />
<p>We can also test the AWS Lambda function using the serverless command as shown below &minus;</p>
<pre class="result notranslate">
sls invoke --function hello
</pre>
<p></p>
<img src="/aws_lambda/images/serverless_framework.jpg" alt="Serverless Framework" />
<p>The syntax of the invoke command is shown here &minus;</p>
<pre class="result notranslate">
sls invoke --function hello
</pre>
<p>This invoke command triggers the AWS Lambda function and displays the output in the command prompt as shown below &minus;</p>
<img src="/aws_lambda/images/command_trigger.jpg" alt="Command Trigger" />
<p>You can also test the Lambda function before deploying and the command for same using the following command  &minus;</p>
<pre class="result notranslate">
sls invoke local --function hello 
</pre>
<p>Please note that it is not always possible to test locally as the resources like S3 andDynanoDB cannot be simulated on the local environment. Only the basic function calls can be tested locally.</p>
<img src="/aws_lambda/images/invoke_local.jpg" alt="Invoke Local" />
<h2>Using API Gateway and AWS Lambda with Serverless Framework</h2>
<p>Let us see how to create new project to work with Lambda and api gateway. You can use the following command for this purpose &minus;</p>
<pre class="result notranslate">
sls create --template aws-nodejs 
</pre>
<p></p>
<img src="/aws_lambda/images/api_gateway_framework.jpg" alt="Api Gateway Framework" />
<p>Now, open <b>aws-api</b> project in visual code. You can see that the <b>handler.js</b> and <b>serverless.yml</b> files created. Let us do the changes in that for addition of api gateway.</p>
<img src="/aws_lambda/images/handler_open.jpg" alt="Handler Open" />
<p>You will have to do the following changes in <b>serverless.yml</b> &minus;</p>
<img src="/aws_lambda/images/changes.jpg" alt="Changes" />
<p>Now, the events details added for api gateway activation with AWS Lambda &minus;</p>
<img src="/aws_lambda/images/event_details.jpg" alt="Event Details" />
<p>There is a new thing added here called <b>events</b>. We have specified the event as <b>http</b>, along with its path and method.</p>
<p>The path is the end-point which we will use when the api gateway path is created and method used is GET.</p>
<p>Observe that the handler is <b>handler.hello</b>, and hello is the export name from handler.js.</p>
<img src="/aws_lambda/images/observe_handler.jpg" alt="Observe Handler" />
<p>Note that you donot have to deploy the api gateway here, as the serverless framework will perform it.</p>
<p>Now, we will run the <b>sls deploy</b> command to create AWS Lambda function with trigger as <b>api gateway</b>.</p>
<pre class="result notranslate">
sls deploy
</pre>
<p></p>
<img src="/aws_lambda/images/sls_deploy.jpg" alt="Sls Deploy" />
<p>Observe that the deploy details are listed above. It gives the <b>Get</b> url with the end-point as the path details. The stage is <b>prod</b> so same is used in the url. The name of the function is <b>aws-api-prod-hello</b>.</p>
<p>Let us hit the url and see the output. You can see the followings the response we get from the api-gateway get url &minus;</p>
<img src="/aws_lambda/images/response.jpg" alt="Response" />
<pre class="result notranslate">
{"message":"Go Serverless v1.0! Your function executed 
successfully!","input":{"resource":"/first-api","path":"/first-api","httpMethod":
"GET","headers":{"Accept":"text/html,application/xhtml+xml,application/xml;q=0.9,
image/webp,image/apng,*/*;q=0.8","Accept-Encoding":"gzip, deflate, br","Accept-Language":"en-US,en;q=0.9","CloudFront-Forwarded-Proto":
"https","CloudFront-Is-Desktop-Viewer":"true","CloudFront-Is-Mobile-Viewer":
"false","CloudFront-Is-SmartTV-Viewer":"false","CloudFront-Is-Tablet-Viewer":
"false","CloudFront-Viewer-Country":"IN","Host":"nvbhfdojfg.execute-api.us-east-1.
amazonaws.com","upgrade-insecure-requests":"1","User-Agent":"Mozilla/5.0 
(Windows NT 6.3; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko)
 Chrome/66.0.3359.181 Safari/537.36","Via":"2.0 707912794802dbb4825c79b7d8626a5d.cloudfront.net (CloudFront)","X-Amz-Cf-Id":"j70MMqkWFp6kmvuauzp_nvTbI-WwKIQmm2Jl5hzSoN6gkdvX11hh-g==",
 "X-Amzn-Trace-Id":"Root=1-5b13f9ef-5b012e36b7f40b5013a326fc","X-Forwarded-For":"157.33.133.217, 54.182.242.73","X-Forwarded-Port":"443","X-Forwarded-Proto":"https"},
 "queryStringParameters":null,"pathParameters":null,"stageVariables":null,
 "requestContext":{"resourceId":"pes5sy","resourcePath":"/first-api","httpMethod":
 "GET","extendedRequestId":"H6P9fE-MoAMFdIg=","requestTime":"03/Jun/2018:14:23:
 43 +0000","path":"/prod/first-api","accountId":"625297745038","protocol":"HTTP/1.1",
 "stage":"prod","requestTimeEpoch":1528035823928,"requestId":"b865dbd6-6739-11e8-b135
 -a30269a8ec58","identity":{"cognitoIdentityPoolId":null,"accountId":null,
 "cognitoIdentityId":null,"caller":null,"SourceIp":"157.33.133.217","accessKey":null,
 "cognitoAuthenticationType":null,"cognitoAuthenticationProvider":null,"userArn":null,
 "userAgent":"Mozilla/5.0 (Windows NT 6.3; Win64; x64) AppleWebKit/537.36 (KHTML, like
 Gecko) Chrome/66.0.3359.181 Safari/537.36","user":null},"apiId":"nvbhfdojfg"},"body":null,
 "isBase64Encoded":false}}
</pre>
<p>The event details are also available in the output when you hit the url. The httpMethod is GET and the queryStringParameters are null as there is nothing passed in the query string. The event details are given to <b>input</b> which we have specified in the AWS Lambda handler &minus;</p>
<img src="/aws_lambda/images/input.jpg" alt="Input" />
<p>The output we get from api gateway are only the <b>body</b> details such as <b>message</b> and <b>input</b>. The response is totally controlled by the api gateway and how to display it as output.</p>
<p>Now, let us pass inputs to the GET url in query string and see the display &minus;</p>
<img src="/aws_lambda/images/get_url.jpg" alt="Get Url" />

<p>Then you can see the output of querystring as shown below &minus;</p>
<pre class="result notranslate">
{"message":"Go Serverless v1.0! Your function executed 
successfully!","input":{"resource":"/first-api","path":"/first-api","httpMethod":
"GET","headers":{"Accept":"text/html,application/xhtml+xml,application/xml;q=0.9,
image/webp,image/apng,*/*;q=0.8","Accept-Encoding":"gzip, deflate, 
br","Accept-Language":"en-US,en;q=0.9","CloudFront-Forwarded-Proto":"https",
"CloudFront-Is-Desktop-Viewer":"true","CloudFront-Is-Mobile-Viewer":"false",
"CloudFront-Is-SmartTV-Viewer":"false","CloudFront-Is-Tablet-Viewer":"false",
"CloudFront-Viewer-Country":"IN","Host":"nvbhfdojfg.execute-api.us-east-1.amazonaws.com",
"upgrade-insecure-requests":"1","User-Agent":"Mozilla/5.0 (Windows NT 6.3; Win64; x64)
 AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.181 Safari/537.36","Via":"2.0 
 8b1d3263c2fbd0a2c270b174d7aa3d61.cloudfront.net (CloudFront)","X-Amz-Cf-Id":"JIBZw3I-blKbnpHP8LYXPVolCgdW5KmEukZS4at9mi4vrWBMI-UKNw==",
 "X-Amzn-Trace-Id":"Root=1-5b13ff90-7d6e38d4c0e4a5d4e6184f30","X-Forwarded-For":
 "157.33.133.217, 54.182.242.127","X-Forwarded-Port":"443","X-Forwarded-Proto":"https"},"queryString
 Parameters":{"displaymessage":"Hello"},"pathParameters":null,"stageVariables":null,
 "requestContext":{"resourceId":"pes5sy","resourcePath":"/first-api","httpMethod":
 "GET","extendedRequestId":"H6TeiG34oAMFguA=","requestTime":"03/Jun/2018:14:47:44 +0000","path":"/prod/first-api","accountId":"625297745038","protocol":"HTTP/1.1",
"stage":"prod","requestTimeEpoch":1528037264252,"requestId":"12e5dca3-
673d-11e8-8966-69fcf43bd4db","identity":{"cognitoIdentityPoolId":null,"accountId":null,
"cognitoIdentityId":null,"caller":null,"exmpleIp":"157.33.133.217","accessKey":null,
"cognitoAuthenticationType":null,"cognitoAuthenticationProvider":null,"userArn":null,
"userAgent":"Mozilla/5.0 (Windows NT 6.3; Win64; x64) AppleWebKit/537.36 (KHTML, like
 Gecko) Chrome/66.0.3359.181 Safari/537.36","user":null},"apiId":"nvbhfdojfg"},"body":
 null,"isBase64Encoded":false}}
</pre>
<p>Let us change the AWS Lambda function to just display the querystring details as shown below &minus;</p>
<pre class="prettyprint notranslate">
'use strict';
module.exports.hello = (event, context, callback) =&gt; {
   const response = {
      statusCode: 200,
      body: JSON.stringify({
         message:(event.queryStringParameters &&     event.queryStringParameters.displaymessage!="") ? event.queryStringParameters.displaymessage : 'Go Serverless v1.0! Your function executed successfully!'
      }),
   };
   callback(null, response);
   // Use this code if you don't use the http event with the LAMBDA-PROXY integration
   // callback(null, { message: 'Go Serverless v1.0! Your function executed successfully!', event });
};
</pre>
<p>Observe that we have changed the message based on the querystring <b>display message</b>. This will deploy the the function again and check the output. It displays the details present in query string variable display message as shown below.</p>
<img src="/aws_lambda/images/display_message.jpg" alt="Display Message" />
<p>Let us now add <b>post</b> method to the events created as shown below &minus;</p>
<img src="/aws_lambda/images/post_method.jpg" alt="Post Method" />
<p>Now, deploy the changes made and you can see the following output from the deploy command &minus;</p>
<img src="/aws_lambda/images/deploy_command.jpg" alt="Deploy Command" />
<p>Note that testing post url in browser directly will not give the details. You should test the post url in <b>postman</b>.</p> 
<p>To get postman go to <a href="https://www.getpostman.com/apps" rel="nofollow" target="_blank">https://www.getpostman.com/apps</a>. Download the app as per your OS. Once installed, you should be able to test your post url as shown below &minus;</p>
<img src="/aws_lambda/images/post_url.jpg" alt="Post Url" />
<p>This displays the message we have added in the Lambda function.</p>
<div class="mui-container-fluid button-borders show">
<div class="pre-btn">
<a href="/aws_lambda/aws_lambda_creating_and_deploying_using_aws_cli.htm"><i class="fal fa-chevron-circle-left"></i> Previous Page</a>
</div>
<div class="nxt-btn">
<a href="/aws_lambda/aws_lambda_executing_and_invoking_lambda_function.htm">Next Page <i class="fal fa-chevron-circle-right"></i>&nbsp;</a>
</div>
</div>
<div class="google-bottom-ads">
<div>Advertisements</div>
<script><!--
var width = 580;
var height = 400;
var format = "580x400_as";
if( window.innerWidth < 468 ){
   width = 300;
   height = 250;
   format = "300x250_as";
}
google_ad_client = "pub-7133395778201029";
google_ad_width = width;
google_ad_height = height;
google_ad_format = format;
google_ad_type = "image";
google_ad_channel ="";
//--></script>
<script src="https://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
<div class="space-bottom"></div>
</div>
</div>
<!-- Tutorial Content Ends Here -->
<!-- Right Column Starts Here -->
<div class="mui-col-md-2 google-right-ads">
<div class="space-top"></div>
<div class="google-right-ad" style="margin: 0px auto !important;margin-top:5px;">
<script><!--
google_ad_client = "pub-2537027957187252";
google_ad_width = 300;
google_ad_height = 250;
google_ad_format = "300x250_as";
google_ad_type = "image";
google_ad_channel ="";
//--></script>
<script src="https://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</div>
<div class="google-right-ad">
<div class="adsbyvli" data-ad-slot="vi_9012177"></div>
<script>(vitag.Init = window.vitag.Init || []).push(function(){viAPItag.display("vi_9012177")})</script>
</div>
<div class="space-bottom"></div>
<div class="google-right-ad">
<div class="adsbyvli" data-ad-slot="vi_9013289"></div>
<script>(vitag.Init = window.vitag.Init || []).push(function(){viAPItag.display("vi_9013289")})</script>
</div>
<div class="space-bottom" style="margin-bottom:15px;"></div>
</div>
<!-- Right Column Ends Here -->
</div>
</div>
<div class="clear"></div>
<footer id="footer">
<div class="mui--text-center">
<div class="mui--text-caption mui--text-light">
<a href="/index.htm" class="logo"><img class="img-responsive" src="/images/logo-black.png" alt="Tutorials Point" title="Tutorials Point"></a>
</div>
<ul class="mui-list--inline mui--text-body2 mui--text-light">
<li><a href="/about/index.htm"><i class="fal fa-globe"></i> About us</a></li>
<li><a href="/about/about_terms_of_use.htm"><i class="fal fa-asterisk"></i> Terms of use</a></li>
<li><a href="/about/about_privacy.htm#cookies"> <i class="fal fa-shield-check"></i> Cookies Policy</a></li>
<li><a href="/about/faq.htm"><i class="fal fa-question-circle"></i> FAQ's</a></li>
<li><a href="/about/about_helping.htm"><i class="fal fa-hands-helping"></i> Helping</a></li>
<li><a href="/about/contact_us.htm"><i class="fal fa-map-marker-alt"></i> Contact</a></li>
</ul>
<div class="mui--text-caption mui--text-light bottom-copyright-text">&copy; Copyright 2019. All Rights Reserved.</div>
</div>
<div id="privacy-banner">
  <div>
    <p>
      We use cookies to provide and improve our services. By using our site, you consent to our Cookies Policy.
      <a id="banner-accept" href="#">Accept</a>
      <a id="banner-learn" href="/about/about_cookies.htm" target="_blank">Learn more</a>
    </p>
  </div>
</div>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-232293-17"></script>
<script>
window.dataLayer = window.dataLayer || [];
function gtag(){dataLayer.push(arguments);}
gtag('js', new Date());
gtag('config', 'UA-232293-6');
</script>
</footer>
</body>
</html>
