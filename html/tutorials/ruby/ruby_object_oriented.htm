<!DOCTYPE html>
<html lang="en-US">
<head>
<title>Ruby - Object Oriented</title>
<meta charset="utf-8">
<meta name="description" content="Ruby - Object Oriented - Ruby is a pure object-oriented language and everything appears to Ruby as an object. Every value in Ruby is an object, even the most primitive things: strings, "/>
<meta name="keywords" content="C, C++, Python, Java, HTML, CSS, JavaScript, SQL, PHP, jQuery, XML, DOM, Bootstrap, Tutorials, Articles, Programming, training, learning, quiz, preferences, examples, code"/>
<link rel="canonical" href="https://www.tutorialspoint.com/ruby/ruby_object_oriented.htm" />
<link rel="shortcut icon" href="/favicon.ico" type="image/x-icon" />
<meta name="viewport" content="width=device-width,initial-scale=1.0,user-scalable=yes">
<script src="/theme/js/script-min-v2.js?v=3"></script>
<link rel="stylesheet" href="/theme/css/style-min-v2.css?v=6">
<script src="//services.bilsyndication.com/adv1/?d=901" defer="" async=""></script>
<script> var vitag = vitag || {};</script>
<script> vitag.outStreamConfig = { enablePC: false, enableMobile: false };</script>  
<style>
.right-menu .mui-btn {
    background-color:#891204;
}
a.demo {
    background:#891204;
}
li.heading {
    background:#891204;
}
.course-box{background:#891204}
.home-intro-sub p{color:#891204}
</style>
</head>
<body>
<header id="header">
<!-- Top sub-menu Starts Here -->
<div class="mui-appbar mui-container-fulid top-menu">
<div class="mui-container">
<div class="top-menu-item home">
<a href="https://www.tutorialspoint.com/index.htm" target="_blank" title="TutorialsPoint - Home"><i class="fal fa-home"></i> <span>Home</span></a>
</div>
<div class="top-menu-item qa">
<a href="https://www.tutorialspoint.com/about/about_careers.htm" target="_blank" title="Job @ Tutorials Point"><i class="fa fa-suitcase"></i> <span>Jobs</span></a>
</div>
<div class="top-menu-item tools">
<a href="https://www.tutorialspoint.com/online_dev_tools.htm" target="_blank" title="Tools - Online Development and Testing Tools"><i class="fal fa-cogs"></i> <span>Tools</span></a>
</div>
<div class="top-menu-item coding-ground">
<a href="https://www.tutorialspoint.com/codingground.htm" target="_blank" title="Coding Ground - Free Online IDE and Terminal"><i class="fal fa-code"></i> <span>Coding Ground </span></a> 
</div>
<div class="top-menu-item current-affairs">
<a href="https://www.tutorialspoint.com/current_affairs.htm" target="_blank" title="Daily Current Affairs"><i class="fal fa-layer-plus"></i> <span>Current Affairs</span></a>
</div>
<div class="top-menu-item upsc-notes">
<a href="https://www.tutorialspoint.com/upsc_ias_exams.htm" target="_blank" title="UPSC IAS Exams Notes - TutorialsPoint"><i class="fal fa-user-tie"></i> <span>UPSC Notes</span></a>
</div>      
<div class="top-menu-item online-tutoris">
<a href="https://www.tutorialspoint.com/tutor_connect/index.php" target="_blank" title="Top Online Tutors - Tutor Connect"><i class="fal fa-user"></i> <span>Online Tutors</span></a>
</div>
<div class="top-menu-item whiteboard">
<a href="https://www.tutorialspoint.com/whiteboard.htm" target="_blank" title="Free Online Whiteboard"><i class="fal fa-chalkboard"></i> <span>Whiteboard</span></a>
</div>
<div class="top-menu-item net-meeting">
<a href="https://www.tutorialspoint.com/netmeeting.php" target="_blank" title="A free tool for online video conferencing"><i class="fal fa-chalkboard-teacher"></i> <span>Net Meeting</span></a> 
</div>
<div class="top-menu-item articles">
<a href="https://www.tutorix.com" target="_blank" title="Tutorx - The Best Learning App" rel="nofollow"><i class="fal fa-video"></i> <span>Tutorix</span></a> 
</div>        
<div class="social-menu-item">
<a href="https://www.facebook.com/tutorialspointindia" target="_blank" rel="nofollow" data-placement="bottom" title="tutorialspoint @ Facebook"><i class="fab fa-facebook-f"></i></a> 
<a href="https://www.twitter.com/tutorialspoint" target="_blank" rel="nofollow" data-placement="bottom" title="tutorialspoint @ Twitter"><i class="fab fa-twitter"></i></a>
<a href="https://www.linkedin.com/company/tutorialspoint" target="_blank" rel="nofollow" data-placement="bottom" title="tutorialspoint @ Linkedin"><i class="fab fa-linkedin-in"></i></a>
<a href="https://www.youtube.com/channel/UCVLbzhxVTiTLiVKeGV7WEBg" target="_blank" rel="nofollow" data-placement="bottom" title="tutorialspoint YouTube"><i class="fab fa-youtube"></i></a>
</div>        
</div>
</div>
<!-- Top sub-menu Ends Here -->
<!-- Top main-menu Starts Here -->
<div class="mui-appbar mui-container-fulid mui--appbar-line-height mui--z1" id="logo-menu">
<div class="mui-container">
<div class="left-menu">
<a href="https://www.tutorialspoint.com/index.htm" title="Tutorialspoint">
<img class="tp-logo" alt="tutorialspoint" src="/ruby/images/logo.png">
</a>
<div class="mui-dropdown">
<a class="mui-btn mui-btn--primary categories" data-mui-toggle="dropdown"><i class="fa fa-th-large"></i> 
<span>Categories <span class="mui-caret"></span></span></a>            
<ul class="mui-dropdown__menu cat-menu">
<li>
<ul>
<li><a href="/academic_tutorials.htm"><i class="fa fa-caret-right"></i> Academic Tutorials</a></li>
<li><a href="/big_data_tutorials.htm"><i class="fa fa-caret-right"></i> Big Data &amp; Analytics </a></li>
<li><a href="/computer_programming_tutorials.htm"><i class="fa fa-caret-right"></i> Computer Programming </a></li>
<li><a href="/computer_science_tutorials.htm"><i class="fa fa-caret-right"></i> Computer Science </a></li>
<li><a href="/database_tutorials.htm"><i class="fa fa-caret-right"></i> Databases </a></li>
<li><a href="/devops_tutorials.htm"><i class="fa fa-caret-right"></i> DevOps </a></li>
<li><a href="/digital_marketing_tutorials.htm"><i class="fa fa-caret-right"></i> Digital Marketing </a></li>
<li><a href="/engineering_tutorials.htm"><i class="fa fa-caret-right"></i> Engineering Tutorials </a></li>
<li><a href="/upsc_ias_exams.htm"><i class="fa fa-caret-right"></i> Exams Syllabus </a></li>
<li><a href="/famous_monuments.htm"><i class="fa fa-caret-right"></i> Famous Monuments </a></li>
<li><a href="/gate_exams_tutorials.htm"><i class="fa fa-caret-right"></i> GATE Exams Tutorials</a></li>
<li><a href="/latest_technologies.htm"><i class="fa fa-caret-right"></i> Latest Technologies </a></li>
<li><a href="/machine_learning_tutorials.htm"><i class="fa fa-caret-right"></i> Machine Learning </a></li>
<li><a href="/mainframe_tutorials.htm"><i class="fa fa-caret-right"></i> Mainframe Development </a></li>
<li><a href="/management_tutorials.htm"><i class="fa fa-caret-right"></i> Management Tutorials </a></li>
<li><a href="/maths_tutorials.htm"><i class="fa fa-caret-right"></i> Mathematics Tutorials</a></li>
<li><a href="/microsoft_technologies_tutorials.htm"><i class="fa fa-caret-right"></i> Microsoft Technologies </a></li>
<li><a href="/misc_tutorials.htm"><i class="fa fa-caret-right"></i> Misc tutorials </a></li>
<li><a href="/mobile_development_tutorials.htm"><i class="fa fa-caret-right"></i> Mobile Development </a></li>
<li><a href="/java_technology_tutorials.htm"><i class="fa fa-caret-right"></i> Java Technologies </a></li>
<li><a href="/python_technologies_tutorials.htm"><i class="fa fa-caret-right"></i> Python Technologies </a></li>
<li><a href="/sap_tutorials.htm"><i class="fa fa-caret-right"></i> SAP Tutorials </a></li>
<li><a href="/scripting_lnaguage_tutorials.htm"><i class="fa fa-caret-right"></i>Programming Scripts </a></li>
<li><a href="/selected_reading.htm"><i class="fa fa-caret-right"></i> Selected Reading </a></li>
<li><a href="/software_quality_tutorials.htm"><i class="fa fa-caret-right"></i> Software Quality </a></li>
<li><a href="/soft_skill_tutorials.htm"><i class="fa fa-caret-right"></i> Soft Skills </a></li>
<li><a href="/telecom_tutorials.htm"><i class="fa fa-caret-right"></i> Telecom Tutorials </a></li>
<li><a href="/upsc_ias_exams.htm"><i class="fa fa-caret-right"></i> UPSC IAS Exams </a></li>
<li><a href="/web_development_tutorials.htm"><i class="fa fa-caret-right"></i> Web Development </a></li>
<li><a href="/sports_tutorials.htm"><i class="fa fa-caret-right"></i> Sports Tutorials </a></li>
<li><a href="/xml_technologies_tutorials.htm"><i class="fa fa-caret-right"></i> XML Technologies </a></li>
<li><a href="/multi_language_tutorials.htm"><i class="fa fa-caret-right"></i> Multi-Language Tutorials</a></li>
<li><a href="/questions_and_answers.htm"><i class="fa fa-caret-right"></i> Interview Questions</a></li>
</ul>
</li>
</ul>
<div class="clear"></div>
</div> 
</div>
<div class="right-menu">
<div class="toc-toggle">
<a href="javascript:void(0);"><i class="fa fa-bars"></i></a>
</div>
<div class="mobile-search-btn">
<a href="https://www.tutorialspoint.com/search.htm"><i class="fal fa-search"></i></a>
</div>
<div class="search-box">
<form method="get" class="" name="searchform" action="https://www.google.com/search" target="_blank" novalidate="">
<input type="hidden" name="sitesearch" value="www.tutorialspoint.com" class="user-valid valid">
<input class="header-search-box" type="text" id="search-string" name="q" placeholder="Search your favorite tutorials..." onfocus="if (this.value == 'Search your favorite tutorials...') {this.value = '';}" onblur="if (this.value == '') {this.value = 'Search your favorite tutorials...';}" autocomplete="off">
<button><i class="fal fa-search"></i></button>
</form>
</div>
<div class="menu-btn library-btn">
<a href="https://www.tutorialspoint.com/tutorialslibrary.htm"><i class="fal fa-cubes"></i> <span>Library</span></a>
</div>
<div class="menu-btn videos-btn">
<a href="https://www.tutorialspoint.com/videotutorials/index.htm"><i class="fal fa-video"></i> <span>Videos</span></a> 
</div>
<div class="menu-btn videos-btn">
<a href="https://www.tutorialspoint.com/questions/index.php"><i class="fa fa-location-arrow"></i> <span>Q/A</span></a>
</div>
<div class="menu-btn ebooks-btn">
<a href="https://store.tutorialspoint.com"><i class="fal fa-book"></i> <span>eBooks</span></a>
</div>
<div class="mui-dropdown">
<button class="mui-btn mui-btn--primary" data-mui-toggle="dropdown">
<span class="mui-caret"></span>
</button>
<ul class="mui-dropdown__menu">
<li><a href="https://www.tutorialspoint.com/tutorialslibrary.htm"><i class="fal fa-cubes"></i> <span>Library</span></a></li>
<li><a href="https://www.tutorialspoint.com/videotutorials/index.htm"><i class="fal fa-video"></i> <span>Videos</span></a></li>
<li><a href="https://store.tutorialspoint.com"><i class="fal fa-book"></i> <span>eBooks</span></a></li>
</ul>
</div>
</div>
</div>
</div>
<!-- Top main-menu Ends Here -->
</header>
<div class="mui-container-fluid content">
<div class="mui-container">
<!-- Tutorial ToC Starts Here -->
<div class="mui-col-md-3 tutorial-toc">
<div class="mini-logo">
<img src="/ruby/images/ruby-mini-logo.jpg" alt="Ruby Tutorial" />
</div>
<ul class="toc chapters">
<li class="heading">Ruby Basics</li>
<li><a href="/ruby/index.htm">Ruby - Home</a></li>
<li><a href="/ruby/ruby_overview.htm">Ruby - Overview</a></li>
<li><a href="/ruby/ruby_environment.htm">Ruby - Environment Setup</a></li>
<li><a href="/ruby/ruby_syntax.htm">Ruby - Syntax</a></li>
<li><a href="/ruby/ruby_classes.htm">Ruby - Classes and Objects</a></li>
<li><a href="/ruby/ruby_variables.htm">Ruby - Variables</a></li>
<li><a href="/ruby/ruby_operators.htm">Ruby - Operators</a></li>
<li><a href="/ruby/ruby_comments.htm">Ruby - Comments</a></li>
<li><a href="/ruby/ruby_if_else.htm">Ruby - IF...ELSE</a></li>
<li><a href="/ruby/ruby_loops.htm">Ruby - Loops</a></li>
<li><a href="/ruby/ruby_methods.htm">Ruby - Methods</a></li>
<li><a href="/ruby/ruby_blocks.htm">Ruby - Blocks</a></li>
<li><a href="/ruby/ruby_modules.htm">Ruby - Modules</a></li>
<li><a href="/ruby/ruby_strings.htm">Ruby - Strings</a></li>
<li><a href="/ruby/ruby_arrays.htm">Ruby - Arrays</a></li>
<li><a href="/ruby/ruby_hashes.htm">Ruby - Hashes</a></li>
<li><a href="/ruby/ruby_date_time.htm">Ruby - Date &amp; Time</a></li>
<li><a href="/ruby/ruby_ranges.htm">Ruby - Ranges</a></li>
<li><a href="/ruby/ruby_iterators.htm">Ruby - Iterators</a></li>
<li><a href="/ruby/ruby_input_output.htm">Ruby - File I/O</a></li>
<li><a href="/ruby/ruby_exceptions.htm">Ruby - Exceptions</a></li>
</ul>
<ul class="toc chapters">
<li class="heading">Ruby Advanced</li>
<li><a href="/ruby/ruby_object_oriented.htm">Ruby - Object Oriented</a></li>
<li><a href="/ruby/ruby_regular_expressions.htm">Ruby - Regular Expressions</a></li>
<li><a href="/ruby/ruby_database_access.htm">Ruby - Database Access</a></li>
<li><a href="/ruby/ruby_web_applications.htm">Ruby - Web Applications</a></li>
<li><a href="/ruby/ruby_sending_email.htm">Ruby - Sending Email</a></li>
<li><a href="/ruby/ruby_socket_programming.htm">Ruby - Socket Programming</a></li>
<li><a href="/ruby/ruby_xml_xslt.htm">Ruby - Ruby/XML, XSLT</a></li>
<li><a href="/ruby/ruby_web_services.htm">Ruby - Web Services</a></li>
<li><a href="/ruby/ruby_tk_guide.htm">Ruby - Tk Guide</a></li>
<li><a href="/ruby/ruby_ldap.htm">Ruby - Ruby/LDAP Tutorial</a></li>
<li><a href="/ruby/ruby_multithreading.htm">Ruby - Multithreading</a></li>
<li><a href="/ruby/ruby_builtin_functions.htm">Ruby - Built-in Functions</a></li>
<li><a href="/ruby/ruby_predefined_variables.htm">Ruby - Predefined Variables</a></li>
<li><a href="/ruby/ruby_predefined_constants.htm">Ruby - Predefined Constants</a></li>
<li><a href="/ruby/ruby_associated_tools.htm">Ruby - Associated Tools</a></li>
</ul>
<ul class="toc chapters">
<li class="heading">Ruby Useful Resources</li>
<li><a href="/ruby/ruby_quick_guide.htm">Ruby - Quick Guide</a></li>
<li><a href="/ruby/ruby_resources.htm">Ruby - Useful Resources</a></li>
<li><a href="/ruby/ruby_discussion.htm">Ruby - Discussion</a></li>
<li><a href="/ruby-on-rails/index.htm">Ruby - Ruby on Rails Tutorial</a></li>
</ul>
<ul class="toc reading">
<li class="sreading">Selected Reading</li>
<li><a target="_top" href="/upsc_ias_exams.htm">UPSC IAS Exams Notes</a></li>
<li><a target="_top" href="/developers_best_practices/index.htm">Developer's Best Practices</a></li>
<li><a target="_top" href="/questions_and_answers.htm">Questions and Answers</a></li>
<li><a target="_top" href="/effective_resume_writing.htm">Effective Resume Writing</a></li>
<li><a target="_top" href="/hr_interview_questions/index.htm">HR Interview Questions</a></li>
<li><a target="_top" href="/computer_glossary.htm">Computer Glossary</a></li>
<li><a target="_top" href="/computer_whoiswho.htm">Who is Who</a></li>
</ul>
</div>
<!-- Tutorial ToC Ends Here -->
<!-- Tutorial Content Starts Here -->
<div class="mui-col-md-6 tutorial-content">
<h1>Ruby - Object Oriented</h1>
<hr />
<div class="top-ad-heading">Advertisements</div>
<div style="text-align: center;">
<script><!--
google_ad_client = "pub-7133395778201029";
var width = document.getElementsByClassName("tutorial-content")[0].clientWidth - 40;
google_ad_width = width;
google_ad_height = 150;
google_ad_format = width + "x150_as";
google_ad_type = "image";
google_ad_channel = "";
//--></script>
<script src="https://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</div>
<div class="mui-container-fluid button-borders">
<div class="pre-btn">
<a href="/ruby/ruby_exceptions.htm"><i class="fal fa-chevron-circle-left"></i> Previous Page</a>
</div>
<div class="nxt-btn">
<a href="/ruby/ruby_regular_expressions.htm">Next Page <i class="fal fa-chevron-circle-right"></i>&nbsp;</a>
</div>
</div>
<div class="clearer"></div>
<p>Ruby is a pure object-oriented language and everything appears to Ruby as an object. Every value in Ruby is an object, even the most primitive things: strings, numbers and even true and false. Even a class itself is an <i>object</i> that is an instance of the <i>Class</i> class. This chapter will take you through all the major functionalities related to Object Oriented Ruby.</p>
<p>A class is used to specify the form of an object and it combines data representation and methods for manipulating that data into one neat package. The data and methods within a class are called members of the class.</p>
<h2>Ruby Class Definition</h2>
<p>When you define a class, you define a blueprint for a data type. This doesn't actually define any data, but it does define what the class name means, that is, what an object of the class will consist of and what operations can be performed on such an object.</p>
<p>A class definition starts with the keyword <b>class</b> followed by the <b>class name</b> and is delimited with an <b>end</b>. For example, we defined the Box class using the keyword class as follows &minus;</p>
<pre class="result notranslate">
class Box
   code
end
</pre>
<p>The name must begin with a capital letter and by convention names that contain more than one word are run together with each word capitalized and no separating characters (CamelCase).</p>
<h2>Define Ruby Objects</h2>
<p>A class provides the blueprints for objects, so basically an object is created from a class. We declare objects of a class using <b>new</b> keyword. Following statements declare two objects of class Box &minus;</p>
<pre class="result notranslate">
box1 = Box.new
box2 = Box.new
</pre>
<h2>The initialize Method</h2>
<p>The <b>initialize method</b> is a standard Ruby class method and works almost same way as <b>constructor</b> works in other object oriented programming languages. The initialize method is useful when you want to initialize some class variables at the time of object creation. This method may take a list of parameters and like any other ruby method it would be preceded by <b>def</b> keyword as shown below &minus;</p>
<pre class="prettyprint notranslate">
class Box
   def initialize(w,h)
      &commat;width, &commat;height = w, h
   end
end
</pre>
<h2>The instance Variables</h2>
<p>The <b>instance variables</b> are kind of class attributes and they become properties of objects once objects are created using the class. Every object's attributes are assigned individually and share no value with other objects. They are accessed using the &commat; operator within the class but to access them outside of the class we use <b>public</b> methods, which are called <b>accessor methods</b>. If we take the above defined class <b>Box</b> then &commat;width and &commat;height are instance variables for the class Box.</p>
<pre class="prettyprint notranslate">
class Box
   def initialize(w,h)
      # assign instance variables
      &commat;width, &commat;height = w, h
   end
end
</pre>
<h2>The accessor &amp; setter Methods</h2>
<p>To make the variables available from outside the class, they must be defined within <b>accessor methods</b>, these accessor methods are also known as a getter methods. Following example shows the usage of accessor methods &minus;</p> 
<div class="demo-view">
<a href="http://tpcg.io/4I7Rcd" target="_blank" class="demo"><i class="fa-external-link"></i> Live Demo</a>
</div>
<pre class="prettyprint notranslate">
#!/usr/bin/ruby -w

# define a class
class Box
   # constructor method
   def initialize(w,h)
      &commat;width, &commat;height = w, h
   end

   # accessor methods
   def printWidth
      &commat;width
   end

   def printHeight
      &commat;height
   end
end

# create an object
box = Box.new(10, 20)

# use accessor methods
x = box.printWidth()
y = box.printHeight()

puts "Width of the box is : #{x}"
puts "Height of the box is : #{y}"
</pre>
<p>When the above code is executed, it produces the following result &minus;</p>
<pre class="result notranslate">
Width of the box is : 10
Height of the box is : 20
</pre>
<p>Similar to accessor methods, which are used to access the value of the variables, Ruby provides a way to set the values of those variables from outside of the class using <b>setter methods</b>, which are defined as below &minus;</p> 
<div class="demo-view">
<a href="http://tpcg.io/oTWhGw" target="_blank" class="demo"><i class="fa-external-link"></i> Live Demo</a>
</div>
<pre class="prettyprint notranslate">
#!/usr/bin/ruby -w

# define a class
class Box
   # constructor method
   def initialize(w,h)
      @width, @height = w, h
   end

   # accessor methods
   def getWidth
      @width
   end
   def getHeight
      @height
   end

   # setter methods
   def setWidth=(value)
      @width = value
   end
   def setHeight=(value)
      @height = value
   end
end

# create an object
box = Box.new(10, 20)

# use setter methods
box.setWidth = 30
box.setHeight = 50

# use accessor methods
x = box.getWidth()
y = box.getHeight()

puts "Width of the box is : #{x}"
puts "Height of the box is : #{y}"
</pre>
<p>When the above code is executed, it produces the following result &minus;</p>
<pre class="result notranslate">
Width of the box is : 30
Height of the box is : 50
</pre>
<h2>The instance Methods</h2>
<p>The <b>instance methods</b> are also defined in the same way as we define any other method using <b>def</b> keyword and they can be used using a class instance only as shown below. Their functionality is not limited to access the instance variables, but also they can do a lot more as per your requirement.</p>
<div class="demo-view">
<a href="http://tpcg.io/bVxwU1" target="_blank" class="demo"><i class="fa-external-link"></i> Live Demo</a>
</div>
<pre class="prettyprint notranslate">
#!/usr/bin/ruby -w

# define a class
class Box
   # constructor method
   def initialize(w,h)
      &commat;width, &commat;height = w, h
   end
   # instance method
   def getArea
      &commat;width * &commat;height
   end
end

# create an object
box = Box.new(10, 20)

# call instance methods
a = box.getArea()
puts "Area of the box is : #{a}"
</pre>
<p>When the above code is executed, it produces the following result &minus;</p>
<pre class="result notranslate">
Area of the box is : 200
</pre>
<h2>The class Methods and Variables</h2>
<p>The <b>class variables</b> is a variable, which is shared between all instances of a class. In other words, there is one instance of the variable and it is accessed by object instances. Class variables are prefixed with two &commat; characters (&commat;&commat;). A class variable must be initialized within the class definition as shown below.</p>
<p>A class method is defined using <b>def self.methodname()</b>, which ends with end delimiter and would be called using the class name as <b>classname.methodname</b> as shown in the following example &minus;</p>
<pre class="prettyprint notranslate">
#!/usr/bin/ruby -w

class Box
   # Initialize our class variables
   &commat;&commat;count = 0
   def initialize(w,h)
      # assign instance avriables
      &commat;width, &commat;height = w, h

      &commat;&commat;count += 1
   end

   def self.printCount()
      puts "Box count is : #&commat;&commat;count"
   end
end

# create two object
box1 = Box.new(10, 20)
box2 = Box.new(30, 100)

# call class method to print box count
Box.printCount()
</pre>
<p>When the above code is executed, it produces the following result &minus;</p>
<pre class="result notranslate">
Box count is : 2
</pre>
<h2>The to_s Method</h2>
<p>Any class you define should have a <b>to_s</b> instance method to return a string representation of the object. Following is a simple example to represent a Box object in terms of width and height &minus;</p>
<div class="demo-view">
<a href="http://tpcg.io/Rl2iVz" target="_blank" class="demo"><i class="fa-external-link"></i> Live Demo</a>
</div>
<pre class="prettyprint notranslate">
#!/usr/bin/ruby -w

class Box
   # constructor method
   def initialize(w,h)
      &commat;width, &commat;height = w, h
   end
   # define to_s method
   def to_s
      "(w:#&commat;width,h:#&commat;height)"  # string formatting of the object.
   end
end

# create an object
box = Box.new(10, 20)

# to_s method will be called in reference of string automatically.
puts "String representation of box is : #{box}"
</pre>
<p>When the above code is executed, it produces the following result &minus;</p>
<pre class="result notranslate">
String representation of box is : (w:10,h:20)
</pre>
<h2>Access Control</h2>
<p>Ruby gives you three levels of protection at instance methods level, which may be <b>public, private, or protected</b>. Ruby does not apply any access control over instance and class variables.</p>
<ul class="list">
<li><p><b>Public Methods</b> &minus; Public methods can be called by anyone. Methods are public by default except for initialize, which is always private.</p></li>
<li><p><b>Private Methods</b> &minus; Private methods cannot be accessed, or even viewed from outside the class. Only the class methods can access private members.</p></li>
<li><p><b>Protected  Methods</b> &minus; A protected method can be invoked only by objects of the defining class and its subclasses. Access is kept within the family.</p></li>
</ul>
<p>Following is a simple example to show the syntax of all the three access modifiers &minus;</p>
<div class="demo-view">
<a href="http://tpcg.io/TvPug5" target="_blank" class="demo"><i class="fa-external-link"></i> Live Demo</a>
</div>
<pre class="prettyprint notranslate">
#!/usr/bin/ruby -w

# define a class
class Box
   # constructor method
   def initialize(w,h)
      &commat;width, &commat;height = w, h
   end

   # instance method by default it is public
   def getArea
      getWidth() * getHeight
   end

   # define private accessor methods
   def getWidth
      &commat;width
   end
   def getHeight
      &commat;height
   end
   # make them private
   private :getWidth, :getHeight

   # instance method to print area
   def printArea
      &commat;area = getWidth() * getHeight
      puts "Big box area is : #&commat;area"
   end
   # make it protected
   protected :printArea
end

# create an object
box = Box.new(10, 20)

# call instance methods
a = box.getArea()
puts "Area of the box is : #{a}"

# try to call protected or methods
box.printArea()
</pre>
<p>When the above code is executed, it produces the following result. Here, first method is called successfully but second method gave a problem.</p>
<pre class="result notranslate">
Area of the box is : 200
test.rb:42: protected method `printArea' called for #
&lt;Box:0xb7f11280 @height = 20, @width = 10&gt; (NoMethodError)
</pre>
<h2>Class Inheritance</h2>
<p>One of the most important concepts in object-oriented programming is that of inheritance. Inheritance allows us to define a class in terms of another class, which makes it easier to create and maintain an application.</p>
<p>Inheritance also provides an opportunity to reuse the code functionality and fast implementation time but unfortunately Ruby does not support multiple levels of inheritances but Ruby supports <b>mixins</b>. A mixin is like a specialized implementation of multiple inheritance in which only the interface portion is inherited.</p>
<p>When creating a class, instead of writing completely new data members and member functions, the programmer can designate that the new class should inherit the members of an existing class. This existing class is called the <b>base class or superclass</b>, and the new class is referred to as the <b>derived class or sub-class</b>.</p>
<p>Ruby also supports the concept of subclassing, i.e., inheritance and following example explains the concept. The syntax for extending a class is simple. Just add a &lt; character and the name of the superclass to your class statement. For example, following define a class <i>BigBox</i> as a subclass of <i>Box</i> &minus;</p>
<div class="demo-view">
<a href="http://tpcg.io/D09y1l" target="_blank" class="demo"><i class="fa-external-link"></i> Live Demo</a>
</div>
<pre class="prettyprint notranslate">
#!/usr/bin/ruby -w

# define a class
class Box
   # constructor method
   def initialize(w,h)
      &commat;width, &commat;height = w, h
   end
   # instance method
   def getArea
      &commat;width * &commat;height
   end
end

# define a subclass
class BigBox &lt; Box

   # add a new instance method
   def printArea
      &commat;area = &commat;width * &commat;height
      puts "Big box area is : #&commat;area"
   end
end

# create an object
box = BigBox.new(10, 20)

# print the area
box.printArea()
</pre>
<p>When the above code is executed, it produces the following result &minus;</p>
<pre class="result notranslate">
Big box area is : 200
</pre>
<h2>Methods Overriding</h2>
<p>Though you can add new functionality in a derived class, but sometimes you would like to change the behavior of already defined method in a parent class. You can do so simply by keeping the method name same and overriding the functionality of the method as shown below in the example &minus;</p>
<div class="demo-view">
<a href="http://tpcg.io/UQ1DP0" target="_blank" class="demo"><i class="fa-external-link"></i> Live Demo</a>
</div>
<pre class="prettyprint notranslate">
#!/usr/bin/ruby -w

# define a class
class Box
   # constructor method
   def initialize(w,h)
      &commat;width, &commat;height = w, h
   end
   # instance method
   def getArea
      &commat;width * &commat;height
   end
end

# define a subclass
class BigBox &lt; Box

   # change existing getArea method as follows
   def getArea
      &commat;area = &commat;width * &commat;height
      puts "Big box area is : #&commat;area"
   end
end

# create an object
box = BigBox.new(10, 20)

# print the area using overriden method.
box.getArea()
</pre>
<h2>Operator Overloading</h2>
<p>We'd like the &plus; operator to perform vector addition of two Box objects using &plus;, the * operator to multiply a Box width and height by a scalar, and the unary - operator to do negate the width and height of the Box. Here is a version of the Box class with mathematical operators defined &minus;</p>
<pre class="prettyprint notranslate">
class Box
   def initialize(w,h)     # Initialize the width and height
      &commat;width,&commat;height = w, h
   end

   def &plus;(other)       # Define &plus; to do vector addition
      Box.new(&commat;width &plus; other.width, &commat;height &plus; other.height)
   end

   def -&commat;           # Define unary minus to negate width and height
      Box.new(-&commat;width, -&commat;height)
   end

   def *(scalar)           # To perform scalar multiplication
      Box.new(&commat;width*scalar, &commat;height*scalar)
   end
end
</pre>
<h2>Freezing Objects</h2>
<p>Sometimes, we want to prevent an object from being changed. The freeze method in Object allows us to do this, effectively turning an object into a constant. Any object can be frozen by invoking <b>Object.freeze</b>. A frozen object may not be modified: you can't change its instance variables.</p>
<p>You can check if a given object is already frozen or not using <b>Object.frozen?</b> method, which returns true in case the object is frozen otherwise a false value is return. Following example clears the concept &minus;</p>
<div class="demo-view">
<a href="http://tpcg.io/Tl8e9z" target="_blank" class="demo"><i class="fa-external-link"></i> Live Demo</a>
</div>
<pre class="prettyprint notranslate">
#!/usr/bin/ruby -w

# define a class
class Box
   # constructor method
   def initialize(w,h)
      @width, @height = w, h
   end

   # accessor methods
   def getWidth
      @width
   end
   def getHeight
      @height
   end

   # setter methods
   def setWidth=(value)
      @width = value
   end
   def setHeight=(value)
      @height = value
   end
end

# create an object
box = Box.new(10, 20)

# let us freez this object
box.freeze
if( box.frozen? )
   puts "Box object is frozen object"
else
   puts "Box object is normal object"
end

# now try using setter methods
box.setWidth = 30
box.setHeight = 50

# use accessor methods
x = box.getWidth()
y = box.getHeight()

puts "Width of the box is : #{x}"
puts "Height of the box is : #{y}"
</pre>
<p>When the above code is executed, it produces the following result &minus;</p>
<pre class="result notranslate">
Box object is frozen object
test.rb:20:in `setWidth=': can't modify frozen object (TypeError)
   from test.rb:39
</pre>
<h2>Class Constants</h2>
<p>You can define a constant inside a class by assigning a direct numeric or string value to a variable, which is defined without using either &commat; or &commat;&commat;. By convention, we keep constant names in upper case.</p>
<p>Once a constant is defined, you cannot change its value but you can access a constant directly inside a class much like a variable but if you want to access a constant outside of the class then you would have to use <b>classname::constant</b> as shown in the below example.</p>
<div class="demo-view">
<a href="http://tpcg.io/LLXuhD" target="_blank" class="demo"><i class="fa-external-link"></i> Live Demo</a>
</div>
<pre class="prettyprint notranslate">
#!/usr/bin/ruby -w

# define a class
class Box
   BOX_COMPANY = "TATA Inc"
   BOXWEIGHT = 10
   # constructor method
   def initialize(w,h)
      &commat;width, &commat;height = w, h
   end
   # instance method
   def getArea
      &commat;width * &commat;height
   end
end

# create an object
box = Box.new(10, 20)

# call instance methods
a = box.getArea()
puts "Area of the box is : #{a}"
puts Box::BOX_COMPANY
puts "Box weight is: #{Box::BOXWEIGHT}"
</pre>
<p>When the above code is executed, it produces the following result &minus;</p>
<pre class="result notranslate">
Area of the box is : 200
TATA Inc
Box weight is: 10
</pre>
<p>Class constants are inherited and can be overridden like instance methods.</p>
<h2>Create Object Using Allocate</h2>
<p>There may be a situation when you want to create an object without calling its constructor <b>initialize</b> i.e. using new method, in such case you can call <i>allocate</i>, which will create an uninitialized object for you as in the following example &minus;</p>
<div class="demo-view">
<a href="http://tpcg.io/ga18Rj" target="_blank" class="demo"><i class="fa-external-link"></i> Live Demo</a>
</div>
<pre class="prettyprint notranslate">
#!/usr/bin/ruby -w

# define a class
class Box
   attr_accessor :width, :height

   # constructor method
   def initialize(w,h)
      &commat;width, &commat;height = w, h
   end

   # instance method
   def getArea
      &commat;width * &commat;height
   end
end

# create an object using new
box1 = Box.new(10, 20)

# create another object using allocate
box2 = Box.allocate

# call instance method using box1
a = box1.getArea()
puts "Area of the box is : #{a}"

# call instance method using box2
a = box2.getArea()
puts "Area of the box is : #{a}"
</pre>
<p>When the above code is executed, it produces the following result &minus;</p>
<pre class="result notranslate">
Area of the box is : 200
test.rb:14: warning: instance variable @width not initialized
test.rb:14: warning: instance variable @height not initialized
test.rb:14:in `getArea': undefined method `*' 
   for nil:NilClass (NoMethodError) from test.rb:29
</pre>
<h2>Class Information</h2>
<p>If class definitions are executable code, this implies that they execute in the context of some object: self must reference something. Let's find out what it is.</p>
<pre class="prettyprint notranslate">
#!/usr/bin/ruby -w

class Box
   # print class information
   puts "Type of self = #{self.type}"
   puts "Name of self = #{self.name}"
end
</pre>
<p>When the above code is executed, it produces the following result &minus;</p>
<pre class="result notranslate">
Type of self = Class
Name of self = Box
</pre>
<p>This means that a class definition is executed with that class as the current object. This means that methods in the metaclass and its superclasses will be available during the execution of the method definition.</p>
<div class="mui-container-fluid button-borders show">
<div class="pre-btn">
<a href="/ruby/ruby_exceptions.htm"><i class="fal fa-chevron-circle-left"></i> Previous Page</a>
</div>
<div class="nxt-btn">
<a href="/ruby/ruby_regular_expressions.htm">Next Page <i class="fal fa-chevron-circle-right"></i>&nbsp;</a>
</div>
</div>
<div class="google-bottom-ads">
<div>Advertisements</div>
<script><!--
var width = 580;
var height = 400;
var format = "580x400_as";
if( window.innerWidth < 468 ){
   width = 300;
   height = 250;
   format = "300x250_as";
}
google_ad_client = "pub-7133395778201029";
google_ad_width = width;
google_ad_height = height;
google_ad_format = format;
google_ad_type = "image";
google_ad_channel ="";
//--></script>
<script src="https://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
<div class="space-bottom"></div>
</div>
</div>
<!-- Tutorial Content Ends Here -->
<!-- Right Column Starts Here -->
<div class="mui-col-md-2 google-right-ads">
<div class="space-top"></div>
<div class="google-right-ad" style="margin: 0px auto !important;margin-top:5px;">
<script><!--
google_ad_client = "pub-2537027957187252";
google_ad_width = 300;
google_ad_height = 250;
google_ad_format = "300x250_as";
google_ad_type = "image";
google_ad_channel ="";
//--></script>
<script src="https://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</div>
<div class="google-right-ad">
<div class="adsbyvli" data-ad-slot="vi_9012177"></div>
<script>(vitag.Init = window.vitag.Init || []).push(function(){viAPItag.display("vi_9012177")})</script>
</div>
<div class="space-bottom"></div>
<div class="google-right-ad">
<div class="adsbyvli" data-ad-slot="vi_9013289"></div>
<script>(vitag.Init = window.vitag.Init || []).push(function(){viAPItag.display("vi_9013289")})</script>
</div>
<div class="space-bottom" style="margin-bottom:15px;"></div>
</div>
<!-- Right Column Ends Here -->
</div>
</div>
<div class="clear"></div>
<footer id="footer">
<div class="mui--text-center">
<div class="mui--text-caption mui--text-light">
<a href="/index.htm" class="logo"><img class="img-responsive" src="/images/logo-black.png" alt="Tutorials Point" title="Tutorials Point"></a>
</div>
<ul class="mui-list--inline mui--text-body2 mui--text-light">
<li><a href="/about/index.htm"><i class="fal fa-globe"></i> About us</a></li>
<li><a href="/about/about_terms_of_use.htm"><i class="fal fa-asterisk"></i> Terms of use</a></li>
<li><a href="/about/about_privacy.htm#cookies"> <i class="fal fa-shield-check"></i> Cookies Policy</a></li>
<li><a href="/about/faq.htm"><i class="fal fa-question-circle"></i> FAQ's</a></li>
<li><a href="/about/about_helping.htm"><i class="fal fa-hands-helping"></i> Helping</a></li>
<li><a href="/about/contact_us.htm"><i class="fal fa-map-marker-alt"></i> Contact</a></li>
</ul>
<div class="mui--text-caption mui--text-light bottom-copyright-text">&copy; Copyright 2019. All Rights Reserved.</div>
</div>
<div id="privacy-banner">
  <div>
    <p>
      We use cookies to provide and improve our services. By using our site, you consent to our Cookies Policy.
      <a id="banner-accept" href="#">Accept</a>
      <a id="banner-learn" href="/about/about_cookies.htm" target="_blank">Learn more</a>
    </p>
  </div>
</div>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-232293-17"></script>
<script>
window.dataLayer = window.dataLayer || [];
function gtag(){dataLayer.push(arguments);}
gtag('js', new Date());
gtag('config', 'UA-232293-6');
</script>
</footer>
</body>
</html>
