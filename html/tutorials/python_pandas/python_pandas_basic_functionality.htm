<!DOCTYPE html>
<html lang="en-US">
<head>
<title>Python Pandas - Basic Functionality</title>
<meta charset="utf-8">
<meta name="description" content="Python Pandas - Basic Functionality - By now, we learnt about the three Pandas DataStructures and how to create them. We will majorly focus on the DataFrame objects because of its importance in the "/>
<meta name="keywords" content="C, C++, Python, Java, HTML, CSS, JavaScript, SQL, PHP, jQuery, XML, DOM, Bootstrap, Tutorials, Articles, Programming, training, learning, quiz, preferences, examples, code"/>
<link rel="canonical" href="https://www.tutorialspoint.com/python_pandas/python_pandas_basic_functionality.htm" />
<link rel="shortcut icon" href="/favicon.ico" type="image/x-icon" />
<meta name="viewport" content="width=device-width,initial-scale=1.0,user-scalable=yes">
<script src="/theme/js/script-min-v2.js?v=3"></script>
<link rel="stylesheet" href="/theme/css/style-min-v2.css?v=6">
<script src="//services.bilsyndication.com/adv1/?d=901" defer="" async=""></script>
<script> var vitag = vitag || {};</script>
<script> vitag.outStreamConfig = { enablePC: false, enableMobile: false };</script>  
<style>
.right-menu .mui-btn {
    background-color:#036db0;
}
a.demo {
    background:#036db0;
}
li.heading {
    background:#036db0;
}
.course-box{background:#036db0}
.home-intro-sub p{color:#036db0}
</style>
</head>
<body>
<header id="header">
<!-- Top sub-menu Starts Here -->
<div class="mui-appbar mui-container-fulid top-menu">
<div class="mui-container">
<div class="top-menu-item home">
<a href="https://www.tutorialspoint.com/index.htm" target="_blank" title="TutorialsPoint - Home"><i class="fal fa-home"></i> <span>Home</span></a>
</div>
<div class="top-menu-item qa">
<a href="https://www.tutorialspoint.com/about/about_careers.htm" target="_blank" title="Job @ Tutorials Point"><i class="fa fa-suitcase"></i> <span>Jobs</span></a>
</div>
<div class="top-menu-item tools">
<a href="https://www.tutorialspoint.com/online_dev_tools.htm" target="_blank" title="Tools - Online Development and Testing Tools"><i class="fal fa-cogs"></i> <span>Tools</span></a>
</div>
<div class="top-menu-item coding-ground">
<a href="https://www.tutorialspoint.com/codingground.htm" target="_blank" title="Coding Ground - Free Online IDE and Terminal"><i class="fal fa-code"></i> <span>Coding Ground </span></a> 
</div>
<div class="top-menu-item current-affairs">
<a href="https://www.tutorialspoint.com/current_affairs.htm" target="_blank" title="Daily Current Affairs"><i class="fal fa-layer-plus"></i> <span>Current Affairs</span></a>
</div>
<div class="top-menu-item upsc-notes">
<a href="https://www.tutorialspoint.com/upsc_ias_exams.htm" target="_blank" title="UPSC IAS Exams Notes - TutorialsPoint"><i class="fal fa-user-tie"></i> <span>UPSC Notes</span></a>
</div>      
<div class="top-menu-item online-tutoris">
<a href="https://www.tutorialspoint.com/tutor_connect/index.php" target="_blank" title="Top Online Tutors - Tutor Connect"><i class="fal fa-user"></i> <span>Online Tutors</span></a>
</div>
<div class="top-menu-item whiteboard">
<a href="https://www.tutorialspoint.com/whiteboard.htm" target="_blank" title="Free Online Whiteboard"><i class="fal fa-chalkboard"></i> <span>Whiteboard</span></a>
</div>
<div class="top-menu-item net-meeting">
<a href="https://www.tutorialspoint.com/netmeeting.php" target="_blank" title="A free tool for online video conferencing"><i class="fal fa-chalkboard-teacher"></i> <span>Net Meeting</span></a> 
</div>
<div class="top-menu-item articles">
<a href="https://www.tutorix.com" target="_blank" title="Tutorx - The Best Learning App" rel="nofollow"><i class="fal fa-video"></i> <span>Tutorix</span></a> 
</div>        
<div class="social-menu-item">
<a href="https://www.facebook.com/tutorialspointindia" target="_blank" rel="nofollow" data-placement="bottom" title="tutorialspoint @ Facebook"><i class="fab fa-facebook-f"></i></a> 
<a href="https://www.twitter.com/tutorialspoint" target="_blank" rel="nofollow" data-placement="bottom" title="tutorialspoint @ Twitter"><i class="fab fa-twitter"></i></a>
<a href="https://www.linkedin.com/company/tutorialspoint" target="_blank" rel="nofollow" data-placement="bottom" title="tutorialspoint @ Linkedin"><i class="fab fa-linkedin-in"></i></a>
<a href="https://www.youtube.com/channel/UCVLbzhxVTiTLiVKeGV7WEBg" target="_blank" rel="nofollow" data-placement="bottom" title="tutorialspoint YouTube"><i class="fab fa-youtube"></i></a>
</div>        
</div>
</div>
<!-- Top sub-menu Ends Here -->
<!-- Top main-menu Starts Here -->
<div class="mui-appbar mui-container-fulid mui--appbar-line-height mui--z1" id="logo-menu">
<div class="mui-container">
<div class="left-menu">
<a href="https://www.tutorialspoint.com/index.htm" title="Tutorialspoint">
<img class="tp-logo" alt="tutorialspoint" src="/python_pandas/images/logo.png">
</a>
<div class="mui-dropdown">
<a class="mui-btn mui-btn--primary categories" data-mui-toggle="dropdown"><i class="fa fa-th-large"></i> 
<span>Categories <span class="mui-caret"></span></span></a>            
<ul class="mui-dropdown__menu cat-menu">
<li>
<ul>
<li><a href="/academic_tutorials.htm"><i class="fa fa-caret-right"></i> Academic Tutorials</a></li>
<li><a href="/big_data_tutorials.htm"><i class="fa fa-caret-right"></i> Big Data &amp; Analytics </a></li>
<li><a href="/computer_programming_tutorials.htm"><i class="fa fa-caret-right"></i> Computer Programming </a></li>
<li><a href="/computer_science_tutorials.htm"><i class="fa fa-caret-right"></i> Computer Science </a></li>
<li><a href="/database_tutorials.htm"><i class="fa fa-caret-right"></i> Databases </a></li>
<li><a href="/devops_tutorials.htm"><i class="fa fa-caret-right"></i> DevOps </a></li>
<li><a href="/digital_marketing_tutorials.htm"><i class="fa fa-caret-right"></i> Digital Marketing </a></li>
<li><a href="/engineering_tutorials.htm"><i class="fa fa-caret-right"></i> Engineering Tutorials </a></li>
<li><a href="/upsc_ias_exams.htm"><i class="fa fa-caret-right"></i> Exams Syllabus </a></li>
<li><a href="/famous_monuments.htm"><i class="fa fa-caret-right"></i> Famous Monuments </a></li>
<li><a href="/gate_exams_tutorials.htm"><i class="fa fa-caret-right"></i> GATE Exams Tutorials</a></li>
<li><a href="/latest_technologies.htm"><i class="fa fa-caret-right"></i> Latest Technologies </a></li>
<li><a href="/machine_learning_tutorials.htm"><i class="fa fa-caret-right"></i> Machine Learning </a></li>
<li><a href="/mainframe_tutorials.htm"><i class="fa fa-caret-right"></i> Mainframe Development </a></li>
<li><a href="/management_tutorials.htm"><i class="fa fa-caret-right"></i> Management Tutorials </a></li>
<li><a href="/maths_tutorials.htm"><i class="fa fa-caret-right"></i> Mathematics Tutorials</a></li>
<li><a href="/microsoft_technologies_tutorials.htm"><i class="fa fa-caret-right"></i> Microsoft Technologies </a></li>
<li><a href="/misc_tutorials.htm"><i class="fa fa-caret-right"></i> Misc tutorials </a></li>
<li><a href="/mobile_development_tutorials.htm"><i class="fa fa-caret-right"></i> Mobile Development </a></li>
<li><a href="/java_technology_tutorials.htm"><i class="fa fa-caret-right"></i> Java Technologies </a></li>
<li><a href="/python_technologies_tutorials.htm"><i class="fa fa-caret-right"></i> Python Technologies </a></li>
<li><a href="/sap_tutorials.htm"><i class="fa fa-caret-right"></i> SAP Tutorials </a></li>
<li><a href="/scripting_lnaguage_tutorials.htm"><i class="fa fa-caret-right"></i>Programming Scripts </a></li>
<li><a href="/selected_reading.htm"><i class="fa fa-caret-right"></i> Selected Reading </a></li>
<li><a href="/software_quality_tutorials.htm"><i class="fa fa-caret-right"></i> Software Quality </a></li>
<li><a href="/soft_skill_tutorials.htm"><i class="fa fa-caret-right"></i> Soft Skills </a></li>
<li><a href="/telecom_tutorials.htm"><i class="fa fa-caret-right"></i> Telecom Tutorials </a></li>
<li><a href="/upsc_ias_exams.htm"><i class="fa fa-caret-right"></i> UPSC IAS Exams </a></li>
<li><a href="/web_development_tutorials.htm"><i class="fa fa-caret-right"></i> Web Development </a></li>
<li><a href="/sports_tutorials.htm"><i class="fa fa-caret-right"></i> Sports Tutorials </a></li>
<li><a href="/xml_technologies_tutorials.htm"><i class="fa fa-caret-right"></i> XML Technologies </a></li>
<li><a href="/multi_language_tutorials.htm"><i class="fa fa-caret-right"></i> Multi-Language Tutorials</a></li>
<li><a href="/questions_and_answers.htm"><i class="fa fa-caret-right"></i> Interview Questions</a></li>
</ul>
</li>
</ul>
<div class="clear"></div>
</div> 
</div>
<div class="right-menu">
<div class="toc-toggle">
<a href="javascript:void(0);"><i class="fa fa-bars"></i></a>
</div>
<div class="mobile-search-btn">
<a href="https://www.tutorialspoint.com/search.htm"><i class="fal fa-search"></i></a>
</div>
<div class="search-box">
<form method="get" class="" name="searchform" action="https://www.google.com/search" target="_blank" novalidate="">
<input type="hidden" name="sitesearch" value="www.tutorialspoint.com" class="user-valid valid">
<input class="header-search-box" type="text" id="search-string" name="q" placeholder="Search your favorite tutorials..." onfocus="if (this.value == 'Search your favorite tutorials...') {this.value = '';}" onblur="if (this.value == '') {this.value = 'Search your favorite tutorials...';}" autocomplete="off">
<button><i class="fal fa-search"></i></button>
</form>
</div>
<div class="menu-btn library-btn">
<a href="https://www.tutorialspoint.com/tutorialslibrary.htm"><i class="fal fa-cubes"></i> <span>Library</span></a>
</div>
<div class="menu-btn videos-btn">
<a href="https://www.tutorialspoint.com/videotutorials/index.htm"><i class="fal fa-video"></i> <span>Videos</span></a> 
</div>
<div class="menu-btn videos-btn">
<a href="https://www.tutorialspoint.com/questions/index.php"><i class="fa fa-location-arrow"></i> <span>Q/A</span></a>
</div>
<div class="menu-btn ebooks-btn">
<a href="https://store.tutorialspoint.com"><i class="fal fa-book"></i> <span>eBooks</span></a>
</div>
<div class="mui-dropdown">
<button class="mui-btn mui-btn--primary" data-mui-toggle="dropdown">
<span class="mui-caret"></span>
</button>
<ul class="mui-dropdown__menu">
<li><a href="https://www.tutorialspoint.com/tutorialslibrary.htm"><i class="fal fa-cubes"></i> <span>Library</span></a></li>
<li><a href="https://www.tutorialspoint.com/videotutorials/index.htm"><i class="fal fa-video"></i> <span>Videos</span></a></li>
<li><a href="https://store.tutorialspoint.com"><i class="fal fa-book"></i> <span>eBooks</span></a></li>
</ul>
</div>
</div>
</div>
</div>
<!-- Top main-menu Ends Here -->
</header>
<div class="mui-container-fluid content">
<div class="mui-container">
<!-- Tutorial ToC Starts Here -->
<div class="mui-col-md-3 tutorial-toc">
<div class="mini-logo">
<img src="/python_pandas/images/python-pandas-mini-logo.jpg" alt="Python Pandas Tutorial" />
</div>
<ul class="toc chapters">
<li class="heading">Python Pandas Tutorial</li>
<li><a href="/python_pandas/index.htm">Python Pandas - Home</a></li>
<li><a href="/python_pandas/python_pandas_introduction.htm">Python Pandas - Introduction</a></li>
<li><a href="/python_pandas/python_pandas_environment_setup.htm">Python Pandas - Environment Setup</a></li>
<li><a href="/python_pandas/python_pandas_introduction_to_data_structures.htm">Introduction to Data Structures</a></li>
<li><a href="/python_pandas/python_pandas_series.htm">Python Pandas - Series</a></li>
<li><a href="/python_pandas/python_pandas_dataframe.htm">Python Pandas - DataFrame</a></li>
<li><a href="/python_pandas/python_pandas_panel.htm">Python Pandas - Panel</a></li>
<li><a href="/python_pandas/python_pandas_basic_functionality.htm">Python Pandas - Basic Functionality</a></li>
<li><a href="/python_pandas/python_pandas_descriptive_statistics.htm">Descriptive Statistics</a></li>
<li><a href="/python_pandas/python_pandas_function_application.htm">Function Application</a></li>
<li><a href="/python_pandas/python_pandas_reindexing.htm">Python Pandas - Reindexing</a></li>
<li><a href="/python_pandas/python_pandas_iteration.htm">Python Pandas - Iteration</a></li>
<li><a href="/python_pandas/python_pandas_sorting.htm">Python Pandas - Sorting</a></li>
<li><a href="/python_pandas/python_pandas_working_with_text_data.htm">Working with Text Data</a></li>
<li><a href="/python_pandas/python_pandas_options_and_customization.htm">Options &amp; Customization</a></li>
<li><a href="/python_pandas/python_pandas_indexing_and_selecting_data.htm">Indexing &amp; Selecting Data</a></li>
<li><a href="/python_pandas/python_pandas_statistical_functions.htm">Statistical Functions</a></li>
<li><a href="/python_pandas/python_pandas_window_functions.htm">Python Pandas - Window Functions</a></li>
<li><a href="/python_pandas/python_pandas_aggregations.htm">Python Pandas - Aggregations</a></li>
<li><a href="/python_pandas/python_pandas_missing_data.htm">Python Pandas - Missing Data</a></li>
<li><a href="/python_pandas/python_pandas_groupby.htm">Python Pandas - GroupBy</a></li>
<li><a href="/python_pandas/python_pandas_merging_joining.htm">Python Pandas - Merging/Joining</a></li>
<li><a href="/python_pandas/python_pandas_concatenation.htm">Python Pandas - Concatenation</a></li>
<li><a href="/python_pandas/python_pandas_date_functionality.htm">Python Pandas - Date Functionality</a></li>
<li><a href="/python_pandas/python_pandas_timedelta.htm">Python Pandas - Timedelta</a></li>
<li><a href="/python_pandas/python_pandas_categorical_data.htm">Python Pandas - Categorical Data</a></li>
<li><a href="/python_pandas/python_pandas_visualization.htm">Python Pandas - Visualization</a></li>
<li><a href="/python_pandas/python_pandas_io_tool.htm">Python Pandas - IO Tools</a></li>
<li><a href="/python_pandas/python_pandas_sparse_data.htm">Python Pandas - Sparse Data</a></li>
<li><a href="/python_pandas/python_pandas_caveats_and_gotchas.htm">Python Pandas - Caveats &amp; Gotchas</a></li>
<li><a href="/python_pandas/python_pandas_comparison_with_sql.htm">Comparison with SQL</a></li>
</ul>
<ul class="toc chapters">
<li class="heading">Python Pandas Useful Resources</li>
<li><a href="/python_pandas/python_pandas_quick_guide.htm">Python Pandas - Quick Guide</a></li>
<li><a href="/python_pandas/python_pandas_useful_resources.htm">Python Pandas - Useful Resources</a></li>
<li><a href="/python_pandas/python_pandas_discussion.htm">Python Pandas - Discussion</a></li>
</ul>
<ul class="toc reading">
<li class="sreading">Selected Reading</li>
<li><a target="_top" href="/upsc_ias_exams.htm">UPSC IAS Exams Notes</a></li>
<li><a target="_top" href="/developers_best_practices/index.htm">Developer's Best Practices</a></li>
<li><a target="_top" href="/questions_and_answers.htm">Questions and Answers</a></li>
<li><a target="_top" href="/effective_resume_writing.htm">Effective Resume Writing</a></li>
<li><a target="_top" href="/hr_interview_questions/index.htm">HR Interview Questions</a></li>
<li><a target="_top" href="/computer_glossary.htm">Computer Glossary</a></li>
<li><a target="_top" href="/computer_whoiswho.htm">Who is Who</a></li>
</ul>
</div>
<!-- Tutorial ToC Ends Here -->
<!-- Tutorial Content Starts Here -->
<div class="mui-col-md-6 tutorial-content">
<h1>Python Pandas - Basic Functionality</h1>
<hr />
<div class="top-ad-heading">Advertisements</div>
<div style="text-align: center;">
<script><!--
google_ad_client = "pub-7133395778201029";
var width = document.getElementsByClassName("tutorial-content")[0].clientWidth - 40;
google_ad_width = width;
google_ad_height = 150;
google_ad_format = width + "x150_as";
google_ad_type = "image";
google_ad_channel = "";
//--></script>
<script src="https://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</div>
<div class="mui-container-fluid button-borders">
<div class="pre-btn">
<a href="/python_pandas/python_pandas_panel.htm"><i class="fal fa-chevron-circle-left"></i> Previous Page</a>
</div>
<div class="nxt-btn">
<a href="/python_pandas/python_pandas_descriptive_statistics.htm">Next Page <i class="fal fa-chevron-circle-right"></i>&nbsp;</a>
</div>
</div>
<div class="clearer"></div>
<p>By now, we learnt about the three Pandas DataStructures and how to create them. We will majorly focus on the DataFrame objects because of its importance in the real time data processing and also discuss a few other DataStructures.</p>
<h2>Series Basic Functionality</h2>
<table class="table table-bordered">
<tr>
<th style="text-align:center;">Sr.No.</th>
<th style="text-align:center;">Attribute or
Method &amp; Description</th>
</tr>
<tr>
<td class="ts">1</td>
<td>
<p><b>axes</b></p>
<p>Returns a list of the row axis labels</p></td>
</tr>
<tr>
<td class="ts">2</td>
<td>
<p><b>dtype</b></p>
<p>Returns the dtype of the object.</p></td>
</tr>
<tr>
<td class="ts">3</td>
<td>
<p><b>empty</b></p>
<p>Returns True if series is empty.</p></td>
</tr>
<tr>
<td class="ts">4</td>
<td>
<p><b>ndim</b></p>
<p>Returns the number of dimensions of the underlying data, by
definition 1.</p></td>
</tr>
<tr>
<td class="ts">5</td>
<td>
<p><b>size</b></p>
<p>Returns the number of elements in the underlying data.</p></td>
</tr>
<tr>
<td class="ts">6</td>
<td>
<p><b>values</b></p>
<p>Returns the Series as ndarray.</p></td>
</tr>
<tr>
<td class="ts">7</td>
<td>
<p><b>head()</b></p>
<p>Returns the first n rows.</p></td>
</tr>
<tr>
<td class="ts">8</td>
<td>
<p><b>tail()</b></p>
<p>Returns the last n rows.</p></td>
</tr>
</table>
<p>Let us now create a Series and see all the above tabulated attributes operation.</p>
<h3>Example</h3>
<div class="demo-view">
<a href="http://tpcg.io/m653mZ" target="_blank" rel="nofollow" class="demo"><i class="fa-external-link"></i> Live Demo</a>
</div>
<pre class="prettyprint notranslate">
import pandas as pd
import numpy as np

#Create a series with 100 random numbers
s = pd.Series(np.random.randn(4))
print s
</pre>
<p>Its <b>output</b> is as follows &minus;</p>
<pre class="result notranslate">
0   0.967853
1  -0.148368
2  -1.395906
3  -1.758394
dtype: float64
</pre>
<h3>axes</h3>
<p>Returns the list of the labels of the series.</p>
<div class="demo-view">
<a href="http://tpcg.io/zhvOdD" target="_blank" rel="nofollow" class="demo"><i class="fa-external-link"></i> Live Demo</a>
</div>
<pre class="prettyprint notranslate">
import pandas as pd
import numpy as np

#Create a series with 100 random numbers
s = pd.Series(np.random.randn(4))
print ("The axes are:")
print s.axes
</pre>
<p>Its <b>output</b> is as follows &minus;</p>
<pre class="result notranslate">
The axes are:
[RangeIndex(start=0, stop=4, step=1)]
</pre>
<p>The above result is a compact format of a list of values from 0 to 5, i.e., [0,1,2,3,4].</p>
<h3>empty</h3>
<p>Returns the Boolean value saying whether the Object is empty or not. True indicates that the object is empty.</p>
<div class="demo-view">
<a href="http://tpcg.io/o0C9rU" target="_blank" rel="nofollow" class="demo"><i class="fa-external-link"></i> Live Demo</a>
</div>
<pre class="prettyprint notranslate">
import pandas as pd
import numpy as np

#Create a series with 100 random numbers
s = pd.Series(np.random.randn(4))
print ("Is the Object empty?")
print s.empty
</pre>
<p>Its <b>output</b> is as follows &minus;</p>
<pre class="result notranslate">
Is the Object empty?
False
</pre>
<h3>ndim</h3>
<p>Returns the number of dimensions of the object. By definition, a Series is a 1D data structure, so it returns </p>
<div class="demo-view">
<a href="http://tpcg.io/dWB0Vq" target="_blank" rel="nofollow" class="demo"><i class="fa-external-link"></i> Live Demo</a>
</div>
<pre class="prettyprint notranslate">
import pandas as pd
import numpy as np

#Create a series with 4 random numbers
s = pd.Series(np.random.randn(4))
print s

print ("The dimensions of the object:")
print s.ndim
</pre>
<p>Its <b>output</b> is as follows &minus;</p>
<pre class="result notranslate">
0   0.175898
1   0.166197
2  -0.609712
3  -1.377000
dtype: float64

The dimensions of the object:
1
</pre>
<h3>size</h3>
<p>Returns the size(length) of the series.</p>
<div class="demo-view">
<a href="http://tpcg.io/SXZuZm" target="_blank" rel="nofollow" class="demo"><i class="fa-external-link"></i> Live Demo</a>
</div>
<pre class="prettyprint notranslate">
import pandas as pd
import numpy as np

#Create a series with 4 random numbers
s = pd.Series(np.random.randn(2))
print s
print ("The size of the object:")
print s.size
</pre>
<p>Its <b>output</b> is as follows &minus;</p>
<pre class="result notranslate">
0   3.078058
1  -1.207803
dtype: float64

The size of the object:
2
</pre>
<h3>values</h3>
<p>Returns the actual data in the series as an array.</p>
<div class="demo-view">
<a href="http://tpcg.io/eodLiV" target="_blank" rel="nofollow" class="demo"><i class="fa-external-link"></i> Live Demo</a>
</div>
<pre class="prettyprint notranslate">
import pandas as pd
import numpy as np

#Create a series with 4 random numbers
s = pd.Series(np.random.randn(4))
print s

print ("The actual data series is:")
print s.values
</pre>
<p>Its <b>output</b> is as follows &minus;</p>
<pre class="result notranslate">
0   1.787373
1  -0.605159
2   0.180477
3  -0.140922
dtype: float64

The actual data series is:
[ 1.78737302 -0.60515881 0.18047664 -0.1409218 ]
</pre>
<h3>Head &amp; Tail</h3>
<p>To view a small sample of a Series or the DataFrame object, use the head() and the tail() methods.</p>
<p><b>head()</b> returns the first <b>n</b> rows(observe the index values). The default number of elements to display is five, but you may pass a custom number.</p>
<div class="demo-view">
<a href="http://tpcg.io/AIT1Hj" target="_blank" rel="nofollow" class="demo"><i class="fa-external-link"></i> Live Demo</a>
</div>
<pre class="prettyprint notranslate">
import pandas as pd
import numpy as np

#Create a series with 4 random numbers
s = pd.Series(np.random.randn(4))
print ("The original series is:")
print s

print ("The first two rows of the data series:")
print s.head(2)
</pre>
<p>Its <b>output</b> is as follows &minus;</p>
<pre class="result notranslate">
The original series is:
0   0.720876
1  -0.765898
2   0.479221
3  -0.139547
dtype: float64

The first two rows of the data series:
0   0.720876
1  -0.765898
dtype: float64
</pre>
<p><b>tail()</b> returns the last <b>n</b> rows(observe the index values). The default number of elements to display is five, but you may pass a custom number.</p>
<div class="demo-view">
<a href="http://tpcg.io/k7mIKS" target="_blank" rel="nofollow" class="demo"><i class="fa-external-link"></i> Live Demo</a>
</div>
<pre class="prettyprint notranslate">
import pandas as pd
import numpy as np

#Create a series with 4 random numbers
s = pd.Series(np.random.randn(4))
print ("The original series is:")
print s

print ("The last two rows of the data series:")
print s.tail(2)
</pre>
<p>Its <b>output</b> is as follows &minus;</p>
<pre class="result notranslate">
The original series is:
0 -0.655091
1 -0.881407
2 -0.608592
3 -2.341413
dtype: float64

The last two rows of the data series:
2 -0.608592
3 -2.341413
dtype: float64
</pre>
<h2>DataFrame Basic Functionality</h2>
<p>Let us now understand what DataFrame Basic Functionality is. The following tables lists down the important attributes or methods that help in DataFrame Basic Functionality.</p>
<table class="table table-bordered">
<tr>
<th style="text-align:center;">Sr.No.</th>
<th style="text-align:center;">Attribute or
Method &amp; Description</th>
</tr>
<tr>
<td class="ts">1</td>
<td>
<p><b>T</b></p>
<p>Transposes rows and columns.</p></td>
</tr>
<tr>
<td class="ts">2</td>
<td>
<p><b>axes</b></p>
<p>Returns a list with the row axis labels and column axis labels as the only members.</p></td>
</tr>
<tr>
<td class="ts">3</td>
<td>
<p><b>dtypes</b></p>
<p>Returns the dtypes in this object.</p></td>
</tr>
<tr>
<td class="ts">4</td>
<td>
<p><b>empty</b></p>
<p>True if NDFrame is entirely empty [no items]; if any of the axes are of length 0.</p></td>
</tr>
<tr>
<td class="ts">5</td>
<td>
<p><b>ndim</b></p>
<p>Number of axes / array dimensions.</p></td>
</tr>
<tr>
<td class="ts">6</td>
<td>
<p><b>shape</b></p>
<p>Returns a tuple representing the dimensionality of the DataFrame.</p></td>
</tr>
<tr>
<td class="ts">7</td>
<td>
<p><b>size</b></p>
<p>Number of elements in the NDFrame.</p></td>
</tr>
<tr>
<td class="ts">8</td>
<td>
<p><b>values</b></p>
<p>Numpy representation of NDFrame.</p></td>
</tr>
<tr>
<td class="ts">9</td>
<td>
<p><b>head()</b></p>
<p>Returns the first n rows.</p></td>
</tr>
<tr>
<td class="ts">10</td>
<td>
<p><b>tail()</b></p>
<p>Returns last n rows.</p></td>
</tr>
</table>
<p>Let us now create a DataFrame and see all how the above mentioned attributes operate.</p>
<h3>Example</h3>
<div class="demo-view">
<a href="http://tpcg.io/4CANHN" target="_blank" rel="nofollow" class="demo"><i class="fa-external-link"></i> Live Demo</a>
</div>
<pre class="prettyprint notranslate">
import pandas as pd
import numpy as np

#Create a Dictionary of series
d = {'Name':pd.Series(['Tom','James','Ricky','Vin','Steve','Smith','Jack']),
   'Age':pd.Series([25,26,25,23,30,29,23]),
   'Rating':pd.Series([4.23,3.24,3.98,2.56,3.20,4.6,3.8])}

#Create a DataFrame
df = pd.DataFrame(d)
print ("Our data series is:")
print df
</pre>
<p>Its <b>output</b> is as follows &minus;</p>
<pre class="result notranslate">
Our data series is:
    Age   Name    Rating
0   25    Tom     4.23
1   26    James   3.24
2   25    Ricky   3.98
3   23    Vin     2.56
4   30    Steve   3.20
5   29    Smith   4.60
6   23    Jack    3.80
</pre>
<h3>T (Transpose)</h3>
<p>Returns the transpose of the DataFrame. The rows and columns will interchange.</p>
<div class="demo-view">
<a href="http://tpcg.io/1OW286" target="_blank" rel="nofollow" class="demo"><i class="fa-external-link"></i> Live Demo</a>
</div>
<pre class="prettyprint notranslate">
import pandas as pd
import numpy as np
 
# Create a Dictionary of series
d = {'Name':pd.Series(['Tom','James','Ricky','Vin','Steve','Smith','Jack']),
   'Age':pd.Series([25,26,25,23,30,29,23]),
   'Rating':pd.Series([4.23,3.24,3.98,2.56,3.20,4.6,3.8])}

# Create a DataFrame
df = pd.DataFrame(d)
print ("The transpose of the data series is:")
print df.T
</pre>
<p>Its <b>output</b> is as follows &minus;</p>
<pre class="result notranslate">
The transpose of the data series is:
         0     1       2      3      4      5       6
Age      25    26      25     23     30     29      23
Name     Tom   James   Ricky  Vin    Steve  Smith   Jack
Rating   4.23  3.24    3.98   2.56   3.2    4.6     3.8
</pre>
<h3>axes</h3>
<p>Returns the list of row axis labels and column axis labels.</p>
<div class="demo-view">
<a href="http://tpcg.io/IrADKg" target="_blank" rel="nofollow" class="demo"><i class="fa-external-link"></i> Live Demo</a>
</div>
<pre class="prettyprint notranslate">
import pandas as pd
import numpy as np

#Create a Dictionary of series
d = {'Name':pd.Series(['Tom','James','Ricky','Vin','Steve','Smith','Jack']),
   'Age':pd.Series([25,26,25,23,30,29,23]),
   'Rating':pd.Series([4.23,3.24,3.98,2.56,3.20,4.6,3.8])}

#Create a DataFrame
df = pd.DataFrame(d)
print ("Row axis labels and column axis labels are:")
print df.axes
</pre>
<p>Its <b>output</b> is as follows &minus;</p>
<pre class="result notranslate">
Row axis labels and column axis labels are:

[RangeIndex(start=0, stop=7, step=1), Index([u'Age', u'Name', u'Rating'],
dtype='object')]
</pre>
<h3>dtypes</h3>
<p>Returns the data type of each column.</p>
<div class="demo-view">
<a href="http://tpcg.io/9DHSRj" target="_blank" rel="nofollow" class="demo"><i class="fa-external-link"></i> Live Demo</a>
</div>
<pre class="prettyprint notranslate">
import pandas as pd
import numpy as np

#Create a Dictionary of series
d = {'Name':pd.Series(['Tom','James','Ricky','Vin','Steve','Smith','Jack']),
   'Age':pd.Series([25,26,25,23,30,29,23]),
   'Rating':pd.Series([4.23,3.24,3.98,2.56,3.20,4.6,3.8])}

#Create a DataFrame
df = pd.DataFrame(d)
print ("The data types of each column are:")
print df.dtypes
</pre>
<p>Its <b>output</b> is as follows &minus;</p>
<pre class="result notranslate">
The data types of each column are:
Age     int64
Name    object
Rating  float64
dtype: object
</pre>
<h3>empty</h3>
<p>Returns the Boolean value saying whether the Object is empty or not; True indicates that the object is empty.</p>
<div class="demo-view">
<a href="http://tpcg.io/AhYFfF" target="_blank" rel="nofollow" class="demo"><i class="fa-external-link"></i> Live Demo</a>
</div>
<pre class="prettyprint notranslate">
import pandas as pd
import numpy as np
 
#Create a Dictionary of series
d = {'Name':pd.Series(['Tom','James','Ricky','Vin','Steve','Smith','Jack']),
   'Age':pd.Series([25,26,25,23,30,29,23]),
   'Rating':pd.Series([4.23,3.24,3.98,2.56,3.20,4.6,3.8])}
 
#Create a DataFrame
df = pd.DataFrame(d)
print ("Is the object empty?")
print df.empty
</pre>
<p>Its <b>output</b> is as follows &minus;</p>
<pre class="result notranslate">
Is the object empty?
False
</pre>
<h3>ndim</h3>
<p>Returns the number of dimensions of the object. By definition, DataFrame is a 2D object.</p>
<div class="demo-view">
<a href="http://tpcg.io/jM8CLd" target="_blank" rel="nofollow" class="demo"><i class="fa-external-link"></i> Live Demo</a>
</div>
<pre class="prettyprint notranslate">
import pandas as pd
import numpy as np

#Create a Dictionary of series
d = {'Name':pd.Series(['Tom','James','Ricky','Vin','Steve','Smith','Jack']),
   'Age':pd.Series([25,26,25,23,30,29,23]),
   'Rating':pd.Series([4.23,3.24,3.98,2.56,3.20,4.6,3.8])}

#Create a DataFrame
df = pd.DataFrame(d)
print ("Our object is:")
print df
print ("The dimension of the object is:")
print df.ndim
</pre>
<p>Its <b>output</b> is as follows &minus;</p>
<pre class="result notranslate">
Our object is:
      Age    Name     Rating
0     25     Tom      4.23
1     26     James    3.24
2     25     Ricky    3.98
3     23     Vin      2.56
4     30     Steve    3.20
5     29     Smith    4.60
6     23     Jack     3.80

The dimension of the object is:
2
</pre>
<h3>shape</h3>
<p>Returns a tuple representing the dimensionality of the DataFrame. Tuple (a,b), where a represents the number of rows and <b>b</b> represents the number of columns.</p>
<div class="demo-view">
<a href="http://tpcg.io/B8cy5N" target="_blank" rel="nofollow" class="demo"><i class="fa-external-link"></i> Live Demo</a>
</div>
<pre class="prettyprint notranslate">
import pandas as pd
import numpy as np
 
#Create a Dictionary of series
d = {'Name':pd.Series(['Tom','James','Ricky','Vin','Steve','Smith','Jack']),
   'Age':pd.Series([25,26,25,23,30,29,23]),
   'Rating':pd.Series([4.23,3.24,3.98,2.56,3.20,4.6,3.8])}
 
#Create a DataFrame
df = pd.DataFrame(d)
print ("Our object is:")
print df
print ("The shape of the object is:")
print df.shape
</pre>
<p>Its <b>output</b> is as follows &minus;</p>
<pre class="result notranslate">
Our object is:
   Age   Name    Rating
0  25    Tom     4.23
1  26    James   3.24
2  25    Ricky   3.98
3  23    Vin     2.56
4  30    Steve   3.20
5  29    Smith   4.60
6  23    Jack    3.80

The shape of the object is:
(7, 3)
</pre>
<h3>size</h3>
<p>Returns the number of elements in the DataFrame.</p>
<div class="demo-view">
<a href="http://tpcg.io/PUhFAn" target="_blank" rel="nofollow" class="demo"><i class="fa-external-link"></i> Live Demo</a>
</div>
<pre class="prettyprint notranslate">
import pandas as pd
import numpy as np
 
#Create a Dictionary of series
d = {'Name':pd.Series(['Tom','James','Ricky','Vin','Steve','Smith','Jack']),
   'Age':pd.Series([25,26,25,23,30,29,23]),
   'Rating':pd.Series([4.23,3.24,3.98,2.56,3.20,4.6,3.8])}
 
#Create a DataFrame
df = pd.DataFrame(d)
print ("Our object is:")
print df
print ("The total number of elements in our object is:")
print df.size
</pre>
<p>Its <b>output</b> is as follows &minus;</p>
<pre class="result notranslate">
Our object is:
    Age   Name    Rating
0   25    Tom     4.23
1   26    James   3.24
2   25    Ricky   3.98
3   23    Vin     2.56
4   30    Steve   3.20
5   29    Smith   4.60
6   23    Jack    3.80

The total number of elements in our object is:
21
</pre>
<h3>values</h3>
<p>Returns the actual data in the DataFrame as an <b>NDarray.</b></p>
<div class="demo-view">
<a href="http://tpcg.io/8gD3wH" target="_blank" rel="nofollow" class="demo"><i class="fa-external-link"></i> Live Demo</a>
</div>
<pre class="prettyprint notranslate">
import pandas as pd
import numpy as np
 
#Create a Dictionary of series
d = {'Name':pd.Series(['Tom','James','Ricky','Vin','Steve','Smith','Jack']),
   'Age':pd.Series([25,26,25,23,30,29,23]),
   'Rating':pd.Series([4.23,3.24,3.98,2.56,3.20,4.6,3.8])}
 
#Create a DataFrame
df = pd.DataFrame(d)
print ("Our object is:")
print df
print ("The actual data in our data frame is:")
print df.values
</pre>
<p>Its <b>output</b> is as follows &minus;</p>
<pre class="result notranslate">
Our object is:
    Age   Name    Rating
0   25    Tom     4.23
1   26    James   3.24
2   25    Ricky   3.98
3   23    Vin     2.56
4   30    Steve   3.20
5   29    Smith   4.60
6   23    Jack    3.80
The actual data in our data frame is:
[[25 'Tom' 4.23]
[26 'James' 3.24]
[25 'Ricky' 3.98]
[23 'Vin' 2.56]
[30 'Steve' 3.2]
[29 'Smith' 4.6]
[23 'Jack' 3.8]]
</pre>
<h3>Head &amp; Tail</h3>
<p>To view a small sample of a DataFrame object, use the <b>head()</b> and tail() methods. <b>head()</b> returns the first <b>n</b> rows (observe the index values). The default number of elements to display is five, but you may pass a custom number.</p>
<div class="demo-view">
<a href="http://tpcg.io/510KTX" target="_blank" rel="nofollow" class="demo"><i class="fa-external-link"></i> Live Demo</a>
</div>
<pre class="prettyprint notranslate">
import pandas as pd
import numpy as np
 
#Create a Dictionary of series
d = {'Name':pd.Series(['Tom','James','Ricky','Vin','Steve','Smith','Jack']),
   'Age':pd.Series([25,26,25,23,30,29,23]),
   'Rating':pd.Series([4.23,3.24,3.98,2.56,3.20,4.6,3.8])}

#Create a DataFrame
df = pd.DataFrame(d)
print ("Our data frame is:")
print df
print ("The first two rows of the data frame is:")
print df.head(2)
</pre>
<p>Its <b>output</b> is as follows &minus;</p>
<pre class="result notranslate">
Our data frame is:
    Age   Name    Rating
0   25    Tom     4.23
1   26    James   3.24
2   25    Ricky   3.98
3   23    Vin     2.56
4   30    Steve   3.20
5   29    Smith   4.60
6   23    Jack    3.80

The first two rows of the data frame is:
   Age   Name   Rating
0  25    Tom    4.23
1  26    James  3.24
</pre>
<p><b>tail()</b> returns the last <b>n</b> rows (observe the index values). The default number of elements to display is five, but you may pass a custom number.</p>
<div class="demo-view">
<a href="http://tpcg.io/8NjD8r" target="_blank" rel="nofollow" class="demo"><i class="fa-external-link"></i> Live Demo</a>
</div>
<pre class="prettyprint notranslate">
import pandas as pd
import numpy as np

#Create a Dictionary of series
d = {'Name':pd.Series(['Tom','James','Ricky','Vin','Steve','Smith','Jack']),
   'Age':pd.Series([25,26,25,23,30,29,23]), 
   'Rating':pd.Series([4.23,3.24,3.98,2.56,3.20,4.6,3.8])}
 
#Create a DataFrame
df = pd.DataFrame(d)
print ("Our data frame is:")
print df
print ("The last two rows of the data frame is:")
print df.tail(2)
</pre>
<p>Its <b>output</b> is as follows &minus;</p>
<pre class="result notranslate">
Our data frame is:
    Age   Name    Rating
0   25    Tom     4.23
1   26    James   3.24
2   25    Ricky   3.98
3   23    Vin     2.56
4   30    Steve   3.20
5   29    Smith   4.60
6   23    Jack    3.80

The last two rows of the data frame is:
    Age   Name    Rating
5   29    Smith    4.6
6   23    Jack     3.8
</pre>
<div class="mui-container-fluid button-borders show">
<div class="pre-btn">
<a href="/python_pandas/python_pandas_panel.htm"><i class="fal fa-chevron-circle-left"></i> Previous Page</a>
</div>
<div class="nxt-btn">
<a href="/python_pandas/python_pandas_descriptive_statistics.htm">Next Page <i class="fal fa-chevron-circle-right"></i>&nbsp;</a>
</div>
</div>
<div class="google-bottom-ads">
<div>Advertisements</div>
<script><!--
var width = 580;
var height = 400;
var format = "580x400_as";
if( window.innerWidth < 468 ){
   width = 300;
   height = 250;
   format = "300x250_as";
}
google_ad_client = "pub-7133395778201029";
google_ad_width = width;
google_ad_height = height;
google_ad_format = format;
google_ad_type = "image";
google_ad_channel ="";
//--></script>
<script src="https://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
<div class="space-bottom"></div>
</div>
</div>
<!-- Tutorial Content Ends Here -->
<!-- Right Column Starts Here -->
<div class="mui-col-md-2 google-right-ads">
<div class="space-top"></div>
<div class="google-right-ad" style="margin: 0px auto !important;margin-top:5px;">
<script><!--
google_ad_client = "pub-2537027957187252";
google_ad_width = 300;
google_ad_height = 250;
google_ad_format = "300x250_as";
google_ad_type = "image";
google_ad_channel ="";
//--></script>
<script src="https://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</div>
<div class="google-right-ad">
<div class="adsbyvli" data-ad-slot="vi_9012177"></div>
<script>(vitag.Init = window.vitag.Init || []).push(function(){viAPItag.display("vi_9012177")})</script>
</div>
<div class="space-bottom"></div>
<div class="google-right-ad">
<div class="adsbyvli" data-ad-slot="vi_9013289"></div>
<script>(vitag.Init = window.vitag.Init || []).push(function(){viAPItag.display("vi_9013289")})</script>
</div>
<div class="space-bottom" style="margin-bottom:15px;"></div>
</div>
<!-- Right Column Ends Here -->
</div>
</div>
<div class="clear"></div>
<footer id="footer">
<div class="mui--text-center">
<div class="mui--text-caption mui--text-light">
<a href="/index.htm" class="logo"><img class="img-responsive" src="/images/logo-black.png" alt="Tutorials Point" title="Tutorials Point"></a>
</div>
<ul class="mui-list--inline mui--text-body2 mui--text-light">
<li><a href="/about/index.htm"><i class="fal fa-globe"></i> About us</a></li>
<li><a href="/about/about_terms_of_use.htm"><i class="fal fa-asterisk"></i> Terms of use</a></li>
<li><a href="/about/about_privacy.htm#cookies"> <i class="fal fa-shield-check"></i> Cookies Policy</a></li>
<li><a href="/about/faq.htm"><i class="fal fa-question-circle"></i> FAQ's</a></li>
<li><a href="/about/about_helping.htm"><i class="fal fa-hands-helping"></i> Helping</a></li>
<li><a href="/about/contact_us.htm"><i class="fal fa-map-marker-alt"></i> Contact</a></li>
</ul>
<div class="mui--text-caption mui--text-light bottom-copyright-text">&copy; Copyright 2019. All Rights Reserved.</div>
</div>
<div id="privacy-banner">
  <div>
    <p>
      We use cookies to provide and improve our services. By using our site, you consent to our Cookies Policy.
      <a id="banner-accept" href="#">Accept</a>
      <a id="banner-learn" href="/about/about_cookies.htm" target="_blank">Learn more</a>
    </p>
  </div>
</div>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-232293-17"></script>
<script>
window.dataLayer = window.dataLayer || [];
function gtag(){dataLayer.push(arguments);}
gtag('js', new Date());
gtag('config', 'UA-232293-6');
</script>
</footer>
</body>
</html>
