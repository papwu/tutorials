<!DOCTYPE html>
<html lang="en-US">
<head>
<title>SAP Smart Forms - Quick Guide - Tutorialspoint</title>
<meta charset="utf-8">
<meta name="description" content="SAP Smart Forms - Quick Guide - You can design and print forms in a SAP System using the Smart Form Technology. Your ABAP program calls a smart form and then to print, spools are generated. Yo"/>
<meta name="keywords" content="C, C++, Python, Java, HTML, CSS, JavaScript, SQL, PHP, jQuery, XML, DOM, Bootstrap, Tutorials, Articles, Programming, training, learning, quiz, preferences, examples, code"/>
<link rel="canonical" href="https://www.tutorialspoint.com/sap_smart_forms/sap_smart_forms_quick_guide.htm" />
<link rel="shortcut icon" href="/favicon.ico" type="image/x-icon" />
<meta name="viewport" content="width=device-width,initial-scale=1.0,user-scalable=yes">
<script src="/theme/js/script-min-v2.js?v=3"></script>
<link rel="stylesheet" href="/theme/css/style-min-v2.css?v=6">
<script src="//services.bilsyndication.com/adv1/?d=901" defer="" async=""></script>
<script> var vitag = vitag || {};</script>
<script> vitag.outStreamConfig = { enablePC: false, enableMobile: false };</script>  
<style>
.right-menu .mui-btn {
    background-color:#036db0;
}
a.demo {
    background:#036db0;
}
li.heading {
    background:#036db0;
}
.course-box{background:#036db0}
.home-intro-sub p{color:#036db0}
</style>
</head>
<body>
<header id="header">
<!-- Top sub-menu Starts Here -->
<div class="mui-appbar mui-container-fulid top-menu">
<div class="mui-container">
<div class="top-menu-item home">
<a href="https://www.tutorialspoint.com/index.htm" target="_blank" title="TutorialsPoint - Home"><i class="fal fa-home"></i> <span>Home</span></a>
</div>
<div class="top-menu-item qa">
<a href="https://www.tutorialspoint.com/about/about_careers.htm" target="_blank" title="Job @ Tutorials Point"><i class="fa fa-suitcase"></i> <span>Jobs</span></a>
</div>
<div class="top-menu-item tools">
<a href="https://www.tutorialspoint.com/online_dev_tools.htm" target="_blank" title="Tools - Online Development and Testing Tools"><i class="fal fa-cogs"></i> <span>Tools</span></a>
</div>
<div class="top-menu-item coding-ground">
<a href="https://www.tutorialspoint.com/codingground.htm" target="_blank" title="Coding Ground - Free Online IDE and Terminal"><i class="fal fa-code"></i> <span>Coding Ground </span></a> 
</div>
<div class="top-menu-item current-affairs">
<a href="https://www.tutorialspoint.com/current_affairs.htm" target="_blank" title="Daily Current Affairs"><i class="fal fa-layer-plus"></i> <span>Current Affairs</span></a>
</div>
<div class="top-menu-item upsc-notes">
<a href="https://www.tutorialspoint.com/upsc_ias_exams.htm" target="_blank" title="UPSC IAS Exams Notes - TutorialsPoint"><i class="fal fa-user-tie"></i> <span>UPSC Notes</span></a>
</div>      
<div class="top-menu-item online-tutoris">
<a href="https://www.tutorialspoint.com/tutor_connect/index.php" target="_blank" title="Top Online Tutors - Tutor Connect"><i class="fal fa-user"></i> <span>Online Tutors</span></a>
</div>
<div class="top-menu-item whiteboard">
<a href="https://www.tutorialspoint.com/whiteboard.htm" target="_blank" title="Free Online Whiteboard"><i class="fal fa-chalkboard"></i> <span>Whiteboard</span></a>
</div>
<div class="top-menu-item net-meeting">
<a href="https://www.tutorialspoint.com/netmeeting.php" target="_blank" title="A free tool for online video conferencing"><i class="fal fa-chalkboard-teacher"></i> <span>Net Meeting</span></a> 
</div>
<div class="top-menu-item articles">
<a href="https://www.tutorix.com" target="_blank" title="Tutorx - The Best Learning App" rel="nofollow"><i class="fal fa-video"></i> <span>Tutorix</span></a> 
</div>        
<div class="social-menu-item">
<a href="https://www.facebook.com/tutorialspointindia" target="_blank" rel="nofollow" data-placement="bottom" title="tutorialspoint @ Facebook"><i class="fab fa-facebook-f"></i></a> 
<a href="https://www.twitter.com/tutorialspoint" target="_blank" rel="nofollow" data-placement="bottom" title="tutorialspoint @ Twitter"><i class="fab fa-twitter"></i></a>
<a href="https://www.linkedin.com/company/tutorialspoint" target="_blank" rel="nofollow" data-placement="bottom" title="tutorialspoint @ Linkedin"><i class="fab fa-linkedin-in"></i></a>
<a href="https://www.youtube.com/channel/UCVLbzhxVTiTLiVKeGV7WEBg" target="_blank" rel="nofollow" data-placement="bottom" title="tutorialspoint YouTube"><i class="fab fa-youtube"></i></a>
</div>        
</div>
</div>
<!-- Top sub-menu Ends Here -->
<!-- Top main-menu Starts Here -->
<div class="mui-appbar mui-container-fulid mui--appbar-line-height mui--z1" id="logo-menu">
<div class="mui-container">
<div class="left-menu">
<a href="https://www.tutorialspoint.com/index.htm" title="Tutorialspoint">
<img class="tp-logo" alt="tutorialspoint" src="/sap_smart_forms/images/logo.png">
</a>
<div class="mui-dropdown">
<a class="mui-btn mui-btn--primary categories" data-mui-toggle="dropdown"><i class="fa fa-th-large"></i> 
<span>Categories <span class="mui-caret"></span></span></a>            
<ul class="mui-dropdown__menu cat-menu">
<li>
<ul>
<li><a href="/academic_tutorials.htm"><i class="fa fa-caret-right"></i> Academic Tutorials</a></li>
<li><a href="/big_data_tutorials.htm"><i class="fa fa-caret-right"></i> Big Data &amp; Analytics </a></li>
<li><a href="/computer_programming_tutorials.htm"><i class="fa fa-caret-right"></i> Computer Programming </a></li>
<li><a href="/computer_science_tutorials.htm"><i class="fa fa-caret-right"></i> Computer Science </a></li>
<li><a href="/database_tutorials.htm"><i class="fa fa-caret-right"></i> Databases </a></li>
<li><a href="/devops_tutorials.htm"><i class="fa fa-caret-right"></i> DevOps </a></li>
<li><a href="/digital_marketing_tutorials.htm"><i class="fa fa-caret-right"></i> Digital Marketing </a></li>
<li><a href="/engineering_tutorials.htm"><i class="fa fa-caret-right"></i> Engineering Tutorials </a></li>
<li><a href="/upsc_ias_exams.htm"><i class="fa fa-caret-right"></i> Exams Syllabus </a></li>
<li><a href="/famous_monuments.htm"><i class="fa fa-caret-right"></i> Famous Monuments </a></li>
<li><a href="/gate_exams_tutorials.htm"><i class="fa fa-caret-right"></i> GATE Exams Tutorials</a></li>
<li><a href="/latest_technologies.htm"><i class="fa fa-caret-right"></i> Latest Technologies </a></li>
<li><a href="/machine_learning_tutorials.htm"><i class="fa fa-caret-right"></i> Machine Learning </a></li>
<li><a href="/mainframe_tutorials.htm"><i class="fa fa-caret-right"></i> Mainframe Development </a></li>
<li><a href="/management_tutorials.htm"><i class="fa fa-caret-right"></i> Management Tutorials </a></li>
<li><a href="/maths_tutorials.htm"><i class="fa fa-caret-right"></i> Mathematics Tutorials</a></li>
<li><a href="/microsoft_technologies_tutorials.htm"><i class="fa fa-caret-right"></i> Microsoft Technologies </a></li>
<li><a href="/misc_tutorials.htm"><i class="fa fa-caret-right"></i> Misc tutorials </a></li>
<li><a href="/mobile_development_tutorials.htm"><i class="fa fa-caret-right"></i> Mobile Development </a></li>
<li><a href="/java_technology_tutorials.htm"><i class="fa fa-caret-right"></i> Java Technologies </a></li>
<li><a href="/python_technologies_tutorials.htm"><i class="fa fa-caret-right"></i> Python Technologies </a></li>
<li><a href="/sap_tutorials.htm"><i class="fa fa-caret-right"></i> SAP Tutorials </a></li>
<li><a href="/scripting_lnaguage_tutorials.htm"><i class="fa fa-caret-right"></i>Programming Scripts </a></li>
<li><a href="/selected_reading.htm"><i class="fa fa-caret-right"></i> Selected Reading </a></li>
<li><a href="/software_quality_tutorials.htm"><i class="fa fa-caret-right"></i> Software Quality </a></li>
<li><a href="/soft_skill_tutorials.htm"><i class="fa fa-caret-right"></i> Soft Skills </a></li>
<li><a href="/telecom_tutorials.htm"><i class="fa fa-caret-right"></i> Telecom Tutorials </a></li>
<li><a href="/upsc_ias_exams.htm"><i class="fa fa-caret-right"></i> UPSC IAS Exams </a></li>
<li><a href="/web_development_tutorials.htm"><i class="fa fa-caret-right"></i> Web Development </a></li>
<li><a href="/sports_tutorials.htm"><i class="fa fa-caret-right"></i> Sports Tutorials </a></li>
<li><a href="/xml_technologies_tutorials.htm"><i class="fa fa-caret-right"></i> XML Technologies </a></li>
<li><a href="/multi_language_tutorials.htm"><i class="fa fa-caret-right"></i> Multi-Language Tutorials</a></li>
<li><a href="/questions_and_answers.htm"><i class="fa fa-caret-right"></i> Interview Questions</a></li>
</ul>
</li>
</ul>
<div class="clear"></div>
</div> 
</div>
<div class="right-menu">
<div class="toc-toggle">
<a href="javascript:void(0);"><i class="fa fa-bars"></i></a>
</div>
<div class="mobile-search-btn">
<a href="https://www.tutorialspoint.com/search.htm"><i class="fal fa-search"></i></a>
</div>
<div class="search-box">
<form method="get" class="" name="searchform" action="https://www.google.com/search" target="_blank" novalidate="">
<input type="hidden" name="sitesearch" value="www.tutorialspoint.com" class="user-valid valid">
<input class="header-search-box" type="text" id="search-string" name="q" placeholder="Search your favorite tutorials..." onfocus="if (this.value == 'Search your favorite tutorials...') {this.value = '';}" onblur="if (this.value == '') {this.value = 'Search your favorite tutorials...';}" autocomplete="off">
<button><i class="fal fa-search"></i></button>
</form>
</div>
<div class="menu-btn library-btn">
<a href="https://www.tutorialspoint.com/tutorialslibrary.htm"><i class="fal fa-cubes"></i> <span>Library</span></a>
</div>
<div class="menu-btn videos-btn">
<a href="https://www.tutorialspoint.com/videotutorials/index.htm"><i class="fal fa-video"></i> <span>Videos</span></a> 
</div>
<div class="menu-btn videos-btn">
<a href="https://www.tutorialspoint.com/questions/index.php"><i class="fa fa-location-arrow"></i> <span>Q/A</span></a>
</div>
<div class="menu-btn ebooks-btn">
<a href="https://store.tutorialspoint.com"><i class="fal fa-book"></i> <span>eBooks</span></a>
</div>
<div class="mui-dropdown">
<button class="mui-btn mui-btn--primary" data-mui-toggle="dropdown">
<span class="mui-caret"></span>
</button>
<ul class="mui-dropdown__menu">
<li><a href="https://www.tutorialspoint.com/tutorialslibrary.htm"><i class="fal fa-cubes"></i> <span>Library</span></a></li>
<li><a href="https://www.tutorialspoint.com/videotutorials/index.htm"><i class="fal fa-video"></i> <span>Videos</span></a></li>
<li><a href="https://store.tutorialspoint.com"><i class="fal fa-book"></i> <span>eBooks</span></a></li>
</ul>
</div>
</div>
</div>
</div>
<!-- Top main-menu Ends Here -->
</header>
<div class="mui-container-fluid content">
<div class="mui-container">
<!-- Tutorial ToC Starts Here -->
<div class="mui-col-md-3 tutorial-toc">
<div class="mini-logo">
<img src="/sap_smart_forms/images/sap-smart-forms-mini-logo.jpg" alt="SAP Smart Forms Tutorial" />
</div>
<ul class="toc chapters">
<li class="heading">SAP Smart Forms Tutorial</li>
<li><a href="/sap_smart_forms/index.htm">SAP Smart Forms - Home</a></li>
<li><a href="/sap_smart_forms/sap_smart_forms_overview.htm">SAP Smart Forms - Overview</a></li>
<li><a href="/sap_smart_forms/sap_smart_forms_architecture.htm">SAP Smart Forms - Architecture</a></li>
<li><a href="/sap_smart_forms/sap_smart_forms_structure.htm">SAP Smart Forms - Structure</a></li>
<li><a href="/sap_smart_forms/sap_smart_form_logic.htm">SAP Smart Forms - Form Logic</a></li>
<li><a href="/sap_smart_forms/sap_smart_forms_navigation.htm">SAP Smart Forms - Navigation</a></li>
<li><a href="/sap_smart_forms/sap_smart_form_builder.htm">SAP Smart Forms - Form Builder</a></li>
<li><a href="/sap_smart_forms/sap_smart_forms_style_builder.htm">SAP Smart Forms - Style Builder</a></li>
<li><a href="/sap_smart_forms/sap_smart_forms_output_types.htm">SAP Smart Forms - Output Types</a></li>
<li><a href="/sap_smart_forms/sap_smart_forms_advance_development_concepts.htm">Advance Development Concepts</a></li>
<li><a href="/sap_smart_forms/sap_smart_form_graphics.htm">SAP Smart Forms - Form Graphics</a></li>
<li><a href="/sap_smart_forms/sap_smart_forms_applications_and_migration.htm">Applications &amp; Migration</a></li>
</ul>
<ul class="toc chapters">
<li class="heading">SAP Smart Forms Useful Resources</li>
<li><a href="/sap_smart_forms/sap_smart_forms_quick_guide.htm">SAP Smart Forms - Quick Guide</a></li>
<li><a href="/sap_smart_forms/sap_smart_forms_useful_resources.htm">SAP Smart Forms - Useful Resources</a></li>
<li><a href="/sap_smart_forms/sap_smart_forms_discussion.htm">SAP Smart Forms - Discussion</a></li>
</ul>
<ul class="toc reading">
<li class="sreading">Selected Reading</li>
<li><a target="_top" href="/upsc_ias_exams.htm">UPSC IAS Exams Notes</a></li>
<li><a target="_top" href="/developers_best_practices/index.htm">Developer's Best Practices</a></li>
<li><a target="_top" href="/questions_and_answers.htm">Questions and Answers</a></li>
<li><a target="_top" href="/effective_resume_writing.htm">Effective Resume Writing</a></li>
<li><a target="_top" href="/hr_interview_questions/index.htm">HR Interview Questions</a></li>
<li><a target="_top" href="/computer_glossary.htm">Computer Glossary</a></li>
<li><a target="_top" href="/computer_whoiswho.htm">Who is Who</a></li>
</ul>
</div>
<!-- Tutorial ToC Ends Here -->
<!-- Tutorial Content Starts Here -->
<div class="mui-col-md-6 tutorial-content">
<h1>SAP Smart Forms - Quick Guide</h1>
<hr />
<div class="top-ad-heading">Advertisements</div>
<div style="text-align: center;">
<script><!--
google_ad_client = "pub-7133395778201029";
var width = document.getElementsByClassName("tutorial-content")[0].clientWidth - 40;
google_ad_width = width;
google_ad_height = 150;
google_ad_format = width + "x150_as";
google_ad_type = "image";
google_ad_channel = "";
//--></script>
<script src="https://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</div>
<div class="mui-container-fluid button-borders">
<div class="pre-btn">
<a href="/sap_smart_forms/sap_smart_forms_applications_and_migration.htm"><i class="fal fa-chevron-circle-left"></i> Previous Page</a>
</div>
<div class="nxt-btn">
<a href="/sap_smart_forms/sap_smart_forms_useful_resources.htm">Next Page <i class="fal fa-chevron-circle-right"></i>&nbsp;</a>
</div>
</div>
<div class="clearer"></div>
<h1>SAP Smart Forms - Overview</h1>
<p>You can design and print forms in a SAP System using the <b>Smart Form Technology</b>. Your ABAP program calls a smart form and then to print, spools are generated. You can embed texts, images and other elements like barcodes in smart forms. SAP Smart Forms is an advanced version of SAP Script Forms and replaces scripting in a SAP system for form printing and integrating the output in an HTML format.</p>
<p>You can use different output formats in a Smart Form, some of these include &minus;</p>
<ul class="list">
<li>Printing</li>
<li>Email</li>
<li>Fax or </li>
<li>Sending it over the internet in a HTML/XML output format.</li> 
</ul>
<p>A Smart Form tool allows you to modify forms by using simple graphical tools instead of using any programming tool. This means that a user with no programming knowledge can configure these forms with data for a business process effortlessly.</p>
<p>In a Smart Form, data is retrieved from static and dynamic tables. The table heading and subtotal are specified by the triggered events and the data is then sorted before the final output. A <b>Smart Form allows you to incorporate graphics</b> that can be displayed either as a part of the form or as the background. You can also suppress a background graphic if required while taking a printout of a form.</p>
<p>The SAP Smart Forms have been surprised with the use of interactive forms from Adobe.</p>
<p>Some examples of this standard Smart Forms available in a SAP System are as follows &minus;</p>
<ul class="list">
<li><p><b>SF_EXAMPLE_01</b> represents an invoice with a table output for flight booking for a customer.</p></li> 
<li><p><b>SF_EXAMPLE_02</b> represents an invoice like SF_EXAMPLE_01, but with subtotals.</p></li> 
<li><p><b>SF_EXAMPLE_03</b> specifies an invoice like SF_EXAMPLE_02, but one in which several customers can be selected in an application program.</p></li> 
</ul>
<h2>SAP Smart Forms vs SAP Script</h2>
<p>SAP Scripting is in use since the 1980’s. However, the Smart Form concept was started in year 2001. Smart Forms have surprised Scripting Forms in SAP.</p>
<p>Following are the key differences between them &minus;</p>
<ul class="list">
<li><p>In SAP Scripting, you must write the print program. However, in a Smart Form it is not required to write a print program.</p></li> 
<li><p>SAP Scripts are client dependent. However, Smart Forms are client independent.</p></li> 
<li><p>You can create Smart Forms without using the main window. However, it is not possible with the use of Scripts.</p></li> 
<li><p>In SAP Scripting, you can use up to 99 main windows. However, in a Smart Form it can have one main window.</p></li> 
<li><p>When you activate Smart Forms in a SAP system, it generates the function module. However, it is not generated in case of Script Execution.</p></li> 
<li><p>It is also possible to create and design web forms using Smart Forms, but you cannot design web forms using script.</p></li> 
<li><p>The Smart Form concept is completely based on Graphical User Interface. However, scripting includes some programming.</p></li> 
<li><p>You can create, change and display a smart form using Transaction <b>SMARTFORMS</b>. To style the smart forms, you can use Transaction <b>SMARTSTYLES</b>. To write a SAP Script, use <b>Transaction Code: SE71</b> to open form painter and SE72 to add different style of texts and font in the Script Forms.</p></li> 
<li><p>It is possible to maintain background graphics using Smart Forms, but not possible with SAP scripting.</p></li> 
</ul>
<p>To design a smart form layout in a SAP system, use Transaction Code: <b>SMARTFORMS</b>.</p>
<img src="/sap_smart_forms/images/smartforms.jpg" alt="SMARTFORMS" />
<p>To Style the smart form, use Transaction: <b>SMARTSTYLES</b>.</p>
<img src="/sap_smart_forms/images/smartstyle.jpg" alt="SMARTSTYLES" />
<h3>SAP Smart Forms – Uses</h3>
<p>The Smart Forms have many advantages over Scripting. These include easy to design graphical user interface, use of dynamic text frames and table structure.</p>
<p>Below are the benefits of using Smart Forms &minus;</p>
<ul class="list">
<li><p>It doesn’t require any programming knowledge to design smart forms as it is based on graphical tools. This allows power users to design the smart forms in a SAP system and experts are required only in special cases.</p></li>
<li><p>When you activate smart forms, it automatically generates function modules at the runtime.</p></li> 
<li><p>You can add background graphics to smart forms which can be displayed as a part of the form.</p></li> 
<li><p>You can display table structures and dynamic text framing using smart forms. You can use SMARTSTYLES to add colored texts, images, barcodes, etc.</p></li> 
<li><p>You can generate output in HTML format with release 6.10.</p></li> 
<li><p>It is easy to make changes to the existing smart forms using drag/drop or cut/paste feature. This doesn’t required you to enter script coding for making changes.</p></li> 
<li><p>You can convert SAP Script forms to smart forms but vice versa is not possible.</p></li> 
</ul>
<h3>SAP Smart Forms – General Concept</h3>
<p>In a SAP System, form printing means creating and designing layout of the form for mass printing. This involves form structure, design and layout and form logic for dynamic formatting. The form layout tells the structure of the form like – number of different structure pages and use of tables, paragraphs and character formats to format text in the form.</p>
<p>The dynamic formatting of the form depends on the form logic that allows you to add the conditional text in the form layout, which is displayed only when a certain condition is met. You can define variable fields as per the condition type – first dunning use this text and second dunning use other text and so on to process dynamic formatting.</p>
<p>Different form types can be created in a SAP System using smart forms and you can add conditional text and different layouts as per the requirement.</p>
<ul class="list">
<li>Invoices</li>
<li>Account Statements</li>
<li>Salary Statement</li>
<li>Quality Forms</li>
<li>Checklist</li>
<li>Order Processing</li>
<li>Order Confirmation</li>
<li>Delivery notes and many more</li> 
</ul>
<p>In the next chapter, we will discuss in detail about the architecture of SAP Smart Forms.</p>
<h1>SAP Smart Forms - Architecture</h1>
<p>In a SAP Smart Form, you have multiple components where application data is different from form definition. When a smart form is activated, a function module is generated and data is retrieved from the database.</p>
<p>In a SAP smart form, the following components are used &minus;</p>
<ul class="list">
<li><p><b>Form Layout</b> &minus; The form layout defines the position of elements on the pages and where the objects will be displayed in the form output.</p></li>
<li><p><b>Form Logic</b> &minus; Form logic defines the data to be read from the database, to define the condition and to control the flow of the form output.</p></li>
<li><p><b>Individual Elements</b> &minus; It includes the elements to be displayed in the form output. Common element types are Text, Table, Graphics, etc.</p></li>
<li><p><b>Form Interface</b> &minus; A form interface in SAP smart form is used to transfer the application data to form definition.</p></li> 
</ul>
<img src="/sap_smart_forms/images/architecture.jpg" alt="Architecture" />
<p>In the above image, you can see the <b>Smart Form Architecture</b>. When a smart form is activated, a function module is generated. When application program calls the functional module, the module interface is used to transfer the table data as per the form description and to print the form.</p>
<p>You can also embed statements in the form description to select the data for form processing. But, this is not recommended when you have to print the mass forms results performance degradation.</p>
<p>It is also possible to print the data as tables on the form and to be merged with the application data with the smart form. A single call to a smart form always generates one form for printing. A different output type can always be selected such as – Fax, Print, email or in HTML/XML format to a web browser.</p>
<h1>SAP Smart Forms - Structure</h1>
<p>A smart form consists of multiple pages. There are different graphics such as the header and company logo, while output areas and text to be displayed is in the output. You can use the dynamic table structure to show the data or texts in the column, cell format, etc.</p>
<p>A common smart form example is a customer invoice for flight booking. The price details with the flight booking is shown in the table in the main window and other windows contain different elements like the company name logo, address of the customer and other company or customer specific details.</p>
<img src="/sap_smart_forms/images/structure.jpg" alt="Structure" />
<p>The first page of the flight booking invoice contains booking company details, customer letter if any and a table containing number of booking items. The table type is dynamic and its length depends on the number of booking items in the table. The table header includes column headings &minus;</p>
<ul class="list">
<li>Serial number</li>
<li>Ticket number</li>
<li>Sectors</li>
<li>Flight name or number</li>
<li>PAX (passenger/s) name, etc.</li>  
</ul>
<p>While the table footer contains – the amount in Rupees, Net amount, etc.</p>
<p>When the table continues to the second page due to more number of items, the table header and footer repeats on the next page as well. The page layout of this smart form defines the page structure as A4, while A5 is the position of windows with data to be displayed on each page.</p>
<h2>SAP Smart Forms – Screen Navigation</h2>
<p>To design a new smart form or to change or display an existing smart form, you should use the Transaction: <b>SMARTFORMS</b>.</p>
<p>Enter the Transaction as shown in the screenshot below &minus;</p>
<img src="/sap_smart_forms/images/navigation.jpg" alt="Navigation" />
<p>On the home screen, you can see three different tabs &minus;</p>
<ul class="list">
<li>Change</li>  
<li>Display</li>  
<li>Create</li>  
</ul>
<p>Enter the Form name and click on the Create button as shown in the following screenshot &minus;</p>
<img src="/sap_smart_forms/images/screenshot.jpg" alt="Screenshot" />
<p>When you click on the Create button, this will open the <b>SAP Form Builder</b> screen which is divided into three parts</p>
<img src="/sap_smart_forms/images/sap_form_builder.jpg" alt="SAP Form Builder" />
<p>On the left side, you have a <b>Navigation Window</b>. This window contains all the elements such as – text and graphics, which are part of a SAP Smart Form. You can see the hierarchy of nodes and sub-nodes under the Navigation pane.</p>
<p>In the middle, you have a <b>Maintenance Window</b>. This window is used to set the attribute value of each element in a smart form. You can define Output Options such as &minus;</p>
<ul class="list">
<li>Position and Size (Left Margin, Upper Margin, Width, and Height)</li>
<li>Box and Shading</li>
<li>Frames</li>
<li>Shading, etc.</li>  
</ul>
<p>The Preview and Conditions tab includes – Field Name and Comparison Value.</p>
<img src="/sap_smart_forms/images/preview.jpg" alt="Preview" />
<p>On the right side, you have the <b>Form Painter</b>. A Form Painter defines the layout of the page in a SAP smart form. When you create a smart form in a SAP system, a functional module is generated. Under the Navigation pane, you have to two folders by default in each form, these are &minus;</p>
<ul class="list">
<li>Global Settings </li>
<li>Pages and Window</li> 
</ul>
<p>Let us now discuss both these folders in detail.</p>
<h3>Global Setting</h3>
<p>It contains the global settings of the smart form, such as &minus;</p>
<ul class="list">
<li>Form Attributes</li>
<li>Form Interface and </li>
<li>Global Definitions</li> 
</ul>
<p>In the Form Interface, you can see all the data passed to the smart form from the print program. While, the Global Definition contains the data that can be used throughout the smart form.</p>
<img src="/sap_smart_forms/images/global_settings.jpg" alt="Global Settings" />
<h3>Pages and Window</h3>
<p>Using Pages and Window, you can create new objects, such as &minus;</p>
<ul class="list">
<li>Page</li>
<li>Window</li>
<li>Graphic</li>
<li>Address</li>
</ul>
<img src="/sap_smart_forms/images/pages.jpg" alt="Pages" />
<p>The printing of a smart form takes place as per the next page field. While, the processing of a smart form depends on the sequence defined under the Navigation pane.</p>
<img src="/sap_smart_forms/images/navigation_pane.jpg" alt="Navigation Pane" />
<h2>SAP Smart Forms – Pages of Form</h2>
<p>In any SAP Smart Form, you can define different page layouts for each page. A Page Layout defines the page format, some of its options are &minus;</p>
<ul class="list">
<li>Landscape</li>
<li>Portrait</li>
<li>A4 Size</li>
<li>A5 Size, etc.</li> 
</ul>
<p>You can have a different structure for each page in a smart form. As an example, the first page can contain address, about company, logo, terms of business or any other information that should come on the first page.</p>
<p>In a smart form, you need to define the next page for each page and a clear page sequence. You can also call the same page multiple times to make the output recursive. The page break is defined in the form logic using manual coding or you can also define it via the main window and the sub window.</p>
<p>Each page contains two types of output areas, which are – Main window and Sub window. These windows can be placed anywhere on the page and you can even overlap them. A single window can be used on multiple pages.</p>
<img src="/sap_smart_forms/images/first_page.jpg" alt="First Page" />
<h2>SAP Smart Forms – Main Window and Sub Window</h2>
<p>In this section, we will understand in detail about the Main and Sub Windows.</p>
<h3>Main Window</h3>
<p>In a SAP smart form, the main window is used to hold text and data. As this is the main window, it is filled with text and data system. It displays the text in the main window of the next page, while the page break is automatically triggered.</p>
<p><b>Note</b> &minus; Check the following key points to remember about main window and sub-window.</p>
<ul class="list">
<li><p>The main window of each page should have same width, but it can differ in height.</p></li>
<li><p>When you don’t have a main window that defines a page. That page will call itself and it will result in an endless loop.</p></li>
</ul>
<h3>Sub-Window</h3>
<p>In a SAP smart form, the sub-windows are used to display the text and the data on the predefined areas of the output. The text and data that doesn’t fit in the sub-window is truncated and not displayed in the form output.</p>
<p>When a sub-window is placed on each page with the same name, the content of that sub window is displayed on each page.</p>
<img src="/sap_smart_forms/images/sub_window.jpg" alt="Sub-Window" />
<p>To create a window in Main window or in a page, right click on the Page or the Main window and select the window type.</p>
<img src="/sap_smart_forms/images/create.jpg" alt="Create" />
<p>Enter the Window Name, Meaning and Window Type. The name entered for this window is shown in the navigation pane. You can drag the window and put it anywhere on the main window.</p>
<img src="/sap_smart_forms/images/main_window.jpg" alt="Main Window" />
<p>When the windows are overlapping, you can also send one window to the background, copy or delete a node by right clicking on it.</p>
<img src="/sap_smart_forms/images/background.jpg" alt="Background" />
<h2>SAP Smart Forms – Text and Data</h2>
<p>You can enter the text and the data in a smart form and place them as per the requirement. The data entered in this smart form is in a string format and can be pulled from the database. You can also enter the text and the data in a table format to display it as a table.</p>
<ul class="list">
<li><p>You can use Form Painter to position Windows, Graphics, etc. on a page in a smart form.</p></li> 
<li><p>The PC Editor is used to write the text.</p></li>
<li><p>The Table Painter in a smart form window is used to format your tables.</p></li>
</ul>
<h3>Entering Text in a Smart Form using the PC Editor</h3>
<p>To enter text using PC Editor, you should create the text node in the navigation tree. It is also possible to include data from the system into the text using system fields and parameters in the form. While processing the smart form, the system replaces the data with values from system fields.</p>
<p>To create a text node in the Navigation pane, right click &rarr; Create &rarr; Text as shown in the following screenshot.</p>
<img src="/sap_smart_forms/images/text.jpg" alt="Text" />
<p>Enter the node name and the description as shown in the following screenshot &minus;</p>
<p>Go to General Attribute and select Text type as the Text Element. You can enter the text in PC Editor directly or you can also open the Text Editor in full screen mode.</p>
<img src="/sap_smart_forms/images/text_element.jpg" alt="Text Element" />
<p>When you click on the Green Arrow Mark (F3 button), the text from the Text Editor is transferred to the Inline PC Editor.</p>
<img src="/sap_smart_forms/images/green_arrow_mark.jpg" alt="Green Arrow Mark" />
<p>To highlight the text as a URL, mark this text and click Insert URL at the top.</p>
<img src="/sap_smart_forms/images/url.jpg" alt="URL" />
<h1>SAP Smart Forms - Form Logic</h1>
<p>In a SAP smart form, the form logic defines the data to be read from the database, then to define the condition and lastly to control the flow of the form output. Form logic is defined in the Form Builder, where the form structure is defined on the left side of the SMART FORMS interface. When a smart form creation window is opened, on the left side you have default nodes.</p>
<p>The Global setting node and has the three following subfolders &minus;</p>
<ul class="list">
<li>Form Attributes</li>
<li>Form Interface and</li>
<li>Global Definitions</li>
</ul>
<p>These show up when you create a new smart form.</p>
<img src="/sap_smart_forms/images/form_logic.jpg" alt="Form Logic" />
<p>To define form logic, you should define the hierarchical structure under the node pages in the navigation pane and this structure defines the rule for processing of the smart form. This form logic can be used to control the form output.</p>
<p>You should remember the following points about Form Logic &minus;</p>
<ul class="list">
<li><p>In a tree structure, there is a tab defined for each node and each node can be linked to a condition. When the condition is met in the form, the system processes that node and if it is not met, the system doesn’t process that node.</p></li>
<li><p>In a general scenario, nodes in the tree structure are processed from top to bottom.</p></li> 
<li><p>Page break on each page depends on how much space is left on the current page.</p></li>
<li><p>A Flow control is defined for each page; however, you can also go to any page.</p></li>
</ul>
<img src="/sap_smart_forms/images/conditions.jpg" alt="Conditions" />
<h2>SAP Smart Forms – Flow Control</h2>
<p>You can also control the flow processing in a SAP smart form for the tree hierarchy defined in a navigation pane.</p>
<p>There are different options that can be used to define Flow Control, some of these are listed below &minus;</p>
<ul class="list">
<li><p><b>Output Condition</b> &minus; To define processing of nodes/sub-nodes as per the output condition.</p></li>
<li><p><b>Alternative</b> &minus; It can be used to process one of two inferior nodes.</p></li>
<li><p><b>Repeated Output</b> &minus; You can use a loop to process the output repeatedly.</p></li>  
<li><p><b>Dynamic processing</b> &minus; You can also process pages dynamically by defining page sequence using command line.</p></li>
</ul>
<h3>Output Condition</h3>
<p>You can pass an output condition to suppress node/sub-node processing. To enter the output condition for a node, go to the <b>Condition Tab</b>.</p>
<p>In the condition tab, you can pass each line a condition with two operands. An operand can be a field or a value.</p>
<p>You can also pass logical operators; the most important operators are &minus;</p>
<ul class="list">
<li>AND</li>
<li>OR</li>
</ul>
<img src="/sap_smart_forms/images/output_condition.jpg" alt="Output Condition" />
<p>You can also perform a local check to validate an output condition. To perform a condition check, click on the Check Button as shown in the following screenshot.</p>
<img src="/sap_smart_forms/images/condition_check.jpg" alt="Condition Check" />
<p>You can also link an output condition to output events of pages and windows. You can use an Additional event box and these events are linked using the AND condition.</p>
<img src="/sap_smart_forms/images/additional_event_box.jpg" alt="Additional Event Box" />
<p>When the condition is met, the system processes the node/sub-node as per the condition value. When the condition fails, the system ignores node and processes the next value in the flow control.</p>
<p>To process the output repeatedly, the loop node must be used which reads the data from an internal table. You use a loop to read customer data and display. To display repeated output, you can create a node – type loop and enter the unique name and description.</p>
<img src="/sap_smart_forms/images/loop.jpg" alt="Loop" />
<p>The next step is to read the data from an internal table into a work area and create inferior nodes in which you display the fields of the read table lines.</p>
<img src="/sap_smart_forms/images/create_inferior.jpg" alt="Create Inferior" />
<h1>SAP Smart Forms - Navigation</h1>
<p>In this chapter, we will discuss in detail about Navigation, the User Interface, Node Types and the Form Parameters of SAP Smart Forms.</p>
<h2>SAP Smart Forms – User Interface</h2>
<p>To design a form in SAP Smart Forms, you need to create and maintain a layout of the form and define the form logic. You don’t require any knowledge on programming and scripting language.</p>
<p>The SAP Smart Form Graphical User Interface consists of following fields &minus;</p>
<ul class="list">
<li><p><b>Form Painter</b> &minus; To create the form layout, you use Form Painter.</p></li>
<li><p><b>PC Editor</b> &minus; It can be used to enter texts and fields into the output area.</p></li>
<li><p><b>Navigation Tree</b> &minus; On the left side, you have navigation tree that defines the hierarchy of a smart form. This defines the form logic for processing.</p></li>
<li><p><b>Table Painter</b> &minus; Table Painter is used to create templates and tables.</p></li>
<li><p><b>Form Check</b> &minus; To check the form consistency.</p></li>
</ul>
<p>In a SAP smart form, you can use <b>Transaction: SMARTFORMS</b>. On the first page, you have an option to select the <b>Form, Style</b> or <b>Text Module</b> as per the object you want to Create, Change or Display.</p>
<img src="/sap_smart_forms/images/text_module.jpg" alt="Text Module" />
<p>Enter the name and select the type you want to create and click on the Create button and this will open SAP Form Builder.</p>
<p>In SAP From builder, you have Tree navigation on the left side. To select a node in tree, you have to double click on the node. You can also drag and drop or copy subtrees by right clicking on it and using the Copy/Paste operation.</p>
<img src="/sap_smart_forms/images/subtrees.jpg" alt="Subtrees" />
<p>When you right click on any node, you can see the Context menu. As per the node type, options under the Context menu varies.</p>
<img src="/sap_smart_forms/images/contextmenu.jpg" alt="ContextMenu" />
<p>You have the following options under the Context menu &minus;</p>
<ul class="list">
<li>Creating or deleting as per the selected node type.</li>
<li>Depending on the selected node type only the valid node types appear.</li>
<li>Clipboard functions – Cut or Copy to clipboard, Paste to clipboard.</li>
<li>Expand and Collapse.</li> 
</ul>
<h2>SAP Smart Forms – Node Types</h2>
<p>In this section, we will discuss in detail about the different types of node options, which are listed below.</p>
<p><b>Output Areas</b> &minus;</p>
<ul class="list">
<li>Page</li> 
<li>Window</li> 
</ul>
<p><b>Elementary Nodes</b> &minus;</p>
<ul class="list">
<li>Text</li> 
<li>Graphic</li> 
<li>Address</li> 
</ul>
<p><b>Table Output</b> &minus;</p>
<ul class="list">
<li>Template</li> 
<li>Table</li>
</ul>
<h3>Attributes of Nodes Type</h3>
<p>In a SAP smart form, each form contains following common attributes &minus;</p>
<p><b>General Attribute</b> &minus; General attributes in a smart form define the name of the selected node and description. It can also contain a few generic properties of nodes like in case of the text node – text type, etc.</p>
<img src="/sap_smart_forms/images/node_types.jpg" alt="Node Types" />
<p><b>Output Options</b> &minus; In this tab, various output options are defined for each node you select in the Navigation pane. The Common tab includes &minus;</p>
<ul class="list">
<li>Position</li>
<li>Style box</li>
<li>Shading, etc.</li>
</ul>
<img src="/sap_smart_forms/images/output_options.jpg" alt="Output Options" />
<p>Nodes with text output also have an attribute Style. You can use this attribute to overwrite for the current subtree, if you don’t like the style that was set in the form before.</p>
<p><b>Conditions</b> &minus; In the condition tab, you can pass the condition which displays the node when certain conditions are met.</p>
<p><b>Error List</b> &minus; While performing a check on the smart form, in case of any inconsistencies, the system displays the list of errors and warning at the bottom of the maintenance screen window.</p>
<p>To find the error or warning, you should select the node and then the system will take you to the tree structure, so that you can fix the error.</p>
<img src="/sap_smart_forms/images/error_list.jpg" alt="Error List" />
<h2>SAP Smart Forms – Form Parameters</h2>
<p>You can also pass parameters in the smart form and merge the data into the form. Data that can be merged could be from the database or a part of the standard data from a SAP system.</p>
<p>The following data can be merged in a smart form &minus;</p>
<ul class="list">
<li><p>You can merge data from database tables and pass them to the form interface.</p></li>
<li><p>The data provided by the standard SAP system can be merged in a smart form. Example: date.</p></li> 
<li><p>Any calculations that are performed in the form</p></li> 
</ul>
<p>The data you merge is displayed at run time. You use place holders to determine where to place the objects in the form to define where the data will be displayed.</p>
<p>When a smart form is activated, a function module is generated. You can pass different standard parameters in a smart form. When you create a form, these parameter appears in the form and can’t be changed. These are import and export parameters that can be used for different operations like – Specifying the output device type, etc.</p>
<p>Following are the common parameters in a Smart Form &minus;</p>
<p><b>DOCUMENT_OUTPUT_INFO</b></p>
<p>Type: Export</p>
<p>Description &minus; This is used to provide the information about the number of printed form pages.</p>
<p><b>JOB_OUTPUT_INFO</b></p>
<p>Type: Export</p>
<p>Description &minus; This can be used to determine which action creates what output in a smart from.</p>
<p><b>JOB_OUTPUT_OPTIONS</b></p>
<p>Type: Export</p>
<p>Description &minus; This is a subset of the field OUTPUT_OPTIONS and it determines if settings have been changed or not.</p>
<p><b>USER_SETTINGS</b></p>
<p>Type: Import</p>
<p>Description &minus; When the value of this parameter is ‘X’, the smart form takes a default value of Spool Control defined under System &rarr; User Profile &rarr; Own Data.</p>
<p>The default value – Output Device &rarr; Print Immediately and Delete after Output.</p>
<img src="/sap_smart_forms/images/system.jpg" alt="System" />
<p></p>
<img src="/sap_smart_forms/images/parameters.jpg" alt="Parameters" />
<p>When the value is not set, Smart Forms instead evaluates the following parameters of the structure for the output options – <b>SSFCOMOP</b>.</p>
<ul class="list">
<li>Printer settings (TDDEST, TDPRINTER , RQPOSNAME)</li>
<li>TDIMMED (Print immediately)</li> 
<li>TDDELETE (Delete after output)</li> 
</ul>
<p>You can see different Import and Export parameters under the Field List tab of a smart form.</p>
<img src="/sap_smart_forms/images/import.jpg" alt="Import" />
<h1>SAP Smart Forms - Form Builder</h1>
<p>In this chapter, we will discuss in detail about Navigation in Form Builder, Functions of Form Builder, Usage of Table Painter and the Output Options of SAP Smart Forms.</p>
<h2>SAP Smart Forms – Navigation in Form Builder</h2>
<p>To design a new smart form or to change or display an existing smart form, you must use Transaction: <b>SMARTFORMS</b>.</p>
<p>Enter the Transaction as shown in the following screenshot &minus;</p>
<img src="/sap_smart_forms/images/navigation_in_form_builder.jpg" alt="Navigation in Form Builder" />
<p>On the home screen, you can see three different tabs &minus;</p>
<ul class="list">
<li>Change</li> 
<li>Display</li> 
<li>Create</li>
</ul>
<p>Enter the Form name and click on the Create button &minus;</p>
<img src="/sap_smart_forms/images/screenshot.jpg" alt="Screenshot" />
<p>When you click on the Create button, this will open a SAP Form Builder screen. The Graphical interface screen of Form Builder is used for form designing.</p>
<p>It consists of three work areas &minus;</p>
<ul class="list">
<li>Navigation Tree (Left Side)</li> 
<li>Maintenance Screen (Middle Pane)</li> 
<li>Form Painter (Right Side)</li> 
</ul>
<img src="/sap_smart_forms/images/create_button.jpg" alt="Create Button" />
<p>It is also possible to hide/unhide form painter from the top menu. At the top menu, you have the option to On/Off Form Painter as shown in the following screenshot.</p>
<img src="/sap_smart_forms/images/menu.jpg" alt="Menu" />
<p>In the Maintenance tab, you have other tools integrated with the Form Builder.</p>
<ul class="list">
<li><p><b>PC Editor</b> &minus; To manage text nodes.</p></li> 
<li><p><b>Table Painter</b> &minus; To manage table and template nodes.</p></li>  
</ul>
<img src="/sap_smart_forms/images/pc_editor.jpg" alt="PC Editor" />
<h2>SAP Smart Forms – Functions in Form Builder</h2>
<p>There are different set of functions that are provided in the Form Builder.</p>
<h3>Field List</h3>
<p>This function lists all the fields of the smart form.</p>
<img src="/sap_smart_forms/images/field_list.jpg" alt="Field List" />
<p>When you click on the Field List <b>(ctrl+shift+F4),</b> it opens the Field List folder on the main screen. The following values are displayed under the Field List &minus;</p>
<ul class="list">
<li>Import Interface</li> 
<li>Export Interface</li> 
<li>Global Data</li> 
<li>System Fields</li> 
</ul>
<img src="/sap_smart_forms/images/field_name.jpg" alt="Field Name" />
<h3>Undo/Redo</h3>
<p>You can also undo changes to a form step by step. In a smart form, the Form Builder stores any changes you made to the form since last saving it, independent of whether the changes occurred in the following places</p>
<ul class="list">
<li>The Navigation Tree</li>
<li>The Table Painter</li>
<li>The Form Painter</li>
<li>The PC Editor</li>
<li>The input fields of the maintenance screen.</li> 
</ul>
<p>You can undo these changes step by step. Once they are undone, you can also redo the changes.</p>
<p>Go to Utilities &rarr; Settings &rarr; Undo/Redo Form Changes. Under the General tab, you have the option.</p>
<img src="/sap_smart_forms/images/general.jpg" alt="General" />
<p>By default, these options are marked when you navigate to the General tab.</p>
<h3>Downloading/Uploading Form</h3>
<p>It is also possible to store a form or subtree locally. It saves as an XML file and you can upload this XML file into the same form or even in a different form.</p>
<p>When you upload the subtree, you need to make sure that the styles and fields of this downloaded subtree should exist in the target system.</p>
<p>To download a Smart Form, go to Utilities &rarr; Download Form.</p>
<p>To download a subtree, go to navigation pane and double click on inferior node of a pages and Windows node as root node of the form. Go to Utilities &rarr; Download Subtree.</p>
<img src="/sap_smart_forms/images/utilities.jpg" alt="Utilities" />
<p>To upload the form, go to Utilities &rarr; Upload.</p>
<img src="/sap_smart_forms/images/upload.jpg" alt="Upload" />
<p>While uploading, it knows if there is a form/subtree to be uploaded. In case of a form, it overwrites the current form in the Form Builder. When the file contains a subtree, smart form copies this subtree to the clipboard and to paste this subtree, you can navigate to the tree structure and use the context menu to insert the subtree.</p>
<p><b>Note</b> &minus; Before inserting, you should ensure that all the target and styles exist for the subtree. If not, you should create them.</p>
<h3>Active Version</h3>
<p>You can also directly return to the last active version of the form. However, all the changes are lost for that form. To restore the active version, go to Utilities &rarr; Back to Active Version.</p>
<img src="/sap_smart_forms/images/active_version.jpg" alt="Active Version" />
<h2>SAP Smart Forms – Using Table Painter</h2>
<p>The Table Painter in a smart form is used to design the template and tables in a window. The layout for template and tables are done using <b>Line types</b>. You can On/Off Table Painter by going to the Table tab under the Maintenance window in the <b>SMARTFORMS GUI</b> screen.</p>
<img src="/sap_smart_forms/images/line_types.jpg" alt="Line Types" />
<p>The Table Painter provides different functions in smart forms &minus;</p>
<ul class="list">
<li>You can draw lines and columns.</li> 
<li>You can cut, copy, delete or insert lines.</li> 
<li>You can delete cells.</li> 
<li>You can also change the cell size.</li>  
<li>You can also split cells.</li> 
<li>Different table patterns can be used.</li> 
</ul>
<p><b>Note</b> &minus; You should check the size in scale as design area doesn’t scale as per the window size.</p>
<p>The following Node types can be used to present the data in a table format &minus;</p>
<ul class="list">
<li><p><b>Template Node</b> &minus; You can use Templates which are static in nature as columns and lines are predetermined.</p></li>  
<li><p><b>Tables</b> &minus; Tables in smart forms are dynamic in nature as size of the table in form depends on the amount of data selected at run time.</p></li>  
</ul>
<img src="/sap_smart_forms/images/tables.jpg" alt="Tables" />
<p>You can see the Table Painter in the lower part of the screen. Whereas, at the top you have the Table Painter functions that can be used to provide the line types.</p>
<h3>Defining Table Layout</h3>
<p>To define a table layout, you need to create a template or table under the Navigation tree structure. This Table Layout determines &minus;</p>
<ul class="list">
<li>Height and Width of each cell.</li> 
<li>Number of lines and cells.</li> 
<li>Width of each cell.</li> 
</ul>
<p>While defining a table layout, you can use columns – “From and To” to specify the lines of your template for which the definition applies.</p>
<p>The value of Height is applied to all the cells of a line and you can specify the width for each cell you want to display. The sum of the width values must amount to the specified Width of the template.</p>
<p>It is also possible to reuse the name of the template line by entering the value in the reference column of the line.</p>
<p>The following are the sample lines in table control.</p>
<table class="table table-bordered" style="text-align:center;">
<tr>
<th style="text-align:center;">Name</th>
<th style="text-align:center;">Value From</th>
<th style="text-align:center;">Value To</th>
<th style="text-align:center;">Height</th>
<th style="text-align:center;">1.</th>
<th style="text-align:center;">2.</th>
</tr>
<tr>
<td>Line 1</td>
<td>1</td>
<td>1</td>
<td>1</td>
<td>1</td>
<td>1</td>
</tr>
<tr>
<td>Line 2</td>
<td>2</td>
<td>2</td>
<td>2</td>
<td>2</td>
<td>2</td>
</tr>
<tr>
<td>Line 3</td>
<td>3</td>
<td>3</td>
<td>1</td>
<td>1</td>
<td>2</td>
</tr>
</table>
<h3>Defining Line Types in a Table Painter</h3>
<p>Line type in your template or table specify the number and size of cells of a line. You can enter the line types graphically by entering values in Details settings as shown in the following screenshot.</p>
<img src="/sap_smart_forms/images/table_painter.jpg" alt="Table Painter" />
<p></p>
<img src="/sap_smart_forms/images/table1.jpg" alt="Table1" />
<p>Using table painter to define line types, go to template or table. In the Table Painter, there exists a line whose width corresponds to the window width. The width in the design area of the Table Painter is the same as the window width.</p>
<p>To draw the lines, select draw lines and column pen and draw the Line types as shown below.</p>
<img src="/sap_smart_forms/images/column.jpg" alt="Column" />
<p>You can also insert blank lines using the context menu. Bring the mouse pointer on the line where you want to insert a blank line and right click to open the context menu.</p>
<p>You can select Insert &rarr; New Blank Line below or Insert &rarr; New Blank Line above. This will insert a new line with the same height as the clicked line in the table.</p>
<img src="/sap_smart_forms/images/blank_line.jpg" alt="Blank Line" />
<p>You can also split an existing line type. Put the pencil at a position that you want to horizontally split and pull the line towards right. The table painter will split the line automatically. You can also split the line using the Context menu.</p>
<img src="/sap_smart_forms/images/split.jpg" alt="Split" />
<p>You can also use Copy or cut line to move or copy existing lines as show in context menu.</p>
<h2>SAP Smart Forms – Output Options</h2>
<p>You can use different output options under Form Builder. These attributes are available under the Output options tab of form attributes in a smart form.</p>
<p>Component type: <b>SSFCOMPOP</b>.</p>
<img src="/sap_smart_forms/images/ssfcompop.jpg" alt="SSFCOMPOP" />
<p>You can control the form output using the Form Attribute to define the default setting for the output format and medium. These settings can be overruled by using standard parameters when smart forms are called and are known as <b>Dynamic Setting Options</b>.</p>
<p><b>Note</b> &minus; Default option for the output format in the form is a <b>Standard Output (OTF)</b> and this output format as well as the medium is known as <b>Static settings</b>.</p>
<p>The following image shows the overriding setting for output options &minus;</p>
<img src="/sap_smart_forms/images/output_format.jpg" alt="Output Format" />
<p>When you use the overriding option in the Output format, a smart form ignores all the static settings in the form.</p>
<h1>SAP Smart Forms - Style Builder</h1>
<p>In this chapter, we will discuss in detail about the Style Builder in SAP Smart Forms. This chapter will also cover the various Smart Styles, Style Builder Navigation along with Paragraph and Character Formats of a Style Builder.</p>
<h2>SAP Smart Forms – Smart Styles</h2>
<p>By using a Style builder, you can define smart styles in a smart form. To open style builder, Run Transaction: <b>SMARTSTYLES</b>. Using these smart styles, you can create paragraph, and character format that can be assigned to texts and fields in a smart form. The Smart styles are maintained in a style builder.</p>
<p>Run Transaction Code: SMARTSTYLES.</p>
<img src="/sap_smart_forms/images/smart_styles.jpg" alt="Smart Styles" />
<p>To create a new smart style, enter the style name and click on the Create button. To display/change existing style, search the style from and click on the Display/Change button.</p>
<p>A smart style should be assigned to each smart form and this can be done globally by going to Form Attributes. A smart style can also be assigned to a text node.</p>
<p>A smart style consists of the following fields &minus;</p>
<ul class="list">
<li><p>You have Paragraph formats which contains font attributes, tabs, numbering and other formatting fields.</p></li>
<li><p>Smart style can contain character formats like – Superscript and Subscripts, Bar Code, etc.</p></li> 
<li><p>In a smart style, you have a header data that contains the default values of a Smart Style.</p></li> 
<li><p>You can add a color, underline a paragraph or character format.</p></li> 
<li><p>Preview option.</p></li> 
</ul>
<img src="/sap_smart_forms/images/form_attributes.jpg" alt="Form Attributes" />
<p>The default value of a smart style is maintained in the header data. You can also assign different values to the character and paragraph formats in a smart form, but in case it is not assigned, the system calculates the default values.</p>
<p>The following values can be assigned in a header data of a smart style &minus;</p>
<ul class="list">
<li><p><b>Standard Paragraph</b> &minus; You need to assign an existing paragraph as default paragraph. This standard paragraph can be assigned using the paragraph format in the smart style header.</p></li> 
</ul>
<img src="/sap_smart_forms/images/standard_paragraph.jpg" alt="Standard Paragraph" />
<ul class="list">
<li><p><b>Default Tab Stops</b> &minus; These values are used in a smart style when you don’t assign any other defined tabs.</p></li> 
<li><p><b>Characters per inch/Lines per inch</b> &minus; You can also define specific measurements- margins, etc. in smart style and measurement units are CH (Character) and Line (LN). The in Form Builder, Character and Line nodes uses this style. The following attributes are applied.</p>
<ul class="list"> 
<li><p>In smart form, measure Characters per Inch is used commonly with line printers.</p></li>  
<li><p>Lines per inch defines smart style line spacing.</p></li>
</ul>
</li>
<li><p><b>Font Family and Font Size</b> &minus; You can define the font size, underline and color for smart styles and this can be overridden in the Character/Paragraph format.</p></li> 
</ul>
<img src="/sap_smart_forms/images/font.jpg" alt="Font" />
<h2>SAP Smart Forms – Style Builder Navigation</h2>
<p>In the Style Builder Tool, you can create smart styles which can be assigned to smart forms. To open style builder, use Transaction Code: <b>SMARTSTYLES</b>.</p>
<img src="/sap_smart_forms/images/header_data.jpg" alt="Header Data" />
<p>On the left side, you see the Style tree which has Header Data, Character Format and the Paragraph Format folder. You can navigate between different nodes or use the context menu to create/delete nodes.</p>
<p>On the right side, you have the Maintenance Screen. Each folder of this style tree contains different tabs under the Maintenance screen. A Standard Setting tab under the Header folder can be used to define font size and color.</p>
<p>Each Paragraph node contains different tabs under the Maintenance window and it is different for nodes under the Character folder.</p>
<img src="/sap_smart_forms/images/character_folder.jpg" alt="Character Folder" />
<p></p>
<img src="/sap_smart_forms/images/character_format.jpg" alt="Character Format" />
<p>At the bottom, you can check the Preview of the selected node with the font setting.</p>
<img src="/sap_smart_forms/images/font_settings.jpg" alt="Font Settings" />
<p>It is also possible to reuse the styles in different smart forms. To download a style, go to Utilities &rarr; Download.</p>
<p>To upload the style, select Utilities &rarr; Upload.</p>
<img src="/sap_smart_forms/images/upload_style.jpg" alt="Upload Style" />
<h2>SAP Smart Forms – Paragraph Formats</h2>
<p>A paragraph format defines the information on Spacing, Font, Text, Color and Numbering. You can assign these paragraphs to a text or a field and each paragraph has a unique name.</p>
<p>When you select any node under the Paragraph folder, you can define the following aspects &minus;</p>
<ul class="list">
<li>Indent and Spacing</li>
<li>Font</li>
<li>Tabs </li>
<li>Numbering </li>
<li>Outline in Maintenance Tab</li> 
</ul>
<p>To Navigate to Indent and shaping tab, you have the following tabs &minus;</p>
<ul class="list">
<li>Alignment</li>
<li>Indent</li>
<li>Spacing</li>
<li>Text Flow</li> 
</ul>
<p>The alignment tab defines the alignment of paragraph, which can be either &minus;</p>
<ul class="list">
<li>Centered</li>
<li>Justified</li>
<li>Left-Aligned or</li>
<li>Right-Aligned</li>
</ul>
<img src="/sap_smart_forms/images/centered.jpg" alt="Centered" />
<p>Indent tab defines the Left Margin, Right Margin of the paragraph from both the axes. Space after and Space Before defines space after/before each line in paragraph.</p>
<img src="/sap_smart_forms/images/left_margin.jpg" alt="Left Margin" />
<h3>Page Protection</h3>
<p>You can select this check box, if you don’t want your paragraph to be split by a page break. When this option is checked and if on one page does not have much space is left to display the full paragraph, this will make entire paragraph to come on the next page.</p>
<h3>Next Paragraph on the Same Page</h3>
<p>This check box can be selected if you want successive paragraphs not to be separated with a page break and that they should appear on the same page.</p>
<p>You can navigate to the Font Tab to define the following aspects &minus;</p>
<ul class="list">
<li>Font Family</li>
<li>Font Size and </li>
<li>Font Style</li> 
</ul>
<p>You can also select Underline and color for the paragraph.</p>
<img src="/sap_smart_forms/images/underline.jpg" alt="Underline" />
<p>Navigate to the Tabs option to define the number of tabs in the paragraph format.</p>
<img src="/sap_smart_forms/images/tabs.jpg" alt="Tabs" />
<h3>Numbering and Outline</h3>
<p>This can be used to allow paragraph and numbering in paragraph structure. Various attributes can be set in the Numbering and Outline tab, some of these are given below &minus;</p>
<ul class="list">
<li>List</li> 
<li>Left Right Delimiter</li> 
<li>Output Length</li> 
<li>Character format of numerand</li> 
<li>Chaining outline numbers</li> 
</ul>
<p>When you activate the number chaining, you can have each paragraph preceded by the number of superior paragraph in the paragraph hierarchical structure.</p>
<h3>Creating Paragraph Node</h3>
<p>Click on the Paragraph folder and right click &rarr; Create.</p>
<img src="/sap_smart_forms/images/paragraph_node.jpg" alt="Paragraph Node" />
<p>In the Paragraph format, you need to enter a <b>2–char key</b>. Go to each individual tab to define different attributes. Once you define the attributes, click on <b>Activate</b> to activate the paragraph node.</p>
<img src="/sap_smart_forms/images/paragraph_format.jpg" alt="Paragraph Format" />
<p></p>
<img src="/sap_smart_forms/images/as.jpg" alt="AS" />
<h2>SAP Smart Forms – Character Formats</h2>
<p>Character formats in the Style builder can be used to assign special attributes to text or strings in a paragraph. In a character format under Style tree, the following attributes can be defined &minus;</p>
<ul class="list">
<li>Font Setting</li> 
<li>Bar code</li> 
</ul>
<p>You can select any character node under the Character format in the Style tree. It has a different attribute selected and the description.</p>
<img src="/sap_smart_forms/images/style_tree.jpg" alt="Style Tree" />
<p>You can select a different type of Font family, font size and Font Style. You can also import your own fonts too. You can also select attributes like Underline and Font Color.</p>
<p>Under a Standard setting, you can define the character format for a system bar code.</p>
<img src="/sap_smart_forms/images/system_bar_code.jpg" alt="System bar code" />
<p>Click on the Character folder and then right click on &rarr; Create Node.</p>
<img src="/sap_smart_forms/images/create_node.jpg" alt="Create Node" />
<p>In the character format, you need to enter 2–char key. Go to each individual tab to define different attributes. Once you define the attributes, click on the Activate button to activate the character node.</p>
<img src="/sap_smart_forms/images/char_key.jpg" alt="Char Key" />
<h1>SAP Smart Forms - Output Types</h1>
<p>In this chapter, we will discuss in detail about the different output types of SAP Smart Forms. This chapter will also cover the various Output Formats and Output Media along with an understanding on how to Run a Trace in SAP Smart Forms.</p>
<h2>SAP Smart Forms – Output Formats</h2>
<p>You can print smart forms in the Output Text format and many other output formats with different uses like – XML format for smart forms and HTML to display a form in the web browser.</p>
<p>The following output formats are some of the most commonly used ones &minus;</p>
<ul class="list">
<li><p><b>Output Text Format</b> &minus; This is a standard output text format and it is an established format for printing forms in a SAP system. You can also convert it into other formats like PDF.</p></li>
<li><p><b>XSF Output</b> &minus; This is an XML format for smart forms. It contains the form content of a processed form without showing any layout information.</p></li>
<li><p><b>HTML Format</b> &minus; It is also possible to display the form in a Web browser. It is a combination of the XSF output and HTML format where content is processed without any layout information and data is displayed in the form format to a web browser.</p></li>
<li><p><b>XDF Output</b> &minus; It is in an XML format that doesn’t contain neither the form nor its layout and shows the data application passed at the form interface.</p></li>
</ul>
<p>The output format setting is defined under Form Attributes. When you call a smart form, you can use the standard parameters to override the output settings.</p>
<img src="/sap_smart_forms/images/attributes.jpg" alt="Attributes" />
<h2>SAP Smart Forms – Output Media</h2>
<p>You can send a smart form to different output mediums. A few examples of different output mediums are &minus;</p>
<ul class="list">
<li>Printers</li>
<li>Fax</li>
<li>Emails or</li>
<li>XML formats</li> 
</ul>
<p>Smart forms are forwarded to other interfaces to transfer the form to different output media.</p>
<p><b>Example</b> &minus; To take printing output on a Printer, you need to setup the Printer first.</p>
<p>To control the output, you need to pass different parameters at the interface of smart forms. SAP Smart Forms passes the parameter value to a different output medium.</p>
<p>You can set different output medium for each output format &minus;</p>
<h3>OTF Format</h3>
<p>You can use different output processing methods such as &minus;</p>
<ul class="list">
<li>Spool Processing</li> 
<li>In E-mail</li> 
<li>To Fax machine</li> 
</ul>
<p><b>Parameters values to send the form in Email</b> &minus; When you want to send the smart form in email, the following email parameters should be filled for a generated function module.</p>
<ul class="list">
<li><p><b>MAIL_SENDER/MAIL_RECIPIENT</b> &minus; You should set these parameters to pass the sender and the recipient of the document. To set the parameter values, you need to create BOR objects of object type <b>RECIPIENT</b> and enter the parameters.</p></li>
<li><p><b>MAIL_APPL_OBJ Parameter</b> &minus; You can use this parameter to link the application object with the sent document. You should create a <b>BOR</b> object for this parameter too.</p></li>
</ul>
<p><b>Parameters for sending form by Telefax</b> &minus; To send the form in a Fax format, you need to set the device parameter to <b>TELEFAX</b> instead of Spool mode. It opens a dialog box where the user can enter a Fax number to use the output medium as Fax.</p>
<h3>XSF Format</h3>
<p>You can pass this output format to different output mediums such as &minus;</p>
<ul class="list">
<li>Spool Processing</li> 
<li>Return as table in the Application program</li> 
</ul>
<img src="/sap_smart_forms/images/xsf_format.jpg" alt="XSF Format" />
<p>To pass the output format for spool processing, you need to pass the parameter to spool dialog of a SAP System. This dialog can be used to control the form output. There are different options that can be used in a Spool Dialog &minus;</p>
<ul class="list">
<li>New Spool request</li> 
<li>Defining retention time of a request in queue</li> 
<li>To select a page</li> 
<li>Link an authorization to spool request</li> 
<li>Specify archive settings</li> 
</ul>
<h3>HTML Format</h3>
<p>You can use this output medium to return it as a table in the application program.</p>
<h2>SAP Smart Forms – Running Trace</h2>
<p>This function allows you to trace the printing function of a smart form. Using this, it can trace how the printing request is processed for a smart form.</p>
<p><b>Transaction: SFTRACE</b></p>
<p>To perform a trace for the printing request, you can use Transaction: SFTRACE.</p>
<img src="/sap_smart_forms/images/running_trace.jpg" alt="Running Trace" />
<p>When the trace is activated using the function module generated for the smart form, it stores the trace on the database for each output.</p>
<p>Using this trace option, you can determine the sequence in which nodes are processed or when the processing is terminated due to an error. This option is specific to users and it is recorded only for the user who activates it.</p>
<h3>Trace Level</h3>
<p>Trace level is used to determine how detailed the trace is. Trace level 5 contains general information and trace level 80 determines the most detailed trace level. To activate Trace level, click on the <b>Switch on</b> option in the screenshot given below.</p>
<img src="/sap_smart_forms/images/trace_level.jpg" alt="Trace Level" />
<p>The following settings are possible when a trace is active &minus;</p>
<ul class="list">
<li><p><b>Level</b> &minus; Detailed level in a trace output.</p></li>
<li><p><b>Logical Page</b> &minus; This is used to restrict the trace output to a specific page. This is useful at Trace level 30.</p></li>
<li><p><b>Window</b> &minus; This is used to restrict the trace output to a specific window in a smart form.</p></li>
<li><p><b>ABAP Break Point</b> &minus; These options are used internally while performing a trace level.</p></li>
</ul>
<img src="/sap_smart_forms/images/trace.jpg" alt="Trace" />
<h3>Trace Settings</h3>
<p>Various trace levels are defined in Trace settings. Some of the most common ones are listed below &minus;</p>
<img src="/sap_smart_forms/images/trace_settings.jpg" alt="Trace Settings" />
<ul class="list">
<li><p><b>Warning or Error (Trace Level 5)</b> &minus; Trace level, trace version, date and time and system information.</p></li>
<li><p><b>Document Information (Trace Level 15)</b> &minus; This contains additional information- Output channel, form attributes, form structure and output results.</p></li>
<li><p><b>Pages (Trace Level 30)</b> &minus; This is used to contain name of processed pages.</p></li>
<li><p><b>Window (Trace Level 40)</b> &minus; This contains information about name of processed windows.</p></li>
<li><p><b>Output area (Trace Level 45)</b> &minus; This contains information about table output areas.</p></li>
<li><p><b>Cell change (Trace Level 47)</b> &minus; This trace level is used to contain outputs on line types and cells processed in tables.</p></li>
<li><p><b>Text information (Trace Level 50)</b> &minus; This is used to contain attribute values of processed output nodes.</p></li>
<li><p><b>Fields (Trace Level 60)</b> &minus; This is used to contain names and values of fields in output texts.</p></li>
<li><p><b>Scanner token (Trace Level 80)</b> &minus; This is maximum trace level and defines the scanner outputs while analyzing texts in text nodes.</p></li> 
</ul>
<p>In the next chapter, we will discuss in detail regarding the Advance Development Concepts in SAP Smart Forms.</p>
<h1>Advance Development Concepts</h1>
<p>In this chapter, we will discuss in detail about the advance development concepts of SAP Smart Forms. This chapter will cover aspects like Special Nodes, Form Processing and Function Modules as well.</p>
<h2>SAP Smart Forms – Special Nodes</h2>
<p>In a SAP Smart Form, you have different special nodes that can be used as a part of the advance development concepts. To add special nodes in a smart form, you should move it to the navigation tree.</p>
<p>On each page, right Click &rarr; Open Context menu &rarr; Create &rarr; Flow Logic &rarr; Command.</p>
<img src="/sap_smart_forms/images/special_nodes.jpg" alt="Special Nodes" />
<p>The following list of special node types can be used &minus;</p>
<h3>Command Node</h3>
<p>This is commonly used to insert commands for different application purposes. You can use a command node to insert a dynamic page break in the main window. You have different options under command node to apply a dynamic page break &minus;</p>
<ul class="list">
<li><p><b>Go to New Page</b> &minus; This command is used to provide a page break and is allowed only in the main window.</p></li>
<li><p><b>Reset Paragraph Numbering</b> &minus; This option can be used to set the counter for specified outline paragraphs.</p></li>
<li><p><b>Include Printer Control</b> &minus; This option is used to send print control to output device.</p></li>
<li><p><b>Free Attributes of Spool Request</b> &minus; This option can be used to define attributes for spool requests.</p></li>
</ul>
<img src="/sap_smart_forms/images/command_node.jpg" alt="Command Node" />
<h3>Program Lines</h3>
<p>Program lines can be used to perform calculations of totals and subtotals. You can insert program lines in the tree structure.</p>
<p>On the General Attributes tab use the tables Input parameters and Output parameters to pass global fields. With the ABAP code, you can access the global fields entered in these tables.</p>
<h3>Complex Section</h3>
<p>You use this option to combine tab pages of node types, to create complex section node click Create &rarr; Complex Section.</p>
<p>In the General Attribute tab of the Complex Section, you can define settings for combining different tab pages such as &minus;</p>
<ul class="list">
<li>Event tab</li>
<li>Table tab and </li>
<li>Template tab.</li> 
</ul>
<h2>SAP Smart Forms – Form Processing</h2>
<p>In a smart form, you use the tree structure under the form builder to define form logic to print the texts, graphics and different elements in the smart form. When a smart form is activated, a function module is generated and the SAP smart form processes the tree structure of the form and uses the ABAP programing code to print the form contents.</p>
<p>The output of a smart form is determined by inferior nodes in a tree structure that constitutes Pages and Windows in a Form builder. For each node in a tree, you can define output options and conditions.</p>
<p>A node is processed in the following scenarios &minus;</p>
<p><b>Condition</b> &minus;</p>
<ul class="list">
<li><p>When a condition is set for the node and system evaluates the condition. If it is found false, node and its inferior nodes in a tree structure are not processed.</p></li>
<li><p>Inferior nodes can be processed directly depending on the node type.</p></li>
<li><p>An action assigned to a node can also be processed.</p></li>
<li><p>When you define the output options for a node and its inferior node and individual output options are assigned to inferior nodes, then option overwrites the output option of superior node.</p></li>
</ul>
<p>The following condition types can be used for processing a node.</p>
<ul class="list">
<li><p><b>Simple IF Condition</b> &minus; This is done using AND or OR option.</p></li> 
<li><p><b>Complex IF condition</b> &minus; This is used using program lines.</p></li> 
</ul>
<p>Event Queries Combination</p>
<img src="/sap_smart_forms/images/queries.jpg" alt="Queries" />
<h2>SAP Smart Forms – Function Modules</h2>
<p>When a smart form is activated, a function module is generated. There are various standard parameters that can be applied on the function module. These parameters directly appear in the form interface and can’t be changed. To activate a smart form click on the <b>Activate Button</b> at the top.</p>
<img src="/sap_smart_forms/images/function_module.jpg" alt="Function Module" />
<p>When the function module is called from an application, you can use these parameters for defining the output format or spool request or various other purposes.</p>
<ul class="list">
<li><p><b>Report</b> &minus; zcall_smartform.</p></li>
<li><p><b>Call Function</b> &minus; '/1BCDWB/SF00000279'</p></li>
</ul>
<p>Here SF00000279 – represents the function module.</p>
<p>But this is not the recommended way of calling a function module as the Function Module name is generated as per the number range in the system. When you transfer the smart form to the production system, a new function module is generated.</p>
<p>To handle this, it is recommended to use the function – <b>SSF_FUNCTION_MODULE_NAME</b> to get the function module name dynamically.</p>
<ul class="list">
<li><p><b>Report</b> &minus; zcall_smartform.</p></li>
<li><p><b>Data</b> &minus; fname TYPE rs38l_fnam.</p></li>
<li><p><b>Call Function</b> &minus; 'SSF_FUNCTION_MODULE_NAME’</p></li> 
</ul>
<h3>How to get a Function Module Name?</h3>
<p>To check the function module name for a smart form, navigate to Environment tab at the top &rarr; Function Module Name.</p>
<img src="/sap_smart_forms/images/module_name.jpg" alt="Module Name" />
<p>The Function Module is shown in the next window &minus;</p>
<img src="/sap_smart_forms/images/information.jpg" alt="Information" />
<p>You can also perform vice versa using the <b>Transaction SE 11</b> and go to table – <b>STXFADMI</b>.</p>
<h1>SAP Smart Forms - Form Graphics</h1>
<p>In this chapter, we will discuss in detail about the use of Form Graphics in SAP Smart Forms. This chapter will cover aspects like Previewing Graphics, Importing Graphics and Transporting Graphics.</p>
<h2>SAP Smart Forms – Preview Graphics</h2>
<p>You can add different graphics in a smart form like the Company Logo, Background Graphics, etc. You can use the graphic node to display graphics in a smart form and by adding node type graphics in the tree structure.</p>
<p>To view the graphics in a SAP System, use <b>Transaction SE78</b>. This will open the Administering Form Graphics dialog box. On the left side, double click on the folder Store on the Document Server &rarr; Graphics &rarr; BMAP Bitmap Image.</p>
<p>Select the Graphic and click on the Screen Information.</p>
<img src="/sap_smart_forms/images/graphic.jpg" alt="Graphic" />
<p>When you click on the Screen information button, it displays the technical attributes and the administrative data of the graphic in a SAP System.</p>
<img src="/sap_smart_forms/images/sap_system.jpg" alt="SAP System" />
<h2>SAP Smart Forms – Importing Graphics</h2>
<p>To include background graphics, use the Background Graphic node of a page node. You can use <b>Transaction SE78</b> to import the graphics into the SAP System.</p>
<p>To import graphics, double-click on a graphic format in the tree structure in the folder Store on the Document server &rarr; GRAPHICS &rarr; General graphics.</p>
<p>To import, select Graphics &rarr; Import.</p>
<img src="/sap_smart_forms/images/importing_graphics.jpg" alt="Importing Graphics" />
<p>To use the graphics in a Form Builder, go to navigation tree on the left side and create a node type &rarr; Graphic.</p>
<p>A graphic node can be created directly under the Page node or you can use the context menu in a layout to place the graphic node.</p>
<img src="/sap_smart_forms/images/graphic_node.jpg" alt="Graphic Node" />
<p>Enter the unique name for the node and description.</p>
<p>On the General Attribute tab &rarr; you can include a colored graphic or a graphic in black and white. You can enter the fields Object, ID and Name to identify the graphic.</p>
<img src="/sap_smart_forms/images/unique_name.jpg" alt="Unique Name" />
<p>Under Technical Attributes, you can define Resolution as per the printer settings. When you use a small resolution, it increases the size of graphic on the form.</p>
<p>The printer drivers or printers support the following resolutions &minus;</p>
<ul class="list">
<li>75 dpi</li>
<li>100 dpi</li>
<li>150 dpi</li>
<li>200 dpi</li>
<li>300 dpi</li>
<li>600 dpi</li>
</ul>
<h2>SAP Smart Forms – Transporting Graphics</h2>
<p>In a SAP System, it is possible to transport the graphics from one system to another system. Go to <b>Transaction SE78</b> and there you can select the Transport option to move the graphics from one system to another.</p>
<p>Transaction: SE78 will open the Administering Form Graphics.</p>
<img src="/sap_smart_forms/images/se78.jpg" alt="SE78" />
<p>This will open the Administering Form Graphics and select the desired graphics in the tree.</p>
<img src="/sap_smart_forms/images/desired_graphics.jpg" alt="Desired Graphics" />
<p>Select Graphics &rarr; Transport button and then you should enter the workbench request.</p>
<img src="/sap_smart_forms/images/workbench.jpg" alt="Workbench" />
<p>You can use an existing request or create a new request to perform the Transport and then click on Continue.</p>
<img src="/sap_smart_forms/images/transport.jpg" alt="Transport" />
<h1>SAP Smart Forms - Applications &amp; Migration</h1>
<p>In this chapter, we will discuss in detail about using forms in applications in SAP Smart Forms. In addition, we will also understand how to migrate a SAP Script Form to a SAP Smart Form.</p>
<h2>SAP Smart Forms – Using Forms in Applications</h2>
<p>You can also use smart forms in business applications of a web browser, which are known as web forms. A web form is an HTML form with the same layout as that of a smart form and can be used for form printing in internet.</p>
<p>When you use smart forms as web forms, it transforms the XSF output to the HTML format. Smart styles are used for formatting of web forms.</p>
<p>It is also possible to get a print of the web form from the browser and to keep the quality good, it is recommended that the form should be sent to the web browser in a PDF format.</p>
<img src="/sap_smart_forms/images/applications.jpg" alt="Applications" />
<h2>SAP Smart Forms – Migration</h2>
<p>It is also possible to migrate a SAP script form to a smart form and SAP script style to a smart style. When the system converts a SAP script style into a smart style, the system converts all the paragraphs and character formats with their properties and attributes.</p>
<p>When a migration happens for a SAP script form to a smart form, the following execution takes place &minus;</p>
<ul class="list">
<li><p>All the attributes of the Page and Windows are migrated.</p></li>
<li><p>Text is copied in the form.</p></li> 
<li><p>Language attributes and output options are copied.</p></li> 
<li><p>Conversion of SAP script command line and to display them in text format.</p></li> 
</ul>
<p>You can also perform mass migration of script forms.</p>
<p>Transaction: <b>SMARTFORMS</b> and enter the name of the form you want to create.</p>
<img src="/sap_smart_forms/images/migration.jpg" alt="Migration" />
<p>Go to Utilities &rarr; Migration &rarr; Import SAPscript form.</p>
<img src="/sap_smart_forms/images/import_sapscript.jpg" alt="Import SAPscript" />
<p>This will open the dialog migrate SAP script form window. You need to select the name and language of source form &rarr; ENTER.</p>
<img src="/sap_smart_forms/images/enter.jpg" alt="Enter" />
<p>You can see the changed mode of the Form Builder. You can change the form logic and form style as well. To activate the smart form, click on the <b>Activate</b> button.</p>
<img src="/sap_smart_forms/images/activate.jpg" alt="Activate" />
<p>In the same way, you can convert a SAP script style to a SAP smart style.</p>
<h2>SAP Smart Forms – Migrating to PDF Forms</h2>
<p>You can migrate your existing SAP Smart Forms to interactive PDF Forms provided by Adobe. To use this, you need to perform the migration of all graphics.</p>
<p>To perform the migration, you should use Transaction: <b>SMARTFORMS</b>.</p>
<p>Navigate to Utilities &rarr; Migration &rarr; Interactive Form &rarr; Export.</p>
<img src="/sap_smart_forms/images/pdf_forms.jpg" alt="PDF Forms" />
<p>In the next dialog box, you should enter the name of the Smart Form to migrate, the PDF based target and the target interface. By default, the system suggests the same name as of the smart form for interactive PDF forms.</p>
<p>Click on the <b>Continue</b> button as shown in the following screenshot.</p>
<img src="/sap_smart_forms/images/continue.jpg" alt="Continue" />
<p>In next window, the system displays the Setting Dialog where you can check different migration options.</p>
<img src="/sap_smart_forms/images/settings.jpg" alt="Settings" />
<p>In the next window, select <b>Create Object Directory Entry</b>, enter a package for interface and save it as a local project.</p>
<img src="/sap_smart_forms/images/local_project.jpg" alt="Local Project" />
<p>The next step is to assign the form to a package or save the form as a local object and then the migration is completed.</p>
<img src="/sap_smart_forms/images/package.jpg" alt="Package" />
<p>This is how you can perform the migration of SAP smart form to Adobe Interactive forms.</p>
<div class="mui-container-fluid button-borders show">
<div class="pre-btn">
<a href="/sap_smart_forms/sap_smart_forms_applications_and_migration.htm"><i class="fal fa-chevron-circle-left"></i> Previous Page</a>
</div>
<div class="nxt-btn">
<a href="/sap_smart_forms/sap_smart_forms_useful_resources.htm">Next Page <i class="fal fa-chevron-circle-right"></i>&nbsp;</a>
</div>
</div>
<div class="google-bottom-ads">
<div>Advertisements</div>
<script><!--
var width = 580;
var height = 400;
var format = "580x400_as";
if( window.innerWidth < 468 ){
   width = 300;
   height = 250;
   format = "300x250_as";
}
google_ad_client = "pub-7133395778201029";
google_ad_width = width;
google_ad_height = height;
google_ad_format = format;
google_ad_type = "image";
google_ad_channel ="";
//--></script>
<script src="https://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
<div class="space-bottom"></div>
</div>
</div>
<!-- Tutorial Content Ends Here -->
<!-- Right Column Starts Here -->
<div class="mui-col-md-2 google-right-ads">
<div class="space-top"></div>
<div class="google-right-ad" style="margin: 0px auto !important;margin-top:5px;">
<script><!--
google_ad_client = "pub-2537027957187252";
google_ad_width = 300;
google_ad_height = 250;
google_ad_format = "300x250_as";
google_ad_type = "image";
google_ad_channel ="";
//--></script>
<script src="https://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</div>
<div class="google-right-ad">
<div class="adsbyvli" data-ad-slot="vi_9012177"></div>
<script>(vitag.Init = window.vitag.Init || []).push(function(){viAPItag.display("vi_9012177")})</script>
</div>
<div class="space-bottom"></div>
<div class="google-right-ad">
<div class="adsbyvli" data-ad-slot="vi_9013289"></div>
<script>(vitag.Init = window.vitag.Init || []).push(function(){viAPItag.display("vi_9013289")})</script>
</div>
<div class="space-bottom" style="margin-bottom:15px;"></div>
</div>
<!-- Right Column Ends Here -->
</div>
</div>
<div class="clear"></div>
<footer id="footer">
<div class="mui--text-center">
<div class="mui--text-caption mui--text-light">
<a href="/index.htm" class="logo"><img class="img-responsive" src="/images/logo-black.png" alt="Tutorials Point" title="Tutorials Point"></a>
</div>
<ul class="mui-list--inline mui--text-body2 mui--text-light">
<li><a href="/about/index.htm"><i class="fal fa-globe"></i> About us</a></li>
<li><a href="/about/about_terms_of_use.htm"><i class="fal fa-asterisk"></i> Terms of use</a></li>
<li><a href="/about/about_privacy.htm#cookies"> <i class="fal fa-shield-check"></i> Cookies Policy</a></li>
<li><a href="/about/faq.htm"><i class="fal fa-question-circle"></i> FAQ's</a></li>
<li><a href="/about/about_helping.htm"><i class="fal fa-hands-helping"></i> Helping</a></li>
<li><a href="/about/contact_us.htm"><i class="fal fa-map-marker-alt"></i> Contact</a></li>
</ul>
<div class="mui--text-caption mui--text-light bottom-copyright-text">&copy; Copyright 2019. All Rights Reserved.</div>
</div>
<div id="privacy-banner">
  <div>
    <p>
      We use cookies to provide and improve our services. By using our site, you consent to our Cookies Policy.
      <a id="banner-accept" href="#">Accept</a>
      <a id="banner-learn" href="/about/about_cookies.htm" target="_blank">Learn more</a>
    </p>
  </div>
</div>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-232293-17"></script>
<script>
window.dataLayer = window.dataLayer || [];
function gtag(){dataLayer.push(arguments);}
gtag('js', new Date());
gtag('config', 'UA-232293-6');
</script>
</footer>
</body>
</html>
